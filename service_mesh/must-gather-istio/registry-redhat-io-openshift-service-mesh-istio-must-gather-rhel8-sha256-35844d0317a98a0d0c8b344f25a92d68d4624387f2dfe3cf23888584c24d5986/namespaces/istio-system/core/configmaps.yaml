---
apiVersion: v1
items:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      control-plane.alpha.kubernetes.io/leader: '{"holderIdentity":"istiod-basic-544d455f65-7qpmd","leaseDurationSeconds":30,"acquireTime":"2023-03-03T20:03:10Z","renewTime":"2023-03-03T20:42:15Z","leaderTransitions":0}'
    creationTimestamp: "2023-03-03T20:03:10Z"
    name: ior-leader
    namespace: istio-system
    resourceVersion: "61013"
    uid: 0932ba97-8bcf-4a21-b125-b9cdab101a42
- apiVersion: v1
  data:
    mesh: |-
      accessLogFile: /dev/stdout
      accessLogFormat: "{ \"authority\": \"%REQ(:AUTHORITY)%\", \"bytes_received\": %BYTES_RECEIVED%, \"bytes_sent\": %BYTES_SENT%, \"downstream_local_address\": \"%DOWNSTREAM_LOCAL_ADDRESS%\", \"downstream_peer_cert_v_end\": \"%DOWNSTREAM_PEER_CERT_V_END%\", \"downstream_peer_cert_v_start\": \"%DOWNSTREAM_PEER_CERT_V_START%\", \"downstream_remote_address\": \"%DOWNSTREAM_REMOTE_ADDRESS%\", \"downstream_tls_cipher\": \"%DOWNSTREAM_TLS_CIPHER%\", \"downstream_tls_version\": \"%DOWNSTREAM_TLS_VERSION%\", \"duration\": %DURATION%, \"hostname\": \"%HOSTNAME%\", \"istio_policy_status\": \"%DYNAMIC_METADATA(istio.mixer:status)%\", \"method\": \"%REQ(:METHOD)%\", \"path\": \"%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%\", \"protocol\": \"%PROTOCOL%\", \"request_duration\": %REQUEST_DURATION%, \"request_id\": \"%REQ(X-REQUEST-ID)%\", \"requested_server_name\": \"%REQUESTED_SERVER_NAME%\", \"response_code\": \"%RESPONSE_CODE%\", \"response_duration\": %RESPONSE_DURATION%, \"response_tx_duration\": %RESPONSE_TX_DURATION%, \"response_flags\": \"%RESPONSE_FLAGS%\", \"route_name\": \"%ROUTE_NAME%\", \"start_time\": \"%START_TIME%\", \"upstream_cluster\": \"%UPSTREAM_CLUSTER%\", \"upstream_host\": \"%UPSTREAM_HOST%\", \"upstream_local_address\": \"%UPSTREAM_LOCAL_ADDRESS%\", \"upstream_service_time\": %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%, \"upstream_transport_failure_reason\": \"%UPSTREAM_TRANSPORT_FAILURE_REASON%\", \"user_agent\": \"%REQ(USER-AGENT)%\", \"x_forwarded_for\": \"%REQ(X-FORWARDED-FOR)%\" } \n"
      defaultConfig:
        discoveryAddress: istiod-basic.istio-system.svc:15012
        proxyMetadata:
          ISTIO_META_DNS_AUTO_ALLOCATE: "true"
          ISTIO_META_DNS_CAPTURE: "true"
          PROXY_XDS_VIA_AGENT: "true"
        tracing:
          zipkin:
            address: jaeger-collector.istio-system.svc:9411
      dnsRefreshRate: 300s
      enablePrometheusMerge: true
      enableTracing: true
      ingressControllerMode: "OFF"
      rootNamespace: istio-system
      trustDomain: cluster.local
    meshNetworks: 'networks: {}'
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"mesh":"accessLogFile: /dev/stdout\naccessLogFormat: \"{ \\\"authority\\\": \\\"%REQ(:AUTHORITY)%\\\", \\\"bytes_received\\\": %BYTES_RECEIVED%, \\\"bytes_sent\\\": %BYTES_SENT%, \\\"downstream_local_address\\\": \\\"%DOWNSTREAM_LOCAL_ADDRESS%\\\", \\\"downstream_peer_cert_v_end\\\": \\\"%DOWNSTREAM_PEER_CERT_V_END%\\\", \\\"downstream_peer_cert_v_start\\\": \\\"%DOWNSTREAM_PEER_CERT_V_START%\\\", \\\"downstream_remote_address\\\": \\\"%DOWNSTREAM_REMOTE_ADDRESS%\\\", \\\"downstream_tls_cipher\\\": \\\"%DOWNSTREAM_TLS_CIPHER%\\\", \\\"downstream_tls_version\\\": \\\"%DOWNSTREAM_TLS_VERSION%\\\", \\\"duration\\\": %DURATION%, \\\"hostname\\\": \\\"%HOSTNAME%\\\", \\\"istio_policy_status\\\": \\\"%DYNAMIC_METADATA(istio.mixer:status)%\\\", \\\"method\\\": \\\"%REQ(:METHOD)%\\\", \\\"path\\\": \\\"%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%\\\", \\\"protocol\\\": \\\"%PROTOCOL%\\\", \\\"request_duration\\\": %REQUEST_DURATION%, \\\"request_id\\\": \\\"%REQ(X-REQUEST-ID)%\\\", \\\"requested_server_name\\\": \\\"%REQUESTED_SERVER_NAME%\\\", \\\"response_code\\\": \\\"%RESPONSE_CODE%\\\", \\\"response_duration\\\": %RESPONSE_DURATION%, \\\"response_tx_duration\\\": %RESPONSE_TX_DURATION%, \\\"response_flags\\\": \\\"%RESPONSE_FLAGS%\\\", \\\"route_name\\\": \\\"%ROUTE_NAME%\\\", \\\"start_time\\\": \\\"%START_TIME%\\\", \\\"upstream_cluster\\\": \\\"%UPSTREAM_CLUSTER%\\\", \\\"upstream_host\\\": \\\"%UPSTREAM_HOST%\\\", \\\"upstream_local_address\\\": \\\"%UPSTREAM_LOCAL_ADDRESS%\\\", \\\"upstream_service_time\\\": %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%, \\\"upstream_transport_failure_reason\\\": \\\"%UPSTREAM_TRANSPORT_FAILURE_REASON%\\\", \\\"user_agent\\\": \\\"%REQ(USER-AGENT)%\\\", \\\"x_forwarded_for\\\": \\\"%REQ(X-FORWARDED-FOR)%\\\" } \\n\"\ndefaultConfig:\n  discoveryAddress: istiod-basic.istio-system.svc:15012\n  proxyMetadata:\n    ISTIO_META_DNS_AUTO_ALLOCATE: \"true\"\n    ISTIO_META_DNS_CAPTURE: \"true\"\n    PROXY_XDS_VIA_AGENT: \"true\"\n  tracing:\n    zipkin:\n      address: jaeger-collector.istio-system.svc:9411\ndnsRefreshRate: 300s\nenablePrometheusMerge: true\nenableTracing: true\ningressControllerMode: \"OFF\"\nrootNamespace: istio-system\ntrustDomain: cluster.local","meshNetworks":"networks: {}"},"kind":"ConfigMap","metadata":{"annotations":{"maistra.io/mesh-generation":"2.3.1-1-2"},"labels":{"app.kubernetes.io/component":"istio-discovery","app.kubernetes.io/instance":"istio-system","app.kubernetes.io/managed-by":"maistra-istio-operator","app.kubernetes.io/name":"istio-discovery","app.kubernetes.io/part-of":"istio","app.kubernetes.io/version":"2.3.1-1-2","istio.io/rev":"basic","maistra-version":"2.1.6","maistra.io/owner":"istio-system","maistra.io/owner-name":"basic","release":"istio"},"name":"istio-basic","namespace":"istio-system","ownerReferences":[{"apiVersion":"maistra.io/v2","blockOwnerDeletion":true,"controller":true,"kind":"ServiceMeshControlPlane","name":"basic","uid":"0c79eb74-854c-4f98-85c6-5955e78fd93e"}]}}
      maistra.io/mesh-generation: 2.3.1-1-2
    creationTimestamp: "2023-03-03T20:02:56Z"
    labels:
      app.kubernetes.io/component: istio-discovery
      app.kubernetes.io/instance: istio-system
      app.kubernetes.io/managed-by: maistra-istio-operator
      app.kubernetes.io/name: istio-discovery
      app.kubernetes.io/part-of: istio
      app.kubernetes.io/version: 2.3.1-1-2
      istio.io/rev: basic
      maistra-version: 2.1.6
      maistra.io/owner: istio-system
      maistra.io/owner-name: basic
      release: istio
    name: istio-basic
    namespace: istio-system
    ownerReferences:
    - apiVersion: maistra.io/v2
      blockOwnerDeletion: true
      controller: true
      kind: ServiceMeshControlPlane
      name: basic
      uid: 0c79eb74-854c-4f98-85c6-5955e78fd93e
    resourceVersion: "34411"
    uid: 1f00a01a-ecb8-4f5a-bc3d-c86fe63342dd
- apiVersion: v1
  data:
    root-cert.pem: |
      -----BEGIN CERTIFICATE-----
      MIIC/TCCAeWgAwIBAgIRAJ5+EsUPO6xwfM7mNs0rldYwDQYJKoZIhvcNAQELBQAw
      GDEWMBQGA1UEChMNY2x1c3Rlci5sb2NhbDAeFw0yMzAzMDMyMDAzMDlaFw0zMzAy
      MjgyMDAzMDlaMBgxFjAUBgNVBAoTDWNsdXN0ZXIubG9jYWwwggEiMA0GCSqGSIb3
      DQEBAQUAA4IBDwAwggEKAoIBAQDwoX+jD/ZaEKn3LLTnizWubhslRszUIrILIx4H
      eO/dtyvu6D8I6irkg+LVJVM80HwKaXEudILNmWEfh1QVnG1+dAE9PvEINmxN5/CP
      4FjbT5JscSEuUemXhtGiTWETC0AWvlwA/oFlZSmZnZ8dSLJbrYOFd42m6SrpjiW+
      G/IqOUbIoDUY2QQyUTYZQmsaDwjs2q2nDU/lNlyQl7m1bYHDzubHwtYcnO/yhH3d
      Pax0ufHJl8o6f04Fp+W31DfCGUZMj8cNbkkIGLwLcFj0N5PubHwElsfjWGAjCak6
      5/6cnr9U10zoAiW8X8+vk2RhHzH29w//utXZLBwGc13/+yypAgMBAAGjQjBAMA4G
      A1UdDwEB/wQEAwICBDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQJhe5ZsfDT
      bOGvoazLXscSVJufvjANBgkqhkiG9w0BAQsFAAOCAQEAEHSKYFio4qiGHB44/nKB
      SBqpL9XVlnE4NIse4HTbScF2Eru3KHStHmteBP8doZb+7UaqCU7wmU4+SNM7AsmV
      cVqrEqBGae8aJoaVx9CYhLMWyj0KDT04eqQdWMkYvvbaGfIvY4Y/612JT7q6VDN2
      UrDRmQDBiSg4qncnhKElTSw+nHuEHm+QUYtiILSeuX05Li5DTVYSk4yUkW/PgxAD
      40q5raIYPR6OpX6Bl00PnL0Fxl2nBRDHdNZaZ1vl3jgvE0+0AEZujZPQlsBhPAHB
      dTzSIPwKgXT/gx5q72Og9XgJKycMh3CGnH+bEbrGAHrYeNU2HOX7zVUSHZED0AGG
      Bw==
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    creationTimestamp: "2023-03-03T20:03:10Z"
    labels:
      istio.io/config: "true"
    name: istio-ca-root-cert
    namespace: istio-system
    resourceVersion: "34601"
    uid: 64117b15-1060-4b5d-9a44-4374d1e0db6a
- apiVersion: v1
  data:
    dashboardproviders.yaml: |-
      apiVersion: 1
      providers:
      - disableDeletion: false
        folder: istio
        name: istio
        options:
          path: /var/lib/grafana/dashboards/istio
        orgId: 1
        type: file
    datasources.yaml: |
      apiVersion: 1
      datasources:
      - access: proxy
        basicAuth: true
        basicAuthPassword: CbVF92ighKYpdDj40iadfLN6isf57ym+5mID2gHeFcaGKMwM4Tk9wAohaWtg66scPYiBzuV01poB3BSw54SdRuryK8wrWKd70CGhcviGZzzWdvHqDcLKmgA1XYoEz6Si55pQQCpC3Opsp7hH8H9O31wdhg3LG2xQwCiukw7XUSZRxlTiWirpMprPkg4WgNB+02HIF+Y8+cYdeRdGsZvd0FV9/lwC0eEH3jzK22yad0d1Mf2HvjxnLM/UEKVxi/or60VI0H9nGWN+3Esv44/7bkDcjYNM8dYJiaJ+4DTYsGp7lniIEzAw1ii4CxnZCgWcJ+K1oOJ4z/MFyJ4liVvm
        basicAuthUser: internal
        editable: true
        isDefault: true
        jsonData:
          timeInterval: 5s
          tlsSkipVerify: true
        name: Prometheus
        orgId: 1
        type: prometheus
        url: https://prometheus:9090
        version: 1
    grafana.ini: |
      [analytics]
      check_for_updates = true
      [grafana_net]
      url = https://grafana.net
      [log]
      mode = console
      [paths]
      data = /data/grafana
      logs = /var/log/grafana
      plugins = /var/lib/grafana/plugins
      provisioning = /etc/grafana/provisioning
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"dashboardproviders.yaml":"apiVersion: 1\nproviders:\n- disableDeletion: false\n  folder: istio\n  name: istio\n  options:\n    path: /var/lib/grafana/dashboards/istio\n  orgId: 1\n  type: file","datasources.yaml":"apiVersion: 1\ndatasources:\n- access: proxy\n  basicAuth: true\n  basicAuthPassword: CbVF92ighKYpdDj40iadfLN6isf57ym+5mID2gHeFcaGKMwM4Tk9wAohaWtg66scPYiBzuV01poB3BSw54SdRuryK8wrWKd70CGhcviGZzzWdvHqDcLKmgA1XYoEz6Si55pQQCpC3Opsp7hH8H9O31wdhg3LG2xQwCiukw7XUSZRxlTiWirpMprPkg4WgNB+02HIF+Y8+cYdeRdGsZvd0FV9/lwC0eEH3jzK22yad0d1Mf2HvjxnLM/UEKVxi/or60VI0H9nGWN+3Esv44/7bkDcjYNM8dYJiaJ+4DTYsGp7lniIEzAw1ii4CxnZCgWcJ+K1oOJ4z/MFyJ4liVvm\n  basicAuthUser: internal\n  editable: true\n  isDefault: true\n  jsonData:\n    timeInterval: 5s\n    tlsSkipVerify: true\n  name: Prometheus\n  orgId: 1\n  type: prometheus\n  url: https://prometheus:9090\n  version: 1\n","grafana.ini":"[analytics]\ncheck_for_updates = true\n[grafana_net]\nurl = https://grafana.net\n[log]\nmode = console\n[paths]\ndata = /data/grafana\nlogs = /var/log/grafana\nplugins = /var/lib/grafana/plugins\nprovisioning = /etc/grafana/provisioning\n"},"kind":"ConfigMap","metadata":{"annotations":{"maistra.io/mesh-generation":"2.3.1-1-2"},"labels":{"app":"grafana","app.kubernetes.io/component":"grafana","app.kubernetes.io/instance":"istio-system","app.kubernetes.io/managed-by":"maistra-istio-operator","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"istio","app.kubernetes.io/version":"2.3.1-1-2","istio":"grafana","maistra-version":"2.1.6","maistra.io/owner":"istio-system","maistra.io/owner-name":"basic","release":"istio"},"name":"istio-grafana","namespace":"istio-system","ownerReferences":[{"apiVersion":"maistra.io/v2","blockOwnerDeletion":true,"controller":true,"kind":"ServiceMeshControlPlane","name":"basic","uid":"0c79eb74-854c-4f98-85c6-5955e78fd93e"}]}}
      maistra.io/mesh-generation: 2.3.1-1-2
    creationTimestamp: "2023-03-03T20:03:21Z"
    labels:
      app: grafana
      app.kubernetes.io/component: grafana
      app.kubernetes.io/instance: istio-system
      app.kubernetes.io/managed-by: maistra-istio-operator
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: istio
      app.kubernetes.io/version: 2.3.1-1-2
      istio: grafana
      maistra-version: 2.1.6
      maistra.io/owner: istio-system
      maistra.io/owner-name: basic
      release: istio
    name: istio-grafana
    namespace: istio-system
    ownerReferences:
    - apiVersion: maistra.io/v2
      blockOwnerDeletion: true
      controller: true
      kind: ServiceMeshControlPlane
      name: basic
      uid: 0c79eb74-854c-4f98-85c6-5955e78fd93e
    resourceVersion: "34888"
    uid: 50280120-5e2e-4c21-aa8d-d595b4d9ee7b
- apiVersion: v1
  data:
    istio-extension-dashboard.json: '{ "annotations": { "list": [ { "builtIn": 1,
      "datasource": "-- Grafana --", "enable": true, "hide": true, "iconColor": "rgba(0,
      211, 255, 1)", "name": "Annotations & Alerts", "type": "dashboard" } ] }, "editable":
      false, "gnetId": null, "graphTooltip": 0, "links": [], "panels": [ { "collapsed":
      false, "datasource": "Prometheus", "gridPos": { "h": 1, "w": 24, "x": 0, "y":
      0 }, "id": 3, "panels": [], "title": "Wasm VMs", "type": "row" }, { "aliasColors":
      {}, "bars": false, "dashLength": 10, "dashes": false, "datasource": "Prometheus",
      "description": "", "fieldConfig": { "defaults": { "custom": { "align": null
      }, "links": [], "mappings": [], "thresholds": { "mode": "absolute", "steps":
      [ { "color": "green", "value": null }, { "color": "red", "value": 80 } ] } },
      "overrides": [] }, "fill": 1, "fillGradient": 0, "gridPos": { "h": 8, "w": 12,
      "x": 0, "y": 1 }, "hiddenSeries": false, "id": 2, "legend": { "avg": false,
      "current": false, "max": false, "min": false, "show": true, "total": false,
      "values": false }, "lines": true, "linewidth": 1, "nullPointMode": "null", "options":
      { "alertThreshold": true }, "percentage": false, "pluginVersion": "7.2.1", "pointradius":
      2, "points": false, "renderer": "flot", "seriesOverrides": [], "spaceLength":
      10, "stack": false, "steppedLine": false, "targets": [ { "expr": "avg(envoy_wasm_envoy_wasm_runtime_null_active)",
      "interval": "", "legendFormat": "native", "refId": "A" }, { "expr": "avg(envoy_wasm_envoy_wasm_runtime_v8_active)",
      "interval": "", "legendFormat": "v8", "refId": "B" } ], "thresholds": [], "timeFrom":
      null, "timeRegions": [], "timeShift": null, "title": "Active", "tooltip": {
      "shared": true, "sort": 0, "value_type": "individual" }, "type": "graph", "xaxis":
      { "buckets": null, "mode": "time", "name": null, "show": true, "values": []
      }, "yaxes": [ { "$$hashKey": "object:123", "format": "short", "label": null,
      "logBase": 1, "max": null, "min": null, "show": true }, { "$$hashKey": "object:124",
      "format": "short", "label": null, "logBase": 1, "max": null, "min": null, "show":
      true } ], "yaxis": { "align": false, "alignLevel": null } }, { "aliasColors":
      {}, "bars": false, "dashLength": 10, "dashes": false, "datasource": "Prometheus",
      "fieldConfig": { "defaults": { "custom": {}, "links": [] }, "overrides": []
      }, "fill": 1, "fillGradient": 0, "gridPos": { "h": 8, "w": 12, "x": 12, "y":
      1 }, "hiddenSeries": false, "id": 6, "legend": { "avg": false, "current": false,
      "max": false, "min": false, "show": true, "total": false, "values": false },
      "lines": true, "linewidth": 1, "nullPointMode": "null", "options": { "alertThreshold":
      true }, "percentage": false, "pluginVersion": "7.2.1", "pointradius": 2, "points":
      false, "renderer": "flot", "seriesOverrides": [], "spaceLength": 10, "stack":
      false, "steppedLine": false, "targets": [ { "expr": "avg(envoy_wasm_envoy_wasm_runtime_null_created)",
      "interval": "", "legendFormat": "native", "refId": "A" }, { "expr": "avg(envoy_wasm_envoy_wasm_runtime_v8_created)",
      "interval": "", "legendFormat": "v8", "refId": "B" } ], "thresholds": [], "timeFrom":
      null, "timeRegions": [], "timeShift": null, "title": "Created", "tooltip": {
      "shared": true, "sort": 0, "value_type": "individual" }, "type": "graph", "xaxis":
      { "buckets": null, "mode": "time", "name": null, "show": true, "values": []
      }, "yaxes": [ { "$$hashKey": "object:68", "format": "short", "label": null,
      "logBase": 1, "max": null, "min": null, "show": true }, { "$$hashKey": "object:69",
      "format": "short", "label": null, "logBase": 1, "max": null, "min": null, "show":
      true } ], "yaxis": { "align": false, "alignLevel": null } }, { "collapsed":
      false, "datasource": "Prometheus", "gridPos": { "h": 1, "w": 24, "x": 0, "y":
      9 }, "id": 7, "panels": [], "title": "Wasm Module Remote Load", "type": "row"
      }, { "aliasColors": {}, "bars": false, "dashLength": 10, "dashes": false, "datasource":
      "Prometheus", "fieldConfig": { "defaults": { "custom": {}, "links": [] }, "overrides":
      [] }, "fill": 1, "fillGradient": 0, "gridPos": { "h": 8, "w": 8, "x": 0, "y":
      10 }, "hiddenSeries": false, "id": 11, "legend": { "avg": false, "current":
      false, "max": false, "min": false, "show": true, "total": false, "values": false
      }, "lines": true, "linewidth": 1, "nullPointMode": "null", "options": { "alertThreshold":
      true }, "percentage": false, "pluginVersion": "7.2.1", "pointradius": 2, "points":
      false, "renderer": "flot", "seriesOverrides": [], "spaceLength": 10, "stack":
      false, "steppedLine": false, "targets": [ { "expr": "avg(envoy_wasm_remote_load_cache_entries)",
      "interval": "", "legendFormat": "entries", "refId": "A" } ], "thresholds": [],
      "timeFrom": null, "timeRegions": [], "timeShift": null, "title": "Cache Entry",
      "tooltip": { "shared": true, "sort": 0, "value_type": "individual" }, "type":
      "graph", "xaxis": { "buckets": null, "mode": "time", "name": null, "show": true,
      "values": [] }, "yaxes": [ { "$$hashKey": "object:178", "format": "short", "label":
      null, "logBase": 1, "max": null, "min": null, "show": true }, { "$$hashKey":
      "object:179", "format": "short", "label": null, "logBase": 1, "max": null, "min":
      null, "show": true } ], "yaxis": { "align": false, "alignLevel": null } }, {
      "aliasColors": {}, "bars": false, "dashLength": 10, "dashes": false, "datasource":
      "Prometheus", "fieldConfig": { "defaults": { "custom": {}, "links": [] }, "overrides":
      [] }, "fill": 1, "fillGradient": 0, "gridPos": { "h": 8, "w": 8, "x": 8, "y":
      10 }, "hiddenSeries": false, "id": 8, "legend": { "avg": false, "current": false,
      "max": false, "min": false, "show": true, "total": false, "values": false },
      "lines": true, "linewidth": 1, "nullPointMode": "null", "options": { "alertThreshold":
      true }, "percentage": false, "pluginVersion": "7.2.1", "pointradius": 2, "points":
      false, "renderer": "flot", "seriesOverrides": [], "spaceLength": 10, "stack":
      false, "steppedLine": false, "targets": [ { "expr": "avg(envoy_wasm_remote_load_cache_hits)",
      "interval": "", "legendFormat": "hits", "refId": "A" }, { "expr": "avg(envoy_wasm_remote_load_cache_misses)",
      "interval": "", "legendFormat": "misses", "refId": "B" }, { "expr": "avg(envoy_wasm_remote_load_cache_negative_hits)",
      "interval": "", "legendFormat": "negative hits", "refId": "C" } ], "thresholds":
      [], "timeFrom": null, "timeRegions": [], "timeShift": null, "title": "Cache
      Visit", "tooltip": { "shared": true, "sort": 0, "value_type": "individual" },
      "type": "graph", "xaxis": { "buckets": null, "mode": "time", "name": null, "show":
      true, "values": [] }, "yaxes": [ { "$$hashKey": "object:233", "format": "short",
      "label": null, "logBase": 1, "max": null, "min": null, "show": true }, { "$$hashKey":
      "object:234", "format": "short", "label": null, "logBase": 1, "max": null, "min":
      null, "show": true } ], "yaxis": { "align": false, "alignLevel": null } }, {
      "aliasColors": {}, "bars": false, "dashLength": 10, "dashes": false, "datasource":
      "Prometheus", "fieldConfig": { "defaults": { "custom": {}, "links": [] }, "overrides":
      [] }, "fill": 1, "fillGradient": 0, "gridPos": { "h": 8, "w": 8, "x": 16, "y":
      10 }, "hiddenSeries": false, "id": 10, "legend": { "avg": false, "current":
      false, "max": false, "min": false, "show": true, "total": false, "values": false
      }, "lines": true, "linewidth": 1, "nullPointMode": "null", "options": { "alertThreshold":
      true }, "percentage": false, "pluginVersion": "7.2.1", "pointradius": 2, "points":
      false, "renderer": "flot", "seriesOverrides": [], "spaceLength": 10, "stack":
      false, "steppedLine": false, "targets": [ { "expr": "avg(envoy_wasm_remote_load_fetch_failures)",
      "interval": "", "legendFormat": "failures", "refId": "A" }, { "expr": "avg(envoy_wasm_remote_load_fetch_successes)",
      "interval": "", "legendFormat": "successes", "refId": "B" } ], "thresholds":
      [], "timeFrom": null, "timeRegions": [], "timeShift": null, "title": "Remote
      Fetch", "tooltip": { "shared": true, "sort": 0, "value_type": "individual" },
      "type": "graph", "xaxis": { "buckets": null, "mode": "time", "name": null, "show":
      true, "values": [] }, "yaxes": [ { "$$hashKey": "object:288", "format": "short",
      "label": null, "logBase": 1, "max": null, "min": null, "show": true }, { "$$hashKey":
      "object:289", "format": "short", "label": null, "logBase": 1, "max": null, "min":
      null, "show": true } ], "yaxis": { "align": false, "alignLevel": null } }, {
      "collapsed": false, "datasource": "Prometheus", "gridPos": { "h": 1, "w": 24,
      "x": 0, "y": 18 }, "id": 71, "panels": [], "title": "Proxy Resource Usage",
      "type": "row" }, { "aliasColors": {}, "bars": false, "dashLength": 10, "dashes":
      false, "datasource": "Prometheus", "fieldConfig": { "defaults": { "custom":
      {} }, "overrides": [] }, "fill": 1, "fillGradient": 0, "gridPos": { "h": 8,
      "w": 12, "x": 0, "y": 19 }, "hiddenSeries": false, "id": 72, "legend": { "avg":
      false, "current": false, "max": false, "min": false, "show": true, "total":
      false, "values": false }, "lines": true, "linewidth": 1, "links": [], "nullPointMode":
      "null", "options": { "alertThreshold": true }, "percentage": false, "pluginVersion":
      "7.2.1", "pointradius": 5, "points": false, "renderer": "flot", "seriesOverrides":
      [], "spaceLength": 10, "stack": false, "steppedLine": false, "targets": [ {
      "expr": "sum(container_memory_working_set_bytes{container=\"istio-proxy\"})",
      "format": "time_series", "hide": false, "intervalFactor": 2, "legendFormat":
      "Total (k8s)", "refId": "A", "step": 2 } ], "thresholds": [], "timeFrom": null,
      "timeRegions": [], "timeShift": null, "title": "Memory", "tooltip": { "shared":
      true, "sort": 0, "value_type": "individual" }, "type": "graph", "xaxis": { "buckets":
      null, "mode": "time", "name": null, "show": true, "values": [] }, "yaxes": [
      { "$$hashKey": "object:396", "format": "bytes", "label": null, "logBase": 1,
      "max": null, "min": null, "show": true }, { "$$hashKey": "object:397", "format":
      "short", "label": null, "logBase": 1, "max": null, "min": null, "show": false
      } ], "yaxis": { "align": false, "alignLevel": null } }, { "aliasColors": {},
      "bars": false, "dashLength": 10, "dashes": false, "datasource": "Prometheus",
      "fieldConfig": { "defaults": { "custom": {} }, "overrides": [] }, "fill": 1,
      "fillGradient": 0, "gridPos": { "h": 8, "w": 12, "x": 12, "y": 19 }, "hiddenSeries":
      false, "id": 73, "legend": { "avg": false, "current": false, "max": false, "min":
      false, "show": true, "total": false, "values": false }, "lines": true, "linewidth":
      1, "links": [], "nullPointMode": "null", "options": { "alertThreshold": true
      }, "percentage": false, "pluginVersion": "7.2.1", "pointradius": 5, "points":
      false, "renderer": "flot", "seriesOverrides": [], "spaceLength": 10, "stack":
      false, "steppedLine": false, "targets": [ { "expr": "sum(rate(container_cpu_usage_seconds_total{container=\"istio-proxy\"}[1m]))",
      "format": "time_series", "hide": false, "intervalFactor": 2, "legendFormat":
      "Total (k8s)", "refId": "A", "step": 2 } ], "thresholds": [], "timeFrom": null,
      "timeRegions": [], "timeShift": null, "title": "vCPU", "tooltip": { "shared":
      true, "sort": 0, "value_type": "individual" }, "type": "graph", "xaxis": { "buckets":
      null, "mode": "time", "name": null, "show": true, "values": [] }, "yaxes": [
      { "$$hashKey": "object:447", "format": "short", "label": null, "logBase": 1,
      "max": null, "min": null, "show": true }, { "$$hashKey": "object:448", "format":
      "short", "label": null, "logBase": 1, "max": null, "min": null, "show": true
      } ], "yaxis": { "align": false, "alignLevel": null } } ], "refresh": false,
      "schemaVersion": 26, "style": "dark", "tags": [], "templating": { "list": []
      }, "time": { "from": "2020-10-22T23:11:45.783Z", "to": "2020-10-23T00:04:19.481Z"
      }, "timepicker": { "refresh_intervals": [ "10s", "30s", "1m", "5m", "15m", "30m",
      "1h", "2h", "1d" ] }, "timezone": "", "title": "Istio Wasm Extension Dashboard",
      "uid": "7PAV7ctGz", "version": 17 } '
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"istio-extension-dashboard.json":"{ \"annotations\": { \"list\": [ { \"builtIn\": 1, \"datasource\": \"-- Grafana --\", \"enable\": true, \"hide\": true, \"iconColor\": \"rgba(0, 211, 255, 1)\", \"name\": \"Annotations \u0026 Alerts\", \"type\": \"dashboard\" } ] }, \"editable\": false, \"gnetId\": null, \"graphTooltip\": 0, \"links\": [], \"panels\": [ { \"collapsed\": false, \"datasource\": \"Prometheus\", \"gridPos\": { \"h\": 1, \"w\": 24, \"x\": 0, \"y\": 0 }, \"id\": 3, \"panels\": [], \"title\": \"Wasm VMs\", \"type\": \"row\" }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"description\": \"\", \"fieldConfig\": { \"defaults\": { \"custom\": { \"align\": null }, \"links\": [], \"mappings\": [], \"thresholds\": { \"mode\": \"absolute\", \"steps\": [ { \"color\": \"green\", \"value\": null }, { \"color\": \"red\", \"value\": 80 } ] } }, \"overrides\": [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\": { \"h\": 8, \"w\": 12, \"x\": 0, \"y\": 1 }, \"hiddenSeries\": false, \"id\": 2, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"nullPointMode\": \"null\", \"options\": { \"alertThreshold\": true }, \"percentage\": false, \"pluginVersion\": \"7.2.1\", \"pointradius\": 2, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"avg(envoy_wasm_envoy_wasm_runtime_null_active)\", \"interval\": \"\", \"legendFormat\": \"native\", \"refId\": \"A\" }, { \"expr\": \"avg(envoy_wasm_envoy_wasm_runtime_v8_active)\", \"interval\": \"\", \"legendFormat\": \"v8\", \"refId\": \"B\" } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Active\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"$$hashKey\": \"object:123\", \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"$$hashKey\": \"object:124\", \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fieldConfig\": { \"defaults\": { \"custom\": {}, \"links\": [] }, \"overrides\": [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\": { \"h\": 8, \"w\": 12, \"x\": 12, \"y\": 1 }, \"hiddenSeries\": false, \"id\": 6, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"nullPointMode\": \"null\", \"options\": { \"alertThreshold\": true }, \"percentage\": false, \"pluginVersion\": \"7.2.1\", \"pointradius\": 2, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"avg(envoy_wasm_envoy_wasm_runtime_null_created)\", \"interval\": \"\", \"legendFormat\": \"native\", \"refId\": \"A\" }, { \"expr\": \"avg(envoy_wasm_envoy_wasm_runtime_v8_created)\", \"interval\": \"\", \"legendFormat\": \"v8\", \"refId\": \"B\" } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Created\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"$$hashKey\": \"object:68\", \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"$$hashKey\": \"object:69\", \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"collapsed\": false, \"datasource\": \"Prometheus\", \"gridPos\": { \"h\": 1, \"w\": 24, \"x\": 0, \"y\": 9 }, \"id\": 7, \"panels\": [], \"title\": \"Wasm Module Remote Load\", \"type\": \"row\" }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fieldConfig\": { \"defaults\": { \"custom\": {}, \"links\": [] }, \"overrides\": [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\": { \"h\": 8, \"w\": 8, \"x\": 0, \"y\": 10 }, \"hiddenSeries\": false, \"id\": 11, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"nullPointMode\": \"null\", \"options\": { \"alertThreshold\": true }, \"percentage\": false, \"pluginVersion\": \"7.2.1\", \"pointradius\": 2, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"avg(envoy_wasm_remote_load_cache_entries)\", \"interval\": \"\", \"legendFormat\": \"entries\", \"refId\": \"A\" } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Cache Entry\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"$$hashKey\": \"object:178\", \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"$$hashKey\": \"object:179\", \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fieldConfig\": { \"defaults\": { \"custom\": {}, \"links\": [] }, \"overrides\": [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\": { \"h\": 8, \"w\": 8, \"x\": 8, \"y\": 10 }, \"hiddenSeries\": false, \"id\": 8, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"nullPointMode\": \"null\", \"options\": { \"alertThreshold\": true }, \"percentage\": false, \"pluginVersion\": \"7.2.1\", \"pointradius\": 2, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"avg(envoy_wasm_remote_load_cache_hits)\", \"interval\": \"\", \"legendFormat\": \"hits\", \"refId\": \"A\" }, { \"expr\": \"avg(envoy_wasm_remote_load_cache_misses)\", \"interval\": \"\", \"legendFormat\": \"misses\", \"refId\": \"B\" }, { \"expr\": \"avg(envoy_wasm_remote_load_cache_negative_hits)\", \"interval\": \"\", \"legendFormat\": \"negative hits\", \"refId\": \"C\" } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Cache Visit\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"$$hashKey\": \"object:233\", \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"$$hashKey\": \"object:234\", \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fieldConfig\": { \"defaults\": { \"custom\": {}, \"links\": [] }, \"overrides\": [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\": { \"h\": 8, \"w\": 8, \"x\": 16, \"y\": 10 }, \"hiddenSeries\": false, \"id\": 10, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"nullPointMode\": \"null\", \"options\": { \"alertThreshold\": true }, \"percentage\": false, \"pluginVersion\": \"7.2.1\", \"pointradius\": 2, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"avg(envoy_wasm_remote_load_fetch_failures)\", \"interval\": \"\", \"legendFormat\": \"failures\", \"refId\": \"A\" }, { \"expr\": \"avg(envoy_wasm_remote_load_fetch_successes)\", \"interval\": \"\", \"legendFormat\": \"successes\", \"refId\": \"B\" } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Remote Fetch\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"$$hashKey\": \"object:288\", \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"$$hashKey\": \"object:289\", \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"collapsed\": false, \"datasource\": \"Prometheus\", \"gridPos\": { \"h\": 1, \"w\": 24, \"x\": 0, \"y\": 18 }, \"id\": 71, \"panels\": [], \"title\": \"Proxy Resource Usage\", \"type\": \"row\" }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fieldConfig\": { \"defaults\": { \"custom\": {} }, \"overrides\": [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\": { \"h\": 8, \"w\": 12, \"x\": 0, \"y\": 19 }, \"hiddenSeries\": false, \"id\": 72, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"options\": { \"alertThreshold\": true }, \"percentage\": false, \"pluginVersion\": \"7.2.1\", \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"sum(container_memory_working_set_bytes{container=\\\"istio-proxy\\\"})\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 2, \"legendFormat\": \"Total (k8s)\", \"refId\": \"A\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Memory\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"$$hashKey\": \"object:396\", \"format\": \"bytes\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"$$hashKey\": \"object:397\", \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": false } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fieldConfig\": { \"defaults\": { \"custom\": {} }, \"overrides\": [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\": { \"h\": 8, \"w\": 12, \"x\": 12, \"y\": 19 }, \"hiddenSeries\": false, \"id\": 73, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"options\": { \"alertThreshold\": true }, \"percentage\": false, \"pluginVersion\": \"7.2.1\", \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"sum(rate(container_cpu_usage_seconds_total{container=\\\"istio-proxy\\\"}[1m]))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 2, \"legendFormat\": \"Total (k8s)\", \"refId\": \"A\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"vCPU\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"$$hashKey\": \"object:447\", \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"$$hashKey\": \"object:448\", \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } } ], \"refresh\": false, \"schemaVersion\": 26, \"style\": \"dark\", \"tags\": [], \"templating\": { \"list\": [] }, \"time\": { \"from\": \"2020-10-22T23:11:45.783Z\", \"to\": \"2020-10-23T00:04:19.481Z\" }, \"timepicker\": { \"refresh_intervals\": [ \"10s\", \"30s\", \"1m\", \"5m\", \"15m\", \"30m\", \"1h\", \"2h\", \"1d\" ] }, \"timezone\": \"\", \"title\": \"Istio Wasm Extension Dashboard\", \"uid\": \"7PAV7ctGz\", \"version\": 17 } "},"kind":"ConfigMap","metadata":{"annotations":{"maistra.io/mesh-generation":"2.3.1-1-2"},"labels":{"app":"grafana","app.kubernetes.io/component":"grafana","app.kubernetes.io/instance":"istio-system","app.kubernetes.io/managed-by":"maistra-istio-operator","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"istio","app.kubernetes.io/version":"2.3.1-1-2","istio":"grafana","maistra-version":"2.1.6","maistra.io/owner":"istio-system","maistra.io/owner-name":"basic","release":"istio"},"name":"istio-grafana-configuration-dashboards-istio-extension-dashboard","namespace":"istio-system","ownerReferences":[{"apiVersion":"maistra.io/v2","blockOwnerDeletion":true,"controller":true,"kind":"ServiceMeshControlPlane","name":"basic","uid":"0c79eb74-854c-4f98-85c6-5955e78fd93e"}]}}
      maistra.io/mesh-generation: 2.3.1-1-2
    creationTimestamp: "2023-03-03T20:03:20Z"
    labels:
      app: grafana
      app.kubernetes.io/component: grafana
      app.kubernetes.io/instance: istio-system
      app.kubernetes.io/managed-by: maistra-istio-operator
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: istio
      app.kubernetes.io/version: 2.3.1-1-2
      istio: grafana
      maistra-version: 2.1.6
      maistra.io/owner: istio-system
      maistra.io/owner-name: basic
      release: istio
    name: istio-grafana-configuration-dashboards-istio-extension-dashboard
    namespace: istio-system
    ownerReferences:
    - apiVersion: maistra.io/v2
      blockOwnerDeletion: true
      controller: true
      kind: ServiceMeshControlPlane
      name: basic
      uid: 0c79eb74-854c-4f98-85c6-5955e78fd93e
    resourceVersion: "34874"
    uid: 01395c8d-4b2f-45e0-bfa9-5c611a92a3c0
- apiVersion: v1
  data:
    istio-mesh-dashboard.json: '{ "annotations": { "list": [ { "builtIn": 1, "datasource":
      "-- Grafana --", "enable": true, "hide": true, "iconColor": "rgba(0, 211, 255,
      1)", "name": "Annotations & Alerts", "type": "dashboard" } ] }, "editable":
      false, "gnetId": null, "graphTooltip": 0, "id": null, "links": [], "panels":
      [ { "content": "<div>\n  <div style=\"position: absolute; bottom: 0\">\n    <a
      href=\"https://istio.io\" target=\"_blank\" style=\"font-size: 30px; text-decoration:
      none; color: inherit\"><img src=\"https://istio.io/latest/img/istio-bluelogo-nobackground-unframed.svg\"
      style=\"height: 50px\"> Istio</a>\n  </div>\n  <div style=\"position: absolute;
      bottom: 0; right: 0; font-size: 15px\">\n    Istio is an <a href=\"https://github.com/istio/istio\"
      target=\"_blank\">open platform</a> that provides a uniform way to connect,\n    <a
      href=\"https://istio.io/docs/concepts/traffic-management/overview.html\" target=\"_blank\">manage</a>,
      and \n    <a href=\"https://istio.io/docs/concepts/network-and-auth/auth.html\"
      target=\"_blank\">secure</a> microservices.\n    <br>\n    Need help? Join the
      <a href=\"https://istio.io/community/\" target=\"_blank\">Istio community</a>.\n  </div>\n</div>",
      "gridPos": { "h": 3, "w": 24, "x": 0, "y": 0 }, "height": "50px", "id": 13,
      "links": [], "mode": "html", "style": { "font-size": "18pt" }, "title": "",
      "transparent": true, "type": "text" }, { "cacheTimeout": null, "colorBackground":
      false, "colorValue": false, "colors": [ "rgba(245, 54, 54, 0.9)", "rgba(237,
      129, 40, 0.89)", "rgba(50, 172, 45, 0.97)" ], "datasource": "Prometheus", "format":
      "ops", "gauge": { "maxValue": 100, "minValue": 0, "show": false, "thresholdLabels":
      false, "thresholdMarkers": true }, "gridPos": { "h": 3, "w": 6, "x": 0, "y":
      3 }, "id": 20, "interval": null, "links": [], "options": { "colorMode": "value",
      "graphMode": "area", "justifyMode": "auto", "orientation": "horizontal", "reduceOptions":
      { "calcs": [ "lastNotNull" ], "fields": "", "values": false }, "textMode": "auto"
      }, "mappingType": 1, "mappingTypes": [ { "name": "value to text", "value": 1
      }, { "name": "range to text", "value": 2 } ], "maxDataPoints": 100, "nullPointMode":
      "connected", "nullText": null, "postfix": "", "postfixFontSize": "50%", "prefix":
      "", "prefixFontSize": "50%", "rangeMaps": [ { "from": "null", "text": "N/A",
      "to": "null" } ], "sparkline": { "fillColor": "rgba(31, 118, 189, 0.18)", "full":
      true, "lineColor": "rgb(31, 120, 193)", "show": true }, "tableColumn": "", "targets":
      [ { "expr": "round(sum(irate(istio_requests_total{reporter=\"source\"}[1m])),
      0.001)", "intervalFactor": 1, "refId": "A", "step": 4 } ], "thresholds": "",
      "title": "Global Request Volume", "type": "singlestat", "valueFontSize": "80%",
      "valueMaps": [ { "op": "=", "text": "N/A", "value": "null" } ], "valueName":
      "avg" }, { "cacheTimeout": null, "colorBackground": false, "colorValue": false,
      "colors": [ "rgba(245, 54, 54, 0.9)", "rgba(237, 129, 40, 0.89)", "rgba(50,
      172, 45, 0.97)" ], "datasource": "Prometheus", "format": "percentunit", "gauge":
      { "maxValue": 100, "minValue": 80, "show": false, "thresholdLabels": false,
      "thresholdMarkers": false }, "gridPos": { "h": 3, "w": 6, "x": 6, "y": 3 },
      "id": 21, "interval": null, "links": [], "options": { "colorMode": "value",
      "graphMode": "area", "justifyMode": "auto", "orientation": "horizontal", "reduceOptions":
      { "calcs": [ "lastNotNull" ], "fields": "", "values": false }, "textMode": "auto"
      }, "mappingType": 1, "mappingTypes": [ { "name": "value to text", "value": 1
      }, { "name": "range to text", "value": 2 } ], "maxDataPoints": 100, "nullPointMode":
      "connected", "nullText": null, "postfix": "", "postfixFontSize": "50%", "prefix":
      "", "prefixFontSize": "50%", "rangeMaps": [ { "from": "null", "text": "N/A",
      "to": "null" } ], "sparkline": { "fillColor": "rgba(31, 118, 189, 0.18)", "full":
      true, "lineColor": "rgb(31, 120, 193)", "show": true }, "tableColumn": "", "targets":
      [ { "expr": "sum(rate(istio_requests_total{reporter=\"source\", response_code!~\"5.*\"}[1m]))
      / sum(rate(istio_requests_total{reporter=\"source\"}[1m]))", "format": "time_series",
      "intervalFactor": 1, "refId": "A", "step": 4 } ], "thresholds": "95, 99, 99.5",
      "title": "Global Success Rate (non-5xx responses)", "type": "singlestat", "valueFontSize":
      "80%", "valueMaps": [ { "op": "=", "text": "N/A", "value": "null" } ], "valueName":
      "avg" }, { "cacheTimeout": null, "colorBackground": false, "colorValue": false,
      "colors": [ "rgba(245, 54, 54, 0.9)", "rgba(237, 129, 40, 0.89)", "rgba(50,
      172, 45, 0.97)" ], "datasource": "Prometheus", "format": "ops", "gauge": { "maxValue":
      100, "minValue": 0, "show": false, "thresholdLabels": false, "thresholdMarkers":
      true }, "gridPos": { "h": 3, "w": 6, "x": 12, "y": 3 }, "id": 22, "interval":
      null, "links": [], "options": { "colorMode": "value", "graphMode": "area", "justifyMode":
      "auto", "orientation": "horizontal", "reduceOptions": { "calcs": [ "lastNotNull"
      ], "fields": "", "values": false }, "textMode": "auto" }, "mappingType": 1,
      "mappingTypes": [ { "name": "value to text", "value": 1 }, { "name": "range
      to text", "value": 2 } ], "maxDataPoints": 100, "nullPointMode": "connected",
      "nullText": null, "postfix": "", "postfixFontSize": "50%", "prefix": "", "prefixFontSize":
      "50%", "rangeMaps": [ { "from": "null", "text": "N/A", "to": "null" } ], "sparkline":
      { "fillColor": "rgba(31, 118, 189, 0.18)", "full": true, "lineColor": "rgb(31,
      120, 193)", "show": true }, "tableColumn": "", "targets": [ { "expr": "sum(irate(istio_requests_total{reporter=\"source\",
      response_code=~\"4.*\"}[1m]))", "format": "time_series", "intervalFactor": 1,
      "refId": "A", "step": 4 } ], "thresholds": "", "title": "4xxs", "type": "singlestat",
      "valueFontSize": "80%", "valueMaps": [ { "op": "=", "text": "N/A", "value":
      "null" } ], "valueName": "avg" }, { "cacheTimeout": null, "colorBackground":
      false, "colorValue": false, "colors": [ "rgba(245, 54, 54, 0.9)", "rgba(237,
      129, 40, 0.89)", "rgba(50, 172, 45, 0.97)" ], "datasource": "Prometheus", "format":
      "ops", "gauge": { "maxValue": 100, "minValue": 0, "show": false, "thresholdLabels":
      false, "thresholdMarkers": true }, "gridPos": { "h": 3, "w": 6, "x": 18, "y":
      3 }, "id": 23, "interval": null, "links": [], "options": { "colorMode": "value",
      "graphMode": "area", "justifyMode": "auto", "orientation": "horizontal", "reduceOptions":
      { "calcs": [ "lastNotNull" ], "fields": "", "values": false }, "textMode": "auto"
      }, "mappingType": 1, "mappingTypes": [ { "name": "value to text", "value": 1
      }, { "name": "range to text", "value": 2 } ], "maxDataPoints": 100, "nullPointMode":
      "connected", "nullText": null, "postfix": "", "postfixFontSize": "50%", "prefix":
      "", "prefixFontSize": "50%", "rangeMaps": [ { "from": "null", "text": "N/A",
      "to": "null" } ], "sparkline": { "fillColor": "rgba(31, 118, 189, 0.18)", "full":
      true, "lineColor": "rgb(31, 120, 193)", "show": true }, "tableColumn": "", "targets":
      [ { "expr": "sum(irate(istio_requests_total{reporter=\"source\", response_code=~\"5.*\"}[1m]))",
      "format": "time_series", "intervalFactor": 1, "refId": "A", "step": 4 } ], "thresholds":
      "", "title": "5xxs", "type": "singlestat", "valueFontSize": "80%", "valueMaps":
      [ { "op": "=", "text": "N/A", "value": "null" } ], "valueName": "avg" }, { "cacheTimeout":
      null, "colorBackground": false, "colorValue": false, "colors": [ "#299c46",
      "rgba(237, 129, 40, 0.89)", "#d44a3a" ], "datasource": "Prometheus", "format":
      "none", "gauge": { "maxValue": 100, "minValue": 0, "show": false, "thresholdLabels":
      false, "thresholdMarkers": true }, "gridPos": { "h": 3, "w": 6, "x": 0, "y":
      6 }, "id": 113, "interval": null, "links": [], "options": { "colorMode": "value",
      "graphMode": "area", "justifyMode": "auto", "orientation": "horizontal", "reduceOptions":
      { "calcs": [ "lastNotNull" ], "fields": "", "values": false }, "textMode": "auto"
      }, "mappingType": 1, "mappingTypes": [ { "name": "value to text", "value": 1
      }, { "name": "range to text", "value": 2 } ], "maxDataPoints": 100, "nullPointMode":
      "connected", "nullText": null, "postfix": "", "postfixFontSize": "50%", "prefix":
      "", "prefixFontSize": "50%", "rangeMaps": [ { "from": "null", "text": "N/A",
      "to": "null" } ], "sparkline": { "fillColor": "rgba(31, 118, 189, 0.18)", "full":
      false, "lineColor": "rgb(31, 120, 193)", "show": true }, "tableColumn": "",
      "targets": [ { "expr": "max(pilot_k8s_cfg_events{type=\"VirtualService\", event=\"add\"})
      - (max(pilot_k8s_cfg_events{type=\"VirtualService\", event=\"delete\"}) or max(up
      * 0))", "format": "time_series", "intervalFactor": 1, "refId": "A" } ], "thresholds":
      "", "timeFrom": null, "timeShift": null, "title": "Virtual Services", "type":
      "singlestat", "valueFontSize": "80%", "valueMaps": [ { "op": "=", "text": "N/A",
      "value": "null" } ], "valueName": "current" }, { "cacheTimeout": null, "colorBackground":
      false, "colorValue": false, "colors": [ "#299c46", "rgba(237, 129, 40, 0.89)",
      "#d44a3a" ], "datasource": "Prometheus", "format": "none", "gauge": { "maxValue":
      100, "minValue": 0, "show": false, "thresholdLabels": false, "thresholdMarkers":
      true }, "gridPos": { "h": 3, "w": 6, "x": 6, "y": 6 }, "id": 114, "interval":
      null, "links": [], "options": { "colorMode": "value", "graphMode": "area", "justifyMode":
      "auto", "orientation": "horizontal", "reduceOptions": { "calcs": [ "lastNotNull"
      ], "fields": "", "values": false }, "textMode": "auto" }, "mappingType": 1,
      "mappingTypes": [ { "name": "value to text", "value": 1 }, { "name": "range
      to text", "value": 2 } ], "maxDataPoints": 100, "nullPointMode": "connected",
      "nullText": null, "postfix": "", "postfixFontSize": "50%", "prefix": "", "prefixFontSize":
      "50%", "rangeMaps": [ { "from": "null", "text": "N/A", "to": "null" } ], "sparkline":
      { "fillColor": "rgba(31, 118, 189, 0.18)", "full": false, "lineColor": "rgb(31,
      120, 193)", "show": true }, "tableColumn": "", "targets": [ { "expr": "max(pilot_k8s_cfg_events{type=\"DestinationRule\",
      event=\"add\"}) - (max(pilot_k8s_cfg_events{type=\"DestinationRule\", event=\"delete\"})
      or max(up * 0))", "format": "time_series", "intervalFactor": 1, "refId": "A"
      } ], "thresholds": "", "timeFrom": null, "timeShift": null, "title": "Destination
      Rules", "type": "singlestat", "valueFontSize": "80%", "valueMaps": [ { "op":
      "=", "text": "N/A", "value": "null" } ], "valueName": "current" }, { "cacheTimeout":
      null, "colorBackground": false, "colorValue": false, "colors": [ "#299c46",
      "rgba(237, 129, 40, 0.89)", "#d44a3a" ], "datasource": "Prometheus", "format":
      "none", "gauge": { "maxValue": 100, "minValue": 0, "show": false, "thresholdLabels":
      false, "thresholdMarkers": true }, "gridPos": { "h": 3, "w": 6, "x": 12, "y":
      6 }, "id": 115, "interval": null, "links": [], "options": { "colorMode": "value",
      "graphMode": "area", "justifyMode": "auto", "orientation": "horizontal", "reduceOptions":
      { "calcs": [ "lastNotNull" ], "fields": "", "values": false }, "textMode": "auto"
      }, "mappingType": 1, "mappingTypes": [ { "name": "value to text", "value": 1
      }, { "name": "range to text", "value": 2 } ], "maxDataPoints": 100, "nullPointMode":
      "connected", "nullText": null, "postfix": "", "postfixFontSize": "50%", "prefix":
      "", "prefixFontSize": "50%", "rangeMaps": [ { "from": "null", "text": "N/A",
      "to": "null" } ], "sparkline": { "fillColor": "rgba(31, 118, 189, 0.18)", "full":
      false, "lineColor": "rgb(31, 120, 193)", "show": true }, "tableColumn": "",
      "targets": [ { "expr": "max(pilot_k8s_cfg_events{type=\"Gateway\", event=\"add\"})
      - (max(pilot_k8s_cfg_events{type=\"Gateway\", event=\"delete\"}) or max(up *
      0))", "format": "time_series", "intervalFactor": 1, "refId": "A" } ], "thresholds":
      "", "timeFrom": null, "timeShift": null, "title": "Gateways", "type": "singlestat",
      "valueFontSize": "80%", "valueMaps": [ { "op": "=", "text": "N/A", "value":
      "null" } ], "valueName": "current" }, { "cacheTimeout": null, "colorBackground":
      false, "colorValue": false, "colors": [ "#299c46", "rgba(237, 129, 40, 0.89)",
      "#d44a3a" ], "datasource": "Prometheus", "format": "none", "gauge": { "maxValue":
      100, "minValue": 0, "show": false, "thresholdLabels": false, "thresholdMarkers":
      true }, "gridPos": { "h": 3, "w": 6, "x": 18, "y": 6 }, "id": 116, "interval":
      null, "links": [], "options": { "colorMode": "value", "graphMode": "area", "justifyMode":
      "auto", "orientation": "horizontal", "reduceOptions": { "calcs": [ "lastNotNull"
      ], "fields": "", "values": false }, "textMode": "auto" }, "mappingType": 1,
      "mappingTypes": [ { "name": "value to text", "value": 1 }, { "name": "range
      to text", "value": 2 } ], "maxDataPoints": 100, "nullPointMode": "connected",
      "nullText": null, "postfix": "", "postfixFontSize": "50%", "prefix": "", "prefixFontSize":
      "50%", "rangeMaps": [ { "from": "null", "text": "N/A", "to": "null" } ], "sparkline":
      { "fillColor": "rgba(31, 118, 189, 0.18)", "full": false, "lineColor": "rgb(31,
      120, 193)", "show": true }, "tableColumn": "", "targets": [ { "expr": "max(pilot_k8s_cfg_events{type=\"WorkloadEntry\",
      event=\"add\"}) - (max(pilot_k8s_cfg_events{type=\"WorkloadEntry\", event=\"delete\"})
      or max(up * 0))", "format": "time_series", "intervalFactor": 1, "refId": "A"
      } ], "thresholds": "", "timeFrom": null, "timeShift": null, "title": "Workload
      Entries", "type": "singlestat", "valueFontSize": "80%", "valueMaps": [ { "op":
      "=", "text": "N/A", "value": "null" } ], "valueName": "current" }, { "cacheTimeout":
      null, "colorBackground": false, "colorValue": false, "colors": [ "#299c46",
      "rgba(237, 129, 40, 0.89)", "#d44a3a" ], "datasource": "Prometheus", "format":
      "none", "gauge": { "maxValue": 100, "minValue": 0, "show": false, "thresholdLabels":
      false, "thresholdMarkers": true }, "gridPos": { "h": 3, "w": 6, "x": 0, "y":
      6 }, "id": 117, "interval": null, "links": [], "options": { "colorMode": "value",
      "graphMode": "area", "justifyMode": "auto", "orientation": "horizontal", "reduceOptions":
      { "calcs": [ "lastNotNull" ], "fields": "", "values": false }, "textMode": "auto"
      }, "mappingType": 1, "mappingTypes": [ { "name": "value to text", "value": 1
      }, { "name": "range to text", "value": 2 } ], "maxDataPoints": 100, "nullPointMode":
      "connected", "nullText": null, "postfix": "", "postfixFontSize": "50%", "prefix":
      "", "prefixFontSize": "50%", "rangeMaps": [ { "from": "null", "text": "N/A",
      "to": "null" } ], "sparkline": { "fillColor": "rgba(31, 118, 189, 0.18)", "full":
      false, "lineColor": "rgb(31, 120, 193)", "show": true }, "tableColumn": "",
      "targets": [ { "expr": "max(pilot_k8s_cfg_events{type=\"ServiceEntry\", event=\"add\"})
      - (max(pilot_k8s_cfg_events{type=\"ServiceEntry\", event=\"delete\"}) or max(up
      * 0))", "format": "time_series", "intervalFactor": 1, "refId": "A" } ], "thresholds":
      "", "timeFrom": null, "timeShift": null, "title": "Service Entries", "type":
      "singlestat", "valueFontSize": "80%", "valueMaps": [ { "op": "=", "text": "N/A",
      "value": "null" } ], "valueName": "current" }, { "cacheTimeout": null, "colorBackground":
      false, "colorValue": false, "colors": [ "#299c46", "rgba(237, 129, 40, 0.89)",
      "#d44a3a" ], "datasource": "Prometheus", "format": "none", "gauge": { "maxValue":
      100, "minValue": 0, "show": false, "thresholdLabels": false, "thresholdMarkers":
      true }, "gridPos": { "h": 3, "w": 6, "x": 6, "y": 6 }, "id": 90, "interval":
      null, "links": [], "options": { "colorMode": "value", "graphMode": "area", "justifyMode":
      "auto", "orientation": "horizontal", "reduceOptions": { "calcs": [ "lastNotNull"
      ], "fields": "", "values": false }, "textMode": "auto" }, "mappingType": 1,
      "mappingTypes": [ { "name": "value to text", "value": 1 }, { "name": "range
      to text", "value": 2 } ], "maxDataPoints": 100, "nullPointMode": "connected",
      "nullText": null, "postfix": "", "postfixFontSize": "50%", "prefix": "", "prefixFontSize":
      "50%", "rangeMaps": [ { "from": "null", "text": "N/A", "to": "null" } ], "sparkline":
      { "fillColor": "rgba(31, 118, 189, 0.18)", "full": false, "lineColor": "rgb(31,
      120, 193)", "show": true }, "tableColumn": "", "targets": [ { "expr": "max(pilot_k8s_cfg_events{type=\"PeerAuthentication\",
      event=\"add\"}) - (max(pilot_k8s_cfg_events{type=\"PeerAuthentication\", event=\"delete\"})
      or max(up * 0))", "format": "time_series", "intervalFactor": 1, "refId": "A"
      } ], "thresholds": "", "timeFrom": null, "timeShift": null, "title": "PeerAuthentication
      Policies", "type": "singlestat", "valueFontSize": "80%", "valueMaps": [ { "op":
      "=", "text": "N/A", "value": "null" } ], "valueName": "current" }, { "cacheTimeout":
      null, "colorBackground": false, "colorValue": false, "colors": [ "#299c46",
      "rgba(237, 129, 40, 0.89)", "#d44a3a" ], "datasource": "Prometheus", "format":
      "none", "gauge": { "maxValue": 100, "minValue": 0, "show": false, "thresholdLabels":
      false, "thresholdMarkers": true }, "gridPos": { "h": 3, "w": 6, "x": 12, "y":
      6 }, "id": 91, "interval": null, "links": [], "options": { "colorMode": "value",
      "graphMode": "area", "justifyMode": "auto", "orientation": "horizontal", "reduceOptions":
      { "calcs": [ "lastNotNull" ], "fields": "", "values": false }, "textMode": "auto"
      }, "mappingType": 1, "mappingTypes": [ { "name": "value to text", "value": 1
      }, { "name": "range to text", "value": 2 } ], "maxDataPoints": 100, "nullPointMode":
      "connected", "nullText": null, "postfix": "", "postfixFontSize": "50%", "prefix":
      "", "prefixFontSize": "50%", "rangeMaps": [ { "from": "null", "text": "N/A",
      "to": "null" } ], "sparkline": { "fillColor": "rgba(31, 118, 189, 0.18)", "full":
      false, "lineColor": "rgb(31, 120, 193)", "show": true }, "tableColumn": "",
      "targets": [ { "expr": "max(pilot_k8s_cfg_events{type=\"RequestAuthentication\",
      event=\"add\"}) - (max(pilot_k8s_cfg_events{type=\"RequestAuthentication\",
      event=\"delete\"}) or max(up * 0))", "format": "time_series", "intervalFactor":
      1, "refId": "A" } ], "thresholds": "", "timeFrom": null, "timeShift": null,
      "title": "RequestAuthentication Policies", "type": "singlestat", "valueFontSize":
      "80%", "valueMaps": [ { "op": "=", "text": "N/A", "value": "null" } ], "valueName":
      "current" }, { "cacheTimeout": null, "colorBackground": false, "colorValue":
      false, "colors": [ "#299c46", "rgba(237, 129, 40, 0.89)", "#d44a3a" ], "datasource":
      "Prometheus", "format": "none", "gauge": { "maxValue": 100, "minValue": 0, "show":
      false, "thresholdLabels": false, "thresholdMarkers": true }, "gridPos": { "h":
      3, "w": 6, "x": 18, "y": 6 }, "id": 92, "interval": null, "links": [], "options":
      { "colorMode": "value", "graphMode": "area", "justifyMode": "auto", "orientation":
      "horizontal", "reduceOptions": { "calcs": [ "lastNotNull" ], "fields": "", "values":
      false }, "textMode": "auto" }, "mappingType": 1, "mappingTypes": [ { "name":
      "value to text", "value": 1 }, { "name": "range to text", "value": 2 } ], "maxDataPoints":
      100, "nullPointMode": "connected", "nullText": null, "postfix": "", "postfixFontSize":
      "50%", "prefix": "", "prefixFontSize": "50%", "rangeMaps": [ { "from": "null",
      "text": "N/A", "to": "null" } ], "sparkline": { "fillColor": "rgba(31, 118,
      189, 0.18)", "full": false, "lineColor": "rgb(31, 120, 193)", "show": true },
      "tableColumn": "", "targets": [ { "expr": "max(pilot_k8s_cfg_events{type=\"AuthorizationPolicy\",
      event=\"add\"}) - (max(pilot_k8s_cfg_events{type=\"AuthorizationPolicy\", event=\"delete\"})
      or max(up * 0))", "format": "time_series", "intervalFactor": 1, "refId": "A"
      } ], "thresholds": "", "timeFrom": null, "timeShift": null, "title": "Authorization
      Policies", "type": "singlestat", "valueFontSize": "80%", "valueMaps": [ { "op":
      "=", "text": "N/A", "value": "null" } ], "valueName": "current" }, { "columns":
      [], "datasource": "Prometheus", "fontSize": "100%", "gridPos": { "h": 21, "w":
      24, "x": 0, "y": 9 }, "hideTimeOverride": false, "id": 73, "links": [], "pageSize":
      null, "repeat": null, "repeatDirection": "v", "scroll": true, "showHeader":
      true, "sort": { "col": 5, "desc": true }, "styles": [ { "alias": "Workload",
      "colorMode": null, "colors": [ "rgba(245, 54, 54, 0.9)", "rgba(237, 129, 40,
      0.89)", "rgba(50, 172, 45, 0.97)" ], "dateFormat": "YYYY-MM-DD HH:mm:ss", "decimals":
      2, "link": false, "linkTargetBlank": false, "linkTooltip": "Workload dashboard",
      "linkUrl": "/dashboard/db/istio-workload-dashboard?var-namespace=${__cell_3:raw}&var-workload=${__cell_2:raw}",
      "pattern": "destination_workload", "preserveFormat": false, "sanitize": false,
      "thresholds": [], "type": "hidden", "unit": "short" }, { "alias": "", "colorMode":
      null, "colors": [ "rgba(245, 54, 54, 0.9)", "rgba(237, 129, 40, 0.89)", "rgba(50,
      172, 45, 0.97)" ], "dateFormat": "YYYY-MM-DD HH:mm:ss", "decimals": 2, "pattern":
      "Time", "thresholds": [], "type": "hidden", "unit": "short" }, { "alias": "Requests",
      "colorMode": null, "colors": [ "rgba(245, 54, 54, 0.9)", "rgba(237, 129, 40,
      0.89)", "rgba(50, 172, 45, 0.97)" ], "dateFormat": "YYYY-MM-DD HH:mm:ss", "decimals":
      2, "pattern": "Value #A", "thresholds": [], "type": "number", "unit": "ops"
      }, { "alias": "P50 Latency", "colorMode": null, "colors": [ "rgba(245, 54, 54,
      0.9)", "rgba(237, 129, 40, 0.89)", "rgba(50, 172, 45, 0.97)" ], "dateFormat":
      "YYYY-MM-DD HH:mm:ss", "decimals": 2, "pattern": "Value #B", "thresholds": [],
      "type": "number", "unit": "s" }, { "alias": "P90 Latency", "colorMode": null,
      "colors": [ "rgba(245, 54, 54, 0.9)", "rgba(237, 129, 40, 0.89)", "rgba(50,
      172, 45, 0.97)" ], "dateFormat": "YYYY-MM-DD HH:mm:ss", "decimals": 2, "pattern":
      "Value #C", "thresholds": [], "type": "number", "unit": "s" }, { "alias": "P99
      Latency", "colorMode": null, "colors": [ "rgba(245, 54, 54, 0.9)", "rgba(237,
      129, 40, 0.89)", "rgba(50, 172, 45, 0.97)" ], "dateFormat": "YYYY-MM-DD HH:mm:ss",
      "decimals": 2, "pattern": "Value #D", "thresholds": [], "type": "number", "unit":
      "s" }, { "alias": "Success Rate", "colorMode": "cell", "colors": [ "rgba(245,
      54, 54, 0.9)", "rgba(237, 129, 40, 0.89)", "rgba(50, 172, 45, 0.97)" ], "dateFormat":
      "YYYY-MM-DD HH:mm:ss", "decimals": 2, "pattern": "Value #E", "thresholds": [
      ".95", " 1.00" ], "type": "number", "unit": "percentunit" }, { "alias": "Workload",
      "colorMode": null, "colors": [ "rgba(245, 54, 54, 0.9)", "rgba(237, 129, 40,
      0.89)", "rgba(50, 172, 45, 0.97)" ], "dateFormat": "YYYY-MM-DD HH:mm:ss", "decimals":
      2, "link": true, "linkTooltip": "$__cell dashboard", "linkUrl": "/dashboard/db/istio-workload-dashboard?var-workload=${__cell_2:raw}&var-namespace=${__cell_3:raw}",
      "pattern": "destination_workload_var", "thresholds": [], "type": "number", "unit":
      "short" }, { "alias": "Service", "colorMode": null, "colors": [ "rgba(245, 54,
      54, 0.9)", "rgba(237, 129, 40, 0.89)", "rgba(50, 172, 45, 0.97)" ], "dateFormat":
      "YYYY-MM-DD HH:mm:ss", "decimals": 2, "link": true, "linkTooltip": "$__cell
      dashboard", "linkUrl": "/dashboard/db/istio-service-dashboard?var-service=${__cell_1:raw}",
      "pattern": "destination_service", "thresholds": [], "type": "string", "unit":
      "short" }, { "alias": "", "colorMode": null, "colors": [ "rgba(245, 54, 54,
      0.9)", "rgba(237, 129, 40, 0.89)", "rgba(50, 172, 45, 0.97)" ], "dateFormat":
      "YYYY-MM-DD HH:mm:ss", "decimals": 2, "pattern": "destination_workload_namespace",
      "thresholds": [], "type": "hidden", "unit": "short" } ], "targets": [ { "expr":
      "label_join(sum(rate(istio_requests_total{reporter=\"source\", response_code=\"200\"}[1m]))
      by (destination_workload, destination_workload_namespace, destination_service),
      \"destination_workload_var\", \".\", \"destination_workload\", \"destination_workload_namespace\")",
      "format": "table", "hide": false, "instant": true, "intervalFactor": 1, "legendFormat":
      "{{ destination_workload}}.{{ destination_workload_namespace }}", "refId": "A"
      }, { "expr": "label_join((histogram_quantile(0.50, sum(rate(istio_request_duration_milliseconds_bucket{reporter=\"source\"}[1m]))
      by (le, destination_workload, destination_workload_namespace)) / 1000) or histogram_quantile(0.50,
      sum(rate(istio_request_duration_seconds_bucket{reporter=\"source\"}[1m])) by
      (le, destination_workload, destination_workload_namespace)), \"destination_workload_var\",
      \".\", \"destination_workload\", \"destination_workload_namespace\")", "format":
      "table", "hide": false, "instant": true, "intervalFactor": 1, "legendFormat":
      "{{ destination_workload}}.{{ destination_workload_namespace }}", "refId": "B"
      }, { "expr": "label_join((histogram_quantile(0.90, sum(rate(istio_request_duration_milliseconds_bucket{reporter=\"source\"}[1m]))
      by (le, destination_workload, destination_workload_namespace)) / 1000) or histogram_quantile(0.90,
      sum(rate(istio_request_duration_seconds_bucket{reporter=\"source\"}[1m])) by
      (le, destination_workload, destination_workload_namespace)), \"destination_workload_var\",
      \".\", \"destination_workload\", \"destination_workload_namespace\")", "format":
      "table", "hide": false, "instant": true, "intervalFactor": 1, "legendFormat":
      "{{ destination_workload }}.{{ destination_workload_namespace }}", "refId":
      "C" }, { "expr": "label_join((histogram_quantile(0.99, sum(rate(istio_request_duration_milliseconds_bucket{reporter=\"source\"}[1m]))
      by (le, destination_workload, destination_workload_namespace)) / 1000) or histogram_quantile(0.99,
      sum(rate(istio_request_duration_seconds_bucket{reporter=\"source\"}[1m])) by
      (le, destination_workload, destination_workload_namespace)), \"destination_workload_var\",
      \".\", \"destination_workload\", \"destination_workload_namespace\")", "format":
      "table", "hide": false, "instant": true, "intervalFactor": 1, "legendFormat":
      "{{ destination_workload }}.{{ destination_workload_namespace }}", "refId":
      "D" }, { "expr": "label_join((sum(rate(istio_requests_total{reporter=\"source\",
      response_code!~\"5.*\"}[1m])) by (destination_workload, destination_workload_namespace)
      / sum(rate(istio_requests_total{reporter=\"source\"}[1m])) by (destination_workload,
      destination_workload_namespace)), \"destination_workload_var\", \".\", \"destination_workload\",
      \"destination_workload_namespace\")", "format": "table", "hide": false, "instant":
      true, "interval": "", "intervalFactor": 1, "legendFormat": "{{ destination_workload
      }}.{{ destination_workload_namespace }}", "refId": "E" } ], "timeFrom": null,
      "title": "HTTP/GRPC Workloads", "transform": "table", "type": "table" }, { "columns":
      [], "datasource": "Prometheus", "fontSize": "100%", "gridPos": { "h": 18, "w":
      24, "x": 0, "y": 30 }, "hideTimeOverride": false, "id": 109, "links": [], "pageSize":
      null, "repeatDirection": "v", "scroll": true, "showHeader": true, "sort": {
      "col": 5, "desc": true }, "styles": [ { "alias": "Workload", "colorMode": null,
      "colors": [ "rgba(245, 54, 54, 0.9)", "rgba(237, 129, 40, 0.89)", "rgba(50,
      172, 45, 0.97)" ], "dateFormat": "YYYY-MM-DD HH:mm:ss", "decimals": 2, "link":
      false, "linkTargetBlank": false, "linkTooltip": "$__cell dashboard", "linkUrl":
      "/dashboard/db/istio-workload-dashboard?var-namespace=${__cell_3:raw}&var-workload=${__cell_2:raw}",
      "pattern": "destination_workload", "preserveFormat": false, "sanitize": false,
      "thresholds": [], "type": "hidden", "unit": "short" }, { "alias": "Bytes Sent",
      "colorMode": null, "colors": [ "rgba(245, 54, 54, 0.9)", "rgba(237, 129, 40,
      0.89)", "rgba(50, 172, 45, 0.97)" ], "dateFormat": "YYYY-MM-DD HH:mm:ss", "decimals":
      2, "pattern": "Value #A", "thresholds": [ "" ], "type": "number", "unit": "Bps"
      }, { "alias": "Bytes Received", "colorMode": null, "colors": [ "rgba(245, 54,
      54, 0.9)", "rgba(237, 129, 40, 0.89)", "rgba(50, 172, 45, 0.97)" ], "dateFormat":
      "YYYY-MM-DD HH:mm:ss", "decimals": 2, "pattern": "Value #B", "thresholds": [],
      "type": "number", "unit": "Bps" }, { "alias": "", "colorMode": null, "colors":
      [ "rgba(245, 54, 54, 0.9)", "rgba(237, 129, 40, 0.89)", "rgba(50, 172, 45, 0.97)"
      ], "dateFormat": "YYYY-MM-DD HH:mm:ss", "decimals": 2, "pattern": "Time", "thresholds":
      [], "type": "hidden", "unit": "short" }, { "alias": "Workload", "colorMode":
      null, "colors": [ "rgba(245, 54, 54, 0.9)", "rgba(237, 129, 40, 0.89)", "rgba(50,
      172, 45, 0.97)" ], "dateFormat": "YYYY-MM-DD HH:mm:ss", "decimals": 2, "link":
      true, "linkTooltip": "$__cell dashboard", "linkUrl": "/dashboard/db/istio-workload-dashboard?var-namespace=${__cell_3:raw}&var-workload=${__cell_2:raw}",
      "pattern": "destination_workload_var", "thresholds": [], "type": "string", "unit":
      "short" }, { "alias": "", "colorMode": null, "colors": [ "rgba(245, 54, 54,
      0.9)", "rgba(237, 129, 40, 0.89)", "rgba(50, 172, 45, 0.97)" ], "dateFormat":
      "YYYY-MM-DD HH:mm:ss", "decimals": 2, "pattern": "destination_workload_namespace",
      "thresholds": [], "type": "hidden", "unit": "short" }, { "alias": "Service",
      "colorMode": null, "colors": [ "rgba(245, 54, 54, 0.9)", "rgba(237, 129, 40,
      0.89)", "rgba(50, 172, 45, 0.97)" ], "dateFormat": "YYYY-MM-DD HH:mm:ss", "decimals":
      2, "link": true, "linkTooltip": "$__cell dashboard", "linkUrl": "/dashboard/db/istio-service-dashboard?var-service=${__cell_1:raw}",
      "pattern": "destination_service", "thresholds": [], "type": "number", "unit":
      "short" } ], "targets": [ { "expr": "label_join(sum(rate(istio_tcp_received_bytes_total{reporter=\"source\"}[1m]))
      by (destination_workload, destination_workload_namespace, destination_service),
      \"destination_workload_var\", \".\", \"destination_workload\", \"destination_workload_namespace\")",
      "format": "table", "hide": false, "instant": true, "intervalFactor": 1, "legendFormat":
      "{{ destination_workload }}", "refId": "A" }, { "expr": "label_join(sum(rate(istio_tcp_sent_bytes_total{reporter=\"source\"}[1m]))
      by (destination_workload, destination_workload_namespace, destination_service),
      \"destination_workload_var\", \".\", \"destination_workload\", \"destination_workload_namespace\")",
      "format": "table", "hide": false, "instant": true, "intervalFactor": 1, "legendFormat":
      "{{ destination_workload }}", "refId": "B" } ], "timeFrom": null, "title": "TCP
      Workloads", "transform": "table", "type": "table" }, { "aliasColors": {}, "bars":
      false, "dashLength": 10, "dashes": false, "datasource": "Prometheus", "fill":
      1, "gridPos": { "h": 9, "w": 24, "x": 0, "y": 48 }, "id": 111, "legend": { "alignAsTable":
      false, "avg": false, "current": false, "max": false, "min": false, "rightSide":
      false, "show": true, "total": false, "values": false }, "lines": true, "linewidth":
      1, "links": [], "nullPointMode": "null", "percentage": false, "pointradius":
      5, "points": false, "renderer": "flot", "seriesOverrides": [], "spaceLength":
      10, "stack": false, "steppedLine": false, "targets": [ { "expr": "sum(istio_build)
      by (component, tag)", "format": "time_series", "intervalFactor": 1, "legendFormat":
      "{{ component }}: {{ tag }}", "refId": "A" } ], "thresholds": [], "timeFrom":
      null, "timeRegions": [], "timeShift": null, "title": "Istio Components by Version",
      "tooltip": { "shared": true, "sort": 0, "value_type": "individual" }, "type":
      "graph", "xaxis": { "buckets": null, "mode": "time", "name": null, "show": true,
      "values": [] }, "yaxes": [ { "format": "short", "label": null, "logBase": 1,
      "max": null, "min": null, "show": true }, { "format": "short", "label": null,
      "logBase": 1, "max": null, "min": null, "show": false } ], "yaxis": { "align":
      false, "alignLevel": null } } ], "refresh": "5s", "schemaVersion": 18, "style":
      "dark", "tags": [], "templating": { "list": [ { "current": { "selected": true,
      "text": "default", "value": "default" }, "hide": 0, "includeAll": false, "label":
      null, "multi": false, "name": "datasource", "options": [], "query": "prometheus",
      "queryValue": "", "refresh": 1, "regex": "", "skipUrlSync": false, "type": "datasource"
      } ] }, "time": { "from": "now-5m", "to": "now" }, "timepicker": { "refresh_intervals":
      [ "5s", "10s", "30s", "1m", "5m", "15m", "30m", "1h", "2h", "1d" ], "time_options":
      [ "5m", "15m", "1h", "6h", "12h", "24h", "2d", "7d", "30d" ] }, "timezone":
      "browser", "title": "Istio Mesh Dashboard", "uid": "G8wLrJIZk", "version": 5
      } '
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"istio-mesh-dashboard.json":"{ \"annotations\": { \"list\": [ { \"builtIn\": 1, \"datasource\": \"-- Grafana --\", \"enable\": true, \"hide\": true, \"iconColor\": \"rgba(0, 211, 255, 1)\", \"name\": \"Annotations \u0026 Alerts\", \"type\": \"dashboard\" } ] }, \"editable\": false, \"gnetId\": null, \"graphTooltip\": 0, \"id\": null, \"links\": [], \"panels\": [ { \"content\": \"\u003cdiv\u003e\\n  \u003cdiv style=\\\"position: absolute; bottom: 0\\\"\u003e\\n    \u003ca href=\\\"https://istio.io\\\" target=\\\"_blank\\\" style=\\\"font-size: 30px; text-decoration: none; color: inherit\\\"\u003e\u003cimg src=\\\"https://istio.io/latest/img/istio-bluelogo-nobackground-unframed.svg\\\" style=\\\"height: 50px\\\"\u003e Istio\u003c/a\u003e\\n  \u003c/div\u003e\\n  \u003cdiv style=\\\"position: absolute; bottom: 0; right: 0; font-size: 15px\\\"\u003e\\n    Istio is an \u003ca href=\\\"https://github.com/istio/istio\\\" target=\\\"_blank\\\"\u003eopen platform\u003c/a\u003e that provides a uniform way to connect,\\n    \u003ca href=\\\"https://istio.io/docs/concepts/traffic-management/overview.html\\\" target=\\\"_blank\\\"\u003emanage\u003c/a\u003e, and \\n    \u003ca href=\\\"https://istio.io/docs/concepts/network-and-auth/auth.html\\\" target=\\\"_blank\\\"\u003esecure\u003c/a\u003e microservices.\\n    \u003cbr\u003e\\n    Need help? Join the \u003ca href=\\\"https://istio.io/community/\\\" target=\\\"_blank\\\"\u003eIstio community\u003c/a\u003e.\\n  \u003c/div\u003e\\n\u003c/div\u003e\", \"gridPos\": { \"h\": 3, \"w\": 24, \"x\": 0, \"y\": 0 }, \"height\": \"50px\", \"id\": 13, \"links\": [], \"mode\": \"html\", \"style\": { \"font-size\": \"18pt\" }, \"title\": \"\", \"transparent\": true, \"type\": \"text\" }, { \"cacheTimeout\": null, \"colorBackground\": false, \"colorValue\": false, \"colors\": [ \"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\" ], \"datasource\": \"Prometheus\", \"format\": \"ops\", \"gauge\": { \"maxValue\": 100, \"minValue\": 0, \"show\": false, \"thresholdLabels\": false, \"thresholdMarkers\": true }, \"gridPos\": { \"h\": 3, \"w\": 6, \"x\": 0, \"y\": 3 }, \"id\": 20, \"interval\": null, \"links\": [], \"options\": { \"colorMode\": \"value\", \"graphMode\": \"area\", \"justifyMode\": \"auto\", \"orientation\": \"horizontal\", \"reduceOptions\": { \"calcs\": [ \"lastNotNull\" ], \"fields\": \"\", \"values\": false }, \"textMode\": \"auto\" }, \"mappingType\": 1, \"mappingTypes\": [ { \"name\": \"value to text\", \"value\": 1 }, { \"name\": \"range to text\", \"value\": 2 } ], \"maxDataPoints\": 100, \"nullPointMode\": \"connected\", \"nullText\": null, \"postfix\": \"\", \"postfixFontSize\": \"50%\", \"prefix\": \"\", \"prefixFontSize\": \"50%\", \"rangeMaps\": [ { \"from\": \"null\", \"text\": \"N/A\", \"to\": \"null\" } ], \"sparkline\": { \"fillColor\": \"rgba(31, 118, 189, 0.18)\", \"full\": true, \"lineColor\": \"rgb(31, 120, 193)\", \"show\": true }, \"tableColumn\": \"\", \"targets\": [ { \"expr\": \"round(sum(irate(istio_requests_total{reporter=\\\"source\\\"}[1m])), 0.001)\", \"intervalFactor\": 1, \"refId\": \"A\", \"step\": 4 } ], \"thresholds\": \"\", \"title\": \"Global Request Volume\", \"type\": \"singlestat\", \"valueFontSize\": \"80%\", \"valueMaps\": [ { \"op\": \"=\", \"text\": \"N/A\", \"value\": \"null\" } ], \"valueName\": \"avg\" }, { \"cacheTimeout\": null, \"colorBackground\": false, \"colorValue\": false, \"colors\": [ \"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\" ], \"datasource\": \"Prometheus\", \"format\": \"percentunit\", \"gauge\": { \"maxValue\": 100, \"minValue\": 80, \"show\": false, \"thresholdLabels\": false, \"thresholdMarkers\": false }, \"gridPos\": { \"h\": 3, \"w\": 6, \"x\": 6, \"y\": 3 }, \"id\": 21, \"interval\": null, \"links\": [], \"options\": { \"colorMode\": \"value\", \"graphMode\": \"area\", \"justifyMode\": \"auto\", \"orientation\": \"horizontal\", \"reduceOptions\": { \"calcs\": [ \"lastNotNull\" ], \"fields\": \"\", \"values\": false }, \"textMode\": \"auto\" }, \"mappingType\": 1, \"mappingTypes\": [ { \"name\": \"value to text\", \"value\": 1 }, { \"name\": \"range to text\", \"value\": 2 } ], \"maxDataPoints\": 100, \"nullPointMode\": \"connected\", \"nullText\": null, \"postfix\": \"\", \"postfixFontSize\": \"50%\", \"prefix\": \"\", \"prefixFontSize\": \"50%\", \"rangeMaps\": [ { \"from\": \"null\", \"text\": \"N/A\", \"to\": \"null\" } ], \"sparkline\": { \"fillColor\": \"rgba(31, 118, 189, 0.18)\", \"full\": true, \"lineColor\": \"rgb(31, 120, 193)\", \"show\": true }, \"tableColumn\": \"\", \"targets\": [ { \"expr\": \"sum(rate(istio_requests_total{reporter=\\\"source\\\", response_code!~\\\"5.*\\\"}[1m])) / sum(rate(istio_requests_total{reporter=\\\"source\\\"}[1m]))\", \"format\": \"time_series\", \"intervalFactor\": 1, \"refId\": \"A\", \"step\": 4 } ], \"thresholds\": \"95, 99, 99.5\", \"title\": \"Global Success Rate (non-5xx responses)\", \"type\": \"singlestat\", \"valueFontSize\": \"80%\", \"valueMaps\": [ { \"op\": \"=\", \"text\": \"N/A\", \"value\": \"null\" } ], \"valueName\": \"avg\" }, { \"cacheTimeout\": null, \"colorBackground\": false, \"colorValue\": false, \"colors\": [ \"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\" ], \"datasource\": \"Prometheus\", \"format\": \"ops\", \"gauge\": { \"maxValue\": 100, \"minValue\": 0, \"show\": false, \"thresholdLabels\": false, \"thresholdMarkers\": true }, \"gridPos\": { \"h\": 3, \"w\": 6, \"x\": 12, \"y\": 3 }, \"id\": 22, \"interval\": null, \"links\": [], \"options\": { \"colorMode\": \"value\", \"graphMode\": \"area\", \"justifyMode\": \"auto\", \"orientation\": \"horizontal\", \"reduceOptions\": { \"calcs\": [ \"lastNotNull\" ], \"fields\": \"\", \"values\": false }, \"textMode\": \"auto\" }, \"mappingType\": 1, \"mappingTypes\": [ { \"name\": \"value to text\", \"value\": 1 }, { \"name\": \"range to text\", \"value\": 2 } ], \"maxDataPoints\": 100, \"nullPointMode\": \"connected\", \"nullText\": null, \"postfix\": \"\", \"postfixFontSize\": \"50%\", \"prefix\": \"\", \"prefixFontSize\": \"50%\", \"rangeMaps\": [ { \"from\": \"null\", \"text\": \"N/A\", \"to\": \"null\" } ], \"sparkline\": { \"fillColor\": \"rgba(31, 118, 189, 0.18)\", \"full\": true, \"lineColor\": \"rgb(31, 120, 193)\", \"show\": true }, \"tableColumn\": \"\", \"targets\": [ { \"expr\": \"sum(irate(istio_requests_total{reporter=\\\"source\\\", response_code=~\\\"4.*\\\"}[1m]))\", \"format\": \"time_series\", \"intervalFactor\": 1, \"refId\": \"A\", \"step\": 4 } ], \"thresholds\": \"\", \"title\": \"4xxs\", \"type\": \"singlestat\", \"valueFontSize\": \"80%\", \"valueMaps\": [ { \"op\": \"=\", \"text\": \"N/A\", \"value\": \"null\" } ], \"valueName\": \"avg\" }, { \"cacheTimeout\": null, \"colorBackground\": false, \"colorValue\": false, \"colors\": [ \"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\" ], \"datasource\": \"Prometheus\", \"format\": \"ops\", \"gauge\": { \"maxValue\": 100, \"minValue\": 0, \"show\": false, \"thresholdLabels\": false, \"thresholdMarkers\": true }, \"gridPos\": { \"h\": 3, \"w\": 6, \"x\": 18, \"y\": 3 }, \"id\": 23, \"interval\": null, \"links\": [], \"options\": { \"colorMode\": \"value\", \"graphMode\": \"area\", \"justifyMode\": \"auto\", \"orientation\": \"horizontal\", \"reduceOptions\": { \"calcs\": [ \"lastNotNull\" ], \"fields\": \"\", \"values\": false }, \"textMode\": \"auto\" }, \"mappingType\": 1, \"mappingTypes\": [ { \"name\": \"value to text\", \"value\": 1 }, { \"name\": \"range to text\", \"value\": 2 } ], \"maxDataPoints\": 100, \"nullPointMode\": \"connected\", \"nullText\": null, \"postfix\": \"\", \"postfixFontSize\": \"50%\", \"prefix\": \"\", \"prefixFontSize\": \"50%\", \"rangeMaps\": [ { \"from\": \"null\", \"text\": \"N/A\", \"to\": \"null\" } ], \"sparkline\": { \"fillColor\": \"rgba(31, 118, 189, 0.18)\", \"full\": true, \"lineColor\": \"rgb(31, 120, 193)\", \"show\": true }, \"tableColumn\": \"\", \"targets\": [ { \"expr\": \"sum(irate(istio_requests_total{reporter=\\\"source\\\", response_code=~\\\"5.*\\\"}[1m]))\", \"format\": \"time_series\", \"intervalFactor\": 1, \"refId\": \"A\", \"step\": 4 } ], \"thresholds\": \"\", \"title\": \"5xxs\", \"type\": \"singlestat\", \"valueFontSize\": \"80%\", \"valueMaps\": [ { \"op\": \"=\", \"text\": \"N/A\", \"value\": \"null\" } ], \"valueName\": \"avg\" }, { \"cacheTimeout\": null, \"colorBackground\": false, \"colorValue\": false, \"colors\": [ \"#299c46\", \"rgba(237, 129, 40, 0.89)\", \"#d44a3a\" ], \"datasource\": \"Prometheus\", \"format\": \"none\", \"gauge\": { \"maxValue\": 100, \"minValue\": 0, \"show\": false, \"thresholdLabels\": false, \"thresholdMarkers\": true }, \"gridPos\": { \"h\": 3, \"w\": 6, \"x\": 0, \"y\": 6 }, \"id\": 113, \"interval\": null, \"links\": [], \"options\": { \"colorMode\": \"value\", \"graphMode\": \"area\", \"justifyMode\": \"auto\", \"orientation\": \"horizontal\", \"reduceOptions\": { \"calcs\": [ \"lastNotNull\" ], \"fields\": \"\", \"values\": false }, \"textMode\": \"auto\" }, \"mappingType\": 1, \"mappingTypes\": [ { \"name\": \"value to text\", \"value\": 1 }, { \"name\": \"range to text\", \"value\": 2 } ], \"maxDataPoints\": 100, \"nullPointMode\": \"connected\", \"nullText\": null, \"postfix\": \"\", \"postfixFontSize\": \"50%\", \"prefix\": \"\", \"prefixFontSize\": \"50%\", \"rangeMaps\": [ { \"from\": \"null\", \"text\": \"N/A\", \"to\": \"null\" } ], \"sparkline\": { \"fillColor\": \"rgba(31, 118, 189, 0.18)\", \"full\": false, \"lineColor\": \"rgb(31, 120, 193)\", \"show\": true }, \"tableColumn\": \"\", \"targets\": [ { \"expr\": \"max(pilot_k8s_cfg_events{type=\\\"VirtualService\\\", event=\\\"add\\\"}) - (max(pilot_k8s_cfg_events{type=\\\"VirtualService\\\", event=\\\"delete\\\"}) or max(up * 0))\", \"format\": \"time_series\", \"intervalFactor\": 1, \"refId\": \"A\" } ], \"thresholds\": \"\", \"timeFrom\": null, \"timeShift\": null, \"title\": \"Virtual Services\", \"type\": \"singlestat\", \"valueFontSize\": \"80%\", \"valueMaps\": [ { \"op\": \"=\", \"text\": \"N/A\", \"value\": \"null\" } ], \"valueName\": \"current\" }, { \"cacheTimeout\": null, \"colorBackground\": false, \"colorValue\": false, \"colors\": [ \"#299c46\", \"rgba(237, 129, 40, 0.89)\", \"#d44a3a\" ], \"datasource\": \"Prometheus\", \"format\": \"none\", \"gauge\": { \"maxValue\": 100, \"minValue\": 0, \"show\": false, \"thresholdLabels\": false, \"thresholdMarkers\": true }, \"gridPos\": { \"h\": 3, \"w\": 6, \"x\": 6, \"y\": 6 }, \"id\": 114, \"interval\": null, \"links\": [], \"options\": { \"colorMode\": \"value\", \"graphMode\": \"area\", \"justifyMode\": \"auto\", \"orientation\": \"horizontal\", \"reduceOptions\": { \"calcs\": [ \"lastNotNull\" ], \"fields\": \"\", \"values\": false }, \"textMode\": \"auto\" }, \"mappingType\": 1, \"mappingTypes\": [ { \"name\": \"value to text\", \"value\": 1 }, { \"name\": \"range to text\", \"value\": 2 } ], \"maxDataPoints\": 100, \"nullPointMode\": \"connected\", \"nullText\": null, \"postfix\": \"\", \"postfixFontSize\": \"50%\", \"prefix\": \"\", \"prefixFontSize\": \"50%\", \"rangeMaps\": [ { \"from\": \"null\", \"text\": \"N/A\", \"to\": \"null\" } ], \"sparkline\": { \"fillColor\": \"rgba(31, 118, 189, 0.18)\", \"full\": false, \"lineColor\": \"rgb(31, 120, 193)\", \"show\": true }, \"tableColumn\": \"\", \"targets\": [ { \"expr\": \"max(pilot_k8s_cfg_events{type=\\\"DestinationRule\\\", event=\\\"add\\\"}) - (max(pilot_k8s_cfg_events{type=\\\"DestinationRule\\\", event=\\\"delete\\\"}) or max(up * 0))\", \"format\": \"time_series\", \"intervalFactor\": 1, \"refId\": \"A\" } ], \"thresholds\": \"\", \"timeFrom\": null, \"timeShift\": null, \"title\": \"Destination Rules\", \"type\": \"singlestat\", \"valueFontSize\": \"80%\", \"valueMaps\": [ { \"op\": \"=\", \"text\": \"N/A\", \"value\": \"null\" } ], \"valueName\": \"current\" }, { \"cacheTimeout\": null, \"colorBackground\": false, \"colorValue\": false, \"colors\": [ \"#299c46\", \"rgba(237, 129, 40, 0.89)\", \"#d44a3a\" ], \"datasource\": \"Prometheus\", \"format\": \"none\", \"gauge\": { \"maxValue\": 100, \"minValue\": 0, \"show\": false, \"thresholdLabels\": false, \"thresholdMarkers\": true }, \"gridPos\": { \"h\": 3, \"w\": 6, \"x\": 12, \"y\": 6 }, \"id\": 115, \"interval\": null, \"links\": [], \"options\": { \"colorMode\": \"value\", \"graphMode\": \"area\", \"justifyMode\": \"auto\", \"orientation\": \"horizontal\", \"reduceOptions\": { \"calcs\": [ \"lastNotNull\" ], \"fields\": \"\", \"values\": false }, \"textMode\": \"auto\" }, \"mappingType\": 1, \"mappingTypes\": [ { \"name\": \"value to text\", \"value\": 1 }, { \"name\": \"range to text\", \"value\": 2 } ], \"maxDataPoints\": 100, \"nullPointMode\": \"connected\", \"nullText\": null, \"postfix\": \"\", \"postfixFontSize\": \"50%\", \"prefix\": \"\", \"prefixFontSize\": \"50%\", \"rangeMaps\": [ { \"from\": \"null\", \"text\": \"N/A\", \"to\": \"null\" } ], \"sparkline\": { \"fillColor\": \"rgba(31, 118, 189, 0.18)\", \"full\": false, \"lineColor\": \"rgb(31, 120, 193)\", \"show\": true }, \"tableColumn\": \"\", \"targets\": [ { \"expr\": \"max(pilot_k8s_cfg_events{type=\\\"Gateway\\\", event=\\\"add\\\"}) - (max(pilot_k8s_cfg_events{type=\\\"Gateway\\\", event=\\\"delete\\\"}) or max(up * 0))\", \"format\": \"time_series\", \"intervalFactor\": 1, \"refId\": \"A\" } ], \"thresholds\": \"\", \"timeFrom\": null, \"timeShift\": null, \"title\": \"Gateways\", \"type\": \"singlestat\", \"valueFontSize\": \"80%\", \"valueMaps\": [ { \"op\": \"=\", \"text\": \"N/A\", \"value\": \"null\" } ], \"valueName\": \"current\" }, { \"cacheTimeout\": null, \"colorBackground\": false, \"colorValue\": false, \"colors\": [ \"#299c46\", \"rgba(237, 129, 40, 0.89)\", \"#d44a3a\" ], \"datasource\": \"Prometheus\", \"format\": \"none\", \"gauge\": { \"maxValue\": 100, \"minValue\": 0, \"show\": false, \"thresholdLabels\": false, \"thresholdMarkers\": true }, \"gridPos\": { \"h\": 3, \"w\": 6, \"x\": 18, \"y\": 6 }, \"id\": 116, \"interval\": null, \"links\": [], \"options\": { \"colorMode\": \"value\", \"graphMode\": \"area\", \"justifyMode\": \"auto\", \"orientation\": \"horizontal\", \"reduceOptions\": { \"calcs\": [ \"lastNotNull\" ], \"fields\": \"\", \"values\": false }, \"textMode\": \"auto\" }, \"mappingType\": 1, \"mappingTypes\": [ { \"name\": \"value to text\", \"value\": 1 }, { \"name\": \"range to text\", \"value\": 2 } ], \"maxDataPoints\": 100, \"nullPointMode\": \"connected\", \"nullText\": null, \"postfix\": \"\", \"postfixFontSize\": \"50%\", \"prefix\": \"\", \"prefixFontSize\": \"50%\", \"rangeMaps\": [ { \"from\": \"null\", \"text\": \"N/A\", \"to\": \"null\" } ], \"sparkline\": { \"fillColor\": \"rgba(31, 118, 189, 0.18)\", \"full\": false, \"lineColor\": \"rgb(31, 120, 193)\", \"show\": true }, \"tableColumn\": \"\", \"targets\": [ { \"expr\": \"max(pilot_k8s_cfg_events{type=\\\"WorkloadEntry\\\", event=\\\"add\\\"}) - (max(pilot_k8s_cfg_events{type=\\\"WorkloadEntry\\\", event=\\\"delete\\\"}) or max(up * 0))\", \"format\": \"time_series\", \"intervalFactor\": 1, \"refId\": \"A\" } ], \"thresholds\": \"\", \"timeFrom\": null, \"timeShift\": null, \"title\": \"Workload Entries\", \"type\": \"singlestat\", \"valueFontSize\": \"80%\", \"valueMaps\": [ { \"op\": \"=\", \"text\": \"N/A\", \"value\": \"null\" } ], \"valueName\": \"current\" }, { \"cacheTimeout\": null, \"colorBackground\": false, \"colorValue\": false, \"colors\": [ \"#299c46\", \"rgba(237, 129, 40, 0.89)\", \"#d44a3a\" ], \"datasource\": \"Prometheus\", \"format\": \"none\", \"gauge\": { \"maxValue\": 100, \"minValue\": 0, \"show\": false, \"thresholdLabels\": false, \"thresholdMarkers\": true }, \"gridPos\": { \"h\": 3, \"w\": 6, \"x\": 0, \"y\": 6 }, \"id\": 117, \"interval\": null, \"links\": [], \"options\": { \"colorMode\": \"value\", \"graphMode\": \"area\", \"justifyMode\": \"auto\", \"orientation\": \"horizontal\", \"reduceOptions\": { \"calcs\": [ \"lastNotNull\" ], \"fields\": \"\", \"values\": false }, \"textMode\": \"auto\" }, \"mappingType\": 1, \"mappingTypes\": [ { \"name\": \"value to text\", \"value\": 1 }, { \"name\": \"range to text\", \"value\": 2 } ], \"maxDataPoints\": 100, \"nullPointMode\": \"connected\", \"nullText\": null, \"postfix\": \"\", \"postfixFontSize\": \"50%\", \"prefix\": \"\", \"prefixFontSize\": \"50%\", \"rangeMaps\": [ { \"from\": \"null\", \"text\": \"N/A\", \"to\": \"null\" } ], \"sparkline\": { \"fillColor\": \"rgba(31, 118, 189, 0.18)\", \"full\": false, \"lineColor\": \"rgb(31, 120, 193)\", \"show\": true }, \"tableColumn\": \"\", \"targets\": [ { \"expr\": \"max(pilot_k8s_cfg_events{type=\\\"ServiceEntry\\\", event=\\\"add\\\"}) - (max(pilot_k8s_cfg_events{type=\\\"ServiceEntry\\\", event=\\\"delete\\\"}) or max(up * 0))\", \"format\": \"time_series\", \"intervalFactor\": 1, \"refId\": \"A\" } ], \"thresholds\": \"\", \"timeFrom\": null, \"timeShift\": null, \"title\": \"Service Entries\", \"type\": \"singlestat\", \"valueFontSize\": \"80%\", \"valueMaps\": [ { \"op\": \"=\", \"text\": \"N/A\", \"value\": \"null\" } ], \"valueName\": \"current\" }, { \"cacheTimeout\": null, \"colorBackground\": false, \"colorValue\": false, \"colors\": [ \"#299c46\", \"rgba(237, 129, 40, 0.89)\", \"#d44a3a\" ], \"datasource\": \"Prometheus\", \"format\": \"none\", \"gauge\": { \"maxValue\": 100, \"minValue\": 0, \"show\": false, \"thresholdLabels\": false, \"thresholdMarkers\": true }, \"gridPos\": { \"h\": 3, \"w\": 6, \"x\": 6, \"y\": 6 }, \"id\": 90, \"interval\": null, \"links\": [], \"options\": { \"colorMode\": \"value\", \"graphMode\": \"area\", \"justifyMode\": \"auto\", \"orientation\": \"horizontal\", \"reduceOptions\": { \"calcs\": [ \"lastNotNull\" ], \"fields\": \"\", \"values\": false }, \"textMode\": \"auto\" }, \"mappingType\": 1, \"mappingTypes\": [ { \"name\": \"value to text\", \"value\": 1 }, { \"name\": \"range to text\", \"value\": 2 } ], \"maxDataPoints\": 100, \"nullPointMode\": \"connected\", \"nullText\": null, \"postfix\": \"\", \"postfixFontSize\": \"50%\", \"prefix\": \"\", \"prefixFontSize\": \"50%\", \"rangeMaps\": [ { \"from\": \"null\", \"text\": \"N/A\", \"to\": \"null\" } ], \"sparkline\": { \"fillColor\": \"rgba(31, 118, 189, 0.18)\", \"full\": false, \"lineColor\": \"rgb(31, 120, 193)\", \"show\": true }, \"tableColumn\": \"\", \"targets\": [ { \"expr\": \"max(pilot_k8s_cfg_events{type=\\\"PeerAuthentication\\\", event=\\\"add\\\"}) - (max(pilot_k8s_cfg_events{type=\\\"PeerAuthentication\\\", event=\\\"delete\\\"}) or max(up * 0))\", \"format\": \"time_series\", \"intervalFactor\": 1, \"refId\": \"A\" } ], \"thresholds\": \"\", \"timeFrom\": null, \"timeShift\": null, \"title\": \"PeerAuthentication Policies\", \"type\": \"singlestat\", \"valueFontSize\": \"80%\", \"valueMaps\": [ { \"op\": \"=\", \"text\": \"N/A\", \"value\": \"null\" } ], \"valueName\": \"current\" }, { \"cacheTimeout\": null, \"colorBackground\": false, \"colorValue\": false, \"colors\": [ \"#299c46\", \"rgba(237, 129, 40, 0.89)\", \"#d44a3a\" ], \"datasource\": \"Prometheus\", \"format\": \"none\", \"gauge\": { \"maxValue\": 100, \"minValue\": 0, \"show\": false, \"thresholdLabels\": false, \"thresholdMarkers\": true }, \"gridPos\": { \"h\": 3, \"w\": 6, \"x\": 12, \"y\": 6 }, \"id\": 91, \"interval\": null, \"links\": [], \"options\": { \"colorMode\": \"value\", \"graphMode\": \"area\", \"justifyMode\": \"auto\", \"orientation\": \"horizontal\", \"reduceOptions\": { \"calcs\": [ \"lastNotNull\" ], \"fields\": \"\", \"values\": false }, \"textMode\": \"auto\" }, \"mappingType\": 1, \"mappingTypes\": [ { \"name\": \"value to text\", \"value\": 1 }, { \"name\": \"range to text\", \"value\": 2 } ], \"maxDataPoints\": 100, \"nullPointMode\": \"connected\", \"nullText\": null, \"postfix\": \"\", \"postfixFontSize\": \"50%\", \"prefix\": \"\", \"prefixFontSize\": \"50%\", \"rangeMaps\": [ { \"from\": \"null\", \"text\": \"N/A\", \"to\": \"null\" } ], \"sparkline\": { \"fillColor\": \"rgba(31, 118, 189, 0.18)\", \"full\": false, \"lineColor\": \"rgb(31, 120, 193)\", \"show\": true }, \"tableColumn\": \"\", \"targets\": [ { \"expr\": \"max(pilot_k8s_cfg_events{type=\\\"RequestAuthentication\\\", event=\\\"add\\\"}) - (max(pilot_k8s_cfg_events{type=\\\"RequestAuthentication\\\", event=\\\"delete\\\"}) or max(up * 0))\", \"format\": \"time_series\", \"intervalFactor\": 1, \"refId\": \"A\" } ], \"thresholds\": \"\", \"timeFrom\": null, \"timeShift\": null, \"title\": \"RequestAuthentication Policies\", \"type\": \"singlestat\", \"valueFontSize\": \"80%\", \"valueMaps\": [ { \"op\": \"=\", \"text\": \"N/A\", \"value\": \"null\" } ], \"valueName\": \"current\" }, { \"cacheTimeout\": null, \"colorBackground\": false, \"colorValue\": false, \"colors\": [ \"#299c46\", \"rgba(237, 129, 40, 0.89)\", \"#d44a3a\" ], \"datasource\": \"Prometheus\", \"format\": \"none\", \"gauge\": { \"maxValue\": 100, \"minValue\": 0, \"show\": false, \"thresholdLabels\": false, \"thresholdMarkers\": true }, \"gridPos\": { \"h\": 3, \"w\": 6, \"x\": 18, \"y\": 6 }, \"id\": 92, \"interval\": null, \"links\": [], \"options\": { \"colorMode\": \"value\", \"graphMode\": \"area\", \"justifyMode\": \"auto\", \"orientation\": \"horizontal\", \"reduceOptions\": { \"calcs\": [ \"lastNotNull\" ], \"fields\": \"\", \"values\": false }, \"textMode\": \"auto\" }, \"mappingType\": 1, \"mappingTypes\": [ { \"name\": \"value to text\", \"value\": 1 }, { \"name\": \"range to text\", \"value\": 2 } ], \"maxDataPoints\": 100, \"nullPointMode\": \"connected\", \"nullText\": null, \"postfix\": \"\", \"postfixFontSize\": \"50%\", \"prefix\": \"\", \"prefixFontSize\": \"50%\", \"rangeMaps\": [ { \"from\": \"null\", \"text\": \"N/A\", \"to\": \"null\" } ], \"sparkline\": { \"fillColor\": \"rgba(31, 118, 189, 0.18)\", \"full\": false, \"lineColor\": \"rgb(31, 120, 193)\", \"show\": true }, \"tableColumn\": \"\", \"targets\": [ { \"expr\": \"max(pilot_k8s_cfg_events{type=\\\"AuthorizationPolicy\\\", event=\\\"add\\\"}) - (max(pilot_k8s_cfg_events{type=\\\"AuthorizationPolicy\\\", event=\\\"delete\\\"}) or max(up * 0))\", \"format\": \"time_series\", \"intervalFactor\": 1, \"refId\": \"A\" } ], \"thresholds\": \"\", \"timeFrom\": null, \"timeShift\": null, \"title\": \"Authorization Policies\", \"type\": \"singlestat\", \"valueFontSize\": \"80%\", \"valueMaps\": [ { \"op\": \"=\", \"text\": \"N/A\", \"value\": \"null\" } ], \"valueName\": \"current\" }, { \"columns\": [], \"datasource\": \"Prometheus\", \"fontSize\": \"100%\", \"gridPos\": { \"h\": 21, \"w\": 24, \"x\": 0, \"y\": 9 }, \"hideTimeOverride\": false, \"id\": 73, \"links\": [], \"pageSize\": null, \"repeat\": null, \"repeatDirection\": \"v\", \"scroll\": true, \"showHeader\": true, \"sort\": { \"col\": 5, \"desc\": true }, \"styles\": [ { \"alias\": \"Workload\", \"colorMode\": null, \"colors\": [ \"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\" ], \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\", \"decimals\": 2, \"link\": false, \"linkTargetBlank\": false, \"linkTooltip\": \"Workload dashboard\", \"linkUrl\": \"/dashboard/db/istio-workload-dashboard?var-namespace=${__cell_3:raw}\u0026var-workload=${__cell_2:raw}\", \"pattern\": \"destination_workload\", \"preserveFormat\": false, \"sanitize\": false, \"thresholds\": [], \"type\": \"hidden\", \"unit\": \"short\" }, { \"alias\": \"\", \"colorMode\": null, \"colors\": [ \"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\" ], \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\", \"decimals\": 2, \"pattern\": \"Time\", \"thresholds\": [], \"type\": \"hidden\", \"unit\": \"short\" }, { \"alias\": \"Requests\", \"colorMode\": null, \"colors\": [ \"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\" ], \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\", \"decimals\": 2, \"pattern\": \"Value #A\", \"thresholds\": [], \"type\": \"number\", \"unit\": \"ops\" }, { \"alias\": \"P50 Latency\", \"colorMode\": null, \"colors\": [ \"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\" ], \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\", \"decimals\": 2, \"pattern\": \"Value #B\", \"thresholds\": [], \"type\": \"number\", \"unit\": \"s\" }, { \"alias\": \"P90 Latency\", \"colorMode\": null, \"colors\": [ \"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\" ], \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\", \"decimals\": 2, \"pattern\": \"Value #C\", \"thresholds\": [], \"type\": \"number\", \"unit\": \"s\" }, { \"alias\": \"P99 Latency\", \"colorMode\": null, \"colors\": [ \"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\" ], \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\", \"decimals\": 2, \"pattern\": \"Value #D\", \"thresholds\": [], \"type\": \"number\", \"unit\": \"s\" }, { \"alias\": \"Success Rate\", \"colorMode\": \"cell\", \"colors\": [ \"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\" ], \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\", \"decimals\": 2, \"pattern\": \"Value #E\", \"thresholds\": [ \".95\", \" 1.00\" ], \"type\": \"number\", \"unit\": \"percentunit\" }, { \"alias\": \"Workload\", \"colorMode\": null, \"colors\": [ \"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\" ], \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\", \"decimals\": 2, \"link\": true, \"linkTooltip\": \"$__cell dashboard\", \"linkUrl\": \"/dashboard/db/istio-workload-dashboard?var-workload=${__cell_2:raw}\u0026var-namespace=${__cell_3:raw}\", \"pattern\": \"destination_workload_var\", \"thresholds\": [], \"type\": \"number\", \"unit\": \"short\" }, { \"alias\": \"Service\", \"colorMode\": null, \"colors\": [ \"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\" ], \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\", \"decimals\": 2, \"link\": true, \"linkTooltip\": \"$__cell dashboard\", \"linkUrl\": \"/dashboard/db/istio-service-dashboard?var-service=${__cell_1:raw}\", \"pattern\": \"destination_service\", \"thresholds\": [], \"type\": \"string\", \"unit\": \"short\" }, { \"alias\": \"\", \"colorMode\": null, \"colors\": [ \"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\" ], \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\", \"decimals\": 2, \"pattern\": \"destination_workload_namespace\", \"thresholds\": [], \"type\": \"hidden\", \"unit\": \"short\" } ], \"targets\": [ { \"expr\": \"label_join(sum(rate(istio_requests_total{reporter=\\\"source\\\", response_code=\\\"200\\\"}[1m])) by (destination_workload, destination_workload_namespace, destination_service), \\\"destination_workload_var\\\", \\\".\\\", \\\"destination_workload\\\", \\\"destination_workload_namespace\\\")\", \"format\": \"table\", \"hide\": false, \"instant\": true, \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_workload}}.{{ destination_workload_namespace }}\", \"refId\": \"A\" }, { \"expr\": \"label_join((histogram_quantile(0.50, sum(rate(istio_request_duration_milliseconds_bucket{reporter=\\\"source\\\"}[1m])) by (le, destination_workload, destination_workload_namespace)) / 1000) or histogram_quantile(0.50, sum(rate(istio_request_duration_seconds_bucket{reporter=\\\"source\\\"}[1m])) by (le, destination_workload, destination_workload_namespace)), \\\"destination_workload_var\\\", \\\".\\\", \\\"destination_workload\\\", \\\"destination_workload_namespace\\\")\", \"format\": \"table\", \"hide\": false, \"instant\": true, \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_workload}}.{{ destination_workload_namespace }}\", \"refId\": \"B\" }, { \"expr\": \"label_join((histogram_quantile(0.90, sum(rate(istio_request_duration_milliseconds_bucket{reporter=\\\"source\\\"}[1m])) by (le, destination_workload, destination_workload_namespace)) / 1000) or histogram_quantile(0.90, sum(rate(istio_request_duration_seconds_bucket{reporter=\\\"source\\\"}[1m])) by (le, destination_workload, destination_workload_namespace)), \\\"destination_workload_var\\\", \\\".\\\", \\\"destination_workload\\\", \\\"destination_workload_namespace\\\")\", \"format\": \"table\", \"hide\": false, \"instant\": true, \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_workload }}.{{ destination_workload_namespace }}\", \"refId\": \"C\" }, { \"expr\": \"label_join((histogram_quantile(0.99, sum(rate(istio_request_duration_milliseconds_bucket{reporter=\\\"source\\\"}[1m])) by (le, destination_workload, destination_workload_namespace)) / 1000) or histogram_quantile(0.99, sum(rate(istio_request_duration_seconds_bucket{reporter=\\\"source\\\"}[1m])) by (le, destination_workload, destination_workload_namespace)), \\\"destination_workload_var\\\", \\\".\\\", \\\"destination_workload\\\", \\\"destination_workload_namespace\\\")\", \"format\": \"table\", \"hide\": false, \"instant\": true, \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_workload }}.{{ destination_workload_namespace }}\", \"refId\": \"D\" }, { \"expr\": \"label_join((sum(rate(istio_requests_total{reporter=\\\"source\\\", response_code!~\\\"5.*\\\"}[1m])) by (destination_workload, destination_workload_namespace) / sum(rate(istio_requests_total{reporter=\\\"source\\\"}[1m])) by (destination_workload, destination_workload_namespace)), \\\"destination_workload_var\\\", \\\".\\\", \\\"destination_workload\\\", \\\"destination_workload_namespace\\\")\", \"format\": \"table\", \"hide\": false, \"instant\": true, \"interval\": \"\", \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_workload }}.{{ destination_workload_namespace }}\", \"refId\": \"E\" } ], \"timeFrom\": null, \"title\": \"HTTP/GRPC Workloads\", \"transform\": \"table\", \"type\": \"table\" }, { \"columns\": [], \"datasource\": \"Prometheus\", \"fontSize\": \"100%\", \"gridPos\": { \"h\": 18, \"w\": 24, \"x\": 0, \"y\": 30 }, \"hideTimeOverride\": false, \"id\": 109, \"links\": [], \"pageSize\": null, \"repeatDirection\": \"v\", \"scroll\": true, \"showHeader\": true, \"sort\": { \"col\": 5, \"desc\": true }, \"styles\": [ { \"alias\": \"Workload\", \"colorMode\": null, \"colors\": [ \"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\" ], \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\", \"decimals\": 2, \"link\": false, \"linkTargetBlank\": false, \"linkTooltip\": \"$__cell dashboard\", \"linkUrl\": \"/dashboard/db/istio-workload-dashboard?var-namespace=${__cell_3:raw}\u0026var-workload=${__cell_2:raw}\", \"pattern\": \"destination_workload\", \"preserveFormat\": false, \"sanitize\": false, \"thresholds\": [], \"type\": \"hidden\", \"unit\": \"short\" }, { \"alias\": \"Bytes Sent\", \"colorMode\": null, \"colors\": [ \"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\" ], \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\", \"decimals\": 2, \"pattern\": \"Value #A\", \"thresholds\": [ \"\" ], \"type\": \"number\", \"unit\": \"Bps\" }, { \"alias\": \"Bytes Received\", \"colorMode\": null, \"colors\": [ \"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\" ], \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\", \"decimals\": 2, \"pattern\": \"Value #B\", \"thresholds\": [], \"type\": \"number\", \"unit\": \"Bps\" }, { \"alias\": \"\", \"colorMode\": null, \"colors\": [ \"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\" ], \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\", \"decimals\": 2, \"pattern\": \"Time\", \"thresholds\": [], \"type\": \"hidden\", \"unit\": \"short\" }, { \"alias\": \"Workload\", \"colorMode\": null, \"colors\": [ \"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\" ], \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\", \"decimals\": 2, \"link\": true, \"linkTooltip\": \"$__cell dashboard\", \"linkUrl\": \"/dashboard/db/istio-workload-dashboard?var-namespace=${__cell_3:raw}\u0026var-workload=${__cell_2:raw}\", \"pattern\": \"destination_workload_var\", \"thresholds\": [], \"type\": \"string\", \"unit\": \"short\" }, { \"alias\": \"\", \"colorMode\": null, \"colors\": [ \"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\" ], \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\", \"decimals\": 2, \"pattern\": \"destination_workload_namespace\", \"thresholds\": [], \"type\": \"hidden\", \"unit\": \"short\" }, { \"alias\": \"Service\", \"colorMode\": null, \"colors\": [ \"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\" ], \"dateFormat\": \"YYYY-MM-DD HH:mm:ss\", \"decimals\": 2, \"link\": true, \"linkTooltip\": \"$__cell dashboard\", \"linkUrl\": \"/dashboard/db/istio-service-dashboard?var-service=${__cell_1:raw}\", \"pattern\": \"destination_service\", \"thresholds\": [], \"type\": \"number\", \"unit\": \"short\" } ], \"targets\": [ { \"expr\": \"label_join(sum(rate(istio_tcp_received_bytes_total{reporter=\\\"source\\\"}[1m])) by (destination_workload, destination_workload_namespace, destination_service), \\\"destination_workload_var\\\", \\\".\\\", \\\"destination_workload\\\", \\\"destination_workload_namespace\\\")\", \"format\": \"table\", \"hide\": false, \"instant\": true, \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_workload }}\", \"refId\": \"A\" }, { \"expr\": \"label_join(sum(rate(istio_tcp_sent_bytes_total{reporter=\\\"source\\\"}[1m])) by (destination_workload, destination_workload_namespace, destination_service), \\\"destination_workload_var\\\", \\\".\\\", \\\"destination_workload\\\", \\\"destination_workload_namespace\\\")\", \"format\": \"table\", \"hide\": false, \"instant\": true, \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_workload }}\", \"refId\": \"B\" } ], \"timeFrom\": null, \"title\": \"TCP Workloads\", \"transform\": \"table\", \"type\": \"table\" }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fill\": 1, \"gridPos\": { \"h\": 9, \"w\": 24, \"x\": 0, \"y\": 48 }, \"id\": 111, \"legend\": { \"alignAsTable\": false, \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"rightSide\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"sum(istio_build) by (component, tag)\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"{{ component }}: {{ tag }}\", \"refId\": \"A\" } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Istio Components by Version\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": false } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } } ], \"refresh\": \"5s\", \"schemaVersion\": 18, \"style\": \"dark\", \"tags\": [], \"templating\": { \"list\": [ { \"current\": { \"selected\": true, \"text\": \"default\", \"value\": \"default\" }, \"hide\": 0, \"includeAll\": false, \"label\": null, \"multi\": false, \"name\": \"datasource\", \"options\": [], \"query\": \"prometheus\", \"queryValue\": \"\", \"refresh\": 1, \"regex\": \"\", \"skipUrlSync\": false, \"type\": \"datasource\" } ] }, \"time\": { \"from\": \"now-5m\", \"to\": \"now\" }, \"timepicker\": { \"refresh_intervals\": [ \"5s\", \"10s\", \"30s\", \"1m\", \"5m\", \"15m\", \"30m\", \"1h\", \"2h\", \"1d\" ], \"time_options\": [ \"5m\", \"15m\", \"1h\", \"6h\", \"12h\", \"24h\", \"2d\", \"7d\", \"30d\" ] }, \"timezone\": \"browser\", \"title\": \"Istio Mesh Dashboard\", \"uid\": \"G8wLrJIZk\", \"version\": 5 } "},"kind":"ConfigMap","metadata":{"annotations":{"maistra.io/mesh-generation":"2.3.1-1-2"},"labels":{"app":"grafana","app.kubernetes.io/component":"grafana","app.kubernetes.io/instance":"istio-system","app.kubernetes.io/managed-by":"maistra-istio-operator","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"istio","app.kubernetes.io/version":"2.3.1-1-2","istio":"grafana","maistra-version":"2.1.6","maistra.io/owner":"istio-system","maistra.io/owner-name":"basic","release":"istio"},"name":"istio-grafana-configuration-dashboards-istio-mesh-dashboard","namespace":"istio-system","ownerReferences":[{"apiVersion":"maistra.io/v2","blockOwnerDeletion":true,"controller":true,"kind":"ServiceMeshControlPlane","name":"basic","uid":"0c79eb74-854c-4f98-85c6-5955e78fd93e"}]}}
      maistra.io/mesh-generation: 2.3.1-1-2
    creationTimestamp: "2023-03-03T20:03:20Z"
    labels:
      app: grafana
      app.kubernetes.io/component: grafana
      app.kubernetes.io/instance: istio-system
      app.kubernetes.io/managed-by: maistra-istio-operator
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: istio
      app.kubernetes.io/version: 2.3.1-1-2
      istio: grafana
      maistra-version: 2.1.6
      maistra.io/owner: istio-system
      maistra.io/owner-name: basic
      release: istio
    name: istio-grafana-configuration-dashboards-istio-mesh-dashboard
    namespace: istio-system
    ownerReferences:
    - apiVersion: maistra.io/v2
      blockOwnerDeletion: true
      controller: true
      kind: ServiceMeshControlPlane
      name: basic
      uid: 0c79eb74-854c-4f98-85c6-5955e78fd93e
    resourceVersion: "34879"
    uid: 667e13f6-3cf7-4e63-a069-43b32b1530fd
- apiVersion: v1
  data:
    istio-performance-dashboard.json: '{ "annotations": { "list": [ { "builtIn": 1,
      "datasource": "-- Grafana --", "enable": true, "hide": true, "iconColor": "rgba(0,
      211, 255, 1)", "name": "Annotations & Alerts", "type": "dashboard" } ] }, "editable":
      false, "gnetId": null, "graphTooltip": 0, "links": [], "panels": [ { "collapsed":
      true, "gridPos": { "h": 1, "w": 24, "x": 0, "y": 0 }, "id": 21, "panels": [
      { "content": "The charts on this dashboard are intended to show Istio main components
      cost in terms of resources utilization under steady load.\n\n- **vCPU / 1k rps:**
      shows vCPU utilization by the main Istio components normalized by 1000 requests/second.
      When idle or low traffic, this chart will be blank. The curve for istio-proxy
      refers to the services sidecars only.\n- **vCPU:** vCPU utilization by Istio
      components, not normalized.\n- **Memory:** memory footprint for the components.
      Telemetry and policy are normalized by 1k rps, and no data is shown  when there
      is no traffic. For ingress and istio-proxy, the data is per instance.\n- **Bytes
      transferred / sec:** shows the number of bytes flowing through each Istio component.\n\n\n",
      "gridPos": { "h": 6, "w": 24, "x": 0, "y": 1 }, "id": 19, "links": [], "mode":
      "markdown", "timeFrom": null, "timeShift": null, "title": "Performance Dashboard
      README", "transparent": true, "type": "text" } ], "title": "Performance Dashboard
      Notes", "type": "row" }, { "collapsed": false, "gridPos": { "h": 1, "w": 24,
      "x": 0, "y": 1 }, "id": 6, "panels": [], "title": "vCPU Usage", "type": "row"
      }, { "aliasColors": {}, "bars": false, "dashLength": 10, "dashes": false, "datasource":
      "Prometheus", "fill": 1, "gridPos": { "h": 8, "w": 12, "x": 0, "y": 2 }, "id":
      4, "legend": { "avg": false, "current": false, "max": false, "min": false, "show":
      true, "total": false, "values": false }, "lines": true, "linewidth": 1, "links":
      [], "nullPointMode": "null", "percentage": false, "pointradius": 2, "points":
      false, "renderer": "flot", "seriesOverrides": [], "spaceLength": 10, "stack":
      false, "steppedLine": false, "targets": [ { "expr": "(sum(irate(container_cpu_usage_seconds_total{pod=~\"istio-ingressgateway-.*\",container=\"istio-proxy\"}[1m]))
      / (round(sum(irate(istio_requests_total{source_workload=\"istio-ingressgateway\",
      reporter=\"source\"}[1m])), 0.001)/1000))", "format": "time_series", "hide":
      false, "intervalFactor": 1, "legendFormat": "istio-ingressgateway", "refId":
      "A" }, { "expr": "(sum(irate(container_cpu_usage_seconds_total{namespace!=\"istio-system\",container=\"istio-proxy\"}[1m]))/
      (round(sum(irate(istio_requests_total[1m])), 0.001)/1000))/ (sum(irate(istio_requests_total{source_workload=\"istio-ingressgateway\"}[1m]))
      >bool 10)", "format": "time_series", "intervalFactor": 1, "legendFormat": "istio-proxy",
      "refId": "B" } ], "thresholds": [], "timeFrom": null, "timeRegions": [], "timeShift":
      null, "title": "vCPU / 1k rps", "tooltip": { "shared": true, "sort": 0, "value_type":
      "individual" }, "type": "graph", "xaxis": { "buckets": null, "mode": "time",
      "name": null, "show": true, "values": [] }, "yaxes": [ { "format": "short",
      "label": null, "logBase": 1, "max": null, "min": null, "show": true }, { "format":
      "short", "label": null, "logBase": 1, "max": null, "min": null, "show": true
      } ], "yaxis": { "align": false, "alignLevel": null } }, { "aliasColors": {},
      "bars": false, "dashLength": 10, "dashes": false, "datasource": "Prometheus",
      "fill": 1, "gridPos": { "h": 8, "w": 12, "x": 12, "y": 2 }, "id": 7, "legend":
      { "avg": false, "current": false, "max": false, "min": false, "show": true,
      "total": false, "values": false }, "lines": true, "linewidth": 1, "links": [],
      "nullPointMode": "null", "percentage": false, "pointradius": 2, "points": false,
      "renderer": "flot", "seriesOverrides": [], "spaceLength": 10, "stack": false,
      "steppedLine": false, "targets": [ { "expr": "sum(rate(container_cpu_usage_seconds_total{pod=~\"istio-ingressgateway-.*\",container=\"istio-proxy\"}[1m]))",
      "format": "time_series", "intervalFactor": 1, "legendFormat": "istio-ingressgateway",
      "refId": "A" }, { "expr": "sum(rate(container_cpu_usage_seconds_total{namespace!=\"istio-system\",container=\"istio-proxy\"}[1m]))",
      "format": "time_series", "intervalFactor": 1, "legendFormat": "istio-proxy",
      "refId": "B" } ], "thresholds": [], "timeFrom": null, "timeRegions": [], "timeShift":
      null, "title": "vCPU", "tooltip": { "shared": true, "sort": 0, "value_type":
      "individual" }, "type": "graph", "xaxis": { "buckets": null, "mode": "time",
      "name": null, "show": true, "values": [] }, "yaxes": [ { "format": "short",
      "label": null, "logBase": 1, "max": null, "min": null, "show": true }, { "format":
      "short", "label": null, "logBase": 1, "max": null, "min": null, "show": true
      } ], "yaxis": { "align": false, "alignLevel": null } }, { "collapsed": false,
      "gridPos": { "h": 1, "w": 24, "x": 0, "y": 10 }, "id": 13, "panels": [], "title":
      "Memory and Data Rates", "type": "row" }, { "aliasColors": {}, "bars": false,
      "dashLength": 10, "dashes": false, "datasource": "Prometheus", "fill": 1, "gridPos":
      { "h": 8, "w": 12, "x": 0, "y": 11 }, "id": 902, "legend": { "avg": false, "current":
      false, "max": false, "min": false, "show": true, "total": false, "values": false
      }, "lines": true, "linewidth": 1, "links": [], "nullPointMode": "null", "percentage":
      false, "pointradius": 2, "points": false, "renderer": "flot", "seriesOverrides":
      [], "spaceLength": 10, "stack": false, "steppedLine": false, "targets": [ {
      "expr": "sum(container_memory_working_set_bytes{pod=~\"istio-ingressgateway-.*\"})
      / count(container_memory_working_set_bytes{pod=~\"istio-ingressgateway-.*\",container!=\"POD\"})",
      "format": "time_series", "intervalFactor": 1, "legendFormat": "per istio-ingressgateway",
      "refId": "A" }, { "expr": "sum(container_memory_working_set_bytes{namespace!=\"istio-system\",container=\"istio-proxy\"})
      / count(container_memory_working_set_bytes{namespace!=\"istio-system\",container=\"istio-proxy\"})",
      "format": "time_series", "intervalFactor": 1, "legendFormat": "per istio proxy",
      "refId": "B" } ], "thresholds": [], "timeFrom": null, "timeRegions": [], "timeShift":
      null, "title": "Memory Usage", "tooltip": { "shared": true, "sort": 0, "value_type":
      "individual" }, "type": "graph", "xaxis": { "buckets": null, "mode": "time",
      "name": null, "show": true, "values": [] }, "yaxes": [ { "format": "bytes",
      "label": null, "logBase": 1, "max": null, "min": null, "show": true }, { "format":
      "short", "label": null, "logBase": 1, "max": null, "min": null, "show": true
      } ], "yaxis": { "align": false, "alignLevel": null } }, { "aliasColors": {},
      "bars": false, "dashLength": 10, "dashes": false, "datasource": "Prometheus",
      "fill": 1, "gridPos": { "h": 8, "w": 12, "x": 12, "y": 11 }, "id": 11, "legend":
      { "avg": false, "current": false, "max": false, "min": false, "show": true,
      "total": false, "values": false }, "lines": true, "linewidth": 1, "links": [],
      "nullPointMode": "null", "percentage": false, "pointradius": 2, "points": false,
      "renderer": "flot", "seriesOverrides": [], "spaceLength": 10, "stack": false,
      "steppedLine": false, "targets": [ { "expr": "sum(irate(istio_response_bytes_sum{source_workload=\"istio-ingressgateway\",
      reporter=\"source\"}[1m]))", "format": "time_series", "intervalFactor": 1, "legendFormat":
      "istio-ingressgateway", "refId": "A" }, { "expr": "sum(irate(istio_response_bytes_sum{source_workload_namespace!=\"istio-system\",
      reporter=\"source\"}[1m])) + sum(irate(istio_request_bytes_sum{source_workload_namespace!=\"istio-system\",
      reporter=\"source\"}[1m]))", "format": "time_series", "intervalFactor": 1, "legendFormat":
      "istio-proxy", "refId": "B" } ], "thresholds": [], "timeFrom": null, "timeRegions":
      [], "timeShift": null, "title": "Bytes transferred / sec", "tooltip": { "shared":
      true, "sort": 0, "value_type": "individual" }, "type": "graph", "xaxis": { "buckets":
      null, "mode": "time", "name": null, "show": true, "values": [] }, "yaxes": [
      { "format": "Bps", "label": null, "logBase": 1, "max": null, "min": null, "show":
      true }, { "format": "short", "label": null, "logBase": 1, "max": null, "min":
      null, "show": true } ], "yaxis": { "align": false, "alignLevel": null } }, {
      "collapsed": false, "gridPos": { "h": 1, "w": 24, "x": 0, "y": 19 }, "id": 17,
      "panels": [], "title": "Istio Component Versions", "type": "row" }, { "aliasColors":
      {}, "bars": false, "dashLength": 10, "dashes": false, "datasource": "Prometheus",
      "fill": 1, "gridPos": { "h": 8, "w": 24, "x": 0, "y": 20 }, "id": 15, "legend":
      { "avg": false, "current": false, "max": false, "min": false, "show": true,
      "total": false, "values": false }, "lines": true, "linewidth": 1, "links": [],
      "nullPointMode": "null", "percentage": false, "pointradius": 2, "points": false,
      "renderer": "flot", "seriesOverrides": [], "spaceLength": 10, "stack": false,
      "steppedLine": false, "targets": [ { "expr": "sum(istio_build) by (component,
      tag)", "format": "time_series", "intervalFactor": 1, "legendFormat": "{{ component
      }}: {{ tag }}", "refId": "A" } ], "thresholds": [], "timeFrom": null, "timeRegions":
      [], "timeShift": null, "title": "Istio Components by Version", "tooltip": {
      "shared": true, "sort": 0, "value_type": "individual" }, "type": "graph", "xaxis":
      { "buckets": null, "mode": "time", "name": null, "show": true, "values": []
      }, "yaxes": [ { "format": "short", "label": null, "logBase": 1, "max": null,
      "min": null, "show": true }, { "format": "short", "label": null, "logBase":
      1, "max": null, "min": null, "show": true } ], "yaxis": { "align": false, "alignLevel":
      null } }, { "collapsed": false, "gridPos": { "h": 1, "w": 24, "x": 0, "y": 31
      }, "id": 71, "panels": [], "title": "Proxy Resource Usage", "type": "row" },
      { "aliasColors": {}, "bars": false, "dashLength": 10, "dashes": false, "datasource":
      "Prometheus", "fill": 1, "gridPos": { "h": 7, "w": 6, "x": 0, "y": 32 }, "id":
      72, "legend": { "avg": false, "current": false, "max": false, "min": false,
      "show": true, "total": false, "values": false }, "lines": true, "linewidth":
      1, "links": [], "nullPointMode": "null", "percentage": false, "pointradius":
      5, "points": false, "renderer": "flot", "seriesOverrides": [], "spaceLength":
      10, "stack": false, "steppedLine": false, "targets": [ { "expr": "sum(container_memory_working_set_bytes{container=\"istio-proxy\"})",
      "format": "time_series", "hide": false, "intervalFactor": 2, "legendFormat":
      "Total (k8s)", "refId": "A", "step": 2 } ], "thresholds": [], "timeFrom": null,
      "timeRegions": [], "timeShift": null, "title": "Memory", "tooltip": { "shared":
      true, "sort": 0, "value_type": "individual" }, "type": "graph", "xaxis": { "buckets":
      null, "mode": "time", "name": null, "show": true, "values": [] }, "yaxes": [
      { "format": "bytes", "label": null, "logBase": 1, "max": null, "min": null,
      "show": true }, { "format": "short", "label": null, "logBase": 1, "max": null,
      "min": null, "show": false } ], "yaxis": { "align": false, "alignLevel": null
      } }, { "aliasColors": {}, "bars": false, "dashLength": 10, "dashes": false,
      "datasource": "Prometheus", "fill": 1, "gridPos": { "h": 7, "w": 6, "x": 6,
      "y": 32 }, "id": 73, "legend": { "avg": false, "current": false, "max": false,
      "min": false, "show": true, "total": false, "values": false }, "lines": true,
      "linewidth": 1, "links": [], "nullPointMode": "null", "percentage": false, "pointradius":
      5, "points": false, "renderer": "flot", "seriesOverrides": [], "spaceLength":
      10, "stack": false, "steppedLine": false, "targets": [ { "expr": "sum(rate(container_cpu_usage_seconds_total{container=\"istio-proxy\"}[1m]))",
      "format": "time_series", "hide": false, "intervalFactor": 2, "legendFormat":
      "Total (k8s)", "refId": "A", "step": 2 } ], "thresholds": [], "timeFrom": null,
      "timeRegions": [], "timeShift": null, "title": "vCPU", "tooltip": { "shared":
      true, "sort": 0, "value_type": "individual" }, "type": "graph", "xaxis": { "buckets":
      null, "mode": "time", "name": null, "show": true, "values": [] }, "yaxes": [
      { "format": "short", "label": null, "logBase": 1, "max": null, "min": null,
      "show": true }, { "format": "short", "label": null, "logBase": 1, "max": null,
      "min": null, "show": true } ], "yaxis": { "align": false, "alignLevel": null
      } }, { "aliasColors": {}, "bars": false, "dashLength": 10, "dashes": false,
      "datasource": "Prometheus", "fill": 1, "gridPos": { "h": 7, "w": 6, "x": 12,
      "y": 32 }, "id": 702, "legend": { "avg": false, "current": false, "max": false,
      "min": false, "show": true, "total": false, "values": false }, "lines": true,
      "linewidth": 1, "links": [], "nullPointMode": "null", "percentage": false, "pointradius":
      5, "points": false, "renderer": "flot", "seriesOverrides": [], "spaceLength":
      10, "stack": false, "steppedLine": false, "targets": [ { "expr": "sum(container_fs_usage_bytes{container=\"istio-proxy\"})",
      "format": "time_series", "intervalFactor": 2, "legendFormat": "Total (k8s)",
      "refId": "A", "step": 2 } ], "thresholds": [], "timeFrom": null, "timeRegions":
      [], "timeShift": null, "title": "Disk", "tooltip": { "shared": true, "sort":
      0, "value_type": "individual" }, "type": "graph", "xaxis": { "buckets": null,
      "mode": "time", "name": null, "show": true, "values": [] }, "yaxes": [ { "format":
      "bytes", "label": "", "logBase": 1, "max": null, "min": null, "show": true },
      { "decimals": null, "format": "none", "label": "", "logBase": 1024, "max": null,
      "min": null, "show": false } ], "yaxis": { "align": false, "alignLevel": null
      } }, { "collapsed": false, "gridPos": { "h": 1, "w": 24, "x": 0, "y": 39 },
      "id": 69, "panels": [], "title": "Istiod Resource Usage", "type": "row" }, {
      "aliasColors": {}, "bars": false, "dashLength": 10, "dashes": false, "datasource":
      "Prometheus", "fill": 1, "gridPos": { "h": 7, "w": 6, "x": 0, "y": 40 }, "id":
      5, "legend": { "avg": false, "current": false, "max": false, "min": false, "show":
      true, "total": false, "values": false }, "lines": true, "linewidth": 1, "links":
      [], "nullPointMode": "null", "percentage": false, "pointradius": 5, "points":
      false, "renderer": "flot", "seriesOverrides": [], "spaceLength": 10, "stack":
      false, "steppedLine": false, "targets": [ { "expr": "process_virtual_memory_bytes{app=\"istiod\"}",
      "format": "time_series", "instant": false, "intervalFactor": 2, "legendFormat":
      "Virtual Memory", "refId": "I", "step": 2 }, { "expr": "process_resident_memory_bytes{app=\"istiod\"}",
      "format": "time_series", "intervalFactor": 2, "legendFormat": "Resident Memory",
      "refId": "H", "step": 2 }, { "expr": "go_memstats_heap_sys_bytes{app=\"istiod\"}",
      "format": "time_series", "hide": true, "intervalFactor": 2, "legendFormat":
      "heap sys", "refId": "A" }, { "expr": "go_memstats_heap_alloc_bytes{app=\"istiod\"}",
      "format": "time_series", "hide": true, "intervalFactor": 2, "legendFormat":
      "heap alloc", "refId": "D" }, { "expr": "go_memstats_alloc_bytes{app=\"istiod\"}",
      "format": "time_series", "intervalFactor": 2, "legendFormat": "Alloc", "refId":
      "F", "step": 2 }, { "expr": "go_memstats_heap_inuse_bytes{app=\"istiod\"}",
      "format": "time_series", "hide": false, "intervalFactor": 2, "legendFormat":
      "Heap in-use", "refId": "E", "step": 2 }, { "expr": "go_memstats_stack_inuse_bytes{app=\"istiod\"}",
      "format": "time_series", "intervalFactor": 2, "legendFormat": "Stack in-use",
      "refId": "G", "step": 2 }, { "expr": "sum(container_memory_working_set_bytes{container=~\"discovery|istio-proxy\",
      pod=~\"istiod-.*\"})", "format": "time_series", "hide": false, "intervalFactor":
      2, "legendFormat": "Total (k8s)", "refId": "C", "step": 2 }, { "expr": "container_memory_working_set_bytes{container=~\"discovery|istio-proxy\",
      pod=~\"istiod-.*\"}", "format": "time_series", "hide": false, "intervalFactor":
      2, "legendFormat": "{{ container }} (k8s)", "refId": "B", "step": 2 } ], "thresholds":
      [], "timeFrom": null, "timeRegions": [], "timeShift": null, "title": "Memory",
      "tooltip": { "shared": true, "sort": 0, "value_type": "individual" }, "type":
      "graph", "xaxis": { "buckets": null, "mode": "time", "name": null, "show": true,
      "values": [] }, "yaxes": [ { "format": "bytes", "label": null, "logBase": 1,
      "max": null, "min": null, "show": true }, { "format": "short", "label": null,
      "logBase": 1, "max": null, "min": null, "show": false } ], "yaxis": { "align":
      false, "alignLevel": null } }, { "aliasColors": {}, "bars": false, "dashLength":
      10, "dashes": false, "datasource": "Prometheus", "fill": 1, "gridPos": { "h":
      7, "w": 6, "x": 6, "y": 40 }, "id": 602, "legend": { "avg": false, "current":
      false, "max": false, "min": false, "show": true, "total": false, "values": false
      }, "lines": true, "linewidth": 1, "links": [], "nullPointMode": "null", "percentage":
      false, "pointradius": 5, "points": false, "renderer": "flot", "seriesOverrides":
      [], "spaceLength": 10, "stack": false, "steppedLine": false, "targets": [ {
      "expr": "sum(rate(container_cpu_usage_seconds_total{container=~\"discovery|istio-proxy\",
      pod=~\"istiod-.*\"}[1m]))", "format": "time_series", "hide": false, "intervalFactor":
      2, "legendFormat": "Total (k8s)", "refId": "A", "step": 2 }, { "expr": "sum(rate(container_cpu_usage_seconds_total{container=~\"discovery|istio-proxy\",
      pod=~\"istiod-.*\"}[1m])) by (container)", "format": "time_series", "hide":
      false, "intervalFactor": 2, "legendFormat": "{{ container }} (k8s)", "refId":
      "B", "step": 2 }, { "expr": "irate(process_cpu_seconds_total{app=\"istiod\"}[1m])",
      "format": "time_series", "hide": false, "intervalFactor": 2, "legendFormat":
      "pilot (self-reported)", "refId": "C", "step": 2 } ], "thresholds": [], "timeFrom":
      null, "timeRegions": [], "timeShift": null, "title": "vCPU", "tooltip": { "shared":
      true, "sort": 0, "value_type": "individual" }, "type": "graph", "xaxis": { "buckets":
      null, "mode": "time", "name": null, "show": true, "values": [] }, "yaxes": [
      { "format": "short", "label": null, "logBase": 1, "max": null, "min": null,
      "show": true }, { "format": "short", "label": null, "logBase": 1, "max": null,
      "min": null, "show": true } ], "yaxis": { "align": false, "alignLevel": null
      } }, { "aliasColors": {}, "bars": false, "dashLength": 10, "dashes": false,
      "datasource": "Prometheus", "fill": 1, "gridPos": { "h": 7, "w": 6, "x": 12,
      "y": 40 }, "id": 74, "legend": { "avg": false, "current": false, "max": false,
      "min": false, "show": true, "total": false, "values": false }, "lines": true,
      "linewidth": 1, "links": [], "nullPointMode": "null", "percentage": false, "pointradius":
      5, "points": false, "renderer": "flot", "seriesOverrides": [], "spaceLength":
      10, "stack": false, "steppedLine": false, "targets": [ { "expr": "process_open_fds{app=\"istiod\"}",
      "format": "time_series", "hide": true, "instant": false, "interval": "", "intervalFactor":
      2, "legendFormat": "Open FDs (pilot)", "refId": "A" }, { "expr": "container_fs_usage_bytes{
      container=~\"discovery|istio-proxy\", pod=~\"istiod-.*\"}", "format": "time_series",
      "intervalFactor": 2, "legendFormat": "{{ container }}", "refId": "B", "step":
      2 } ], "thresholds": [], "timeFrom": null, "timeRegions": [], "timeShift": null,
      "title": "Disk", "tooltip": { "shared": true, "sort": 0, "value_type": "individual"
      }, "type": "graph", "xaxis": { "buckets": null, "mode": "time", "name": null,
      "show": true, "values": [] }, "yaxes": [ { "format": "bytes", "label": "", "logBase":
      1, "max": null, "min": null, "show": true }, { "decimals": null, "format": "none",
      "label": "", "logBase": 1024, "max": null, "min": null, "show": false } ], "yaxis":
      { "align": false, "alignLevel": null } }, { "aliasColors": {}, "bars": false,
      "dashLength": 10, "dashes": false, "datasource": "Prometheus", "fill": 1, "gridPos":
      { "h": 7, "w": 6, "x": 18, "y": 40 }, "id": 402, "legend": { "avg": false, "current":
      false, "max": false, "min": false, "show": false, "total": false, "values":
      false }, "lines": true, "linewidth": 1, "links": [], "nullPointMode": "null",
      "percentage": false, "pointradius": 5, "points": false, "renderer": "flot",
      "seriesOverrides": [], "spaceLength": 10, "stack": false, "steppedLine": false,
      "targets": [ { "expr": "go_goroutines{app=\"istiod\"}", "format": "time_series",
      "intervalFactor": 2, "legendFormat": "Number of Goroutines", "refId": "A", "step":
      2 } ], "thresholds": [], "timeFrom": null, "timeRegions": [], "timeShift": null,
      "title": "Goroutines", "tooltip": { "shared": true, "sort": 0, "value_type":
      "individual" }, "type": "graph", "xaxis": { "buckets": null, "mode": "time",
      "name": null, "show": true, "values": [] }, "yaxes": [ { "format": "short",
      "label": "", "logBase": 1, "max": null, "min": null, "show": true }, { "format":
      "short", "label": null, "logBase": 1, "max": null, "min": null, "show": true
      } ], "yaxis": { "align": false, "alignLevel": null } } ], "refresh": "10s",
      "schemaVersion": 18, "style": "dark", "tags": [], "templating": { "list": []
      }, "time": { "from": "now-5m", "to": "now" }, "timepicker": { "refresh_intervals":
      [ "5s", "10s", "30s", "1m", "5m", "15m", "30m", "1h", "2h", "1d" ], "time_options":
      [ "5m", "15m", "1h", "6h", "12h", "24h", "2d", "7d", "30d" ] }, "timezone":
      "", "title": "Istio Performance Dashboard", "uid": "vu8e0VWZk", "version": 22
      } '
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"istio-performance-dashboard.json":"{ \"annotations\": { \"list\": [ { \"builtIn\": 1, \"datasource\": \"-- Grafana --\", \"enable\": true, \"hide\": true, \"iconColor\": \"rgba(0, 211, 255, 1)\", \"name\": \"Annotations \u0026 Alerts\", \"type\": \"dashboard\" } ] }, \"editable\": false, \"gnetId\": null, \"graphTooltip\": 0, \"links\": [], \"panels\": [ { \"collapsed\": true, \"gridPos\": { \"h\": 1, \"w\": 24, \"x\": 0, \"y\": 0 }, \"id\": 21, \"panels\": [ { \"content\": \"The charts on this dashboard are intended to show Istio main components cost in terms of resources utilization under steady load.\\n\\n- **vCPU / 1k rps:** shows vCPU utilization by the main Istio components normalized by 1000 requests/second. When idle or low traffic, this chart will be blank. The curve for istio-proxy refers to the services sidecars only.\\n- **vCPU:** vCPU utilization by Istio components, not normalized.\\n- **Memory:** memory footprint for the components. Telemetry and policy are normalized by 1k rps, and no data is shown  when there is no traffic. For ingress and istio-proxy, the data is per instance.\\n- **Bytes transferred / sec:** shows the number of bytes flowing through each Istio component.\\n\\n\\n\", \"gridPos\": { \"h\": 6, \"w\": 24, \"x\": 0, \"y\": 1 }, \"id\": 19, \"links\": [], \"mode\": \"markdown\", \"timeFrom\": null, \"timeShift\": null, \"title\": \"Performance Dashboard README\", \"transparent\": true, \"type\": \"text\" } ], \"title\": \"Performance Dashboard Notes\", \"type\": \"row\" }, { \"collapsed\": false, \"gridPos\": { \"h\": 1, \"w\": 24, \"x\": 0, \"y\": 1 }, \"id\": 6, \"panels\": [], \"title\": \"vCPU Usage\", \"type\": \"row\" }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fill\": 1, \"gridPos\": { \"h\": 8, \"w\": 12, \"x\": 0, \"y\": 2 }, \"id\": 4, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pointradius\": 2, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"(sum(irate(container_cpu_usage_seconds_total{pod=~\\\"istio-ingressgateway-.*\\\",container=\\\"istio-proxy\\\"}[1m])) / (round(sum(irate(istio_requests_total{source_workload=\\\"istio-ingressgateway\\\", reporter=\\\"source\\\"}[1m])), 0.001)/1000))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"istio-ingressgateway\", \"refId\": \"A\" }, { \"expr\": \"(sum(irate(container_cpu_usage_seconds_total{namespace!=\\\"istio-system\\\",container=\\\"istio-proxy\\\"}[1m]))/ (round(sum(irate(istio_requests_total[1m])), 0.001)/1000))/ (sum(irate(istio_requests_total{source_workload=\\\"istio-ingressgateway\\\"}[1m])) \u003ebool 10)\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"istio-proxy\", \"refId\": \"B\" } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"vCPU / 1k rps\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fill\": 1, \"gridPos\": { \"h\": 8, \"w\": 12, \"x\": 12, \"y\": 2 }, \"id\": 7, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pointradius\": 2, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"sum(rate(container_cpu_usage_seconds_total{pod=~\\\"istio-ingressgateway-.*\\\",container=\\\"istio-proxy\\\"}[1m]))\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"istio-ingressgateway\", \"refId\": \"A\" }, { \"expr\": \"sum(rate(container_cpu_usage_seconds_total{namespace!=\\\"istio-system\\\",container=\\\"istio-proxy\\\"}[1m]))\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"istio-proxy\", \"refId\": \"B\" } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"vCPU\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"collapsed\": false, \"gridPos\": { \"h\": 1, \"w\": 24, \"x\": 0, \"y\": 10 }, \"id\": 13, \"panels\": [], \"title\": \"Memory and Data Rates\", \"type\": \"row\" }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fill\": 1, \"gridPos\": { \"h\": 8, \"w\": 12, \"x\": 0, \"y\": 11 }, \"id\": 902, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pointradius\": 2, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"sum(container_memory_working_set_bytes{pod=~\\\"istio-ingressgateway-.*\\\"}) / count(container_memory_working_set_bytes{pod=~\\\"istio-ingressgateway-.*\\\",container!=\\\"POD\\\"})\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"per istio-ingressgateway\", \"refId\": \"A\" }, { \"expr\": \"sum(container_memory_working_set_bytes{namespace!=\\\"istio-system\\\",container=\\\"istio-proxy\\\"}) / count(container_memory_working_set_bytes{namespace!=\\\"istio-system\\\",container=\\\"istio-proxy\\\"})\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"per istio proxy\", \"refId\": \"B\" } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Memory Usage\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"bytes\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fill\": 1, \"gridPos\": { \"h\": 8, \"w\": 12, \"x\": 12, \"y\": 11 }, \"id\": 11, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pointradius\": 2, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"sum(irate(istio_response_bytes_sum{source_workload=\\\"istio-ingressgateway\\\", reporter=\\\"source\\\"}[1m]))\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"istio-ingressgateway\", \"refId\": \"A\" }, { \"expr\": \"sum(irate(istio_response_bytes_sum{source_workload_namespace!=\\\"istio-system\\\", reporter=\\\"source\\\"}[1m])) + sum(irate(istio_request_bytes_sum{source_workload_namespace!=\\\"istio-system\\\", reporter=\\\"source\\\"}[1m]))\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"istio-proxy\", \"refId\": \"B\" } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Bytes transferred / sec\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"Bps\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"collapsed\": false, \"gridPos\": { \"h\": 1, \"w\": 24, \"x\": 0, \"y\": 19 }, \"id\": 17, \"panels\": [], \"title\": \"Istio Component Versions\", \"type\": \"row\" }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fill\": 1, \"gridPos\": { \"h\": 8, \"w\": 24, \"x\": 0, \"y\": 20 }, \"id\": 15, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pointradius\": 2, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"sum(istio_build) by (component, tag)\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"{{ component }}: {{ tag }}\", \"refId\": \"A\" } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Istio Components by Version\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"collapsed\": false, \"gridPos\": { \"h\": 1, \"w\": 24, \"x\": 0, \"y\": 31 }, \"id\": 71, \"panels\": [], \"title\": \"Proxy Resource Usage\", \"type\": \"row\" }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fill\": 1, \"gridPos\": { \"h\": 7, \"w\": 6, \"x\": 0, \"y\": 32 }, \"id\": 72, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"sum(container_memory_working_set_bytes{container=\\\"istio-proxy\\\"})\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 2, \"legendFormat\": \"Total (k8s)\", \"refId\": \"A\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Memory\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"bytes\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": false } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fill\": 1, \"gridPos\": { \"h\": 7, \"w\": 6, \"x\": 6, \"y\": 32 }, \"id\": 73, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"sum(rate(container_cpu_usage_seconds_total{container=\\\"istio-proxy\\\"}[1m]))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 2, \"legendFormat\": \"Total (k8s)\", \"refId\": \"A\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"vCPU\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fill\": 1, \"gridPos\": { \"h\": 7, \"w\": 6, \"x\": 12, \"y\": 32 }, \"id\": 702, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"sum(container_fs_usage_bytes{container=\\\"istio-proxy\\\"})\", \"format\": \"time_series\", \"intervalFactor\": 2, \"legendFormat\": \"Total (k8s)\", \"refId\": \"A\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Disk\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"bytes\", \"label\": \"\", \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"decimals\": null, \"format\": \"none\", \"label\": \"\", \"logBase\": 1024, \"max\": null, \"min\": null, \"show\": false } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"collapsed\": false, \"gridPos\": { \"h\": 1, \"w\": 24, \"x\": 0, \"y\": 39 }, \"id\": 69, \"panels\": [], \"title\": \"Istiod Resource Usage\", \"type\": \"row\" }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fill\": 1, \"gridPos\": { \"h\": 7, \"w\": 6, \"x\": 0, \"y\": 40 }, \"id\": 5, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"process_virtual_memory_bytes{app=\\\"istiod\\\"}\", \"format\": \"time_series\", \"instant\": false, \"intervalFactor\": 2, \"legendFormat\": \"Virtual Memory\", \"refId\": \"I\", \"step\": 2 }, { \"expr\": \"process_resident_memory_bytes{app=\\\"istiod\\\"}\", \"format\": \"time_series\", \"intervalFactor\": 2, \"legendFormat\": \"Resident Memory\", \"refId\": \"H\", \"step\": 2 }, { \"expr\": \"go_memstats_heap_sys_bytes{app=\\\"istiod\\\"}\", \"format\": \"time_series\", \"hide\": true, \"intervalFactor\": 2, \"legendFormat\": \"heap sys\", \"refId\": \"A\" }, { \"expr\": \"go_memstats_heap_alloc_bytes{app=\\\"istiod\\\"}\", \"format\": \"time_series\", \"hide\": true, \"intervalFactor\": 2, \"legendFormat\": \"heap alloc\", \"refId\": \"D\" }, { \"expr\": \"go_memstats_alloc_bytes{app=\\\"istiod\\\"}\", \"format\": \"time_series\", \"intervalFactor\": 2, \"legendFormat\": \"Alloc\", \"refId\": \"F\", \"step\": 2 }, { \"expr\": \"go_memstats_heap_inuse_bytes{app=\\\"istiod\\\"}\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 2, \"legendFormat\": \"Heap in-use\", \"refId\": \"E\", \"step\": 2 }, { \"expr\": \"go_memstats_stack_inuse_bytes{app=\\\"istiod\\\"}\", \"format\": \"time_series\", \"intervalFactor\": 2, \"legendFormat\": \"Stack in-use\", \"refId\": \"G\", \"step\": 2 }, { \"expr\": \"sum(container_memory_working_set_bytes{container=~\\\"discovery|istio-proxy\\\", pod=~\\\"istiod-.*\\\"})\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 2, \"legendFormat\": \"Total (k8s)\", \"refId\": \"C\", \"step\": 2 }, { \"expr\": \"container_memory_working_set_bytes{container=~\\\"discovery|istio-proxy\\\", pod=~\\\"istiod-.*\\\"}\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 2, \"legendFormat\": \"{{ container }} (k8s)\", \"refId\": \"B\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Memory\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"bytes\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": false } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fill\": 1, \"gridPos\": { \"h\": 7, \"w\": 6, \"x\": 6, \"y\": 40 }, \"id\": 602, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"sum(rate(container_cpu_usage_seconds_total{container=~\\\"discovery|istio-proxy\\\", pod=~\\\"istiod-.*\\\"}[1m]))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 2, \"legendFormat\": \"Total (k8s)\", \"refId\": \"A\", \"step\": 2 }, { \"expr\": \"sum(rate(container_cpu_usage_seconds_total{container=~\\\"discovery|istio-proxy\\\", pod=~\\\"istiod-.*\\\"}[1m])) by (container)\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 2, \"legendFormat\": \"{{ container }} (k8s)\", \"refId\": \"B\", \"step\": 2 }, { \"expr\": \"irate(process_cpu_seconds_total{app=\\\"istiod\\\"}[1m])\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 2, \"legendFormat\": \"pilot (self-reported)\", \"refId\": \"C\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"vCPU\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fill\": 1, \"gridPos\": { \"h\": 7, \"w\": 6, \"x\": 12, \"y\": 40 }, \"id\": 74, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"process_open_fds{app=\\\"istiod\\\"}\", \"format\": \"time_series\", \"hide\": true, \"instant\": false, \"interval\": \"\", \"intervalFactor\": 2, \"legendFormat\": \"Open FDs (pilot)\", \"refId\": \"A\" }, { \"expr\": \"container_fs_usage_bytes{ container=~\\\"discovery|istio-proxy\\\", pod=~\\\"istiod-.*\\\"}\", \"format\": \"time_series\", \"intervalFactor\": 2, \"legendFormat\": \"{{ container }}\", \"refId\": \"B\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Disk\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"bytes\", \"label\": \"\", \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"decimals\": null, \"format\": \"none\", \"label\": \"\", \"logBase\": 1024, \"max\": null, \"min\": null, \"show\": false } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fill\": 1, \"gridPos\": { \"h\": 7, \"w\": 6, \"x\": 18, \"y\": 40 }, \"id\": 402, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"show\": false, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"go_goroutines{app=\\\"istiod\\\"}\", \"format\": \"time_series\", \"intervalFactor\": 2, \"legendFormat\": \"Number of Goroutines\", \"refId\": \"A\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Goroutines\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"short\", \"label\": \"\", \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } } ], \"refresh\": \"10s\", \"schemaVersion\": 18, \"style\": \"dark\", \"tags\": [], \"templating\": { \"list\": [] }, \"time\": { \"from\": \"now-5m\", \"to\": \"now\" }, \"timepicker\": { \"refresh_intervals\": [ \"5s\", \"10s\", \"30s\", \"1m\", \"5m\", \"15m\", \"30m\", \"1h\", \"2h\", \"1d\" ], \"time_options\": [ \"5m\", \"15m\", \"1h\", \"6h\", \"12h\", \"24h\", \"2d\", \"7d\", \"30d\" ] }, \"timezone\": \"\", \"title\": \"Istio Performance Dashboard\", \"uid\": \"vu8e0VWZk\", \"version\": 22 } "},"kind":"ConfigMap","metadata":{"annotations":{"maistra.io/mesh-generation":"2.3.1-1-2"},"labels":{"app":"grafana","app.kubernetes.io/component":"grafana","app.kubernetes.io/instance":"istio-system","app.kubernetes.io/managed-by":"maistra-istio-operator","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"istio","app.kubernetes.io/version":"2.3.1-1-2","istio":"grafana","maistra-version":"2.1.6","maistra.io/owner":"istio-system","maistra.io/owner-name":"basic","release":"istio"},"name":"istio-grafana-configuration-dashboards-istio-performance-dashboard","namespace":"istio-system","ownerReferences":[{"apiVersion":"maistra.io/v2","blockOwnerDeletion":true,"controller":true,"kind":"ServiceMeshControlPlane","name":"basic","uid":"0c79eb74-854c-4f98-85c6-5955e78fd93e"}]}}
      maistra.io/mesh-generation: 2.3.1-1-2
    creationTimestamp: "2023-03-03T20:03:20Z"
    labels:
      app: grafana
      app.kubernetes.io/component: grafana
      app.kubernetes.io/instance: istio-system
      app.kubernetes.io/managed-by: maistra-istio-operator
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: istio
      app.kubernetes.io/version: 2.3.1-1-2
      istio: grafana
      maistra-version: 2.1.6
      maistra.io/owner: istio-system
      maistra.io/owner-name: basic
      release: istio
    name: istio-grafana-configuration-dashboards-istio-performance-dashboard
    namespace: istio-system
    ownerReferences:
    - apiVersion: maistra.io/v2
      blockOwnerDeletion: true
      controller: true
      kind: ServiceMeshControlPlane
      name: basic
      uid: 0c79eb74-854c-4f98-85c6-5955e78fd93e
    resourceVersion: "34882"
    uid: ff2d38e8-995c-46db-a27e-703cb4ce8cdb
- apiVersion: v1
  data:
    istio-service-dashboard.json: "{ \"annotations\": { \"list\": [ { \"builtIn\":
      1, \"datasource\": \"-- Grafana --\", \"enable\": true, \"hide\": true, \"iconColor\":
      \"rgba(0, 211, 255, 1)\", \"name\": \"Annotations & Alerts\", \"type\": \"dashboard\"
      } ] }, \"editable\": false, \"gnetId\": null, \"graphTooltip\": 0, \"iteration\":
      1595591291797, \"links\": [], \"panels\": [ { \"collapsed\": true, \"gridPos\":
      { \"h\": 1, \"w\": 24, \"x\": 0, \"y\": 0 }, \"id\": 106, \"panels\": [ { \"content\":
      \"<div class=\\\"dashboard-header text-center\\\">\\n<span>SERVICE: $service</span>\\n</div>\",
      \"fieldConfig\": { \"defaults\": { \"custom\": {} }, \"overrides\": [] }, \"gridPos\":
      { \"h\": 3, \"w\": 24, \"x\": 0, \"y\": 1 }, \"id\": 89, \"links\": [], \"mode\":
      \"html\", \"options\": { \"content\": \"<div class=\\\"dashboard-header text-center\\\">\\n<span>SERVICE:
      $service</span>\\n</div>\", \"mode\": \"html\" }, \"pluginVersion\": \"7.1.0\",
      \"title\": \"\", \"transparent\": true, \"type\": \"text\" }, { \"cacheTimeout\":
      null, \"colorBackground\": false, \"colorValue\": false, \"colors\": [ \"rgba(245,
      54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\" ],
      \"datasource\": \"Prometheus\", \"fieldConfig\": { \"defaults\": { \"custom\":
      {} }, \"overrides\": [] }, \"format\": \"ops\", \"gauge\": { \"maxValue\": 100,
      \"minValue\": 0, \"show\": false, \"thresholdLabels\": false, \"thresholdMarkers\":
      true }, \"gridPos\": { \"h\": 4, \"w\": 6, \"x\": 0, \"y\": 4 }, \"id\": 12,
      \"interval\": null, \"links\": [], \"options\": { \"colorMode\": \"value\",
      \"graphMode\": \"area\", \"justifyMode\": \"auto\", \"orientation\": \"horizontal\",
      \"reduceOptions\": { \"calcs\": [ \"lastNotNull\" ], \"fields\": \"\", \"values\":
      false }, \"textMode\": \"auto\" }, \"mappingType\": 1, \"mappingTypes\": [ {
      \"name\": \"value to text\", \"value\": 1 }, { \"name\": \"range to text\",
      \"value\": 2 } ], \"maxDataPoints\": 100, \"nullPointMode\": \"connected\",
      \"nullText\": null, \"postfix\": \"\", \"postfixFontSize\": \"50%\", \"prefix\":
      \"\", \"prefixFontSize\": \"50%\", \"rangeMaps\": [ { \"from\": \"null\", \"text\":
      \"N/A\", \"to\": \"null\" } ], \"sparkline\": { \"fillColor\": \"rgba(31, 118,
      189, 0.18)\", \"full\": true, \"lineColor\": \"rgb(31, 120, 193)\", \"show\":
      true }, \"tableColumn\": \"\", \"targets\": [ { \"expr\": \"round(sum(irate(istio_requests_total{reporter=\\\"$qrep\\\",destination_service=~\\\"$service\\\"}[5m])),
      0.001)\", \"format\": \"time_series\", \"intervalFactor\": 1, \"refId\": \"A\",
      \"step\": 4 } ], \"thresholds\": \"\", \"title\": \"Client Request Volume\",
      \"type\": \"singlestat\", \"valueFontSize\": \"80%\", \"valueMaps\": [ { \"op\":
      \"=\", \"text\": \"N/A\", \"value\": \"null\" } ], \"valueName\": \"current\"
      }, { \"cacheTimeout\": null, \"colorBackground\": false, \"colorValue\": false,
      \"colors\": [ \"rgba(50, 172, 45, 0.97)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(245,
      54, 54, 0.9)\" ], \"datasource\": \"Prometheus\", \"decimals\": null, \"fieldConfig\":
      { \"defaults\": { \"custom\": {} }, \"overrides\": [] }, \"format\": \"percentunit\",
      \"gauge\": { \"maxValue\": 100, \"minValue\": 80, \"show\": false, \"thresholdLabels\":
      false, \"thresholdMarkers\": false }, \"gridPos\": { \"h\": 4, \"w\": 6, \"x\":
      6, \"y\": 4 }, \"id\": 14, \"interval\": null, \"links\": [], \"options\": {
      \"colorMode\": \"value\", \"graphMode\": \"area\", \"justifyMode\": \"auto\",
      \"orientation\": \"horizontal\", \"reduceOptions\": { \"calcs\": [ \"lastNotNull\"
      ], \"fields\": \"\", \"values\": false }, \"textMode\": \"auto\" }, \"mappingType\":
      1, \"mappingTypes\": [ { \"name\": \"value to text\", \"value\": 1 }, { \"name\":
      \"range to text\", \"value\": 2 } ], \"maxDataPoints\": 100, \"nullPointMode\":
      \"connected\", \"nullText\": null, \"postfix\": \"\", \"postfixFontSize\": \"50%\",
      \"prefix\": \"\", \"prefixFontSize\": \"50%\", \"rangeMaps\": [ { \"from\":
      \"null\", \"text\": \"N/A\", \"to\": \"null\" } ], \"sparkline\": { \"fillColor\":
      \"rgba(31, 118, 189, 0.18)\", \"full\": true, \"lineColor\": \"rgb(31, 120,
      193)\", \"show\": true }, \"tableColumn\": \"\", \"targets\": [ { \"expr\":
      \"sum(irate(istio_requests_total{reporter=\\\"$qrep\\\",destination_service=~\\\"$service\\\",response_code!~\\\"5.*\\\"}[5m]))
      / sum(irate(istio_requests_total{reporter=\\\"$qrep\\\",destination_service=~\\\"$service\\\"}[5m]))\",
      \"format\": \"time_series\", \"intervalFactor\": 1, \"refId\": \"A\" } ], \"thresholds\":
      \"95, 99, 99.5\", \"title\": \"Client Success Rate (non-5xx responses)\", \"type\":
      \"singlestat\", \"valueFontSize\": \"80%\", \"valueMaps\": [ { \"op\": \"=\",
      \"text\": \"N/A\", \"value\": \"null\" } ], \"valueName\": \"avg\" }, { \"aliasColors\":
      {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\":
      \"Prometheus\", \"fieldConfig\": { \"defaults\": { \"custom\": {} }, \"overrides\":
      [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\": { \"h\": 4, \"w\": 6, \"x\":
      12, \"y\": 4 }, \"hiddenSeries\": false, \"id\": 87, \"legend\": { \"alignAsTable\":
      false, \"avg\": false, \"current\": false, \"hideEmpty\": false, \"hideZero\":
      false, \"max\": false, \"min\": false, \"rightSide\": true, \"show\": true,
      \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\":
      [], \"nullPointMode\": \"null\", \"percentage\": false, \"pluginVersion\": \"7.1.0\",
      \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\":
      [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\":
      [ { \"expr\": \"(histogram_quantile(0.50, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"$qrep\\\",destination_service=~\\\"$service\\\"}[1m]))
      by (le)) / 1000) or histogram_quantile(0.50, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"$qrep\\\",destination_service=~\\\"$service\\\"}[1m]))
      by (le))\", \"format\": \"time_series\", \"interval\": \"\", \"intervalFactor\":
      1, \"legendFormat\": \"P50\", \"refId\": \"A\" }, { \"expr\": \"(histogram_quantile(0.90,
      sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"$qrep\\\",destination_service=~\\\"$service\\\"}[1m]))
      by (le)) / 1000) or histogram_quantile(0.90, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"$qrep\\\",destination_service=~\\\"$service\\\"}[1m]))
      by (le))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\":
      1, \"legendFormat\": \"P90\", \"refId\": \"B\" }, { \"expr\": \"(histogram_quantile(0.99,
      sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"$qrep\\\",destination_service=~\\\"$service\\\"}[1m]))
      by (le)) / 1000) or histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"$qrep\\\",destination_service=~\\\"$service\\\"}[1m]))
      by (le))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\":
      1, \"legendFormat\": \"P99\", \"refId\": \"C\" } ], \"thresholds\": [], \"timeFrom\":
      null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Client Request
      Duration\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\"
      }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\",
      \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\":
      \"s\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\":
      true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null,
      \"min\": null, \"show\": false } ], \"yaxis\": { \"align\": false, \"alignLevel\":
      null } }, { \"cacheTimeout\": null, \"colorBackground\": false, \"colorValue\":
      false, \"colors\": [ \"#299c46\", \"rgba(237, 129, 40, 0.89)\", \"#d44a3a\"
      ], \"datasource\": \"Prometheus\", \"fieldConfig\": { \"defaults\": { \"custom\":
      {} }, \"overrides\": [] }, \"format\": \"Bps\", \"gauge\": { \"maxValue\": 100,
      \"minValue\": 0, \"show\": false, \"thresholdLabels\": false, \"thresholdMarkers\":
      true }, \"gridPos\": { \"h\": 4, \"w\": 6, \"x\": 18, \"y\": 4 }, \"id\": 84,
      \"interval\": null, \"links\": [], \"options\": { \"colorMode\": \"value\",
      \"graphMode\": \"area\", \"justifyMode\": \"auto\", \"orientation\": \"horizontal\",
      \"reduceOptions\": { \"calcs\": [ \"lastNotNull\" ], \"fields\": \"\", \"values\":
      false }, \"textMode\": \"auto\" }, \"mappingType\": 1, \"mappingTypes\": [ {
      \"name\": \"value to text\", \"value\": 1 }, { \"name\": \"range to text\",
      \"value\": 2 } ], \"maxDataPoints\": 100, \"nullPointMode\": \"connected\",
      \"nullText\": null, \"postfix\": \"\", \"postfixFontSize\": \"50%\", \"prefix\":
      \"\", \"prefixFontSize\": \"50%\", \"rangeMaps\": [ { \"from\": \"null\", \"text\":
      \"N/A\", \"to\": \"null\" } ], \"sparkline\": { \"fillColor\": \"rgba(31, 118,
      189, 0.18)\", \"full\": true, \"lineColor\": \"rgb(31, 120, 193)\", \"show\":
      true }, \"tableColumn\": \"\", \"targets\": [ { \"expr\": \"sum(irate(istio_tcp_received_bytes_total{reporter=\\\"$qrep\\\",
      destination_service=~\\\"$service\\\"}[1m]))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"\", \"refId\": \"A\"
      } ], \"thresholds\": \"\", \"title\": \"TCP Received Bytes\", \"type\": \"singlestat\",
      \"valueFontSize\": \"80%\", \"valueMaps\": [ { \"op\": \"=\", \"text\": \"N/A\",
      \"value\": \"null\" } ], \"valueName\": \"avg\" }, { \"cacheTimeout\": null,
      \"colorBackground\": false, \"colorValue\": false, \"colors\": [ \"rgba(245,
      54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\" ],
      \"datasource\": \"Prometheus\", \"fieldConfig\": { \"defaults\": { \"custom\":
      {} }, \"overrides\": [] }, \"format\": \"ops\", \"gauge\": { \"maxValue\": 100,
      \"minValue\": 0, \"show\": false, \"thresholdLabels\": false, \"thresholdMarkers\":
      true }, \"gridPos\": { \"h\": 4, \"w\": 6, \"x\": 0, \"y\": 8 }, \"id\": 97,
      \"interval\": null, \"links\": [], \"options\": { \"colorMode\": \"value\",
      \"graphMode\": \"area\", \"justifyMode\": \"auto\", \"orientation\": \"horizontal\",
      \"reduceOptions\": { \"calcs\": [ \"lastNotNull\" ], \"fields\": \"\", \"values\":
      false }, \"textMode\": \"auto\" }, \"mappingType\": 1, \"mappingTypes\": [ {
      \"name\": \"value to text\", \"value\": 1 }, { \"name\": \"range to text\",
      \"value\": 2 } ], \"maxDataPoints\": 100, \"nullPointMode\": \"connected\",
      \"nullText\": null, \"postfix\": \"\", \"postfixFontSize\": \"50%\", \"prefix\":
      \"\", \"prefixFontSize\": \"50%\", \"rangeMaps\": [ { \"from\": \"null\", \"text\":
      \"N/A\", \"to\": \"null\" } ], \"sparkline\": { \"fillColor\": \"rgba(31, 118,
      189, 0.18)\", \"full\": true, \"lineColor\": \"rgb(31, 120, 193)\", \"show\":
      true }, \"tableColumn\": \"\", \"targets\": [ { \"expr\": \"round(sum(irate(istio_requests_total{reporter=\\\"destination\\\",destination_service=~\\\"$service\\\"}[5m])),
      0.001)\", \"format\": \"time_series\", \"intervalFactor\": 1, \"refId\": \"A\",
      \"step\": 4 } ], \"thresholds\": \"\", \"title\": \"Server Request Volume\",
      \"type\": \"singlestat\", \"valueFontSize\": \"80%\", \"valueMaps\": [ { \"op\":
      \"=\", \"text\": \"N/A\", \"value\": \"null\" } ], \"valueName\": \"current\"
      }, { \"cacheTimeout\": null, \"colorBackground\": false, \"colorValue\": false,
      \"colors\": [ \"rgba(50, 172, 45, 0.97)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(245,
      54, 54, 0.9)\" ], \"datasource\": \"Prometheus\", \"decimals\": null, \"fieldConfig\":
      { \"defaults\": { \"custom\": {} }, \"overrides\": [] }, \"format\": \"percentunit\",
      \"gauge\": { \"maxValue\": 100, \"minValue\": 80, \"show\": false, \"thresholdLabels\":
      false, \"thresholdMarkers\": false }, \"gridPos\": { \"h\": 4, \"w\": 6, \"x\":
      6, \"y\": 8 }, \"id\": 98, \"interval\": null, \"links\": [], \"options\": {
      \"colorMode\": \"value\", \"graphMode\": \"area\", \"justifyMode\": \"auto\",
      \"orientation\": \"horizontal\", \"reduceOptions\": { \"calcs\": [ \"lastNotNull\"
      ], \"fields\": \"\", \"values\": false }, \"textMode\": \"auto\" }, \"mappingType\":
      1, \"mappingTypes\": [ { \"name\": \"value to text\", \"value\": 1 }, { \"name\":
      \"range to text\", \"value\": 2 } ], \"maxDataPoints\": 100, \"nullPointMode\":
      \"connected\", \"nullText\": null, \"postfix\": \"\", \"postfixFontSize\": \"50%\",
      \"prefix\": \"\", \"prefixFontSize\": \"50%\", \"rangeMaps\": [ { \"from\":
      \"null\", \"text\": \"N/A\", \"to\": \"null\" } ], \"sparkline\": { \"fillColor\":
      \"rgba(31, 118, 189, 0.18)\", \"full\": true, \"lineColor\": \"rgb(31, 120,
      193)\", \"show\": true }, \"tableColumn\": \"\", \"targets\": [ { \"expr\":
      \"sum(irate(istio_requests_total{reporter=\\\"destination\\\",destination_service=~\\\"$service\\\",response_code!~\\\"5.*\\\"}[5m]))
      / sum(irate(istio_requests_total{reporter=\\\"destination\\\",destination_service=~\\\"$service\\\"}[5m]))\",
      \"format\": \"time_series\", \"intervalFactor\": 1, \"refId\": \"A\" } ], \"thresholds\":
      \"95, 99, 99.5\", \"title\": \"Server Success Rate (non-5xx responses)\", \"type\":
      \"singlestat\", \"valueFontSize\": \"80%\", \"valueMaps\": [ { \"op\": \"=\",
      \"text\": \"N/A\", \"value\": \"null\" } ], \"valueName\": \"avg\" }, { \"aliasColors\":
      {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\":
      \"Prometheus\", \"fieldConfig\": { \"defaults\": { \"custom\": {} }, \"overrides\":
      [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\": { \"h\": 4, \"w\": 6, \"x\":
      12, \"y\": 8 }, \"hiddenSeries\": false, \"id\": 99, \"legend\": { \"alignAsTable\":
      false, \"avg\": false, \"current\": false, \"hideEmpty\": false, \"hideZero\":
      false, \"max\": false, \"min\": false, \"rightSide\": true, \"show\": true,
      \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\":
      [], \"nullPointMode\": \"null\", \"percentage\": false, \"pluginVersion\": \"7.1.0\",
      \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\":
      [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\":
      [ { \"expr\": \"(histogram_quantile(0.50, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"destination\\\",destination_service=~\\\"$service\\\"}[1m]))
      by (le)) / 1000) or histogram_quantile(0.50, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"destination\\\",destination_service=~\\\"$service\\\"}[1m]))
      by (le))\", \"format\": \"time_series\", \"interval\": \"\", \"intervalFactor\":
      1, \"legendFormat\": \"P50\", \"refId\": \"A\" }, { \"expr\": \"(histogram_quantile(0.90,
      sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"destination\\\",destination_service=~\\\"$service\\\"}[1m]))
      by (le)) / 1000) or histogram_quantile(0.90, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"destination\\\",destination_service=~\\\"$service\\\"}[1m]))
      by (le))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\":
      1, \"legendFormat\": \"P90\", \"refId\": \"B\" }, { \"expr\": \"(histogram_quantile(0.99,
      sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"destination\\\",destination_service=~\\\"$service\\\"}[1m]))
      by (le)) / 1000) or histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"destination\\\",destination_service=~\\\"$service\\\"}[1m]))
      by (le))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\":
      1, \"legendFormat\": \"P99\", \"refId\": \"C\" } ], \"thresholds\": [], \"timeFrom\":
      null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Server Request
      Duration\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\"
      }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\",
      \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\":
      \"s\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\":
      true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null,
      \"min\": null, \"show\": false } ], \"yaxis\": { \"align\": false, \"alignLevel\":
      null } }, { \"cacheTimeout\": null, \"colorBackground\": false, \"colorValue\":
      false, \"colors\": [ \"#299c46\", \"rgba(237, 129, 40, 0.89)\", \"#d44a3a\"
      ], \"datasource\": \"Prometheus\", \"fieldConfig\": { \"defaults\": { \"custom\":
      {} }, \"overrides\": [] }, \"format\": \"Bps\", \"gauge\": { \"maxValue\": 100,
      \"minValue\": 0, \"show\": false, \"thresholdLabels\": false, \"thresholdMarkers\":
      true }, \"gridPos\": { \"h\": 4, \"w\": 6, \"x\": 18, \"y\": 8 }, \"id\": 100,
      \"interval\": null, \"links\": [], \"options\": { \"colorMode\": \"value\",
      \"graphMode\": \"area\", \"justifyMode\": \"auto\", \"orientation\": \"horizontal\",
      \"reduceOptions\": { \"calcs\": [ \"lastNotNull\" ], \"fields\": \"\", \"values\":
      false }, \"textMode\": \"auto\" }, \"mappingType\": 1, \"mappingTypes\": [ {
      \"name\": \"value to text\", \"value\": 1 }, { \"name\": \"range to text\",
      \"value\": 2 } ], \"maxDataPoints\": 100, \"nullPointMode\": \"connected\",
      \"nullText\": null, \"postfix\": \"\", \"postfixFontSize\": \"50%\", \"prefix\":
      \"\", \"prefixFontSize\": \"50%\", \"rangeMaps\": [ { \"from\": \"null\", \"text\":
      \"N/A\", \"to\": \"null\" } ], \"sparkline\": { \"fillColor\": \"rgba(31, 118,
      189, 0.18)\", \"full\": true, \"lineColor\": \"rgb(31, 120, 193)\", \"show\":
      true }, \"tableColumn\": \"\", \"targets\": [ { \"expr\": \"sum(irate(istio_tcp_sent_bytes_total{reporter=\\\"$qrep\\\",
      destination_service=~\\\"$service\\\"}[1m]))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"\", \"refId\": \"A\"
      } ], \"thresholds\": \"\", \"title\": \"TCP Sent Bytes\", \"type\": \"singlestat\",
      \"valueFontSize\": \"80%\", \"valueMaps\": [ { \"op\": \"=\", \"text\": \"N/A\",
      \"value\": \"null\" } ], \"valueName\": \"avg\" } ], \"title\": \"General\",
      \"type\": \"row\" }, { \"collapsed\": true, \"gridPos\": { \"h\": 1, \"w\":
      24, \"x\": 0, \"y\": 1 }, \"id\": 104, \"panels\": [ { \"content\": \"<div class=\\\"dashboard-header
      text-center\\\">\\n<span>CLIENT WORKLOADS</span>\\n</div>\", \"fieldConfig\":
      { \"defaults\": { \"custom\": {} }, \"overrides\": [] }, \"gridPos\": { \"h\":
      3, \"w\": 24, \"x\": 0, \"y\": 2 }, \"id\": 45, \"links\": [], \"mode\": \"html\",
      \"options\": { \"content\": \"<div class=\\\"dashboard-header text-center\\\">\\n<span>CLIENT
      WORKLOADS</span>\\n</div>\", \"mode\": \"html\" }, \"pluginVersion\": \"7.1.0\",
      \"title\": \"\", \"transparent\": true, \"type\": \"text\" }, { \"aliasColors\":
      {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\":
      \"Prometheus\", \"fieldConfig\": { \"defaults\": { \"custom\": {} }, \"overrides\":
      [] }, \"fill\": 0, \"fillGradient\": 0, \"gridPos\": { \"h\": 6, \"w\": 12,
      \"x\": 0, \"y\": 5 }, \"hiddenSeries\": false, \"id\": 25, \"legend\": { \"avg\":
      false, \"current\": false, \"hideEmpty\": true, \"max\": false, \"min\": false,
      \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\":
      1, \"links\": [], \"nullPointMode\": \"null as zero\", \"percentage\": false,
      \"pluginVersion\": \"7.1.0\", \"pointradius\": 5, \"points\": false, \"renderer\":
      \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\":
      false, \"targets\": [ { \"expr\": \"round(sum(irate(istio_requests_total{connection_security_policy=\\\"mutual_tls\\\",destination_service=~\\\"$service\\\",reporter=\\\"$qrep\\\",source_workload=~\\\"$srcwl\\\",source_workload_namespace=~\\\"$srcns\\\"}[5m]))
      by (source_workload, source_workload_namespace, response_code), 0.001)\", \"format\":
      \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"{{ source_workload
      }}.{{ source_workload_namespace }} : {{ response_code }} (\U0001F510mTLS)\",
      \"refId\": \"A\", \"step\": 2 }, { \"expr\": \"round(sum(irate(istio_requests_total{connection_security_policy!=\\\"mutual_tls\\\",
      destination_service=~\\\"$service\\\", reporter=\\\"$qrep\\\", source_workload=~\\\"$srcwl\\\",
      source_workload_namespace=~\\\"$srcns\\\"}[5m])) by (source_workload, source_workload_namespace,
      response_code), 0.001)\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\":
      1, \"legendFormat\": \"{{ source_workload }}.{{ source_workload_namespace }}
      : {{ response_code }}\", \"refId\": \"B\", \"step\": 2 } ], \"thresholds\":
      [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\":
      \"Incoming Requests By Source And Response Code\", \"tooltip\": { \"shared\":
      false, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\":
      { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\":
      [ \"total\" ] }, \"yaxes\": [ { \"format\": \"ops\", \"label\": null, \"logBase\":
      1, \"max\": null, \"min\": \"0\", \"show\": true }, { \"format\": \"short\",
      \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": false
      } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"aliasColors\":
      {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\":
      \"Prometheus\", \"fieldConfig\": { \"defaults\": { \"custom\": {} }, \"overrides\":
      [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\": { \"h\": 6, \"w\": 12,
      \"x\": 12, \"y\": 5 }, \"hiddenSeries\": false, \"id\": 26, \"legend\": { \"avg\":
      false, \"current\": false, \"hideEmpty\": true, \"hideZero\": false, \"max\":
      false, \"min\": false, \"show\": true, \"total\": false, \"values\": false },
      \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\",
      \"percentage\": false, \"pluginVersion\": \"7.1.0\", \"pointradius\": 5, \"points\":
      false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10,
      \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"sum(irate(istio_requests_total{reporter=\\\"$qrep\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",response_code!~\\\"5.*\\\",
      source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[5m]))
      by (source_workload, source_workload_namespace) / sum(irate(istio_requests_total{reporter=\\\"$qrep\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[5m]))
      by (source_workload, source_workload_namespace)\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{ source_workload
      }}.{{ source_workload_namespace }} (\U0001F510mTLS)\", \"refId\": \"A\", \"step\":
      2 }, { \"expr\": \"sum(irate(istio_requests_total{reporter=\\\"$qrep\\\", connection_security_policy!=\\\"mutual_tls\\\",
      destination_service=~\\\"$service\\\",response_code!~\\\"5.*\\\", source_workload=~\\\"$srcwl\\\",
      source_workload_namespace=~\\\"$srcns\\\"}[5m])) by (source_workload, source_workload_namespace)
      / sum(irate(istio_requests_total{reporter=\\\"$qrep\\\", connection_security_policy!=\\\"mutual_tls\\\",
      destination_service=~\\\"$service\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[5m]))
      by (source_workload, source_workload_namespace)\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{ source_workload
      }}.{{ source_workload_namespace }}\", \"refId\": \"B\", \"step\": 2 } ], \"thresholds\":
      [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\":
      \"Incoming Success Rate (non-5xx responses) By Source\", \"tooltip\": { \"shared\":
      true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\":
      { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\":
      [] }, \"yaxes\": [ { \"format\": \"percentunit\", \"label\": null, \"logBase\":
      1, \"max\": \"1.01\", \"min\": \"0\", \"show\": true }, { \"format\": \"short\",
      \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": false
      } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"aliasColors\":
      {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\":
      \"Prometheus\", \"description\": \"\", \"fieldConfig\": { \"defaults\": { \"custom\":
      {} }, \"overrides\": [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\": {
      \"h\": 6, \"w\": 8, \"x\": 0, \"y\": 11 }, \"hiddenSeries\": false, \"id\":
      27, \"legend\": { \"alignAsTable\": false, \"avg\": false, \"current\": false,
      \"hideEmpty\": true, \"hideZero\": false, \"max\": false, \"min\": false, \"rightSide\":
      false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true,
      \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\":
      false, \"pluginVersion\": \"7.1.0\", \"pointradius\": 5, \"points\": false,
      \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\":
      false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"(histogram_quantile(0.50,
      sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.50,
      sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"$qrep\\\", connection_security_policy=\\\"mutual_tls\\\",
      destination_service=~\\\"$service\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      P50 (\U0001F510mTLS)\", \"refId\": \"A\", \"step\": 2 }, { \"expr\": \"(histogram_quantile(0.90,
      sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.90,
      sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"$qrep\\\", connection_security_policy=\\\"mutual_tls\\\",
      destination_service=~\\\"$service\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      P90 (\U0001F510mTLS)\", \"refId\": \"B\", \"step\": 2 }, { \"expr\": \"(histogram_quantile(0.95,
      sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.95,
      sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"$qrep\\\", connection_security_policy=\\\"mutual_tls\\\",
      destination_service=~\\\"$service\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      P95 (\U0001F510mTLS)\", \"refId\": \"C\", \"step\": 2 }, { \"expr\": \"(histogram_quantile(0.99,
      sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.99,
      sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"$qrep\\\", connection_security_policy=\\\"mutual_tls\\\",
      destination_service=~\\\"$service\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      P99 (\U0001F510mTLS)\", \"refId\": \"D\", \"step\": 2 }, { \"expr\": \"(histogram_quantile(0.50,
      sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.50,
      sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"$qrep\\\", connection_security_policy!=\\\"mutual_tls\\\",
      destination_service=~\\\"$service\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      P50\", \"refId\": \"E\", \"step\": 2 }, { \"expr\": \"(histogram_quantile(0.90,
      sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.90,
      sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"$qrep\\\", connection_security_policy!=\\\"mutual_tls\\\",
      destination_service=~\\\"$service\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      P90\", \"refId\": \"F\", \"step\": 2 }, { \"expr\": \"(histogram_quantile(0.95,
      sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.95,
      sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"$qrep\\\", connection_security_policy!=\\\"mutual_tls\\\",
      destination_service=~\\\"$service\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      P95\", \"refId\": \"G\", \"step\": 2 }, { \"expr\": \"(histogram_quantile(0.99,
      sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.99,
      sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"$qrep\\\", connection_security_policy!=\\\"mutual_tls\\\",
      destination_service=~\\\"$service\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      P99\", \"refId\": \"H\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\":
      null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Incoming Request
      Duration By Source\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\":
      \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\":
      \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\":
      \"s\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": \"0\", \"show\":
      true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null,
      \"min\": null, \"show\": false } ], \"yaxis\": { \"align\": false, \"alignLevel\":
      null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\":
      false, \"datasource\": \"Prometheus\", \"fieldConfig\": { \"defaults\": { \"custom\":
      {} }, \"overrides\": [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\": {
      \"h\": 6, \"w\": 8, \"x\": 8, \"y\": 11 }, \"hiddenSeries\": false, \"id\":
      28, \"legend\": { \"alignAsTable\": false, \"avg\": false, \"current\": false,
      \"hideEmpty\": true, \"max\": false, \"min\": false, \"rightSide\": false, \"show\":
      true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\":
      1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pluginVersion\":
      \"7.1.0\", \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\":
      [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\":
      [ { \"expr\": \"histogram_quantile(0.50, sum(irate(istio_request_bytes_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      P50 (\U0001F510mTLS)\", \"refId\": \"A\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.90,
      sum(irate(istio_request_bytes_bucket{reporter=\\\"$qrep\\\", connection_security_policy=\\\"mutual_tls\\\",
      destination_service=~\\\"$service\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      \ P90 (\U0001F510mTLS)\", \"refId\": \"B\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.95,
      sum(irate(istio_request_bytes_bucket{reporter=\\\"$qrep\\\", connection_security_policy=\\\"mutual_tls\\\",
      destination_service=~\\\"$service\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      P95 (\U0001F510mTLS)\", \"refId\": \"C\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.99,
      sum(irate(istio_request_bytes_bucket{reporter=\\\"$qrep\\\", connection_security_policy=\\\"mutual_tls\\\",
      destination_service=~\\\"$service\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      \ P99 (\U0001F510mTLS)\", \"refId\": \"D\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.50,
      sum(irate(istio_request_bytes_bucket{reporter=\\\"$qrep\\\", connection_security_policy!=\\\"mutual_tls\\\",
      destination_service=~\\\"$service\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      P50\", \"refId\": \"E\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.90,
      sum(irate(istio_request_bytes_bucket{reporter=\\\"$qrep\\\", connection_security_policy!=\\\"mutual_tls\\\",
      destination_service=~\\\"$service\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      P90\", \"refId\": \"F\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.95,
      sum(irate(istio_request_bytes_bucket{reporter=\\\"$qrep\\\", connection_security_policy!=\\\"mutual_tls\\\",
      destination_service=~\\\"$service\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      P95\", \"refId\": \"G\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.99,
      sum(irate(istio_request_bytes_bucket{reporter=\\\"$qrep\\\", connection_security_policy!=\\\"mutual_tls\\\",
      destination_service=~\\\"$service\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      P99\", \"refId\": \"H\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\":
      null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Incoming Request
      Size By Source\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\":
      \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\":
      \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\":
      \"decbytes\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": \"0\",
      \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1,
      \"max\": null, \"min\": null, \"show\": false } ], \"yaxis\": { \"align\": false,
      \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\":
      10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fieldConfig\": { \"defaults\":
      { \"custom\": {} }, \"overrides\": [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\":
      { \"h\": 6, \"w\": 8, \"x\": 16, \"y\": 11 }, \"hiddenSeries\": false, \"id\":
      68, \"legend\": { \"alignAsTable\": false, \"avg\": false, \"current\": false,
      \"hideEmpty\": true, \"max\": false, \"min\": false, \"rightSide\": false, \"show\":
      true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\":
      1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pluginVersion\":
      \"7.1.0\", \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\":
      [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\":
      [ { \"expr\": \"histogram_quantile(0.50, sum(irate(istio_response_bytes_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      P50 (\U0001F510mTLS)\", \"refId\": \"A\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.90,
      sum(irate(istio_response_bytes_bucket{reporter=\\\"$qrep\\\", connection_security_policy=\\\"mutual_tls\\\",
      destination_service=~\\\"$service\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      \ P90 (\U0001F510mTLS)\", \"refId\": \"B\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.95,
      sum(irate(istio_response_bytes_bucket{reporter=\\\"$qrep\\\", connection_security_policy=\\\"mutual_tls\\\",
      destination_service=~\\\"$service\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      P95 (\U0001F510mTLS)\", \"refId\": \"C\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.99,
      sum(irate(istio_response_bytes_bucket{reporter=\\\"$qrep\\\", connection_security_policy=\\\"mutual_tls\\\",
      destination_service=~\\\"$service\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      \ P99 (\U0001F510mTLS)\", \"refId\": \"D\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.50,
      sum(irate(istio_response_bytes_bucket{reporter=\\\"$qrep\\\", connection_security_policy!=\\\"mutual_tls\\\",
      destination_service=~\\\"$service\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      P50\", \"refId\": \"E\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.90,
      sum(irate(istio_response_bytes_bucket{reporter=\\\"$qrep\\\", connection_security_policy!=\\\"mutual_tls\\\",
      destination_service=~\\\"$service\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      P90\", \"refId\": \"F\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.95,
      sum(irate(istio_response_bytes_bucket{reporter=\\\"$qrep\\\", connection_security_policy!=\\\"mutual_tls\\\",
      destination_service=~\\\"$service\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      P95\", \"refId\": \"G\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.99,
      sum(irate(istio_response_bytes_bucket{reporter=\\\"$qrep\\\", connection_security_policy!=\\\"mutual_tls\\\",
      destination_service=~\\\"$service\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      P99\", \"refId\": \"H\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\":
      null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Response Size By
      Source\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\"
      }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\",
      \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\":
      \"decbytes\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": \"0\",
      \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1,
      \"max\": null, \"min\": null, \"show\": false } ], \"yaxis\": { \"align\": false,
      \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\":
      10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fieldConfig\": { \"defaults\":
      { \"custom\": {} }, \"overrides\": [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\":
      { \"h\": 6, \"w\": 12, \"x\": 0, \"y\": 17 }, \"hiddenSeries\": false, \"id\":
      80, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\":
      false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true,
      \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\":
      false, \"pluginVersion\": \"7.1.0\", \"pointradius\": 5, \"points\": false,
      \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\":
      false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"round(sum(irate(istio_tcp_received_bytes_total{reporter=\\\"$qrep\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace), 0.001)\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{ source_workload
      }}.{{ source_workload_namespace}} (\U0001F510mTLS)\", \"refId\": \"A\", \"step\":
      2 }, { \"expr\": \"round(sum(irate(istio_tcp_received_bytes_total{reporter=\\\"$qrep\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace), 0.001)\", \"format\": \"time_series\",
      \"intervalFactor\": 1, \"legendFormat\": \"{{ source_workload }}.{{ source_workload_namespace}}\",
      \"refId\": \"B\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\":
      [], \"timeShift\": null, \"title\": \"Bytes Received from Incoming TCP Connection\",
      \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\"
      }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\",
      \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\":
      \"Bps\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": \"0\", \"show\":
      true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null,
      \"min\": null, \"show\": true } ], \"yaxis\": { \"align\": false, \"alignLevel\":
      null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\":
      false, \"datasource\": \"Prometheus\", \"fieldConfig\": { \"defaults\": { \"custom\":
      {} }, \"overrides\": [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\": {
      \"h\": 6, \"w\": 12, \"x\": 12, \"y\": 17 }, \"hiddenSeries\": false, \"id\":
      82, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\":
      false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true,
      \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\":
      false, \"pluginVersion\": \"7.1.0\", \"pointradius\": 5, \"points\": false,
      \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\":
      false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"round(sum(irate(istio_tcp_sent_bytes_total{connection_security_policy=\\\"mutual_tls\\\",
      reporter=\\\"$qrep\\\", destination_service=~\\\"$service\\\", source_workload=~\\\"$srcwl\\\",
      source_workload_namespace=~\\\"$srcns\\\"}[1m])) by (source_workload, source_workload_namespace),
      0.001)\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\":
      \"{{ source_workload }}.{{ source_workload_namespace}} (\U0001F510mTLS)\", \"refId\":
      \"A\", \"step\": 2 }, { \"expr\": \"round(sum(irate(istio_tcp_sent_bytes_total{connection_security_policy!=\\\"mutual_tls\\\",
      reporter=\\\"$qrep\\\", destination_service=~\\\"$service\\\", source_workload=~\\\"$srcwl\\\",
      source_workload_namespace=~\\\"$srcns\\\"}[1m])) by (source_workload, source_workload_namespace),
      0.001)\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\":
      \"{{ source_workload }}.{{ source_workload_namespace}}\", \"refId\": \"B\",
      \"step\": 2 } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [],
      \"timeShift\": null, \"title\": \"Bytes Sent to Incoming TCP Connection\", \"tooltip\":
      { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\":
      \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null,
      \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"Bps\", \"label\":
      null, \"logBase\": 1, \"max\": null, \"min\": \"0\", \"show\": true }, { \"format\":
      \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\":
      true } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } } ], \"title\":
      \"Client Workloads\", \"type\": \"row\" }, { \"collapsed\": true, \"gridPos\":
      { \"h\": 1, \"w\": 24, \"x\": 0, \"y\": 2 }, \"id\": 102, \"panels\": [ { \"content\":
      \"<div class=\\\"dashboard-header text-center\\\">\\n<span>SERVICE WORKLOADS</span>\\n</div>\",
      \"fieldConfig\": { \"defaults\": { \"custom\": {} }, \"overrides\": [] }, \"gridPos\":
      { \"h\": 3, \"w\": 24, \"x\": 0, \"y\": 3 }, \"id\": 69, \"links\": [], \"mode\":
      \"html\", \"options\": { \"content\": \"<div class=\\\"dashboard-header text-center\\\">\\n<span>SERVICE
      WORKLOADS</span>\\n</div>\", \"mode\": \"html\" }, \"pluginVersion\": \"7.1.0\",
      \"title\": \"\", \"transparent\": true, \"type\": \"text\" }, { \"aliasColors\":
      {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\":
      \"Prometheus\", \"fieldConfig\": { \"defaults\": { \"custom\": {} }, \"overrides\":
      [] }, \"fill\": 0, \"fillGradient\": 0, \"gridPos\": { \"h\": 6, \"w\": 12,
      \"x\": 0, \"y\": 6 }, \"hiddenSeries\": false, \"id\": 90, \"legend\": { \"avg\":
      false, \"current\": false, \"hideEmpty\": true, \"max\": false, \"min\": false,
      \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\":
      1, \"links\": [], \"nullPointMode\": \"null as zero\", \"percentage\": false,
      \"pluginVersion\": \"7.1.0\", \"pointradius\": 5, \"points\": false, \"renderer\":
      \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\":
      false, \"targets\": [ { \"expr\": \"round(sum(irate(istio_requests_total{connection_security_policy=\\\"mutual_tls\\\",destination_service=~\\\"$service\\\",reporter=\\\"destination\\\",destination_workload=~\\\"$dstwl\\\",destination_workload_namespace=~\\\"$dstns\\\"}[5m]))
      by (destination_workload, destination_workload_namespace, response_code), 0.001)\",
      \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_workload
      }}.{{ destination_workload_namespace }} : {{ response_code }} (\U0001F510mTLS)\",
      \"refId\": \"A\", \"step\": 2 }, { \"expr\": \"round(sum(irate(istio_requests_total{connection_security_policy!=\\\"mutual_tls\\\",
      destination_service=~\\\"$service\\\", reporter=\\\"destination\\\", destination_workload=~\\\"$dstwl\\\",
      destination_workload_namespace=~\\\"$dstns\\\"}[5m])) by (destination_workload,
      destination_workload_namespace, response_code), 0.001)\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_workload
      }}.{{ destination_workload_namespace }} : {{ response_code }}\", \"refId\":
      \"B\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\":
      [], \"timeShift\": null, \"title\": \"Incoming Requests By Destination Workload
      And Response Code\", \"tooltip\": { \"shared\": false, \"sort\": 0, \"value_type\":
      \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\":
      \"time\", \"name\": null, \"show\": true, \"values\": [ \"total\" ] }, \"yaxes\":
      [ { \"format\": \"ops\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\":
      \"0\", \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\":
      1, \"max\": null, \"min\": null, \"show\": false } ], \"yaxis\": { \"align\":
      false, \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\":
      10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fieldConfig\": { \"defaults\":
      { \"custom\": {} }, \"overrides\": [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\":
      { \"h\": 6, \"w\": 12, \"x\": 12, \"y\": 6 }, \"hiddenSeries\": false, \"id\":
      91, \"legend\": { \"avg\": false, \"current\": false, \"hideEmpty\": true, \"hideZero\":
      false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\":
      false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\":
      \"null\", \"percentage\": false, \"pluginVersion\": \"7.1.0\", \"pointradius\":
      5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\":
      10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"sum(irate(istio_requests_total{reporter=\\\"destination\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",response_code!~\\\"5.*\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[5m]))
      by (destination_workload, destination_workload_namespace) / sum(irate(istio_requests_total{reporter=\\\"destination\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[5m]))
      by (destination_workload, destination_workload_namespace)\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_workload
      }}.{{ destination_workload_namespace }} (\U0001F510mTLS)\", \"refId\": \"A\",
      \"step\": 2 }, { \"expr\": \"sum(irate(istio_requests_total{reporter=\\\"destination\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",response_code!~\\\"5.*\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[5m]))
      by (destination_workload, destination_workload_namespace) / sum(irate(istio_requests_total{reporter=\\\"destination\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[5m]))
      by (destination_workload, destination_workload_namespace)\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_workload
      }}.{{ destination_workload_namespace }}\", \"refId\": \"B\", \"step\": 2 } ],
      \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\":
      null, \"title\": \"Incoming Success Rate (non-5xx responses) By Destination
      Workload\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\"
      }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\",
      \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\":
      \"percentunit\", \"label\": null, \"logBase\": 1, \"max\": \"1.01\", \"min\":
      \"0\", \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\":
      1, \"max\": null, \"min\": null, \"show\": false } ], \"yaxis\": { \"align\":
      false, \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\":
      10, \"dashes\": false, \"datasource\": \"Prometheus\", \"description\": \"\",
      \"fieldConfig\": { \"defaults\": { \"custom\": {} }, \"overrides\": [] }, \"fill\":
      1, \"fillGradient\": 0, \"gridPos\": { \"h\": 6, \"w\": 8, \"x\": 0, \"y\":
      12 }, \"hiddenSeries\": false, \"id\": 94, \"legend\": { \"alignAsTable\": false,
      \"avg\": false, \"current\": false, \"hideEmpty\": true, \"hideZero\": false,
      \"max\": false, \"min\": false, \"rightSide\": false, \"show\": true, \"total\":
      false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [],
      \"nullPointMode\": \"null\", \"percentage\": false, \"pluginVersion\": \"7.1.0\",
      \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\":
      [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\":
      [ { \"expr\": \"(histogram_quantile(0.50, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"destination\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le)) / 1000) or histogram_quantile(0.50,
      sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"destination\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le))\", \"format\":
      \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{
      destination_workload }}.{{ destination_workload_namespace }} P50 (\U0001F510mTLS)\",
      \"refId\": \"A\", \"step\": 2 }, { \"expr\": \"(histogram_quantile(0.90, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"destination\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le)) / 1000) or histogram_quantile(0.90,
      sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"destination\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le))\", \"format\":
      \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{
      destination_workload }}.{{ destination_workload_namespace }} P90 (\U0001F510mTLS)\",
      \"refId\": \"B\", \"step\": 2 }, { \"expr\": \"(histogram_quantile(0.95, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"destination\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le)) / 1000) or histogram_quantile(0.95,
      sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"destination\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le))\", \"format\":
      \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{
      destination_workload }}.{{ destination_workload_namespace }} P95 (\U0001F510mTLS)\",
      \"refId\": \"C\", \"step\": 2 }, { \"expr\": \"(histogram_quantile(0.99, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"destination\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le)) / 1000) or histogram_quantile(0.99,
      sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"destination\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le))\", \"format\":
      \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{
      destination_workload }}.{{ destination_workload_namespace }} P99 (\U0001F510mTLS)\",
      \"refId\": \"D\", \"step\": 2 }, { \"expr\": \"(histogram_quantile(0.50, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"destination\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le)) / 1000) or histogram_quantile(0.50,
      sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"destination\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le))\", \"format\":
      \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{
      destination_workload }}.{{ destination_workload_namespace }} P50\", \"refId\":
      \"E\", \"step\": 2 }, { \"expr\": \"(histogram_quantile(0.90, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"destination\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le)) / 1000) or histogram_quantile(0.90,
      sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"destination\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le))\", \"format\":
      \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{
      destination_workload }}.{{ destination_workload_namespace }} P90\", \"refId\":
      \"F\", \"step\": 2 }, { \"expr\": \"(histogram_quantile(0.95, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"destination\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le)) / 1000) or histogram_quantile(0.95,
      sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"destination\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le))\", \"format\":
      \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{
      destination_workload }}.{{ destination_workload_namespace }} P95\", \"refId\":
      \"G\", \"step\": 2 }, { \"expr\": \"(histogram_quantile(0.99, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"destination\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le)) / 1000) or histogram_quantile(0.99,
      sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"destination\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le))\", \"format\":
      \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{
      destination_workload }}.{{ destination_workload_namespace }} P99\", \"refId\":
      \"H\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\":
      [], \"timeShift\": null, \"title\": \"Incoming Request Duration By Service Workload\",
      \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\"
      }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\",
      \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\":
      \"s\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": \"0\", \"show\":
      true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null,
      \"min\": null, \"show\": false } ], \"yaxis\": { \"align\": false, \"alignLevel\":
      null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\":
      false, \"datasource\": \"Prometheus\", \"fieldConfig\": { \"defaults\": { \"custom\":
      {} }, \"overrides\": [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\": {
      \"h\": 6, \"w\": 8, \"x\": 8, \"y\": 12 }, \"hiddenSeries\": false, \"id\":
      95, \"legend\": { \"alignAsTable\": false, \"avg\": false, \"current\": false,
      \"hideEmpty\": true, \"max\": false, \"min\": false, \"rightSide\": false, \"show\":
      true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\":
      1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pluginVersion\":
      \"7.1.0\", \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\":
      [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\":
      [ { \"expr\": \"histogram_quantile(0.50, sum(irate(istio_request_bytes_bucket{reporter=\\\"destination\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le))\", \"format\":
      \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{
      destination_workload }}.{{ destination_workload_namespace }} P50 (\U0001F510mTLS)\",
      \"refId\": \"A\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.90, sum(irate(istio_request_bytes_bucket{reporter=\\\"destination\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le))\", \"format\":
      \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{
      destination_workload }}.{{ destination_workload_namespace }}  P90 (\U0001F510mTLS)\",
      \"refId\": \"B\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.95, sum(irate(istio_request_bytes_bucket{reporter=\\\"destination\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le))\", \"format\":
      \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{
      destination_workload }}.{{ destination_workload_namespace }} P95 (\U0001F510mTLS)\",
      \"refId\": \"C\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.99, sum(irate(istio_request_bytes_bucket{reporter=\\\"destination\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le))\", \"format\":
      \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{
      destination_workload }}.{{ destination_workload_namespace }}  P99 (\U0001F510mTLS)\",
      \"refId\": \"D\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.50, sum(irate(istio_request_bytes_bucket{reporter=\\\"destination\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le))\", \"format\":
      \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{
      destination_workload }}.{{ destination_workload_namespace }} P50\", \"refId\":
      \"E\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.90, sum(irate(istio_request_bytes_bucket{reporter=\\\"destination\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le))\", \"format\":
      \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{
      destination_workload }}.{{ destination_workload_namespace }} P90\", \"refId\":
      \"F\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.95, sum(irate(istio_request_bytes_bucket{reporter=\\\"destination\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le))\", \"format\":
      \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{
      destination_workload }}.{{ destination_workload_namespace }} P95\", \"refId\":
      \"G\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.99, sum(irate(istio_request_bytes_bucket{reporter=\\\"destination\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le))\", \"format\":
      \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{
      destination_workload }}.{{ destination_workload_namespace }} P99\", \"refId\":
      \"H\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\":
      [], \"timeShift\": null, \"title\": \"Incoming Request Size By Service Workload\",
      \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\"
      }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\",
      \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\":
      \"decbytes\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": \"0\",
      \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1,
      \"max\": null, \"min\": null, \"show\": false } ], \"yaxis\": { \"align\": false,
      \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\":
      10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fieldConfig\": { \"defaults\":
      { \"custom\": {} }, \"overrides\": [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\":
      { \"h\": 6, \"w\": 8, \"x\": 16, \"y\": 12 }, \"hiddenSeries\": false, \"id\":
      96, \"legend\": { \"alignAsTable\": false, \"avg\": false, \"current\": false,
      \"hideEmpty\": true, \"max\": false, \"min\": false, \"rightSide\": false, \"show\":
      true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\":
      1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pluginVersion\":
      \"7.1.0\", \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\":
      [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\":
      [ { \"expr\": \"histogram_quantile(0.50, sum(irate(istio_response_bytes_bucket{reporter=\\\"destination\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le))\", \"format\":
      \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{
      destination_workload }}.{{ destination_workload_namespace }} P50 (\U0001F510mTLS)\",
      \"refId\": \"A\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.90, sum(irate(istio_response_bytes_bucket{reporter=\\\"destination\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le))\", \"format\":
      \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{
      destination_workload }}.{{ destination_workload_namespace }}  P90 (\U0001F510mTLS)\",
      \"refId\": \"B\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.95, sum(irate(istio_response_bytes_bucket{reporter=\\\"destination\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le))\", \"format\":
      \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{
      destination_workload }}.{{ destination_workload_namespace }} P95 (\U0001F510mTLS)\",
      \"refId\": \"C\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.99, sum(irate(istio_response_bytes_bucket{reporter=\\\"destination\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le))\", \"format\":
      \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{
      destination_workload }}.{{ destination_workload_namespace }}  P99 (\U0001F510mTLS)\",
      \"refId\": \"D\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.50, sum(irate(istio_response_bytes_bucket{reporter=\\\"destination\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le))\", \"format\":
      \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{
      destination_workload }}.{{ destination_workload_namespace }} P50\", \"refId\":
      \"E\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.90, sum(irate(istio_response_bytes_bucket{reporter=\\\"destination\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le))\", \"format\":
      \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{
      destination_workload }}.{{ destination_workload_namespace }} P90\", \"refId\":
      \"F\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.95, sum(irate(istio_response_bytes_bucket{reporter=\\\"destination\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le))\", \"format\":
      \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{
      destination_workload }}.{{ destination_workload_namespace }} P95\", \"refId\":
      \"G\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.99, sum(irate(istio_response_bytes_bucket{reporter=\\\"destination\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace, le))\", \"format\":
      \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{
      destination_workload }}.{{ destination_workload_namespace }} P99\", \"refId\":
      \"H\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\":
      [], \"timeShift\": null, \"title\": \"Response Size By Service Workload\", \"tooltip\":
      { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\":
      \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null,
      \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"decbytes\", \"label\":
      null, \"logBase\": 1, \"max\": null, \"min\": \"0\", \"show\": true }, { \"format\":
      \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\":
      false } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"aliasColors\":
      {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\":
      \"Prometheus\", \"fieldConfig\": { \"defaults\": { \"custom\": {} }, \"overrides\":
      [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\": { \"h\": 6, \"w\": 12,
      \"x\": 0, \"y\": 18 }, \"hiddenSeries\": false, \"id\": 92, \"legend\": { \"avg\":
      false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\":
      false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [],
      \"nullPointMode\": \"null\", \"percentage\": false, \"pluginVersion\": \"7.1.0\",
      \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\":
      [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\":
      [ { \"expr\": \"round(sum(irate(istio_tcp_received_bytes_total{reporter=\\\"destination\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace), 0.001)\", \"format\":
      \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{
      destination_workload }}.{{ destination_workload_namespace}} (\U0001F510mTLS)\",
      \"refId\": \"A\", \"step\": 2 }, { \"expr\": \"round(sum(irate(istio_tcp_received_bytes_total{reporter=\\\"destination\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_service=~\\\"$service\\\",
      destination_workload=~\\\"$dstwl\\\", destination_workload_namespace=~\\\"$dstns\\\"}[1m]))
      by (destination_workload, destination_workload_namespace), 0.001)\", \"format\":
      \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_workload
      }}.{{ destination_workload_namespace}}\", \"refId\": \"B\", \"step\": 2 } ],
      \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\":
      null, \"title\": \"Bytes Received from Incoming TCP Connection\", \"tooltip\":
      { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\":
      \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null,
      \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"Bps\", \"label\":
      null, \"logBase\": 1, \"max\": null, \"min\": \"0\", \"show\": true }, { \"format\":
      \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\":
      true } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"aliasColors\":
      {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\":
      \"Prometheus\", \"fieldConfig\": { \"defaults\": { \"custom\": {} }, \"overrides\":
      [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\": { \"h\": 6, \"w\": 12,
      \"x\": 12, \"y\": 18 }, \"hiddenSeries\": false, \"id\": 93, \"legend\": { \"avg\":
      false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\":
      false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [],
      \"nullPointMode\": \"null\", \"percentage\": false, \"pluginVersion\": \"7.1.0\",
      \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\":
      [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\":
      [ { \"expr\": \"round(sum(irate(istio_tcp_sent_bytes_total{connection_security_policy=\\\"mutual_tls\\\",
      reporter=\\\"destination\\\", destination_service=~\\\"$service\\\", destination_workload=~\\\"$dstwl\\\",
      destination_workload_namespace=~\\\"$dstns\\\"}[1m])) by (destination_workload,
      destination_workload_namespace), 0.001)\", \"format\": \"time_series\", \"intervalFactor\":
      1, \"legendFormat\": \"{{ destination_workload }}.{{destination_workload_namespace
      }} (\U0001F510mTLS)\", \"refId\": \"A\", \"step\": 2 }, { \"expr\": \"round(sum(irate(istio_tcp_sent_bytes_total{connection_security_policy!=\\\"mutual_tls\\\",
      reporter=\\\"destination\\\", destination_service=~\\\"$service\\\", destination_workload=~\\\"$dstwl\\\",
      destination_workload_namespace=~\\\"$dstns\\\"}[1m])) by (destination_workload,
      destination_workload_namespace), 0.001)\", \"format\": \"time_series\", \"intervalFactor\":
      1, \"legendFormat\": \"{{ destination_workload }}.{{destination_workload_namespace
      }}\", \"refId\": \"B\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\": null,
      \"timeRegions\": [], \"timeShift\": null, \"title\": \"Bytes Sent to Incoming
      TCP Connection\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\":
      \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\":
      \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\":
      \"Bps\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": \"0\", \"show\":
      true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null,
      \"min\": null, \"show\": true } ], \"yaxis\": { \"align\": false, \"alignLevel\":
      null } } ], \"title\": \"Service Workloads\", \"type\": \"row\" } ], \"refresh\":
      \"1m\", \"schemaVersion\": 26, \"style\": \"dark\", \"tags\": [], \"templating\":
      { \"list\": [ { \"current\": { \"selected\": true, \"text\": \"default\", \"value\":
      \"default\" }, \"hide\": 0, \"includeAll\": false, \"label\": null, \"multi\":
      false, \"name\": \"datasource\", \"options\": [], \"query\": \"prometheus\",
      \"queryValue\": \"\", \"refresh\": 1, \"regex\": \"\", \"skipUrlSync\": false,
      \"type\": \"datasource\" }, { \"allValue\": null, \"current\": {}, \"datasource\":
      \"Prometheus\", \"definition\": \"\", \"hide\": 0, \"includeAll\": false, \"label\":
      \"Service\", \"multi\": false, \"name\": \"service\", \"options\": [], \"query\":
      \"label_values(destination_service)\", \"refresh\": 1, \"regex\": \"\", \"skipUrlSync\":
      false, \"sort\": 0, \"tagValuesQuery\": \"\", \"tags\": [], \"tagsQuery\": \"\",
      \"type\": \"query\", \"useTags\": false }, { \"allValue\": null, \"current\":
      { \"selected\": true, \"text\": \"destination\", \"value\": \"destination\"
      }, \"datasource\": \"Prometheus\", \"definition\": \"\", \"hide\": 0, \"includeAll\":
      false, \"label\": \"Reporter\", \"multi\": true, \"name\": \"qrep\", \"options\":
      [], \"query\": \"label_values(reporter)\", \"refresh\": 1, \"regex\": \"\",
      \"skipUrlSync\": false, \"sort\": 2, \"tagValuesQuery\": \"\", \"tags\": [],
      \"tagsQuery\": \"\", \"type\": \"query\", \"useTags\": false }, { \"allValue\":
      null, \"current\": {}, \"datasource\": \"Prometheus\", \"definition\": \"\",
      \"hide\": 0, \"includeAll\": true, \"label\": \"Client Workload Namespace\",
      \"multi\": true, \"name\": \"srcns\", \"options\": [], \"query\": \"query_result(sum(istio_requests_total{reporter=\\\"$qrep\\\",
      destination_service=\\\"$service\\\"}) by (source_workload_namespace) or sum(istio_tcp_sent_bytes_total{reporter=\\\"$qrep\\\",
      destination_service=~\\\"$service\\\"}) by (source_workload_namespace))\", \"refresh\":
      1, \"regex\": \"/.*namespace=\\\"([^\\\"]*).*/\", \"skipUrlSync\": false, \"sort\":
      2, \"tagValuesQuery\": \"\", \"tags\": [], \"tagsQuery\": \"\", \"type\": \"query\",
      \"useTags\": false }, { \"allValue\": null, \"current\": {}, \"datasource\":
      \"Prometheus\", \"definition\": \"\", \"hide\": 0, \"includeAll\": true, \"label\":
      \"Client Workload\", \"multi\": true, \"name\": \"srcwl\", \"options\": [],
      \"query\": \"query_result(sum(istio_requests_total{reporter=\\\"$qrep\\\", destination_service=~\\\"$service\\\",
      source_workload_namespace=~\\\"$srcns\\\"}) by (source_workload) or sum(istio_tcp_sent_bytes_total{reporter=\\\"$qrep\\\",
      destination_service=~\\\"$service\\\", source_workload_namespace=~\\\"$srcns\\\"})
      by (source_workload))\", \"refresh\": 1, \"regex\": \"/.*workload=\\\"([^\\\"]*).*/\",
      \"skipUrlSync\": false, \"sort\": 3, \"tagValuesQuery\": \"\", \"tags\": [],
      \"tagsQuery\": \"\", \"type\": \"query\", \"useTags\": false }, { \"allValue\":
      null, \"current\": {}, \"datasource\": \"Prometheus\", \"definition\": \"\",
      \"hide\": 0, \"includeAll\": true, \"label\": \"Service Workload Namespace\",
      \"multi\": true, \"name\": \"dstns\", \"options\": [], \"query\": \"query_result(sum(istio_requests_total{reporter=\\\"destination\\\",
      destination_service=\\\"$service\\\"}) by (destination_workload_namespace) or
      sum(istio_tcp_sent_bytes_total{reporter=\\\"destination\\\", destination_service=~\\\"$service\\\"})
      by (destination_workload_namespace))\", \"refresh\": 1, \"regex\": \"/.*namespace=\\\"([^\\\"]*).*/\",
      \"skipUrlSync\": false, \"sort\": 2, \"tagValuesQuery\": \"\", \"tags\": [],
      \"tagsQuery\": \"\", \"type\": \"query\", \"useTags\": false }, { \"allValue\":
      null, \"current\": {}, \"datasource\": \"Prometheus\", \"definition\": \"\",
      \"hide\": 0, \"includeAll\": true, \"label\": \"Service Workload\", \"multi\":
      true, \"name\": \"dstwl\", \"options\": [], \"query\": \"query_result( sum(istio_requests_total{reporter=\\\"destination\\\",
      destination_service=~\\\"$service\\\", destination_workload_namespace=~\\\"$dstns\\\"})
      by (destination_workload) or sum(istio_tcp_sent_bytes_total{reporter=\\\"destination\\\",
      destination_service=~\\\"$service\\\", destination_workload_namespace=~\\\"$dstns\\\"})
      by (destination_workload))\", \"refresh\": 1, \"regex\": \"/.*workload=\\\"([^\\\"]*).*/\",
      \"skipUrlSync\": false, \"sort\": 3, \"tagValuesQuery\": \"\", \"tags\": [],
      \"tagsQuery\": \"\", \"type\": \"query\", \"useTags\": false } ] }, \"time\":
      { \"from\": \"now-5m\", \"to\": \"now\" }, \"timepicker\": { \"refresh_intervals\":
      [ \"5m\", \"15m\", \"30m\", \"1h\", \"2h\", \"1d\" ], \"time_options\": [ \"5m\",
      \"15m\", \"1h\", \"6h\", \"12h\", \"24h\", \"2d\", \"7d\", \"30d\" ] }, \"timezone\":
      \"\", \"title\": \"Istio Service Dashboard\", \"uid\": \"LJ_uJAvmk\", \"version\":
      1 } "
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: "{\"apiVersion\":\"v1\",\"data\":{\"istio-service-dashboard.json\":\"{
        \\\"annotations\\\": { \\\"list\\\": [ { \\\"builtIn\\\": 1, \\\"datasource\\\":
        \\\"-- Grafana --\\\", \\\"enable\\\": true, \\\"hide\\\": true, \\\"iconColor\\\":
        \\\"rgba(0, 211, 255, 1)\\\", \\\"name\\\": \\\"Annotations \\u0026 Alerts\\\",
        \\\"type\\\": \\\"dashboard\\\" } ] }, \\\"editable\\\": false, \\\"gnetId\\\":
        null, \\\"graphTooltip\\\": 0, \\\"iteration\\\": 1595591291797, \\\"links\\\":
        [], \\\"panels\\\": [ { \\\"collapsed\\\": true, \\\"gridPos\\\": { \\\"h\\\":
        1, \\\"w\\\": 24, \\\"x\\\": 0, \\\"y\\\": 0 }, \\\"id\\\": 106, \\\"panels\\\":
        [ { \\\"content\\\": \\\"\\u003cdiv class=\\\\\\\"dashboard-header text-center\\\\\\\"\\u003e\\\\n\\u003cspan\\u003eSERVICE:
        $service\\u003c/span\\u003e\\\\n\\u003c/div\\u003e\\\", \\\"fieldConfig\\\":
        { \\\"defaults\\\": { \\\"custom\\\": {} }, \\\"overrides\\\": [] }, \\\"gridPos\\\":
        { \\\"h\\\": 3, \\\"w\\\": 24, \\\"x\\\": 0, \\\"y\\\": 1 }, \\\"id\\\": 89,
        \\\"links\\\": [], \\\"mode\\\": \\\"html\\\", \\\"options\\\": { \\\"content\\\":
        \\\"\\u003cdiv class=\\\\\\\"dashboard-header text-center\\\\\\\"\\u003e\\\\n\\u003cspan\\u003eSERVICE:
        $service\\u003c/span\\u003e\\\\n\\u003c/div\\u003e\\\", \\\"mode\\\": \\\"html\\\"
        }, \\\"pluginVersion\\\": \\\"7.1.0\\\", \\\"title\\\": \\\"\\\", \\\"transparent\\\":
        true, \\\"type\\\": \\\"text\\\" }, { \\\"cacheTimeout\\\": null, \\\"colorBackground\\\":
        false, \\\"colorValue\\\": false, \\\"colors\\\": [ \\\"rgba(245, 54, 54,
        0.9)\\\", \\\"rgba(237, 129, 40, 0.89)\\\", \\\"rgba(50, 172, 45, 0.97)\\\"
        ], \\\"datasource\\\": \\\"Prometheus\\\", \\\"fieldConfig\\\": { \\\"defaults\\\":
        { \\\"custom\\\": {} }, \\\"overrides\\\": [] }, \\\"format\\\": \\\"ops\\\",
        \\\"gauge\\\": { \\\"maxValue\\\": 100, \\\"minValue\\\": 0, \\\"show\\\":
        false, \\\"thresholdLabels\\\": false, \\\"thresholdMarkers\\\": true }, \\\"gridPos\\\":
        { \\\"h\\\": 4, \\\"w\\\": 6, \\\"x\\\": 0, \\\"y\\\": 4 }, \\\"id\\\": 12,
        \\\"interval\\\": null, \\\"links\\\": [], \\\"options\\\": { \\\"colorMode\\\":
        \\\"value\\\", \\\"graphMode\\\": \\\"area\\\", \\\"justifyMode\\\": \\\"auto\\\",
        \\\"orientation\\\": \\\"horizontal\\\", \\\"reduceOptions\\\": { \\\"calcs\\\":
        [ \\\"lastNotNull\\\" ], \\\"fields\\\": \\\"\\\", \\\"values\\\": false },
        \\\"textMode\\\": \\\"auto\\\" }, \\\"mappingType\\\": 1, \\\"mappingTypes\\\":
        [ { \\\"name\\\": \\\"value to text\\\", \\\"value\\\": 1 }, { \\\"name\\\":
        \\\"range to text\\\", \\\"value\\\": 2 } ], \\\"maxDataPoints\\\": 100, \\\"nullPointMode\\\":
        \\\"connected\\\", \\\"nullText\\\": null, \\\"postfix\\\": \\\"\\\", \\\"postfixFontSize\\\":
        \\\"50%\\\", \\\"prefix\\\": \\\"\\\", \\\"prefixFontSize\\\": \\\"50%\\\",
        \\\"rangeMaps\\\": [ { \\\"from\\\": \\\"null\\\", \\\"text\\\": \\\"N/A\\\",
        \\\"to\\\": \\\"null\\\" } ], \\\"sparkline\\\": { \\\"fillColor\\\": \\\"rgba(31,
        118, 189, 0.18)\\\", \\\"full\\\": true, \\\"lineColor\\\": \\\"rgb(31, 120,
        193)\\\", \\\"show\\\": true }, \\\"tableColumn\\\": \\\"\\\", \\\"targets\\\":
        [ { \\\"expr\\\": \\\"round(sum(irate(istio_requests_total{reporter=\\\\\\\"$qrep\\\\\\\",destination_service=~\\\\\\\"$service\\\\\\\"}[5m])),
        0.001)\\\", \\\"format\\\": \\\"time_series\\\", \\\"intervalFactor\\\": 1,
        \\\"refId\\\": \\\"A\\\", \\\"step\\\": 4 } ], \\\"thresholds\\\": \\\"\\\",
        \\\"title\\\": \\\"Client Request Volume\\\", \\\"type\\\": \\\"singlestat\\\",
        \\\"valueFontSize\\\": \\\"80%\\\", \\\"valueMaps\\\": [ { \\\"op\\\": \\\"=\\\",
        \\\"text\\\": \\\"N/A\\\", \\\"value\\\": \\\"null\\\" } ], \\\"valueName\\\":
        \\\"current\\\" }, { \\\"cacheTimeout\\\": null, \\\"colorBackground\\\":
        false, \\\"colorValue\\\": false, \\\"colors\\\": [ \\\"rgba(50, 172, 45,
        0.97)\\\", \\\"rgba(237, 129, 40, 0.89)\\\", \\\"rgba(245, 54, 54, 0.9)\\\"
        ], \\\"datasource\\\": \\\"Prometheus\\\", \\\"decimals\\\": null, \\\"fieldConfig\\\":
        { \\\"defaults\\\": { \\\"custom\\\": {} }, \\\"overrides\\\": [] }, \\\"format\\\":
        \\\"percentunit\\\", \\\"gauge\\\": { \\\"maxValue\\\": 100, \\\"minValue\\\":
        80, \\\"show\\\": false, \\\"thresholdLabels\\\": false, \\\"thresholdMarkers\\\":
        false }, \\\"gridPos\\\": { \\\"h\\\": 4, \\\"w\\\": 6, \\\"x\\\": 6, \\\"y\\\":
        4 }, \\\"id\\\": 14, \\\"interval\\\": null, \\\"links\\\": [], \\\"options\\\":
        { \\\"colorMode\\\": \\\"value\\\", \\\"graphMode\\\": \\\"area\\\", \\\"justifyMode\\\":
        \\\"auto\\\", \\\"orientation\\\": \\\"horizontal\\\", \\\"reduceOptions\\\":
        { \\\"calcs\\\": [ \\\"lastNotNull\\\" ], \\\"fields\\\": \\\"\\\", \\\"values\\\":
        false }, \\\"textMode\\\": \\\"auto\\\" }, \\\"mappingType\\\": 1, \\\"mappingTypes\\\":
        [ { \\\"name\\\": \\\"value to text\\\", \\\"value\\\": 1 }, { \\\"name\\\":
        \\\"range to text\\\", \\\"value\\\": 2 } ], \\\"maxDataPoints\\\": 100, \\\"nullPointMode\\\":
        \\\"connected\\\", \\\"nullText\\\": null, \\\"postfix\\\": \\\"\\\", \\\"postfixFontSize\\\":
        \\\"50%\\\", \\\"prefix\\\": \\\"\\\", \\\"prefixFontSize\\\": \\\"50%\\\",
        \\\"rangeMaps\\\": [ { \\\"from\\\": \\\"null\\\", \\\"text\\\": \\\"N/A\\\",
        \\\"to\\\": \\\"null\\\" } ], \\\"sparkline\\\": { \\\"fillColor\\\": \\\"rgba(31,
        118, 189, 0.18)\\\", \\\"full\\\": true, \\\"lineColor\\\": \\\"rgb(31, 120,
        193)\\\", \\\"show\\\": true }, \\\"tableColumn\\\": \\\"\\\", \\\"targets\\\":
        [ { \\\"expr\\\": \\\"sum(irate(istio_requests_total{reporter=\\\\\\\"$qrep\\\\\\\",destination_service=~\\\\\\\"$service\\\\\\\",response_code!~\\\\\\\"5.*\\\\\\\"}[5m]))
        / sum(irate(istio_requests_total{reporter=\\\\\\\"$qrep\\\\\\\",destination_service=~\\\\\\\"$service\\\\\\\"}[5m]))\\\",
        \\\"format\\\": \\\"time_series\\\", \\\"intervalFactor\\\": 1, \\\"refId\\\":
        \\\"A\\\" } ], \\\"thresholds\\\": \\\"95, 99, 99.5\\\", \\\"title\\\": \\\"Client
        Success Rate (non-5xx responses)\\\", \\\"type\\\": \\\"singlestat\\\", \\\"valueFontSize\\\":
        \\\"80%\\\", \\\"valueMaps\\\": [ { \\\"op\\\": \\\"=\\\", \\\"text\\\": \\\"N/A\\\",
        \\\"value\\\": \\\"null\\\" } ], \\\"valueName\\\": \\\"avg\\\" }, { \\\"aliasColors\\\":
        {}, \\\"bars\\\": false, \\\"dashLength\\\": 10, \\\"dashes\\\": false, \\\"datasource\\\":
        \\\"Prometheus\\\", \\\"fieldConfig\\\": { \\\"defaults\\\": { \\\"custom\\\":
        {} }, \\\"overrides\\\": [] }, \\\"fill\\\": 1, \\\"fillGradient\\\": 0, \\\"gridPos\\\":
        { \\\"h\\\": 4, \\\"w\\\": 6, \\\"x\\\": 12, \\\"y\\\": 4 }, \\\"hiddenSeries\\\":
        false, \\\"id\\\": 87, \\\"legend\\\": { \\\"alignAsTable\\\": false, \\\"avg\\\":
        false, \\\"current\\\": false, \\\"hideEmpty\\\": false, \\\"hideZero\\\":
        false, \\\"max\\\": false, \\\"min\\\": false, \\\"rightSide\\\": true, \\\"show\\\":
        true, \\\"total\\\": false, \\\"values\\\": false }, \\\"lines\\\": true,
        \\\"linewidth\\\": 1, \\\"links\\\": [], \\\"nullPointMode\\\": \\\"null\\\",
        \\\"percentage\\\": false, \\\"pluginVersion\\\": \\\"7.1.0\\\", \\\"pointradius\\\":
        5, \\\"points\\\": false, \\\"renderer\\\": \\\"flot\\\", \\\"seriesOverrides\\\":
        [], \\\"spaceLength\\\": 10, \\\"stack\\\": false, \\\"steppedLine\\\": false,
        \\\"targets\\\": [ { \\\"expr\\\": \\\"(histogram_quantile(0.50, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",destination_service=~\\\\\\\"$service\\\\\\\"}[1m]))
        by (le)) / 1000) or histogram_quantile(0.50, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",destination_service=~\\\\\\\"$service\\\\\\\"}[1m]))
        by (le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"interval\\\": \\\"\\\",
        \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"P50\\\", \\\"refId\\\":
        \\\"A\\\" }, { \\\"expr\\\": \\\"(histogram_quantile(0.90, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",destination_service=~\\\\\\\"$service\\\\\\\"}[1m]))
        by (le)) / 1000) or histogram_quantile(0.90, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",destination_service=~\\\\\\\"$service\\\\\\\"}[1m]))
        by (le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\":
        1, \\\"legendFormat\\\": \\\"P90\\\", \\\"refId\\\": \\\"B\\\" }, { \\\"expr\\\":
        \\\"(histogram_quantile(0.99, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",destination_service=~\\\\\\\"$service\\\\\\\"}[1m]))
        by (le)) / 1000) or histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",destination_service=~\\\\\\\"$service\\\\\\\"}[1m]))
        by (le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\":
        1, \\\"legendFormat\\\": \\\"P99\\\", \\\"refId\\\": \\\"C\\\" } ], \\\"thresholds\\\":
        [], \\\"timeFrom\\\": null, \\\"timeRegions\\\": [], \\\"timeShift\\\": null,
        \\\"title\\\": \\\"Client Request Duration\\\", \\\"tooltip\\\": { \\\"shared\\\":
        true, \\\"sort\\\": 0, \\\"value_type\\\": \\\"individual\\\" }, \\\"type\\\":
        \\\"graph\\\", \\\"xaxis\\\": { \\\"buckets\\\": null, \\\"mode\\\": \\\"time\\\",
        \\\"name\\\": null, \\\"show\\\": true, \\\"values\\\": [] }, \\\"yaxes\\\":
        [ { \\\"format\\\": \\\"s\\\", \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\":
        null, \\\"min\\\": null, \\\"show\\\": true }, { \\\"format\\\": \\\"short\\\",
        \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null, \\\"min\\\": null,
        \\\"show\\\": false } ], \\\"yaxis\\\": { \\\"align\\\": false, \\\"alignLevel\\\":
        null } }, { \\\"cacheTimeout\\\": null, \\\"colorBackground\\\": false, \\\"colorValue\\\":
        false, \\\"colors\\\": [ \\\"#299c46\\\", \\\"rgba(237, 129, 40, 0.89)\\\",
        \\\"#d44a3a\\\" ], \\\"datasource\\\": \\\"Prometheus\\\", \\\"fieldConfig\\\":
        { \\\"defaults\\\": { \\\"custom\\\": {} }, \\\"overrides\\\": [] }, \\\"format\\\":
        \\\"Bps\\\", \\\"gauge\\\": { \\\"maxValue\\\": 100, \\\"minValue\\\": 0,
        \\\"show\\\": false, \\\"thresholdLabels\\\": false, \\\"thresholdMarkers\\\":
        true }, \\\"gridPos\\\": { \\\"h\\\": 4, \\\"w\\\": 6, \\\"x\\\": 18, \\\"y\\\":
        4 }, \\\"id\\\": 84, \\\"interval\\\": null, \\\"links\\\": [], \\\"options\\\":
        { \\\"colorMode\\\": \\\"value\\\", \\\"graphMode\\\": \\\"area\\\", \\\"justifyMode\\\":
        \\\"auto\\\", \\\"orientation\\\": \\\"horizontal\\\", \\\"reduceOptions\\\":
        { \\\"calcs\\\": [ \\\"lastNotNull\\\" ], \\\"fields\\\": \\\"\\\", \\\"values\\\":
        false }, \\\"textMode\\\": \\\"auto\\\" }, \\\"mappingType\\\": 1, \\\"mappingTypes\\\":
        [ { \\\"name\\\": \\\"value to text\\\", \\\"value\\\": 1 }, { \\\"name\\\":
        \\\"range to text\\\", \\\"value\\\": 2 } ], \\\"maxDataPoints\\\": 100, \\\"nullPointMode\\\":
        \\\"connected\\\", \\\"nullText\\\": null, \\\"postfix\\\": \\\"\\\", \\\"postfixFontSize\\\":
        \\\"50%\\\", \\\"prefix\\\": \\\"\\\", \\\"prefixFontSize\\\": \\\"50%\\\",
        \\\"rangeMaps\\\": [ { \\\"from\\\": \\\"null\\\", \\\"text\\\": \\\"N/A\\\",
        \\\"to\\\": \\\"null\\\" } ], \\\"sparkline\\\": { \\\"fillColor\\\": \\\"rgba(31,
        118, 189, 0.18)\\\", \\\"full\\\": true, \\\"lineColor\\\": \\\"rgb(31, 120,
        193)\\\", \\\"show\\\": true }, \\\"tableColumn\\\": \\\"\\\", \\\"targets\\\":
        [ { \\\"expr\\\": \\\"sum(irate(istio_tcp_received_bytes_total{reporter=\\\\\\\"$qrep\\\\\\\",
        destination_service=~\\\\\\\"$service\\\\\\\"}[1m]))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"\\\", \\\"refId\\\": \\\"A\\\" } ], \\\"thresholds\\\": \\\"\\\", \\\"title\\\":
        \\\"TCP Received Bytes\\\", \\\"type\\\": \\\"singlestat\\\", \\\"valueFontSize\\\":
        \\\"80%\\\", \\\"valueMaps\\\": [ { \\\"op\\\": \\\"=\\\", \\\"text\\\": \\\"N/A\\\",
        \\\"value\\\": \\\"null\\\" } ], \\\"valueName\\\": \\\"avg\\\" }, { \\\"cacheTimeout\\\":
        null, \\\"colorBackground\\\": false, \\\"colorValue\\\": false, \\\"colors\\\":
        [ \\\"rgba(245, 54, 54, 0.9)\\\", \\\"rgba(237, 129, 40, 0.89)\\\", \\\"rgba(50,
        172, 45, 0.97)\\\" ], \\\"datasource\\\": \\\"Prometheus\\\", \\\"fieldConfig\\\":
        { \\\"defaults\\\": { \\\"custom\\\": {} }, \\\"overrides\\\": [] }, \\\"format\\\":
        \\\"ops\\\", \\\"gauge\\\": { \\\"maxValue\\\": 100, \\\"minValue\\\": 0,
        \\\"show\\\": false, \\\"thresholdLabels\\\": false, \\\"thresholdMarkers\\\":
        true }, \\\"gridPos\\\": { \\\"h\\\": 4, \\\"w\\\": 6, \\\"x\\\": 0, \\\"y\\\":
        8 }, \\\"id\\\": 97, \\\"interval\\\": null, \\\"links\\\": [], \\\"options\\\":
        { \\\"colorMode\\\": \\\"value\\\", \\\"graphMode\\\": \\\"area\\\", \\\"justifyMode\\\":
        \\\"auto\\\", \\\"orientation\\\": \\\"horizontal\\\", \\\"reduceOptions\\\":
        { \\\"calcs\\\": [ \\\"lastNotNull\\\" ], \\\"fields\\\": \\\"\\\", \\\"values\\\":
        false }, \\\"textMode\\\": \\\"auto\\\" }, \\\"mappingType\\\": 1, \\\"mappingTypes\\\":
        [ { \\\"name\\\": \\\"value to text\\\", \\\"value\\\": 1 }, { \\\"name\\\":
        \\\"range to text\\\", \\\"value\\\": 2 } ], \\\"maxDataPoints\\\": 100, \\\"nullPointMode\\\":
        \\\"connected\\\", \\\"nullText\\\": null, \\\"postfix\\\": \\\"\\\", \\\"postfixFontSize\\\":
        \\\"50%\\\", \\\"prefix\\\": \\\"\\\", \\\"prefixFontSize\\\": \\\"50%\\\",
        \\\"rangeMaps\\\": [ { \\\"from\\\": \\\"null\\\", \\\"text\\\": \\\"N/A\\\",
        \\\"to\\\": \\\"null\\\" } ], \\\"sparkline\\\": { \\\"fillColor\\\": \\\"rgba(31,
        118, 189, 0.18)\\\", \\\"full\\\": true, \\\"lineColor\\\": \\\"rgb(31, 120,
        193)\\\", \\\"show\\\": true }, \\\"tableColumn\\\": \\\"\\\", \\\"targets\\\":
        [ { \\\"expr\\\": \\\"round(sum(irate(istio_requests_total{reporter=\\\\\\\"destination\\\\\\\",destination_service=~\\\\\\\"$service\\\\\\\"}[5m])),
        0.001)\\\", \\\"format\\\": \\\"time_series\\\", \\\"intervalFactor\\\": 1,
        \\\"refId\\\": \\\"A\\\", \\\"step\\\": 4 } ], \\\"thresholds\\\": \\\"\\\",
        \\\"title\\\": \\\"Server Request Volume\\\", \\\"type\\\": \\\"singlestat\\\",
        \\\"valueFontSize\\\": \\\"80%\\\", \\\"valueMaps\\\": [ { \\\"op\\\": \\\"=\\\",
        \\\"text\\\": \\\"N/A\\\", \\\"value\\\": \\\"null\\\" } ], \\\"valueName\\\":
        \\\"current\\\" }, { \\\"cacheTimeout\\\": null, \\\"colorBackground\\\":
        false, \\\"colorValue\\\": false, \\\"colors\\\": [ \\\"rgba(50, 172, 45,
        0.97)\\\", \\\"rgba(237, 129, 40, 0.89)\\\", \\\"rgba(245, 54, 54, 0.9)\\\"
        ], \\\"datasource\\\": \\\"Prometheus\\\", \\\"decimals\\\": null, \\\"fieldConfig\\\":
        { \\\"defaults\\\": { \\\"custom\\\": {} }, \\\"overrides\\\": [] }, \\\"format\\\":
        \\\"percentunit\\\", \\\"gauge\\\": { \\\"maxValue\\\": 100, \\\"minValue\\\":
        80, \\\"show\\\": false, \\\"thresholdLabels\\\": false, \\\"thresholdMarkers\\\":
        false }, \\\"gridPos\\\": { \\\"h\\\": 4, \\\"w\\\": 6, \\\"x\\\": 6, \\\"y\\\":
        8 }, \\\"id\\\": 98, \\\"interval\\\": null, \\\"links\\\": [], \\\"options\\\":
        { \\\"colorMode\\\": \\\"value\\\", \\\"graphMode\\\": \\\"area\\\", \\\"justifyMode\\\":
        \\\"auto\\\", \\\"orientation\\\": \\\"horizontal\\\", \\\"reduceOptions\\\":
        { \\\"calcs\\\": [ \\\"lastNotNull\\\" ], \\\"fields\\\": \\\"\\\", \\\"values\\\":
        false }, \\\"textMode\\\": \\\"auto\\\" }, \\\"mappingType\\\": 1, \\\"mappingTypes\\\":
        [ { \\\"name\\\": \\\"value to text\\\", \\\"value\\\": 1 }, { \\\"name\\\":
        \\\"range to text\\\", \\\"value\\\": 2 } ], \\\"maxDataPoints\\\": 100, \\\"nullPointMode\\\":
        \\\"connected\\\", \\\"nullText\\\": null, \\\"postfix\\\": \\\"\\\", \\\"postfixFontSize\\\":
        \\\"50%\\\", \\\"prefix\\\": \\\"\\\", \\\"prefixFontSize\\\": \\\"50%\\\",
        \\\"rangeMaps\\\": [ { \\\"from\\\": \\\"null\\\", \\\"text\\\": \\\"N/A\\\",
        \\\"to\\\": \\\"null\\\" } ], \\\"sparkline\\\": { \\\"fillColor\\\": \\\"rgba(31,
        118, 189, 0.18)\\\", \\\"full\\\": true, \\\"lineColor\\\": \\\"rgb(31, 120,
        193)\\\", \\\"show\\\": true }, \\\"tableColumn\\\": \\\"\\\", \\\"targets\\\":
        [ { \\\"expr\\\": \\\"sum(irate(istio_requests_total{reporter=\\\\\\\"destination\\\\\\\",destination_service=~\\\\\\\"$service\\\\\\\",response_code!~\\\\\\\"5.*\\\\\\\"}[5m]))
        / sum(irate(istio_requests_total{reporter=\\\\\\\"destination\\\\\\\",destination_service=~\\\\\\\"$service\\\\\\\"}[5m]))\\\",
        \\\"format\\\": \\\"time_series\\\", \\\"intervalFactor\\\": 1, \\\"refId\\\":
        \\\"A\\\" } ], \\\"thresholds\\\": \\\"95, 99, 99.5\\\", \\\"title\\\": \\\"Server
        Success Rate (non-5xx responses)\\\", \\\"type\\\": \\\"singlestat\\\", \\\"valueFontSize\\\":
        \\\"80%\\\", \\\"valueMaps\\\": [ { \\\"op\\\": \\\"=\\\", \\\"text\\\": \\\"N/A\\\",
        \\\"value\\\": \\\"null\\\" } ], \\\"valueName\\\": \\\"avg\\\" }, { \\\"aliasColors\\\":
        {}, \\\"bars\\\": false, \\\"dashLength\\\": 10, \\\"dashes\\\": false, \\\"datasource\\\":
        \\\"Prometheus\\\", \\\"fieldConfig\\\": { \\\"defaults\\\": { \\\"custom\\\":
        {} }, \\\"overrides\\\": [] }, \\\"fill\\\": 1, \\\"fillGradient\\\": 0, \\\"gridPos\\\":
        { \\\"h\\\": 4, \\\"w\\\": 6, \\\"x\\\": 12, \\\"y\\\": 8 }, \\\"hiddenSeries\\\":
        false, \\\"id\\\": 99, \\\"legend\\\": { \\\"alignAsTable\\\": false, \\\"avg\\\":
        false, \\\"current\\\": false, \\\"hideEmpty\\\": false, \\\"hideZero\\\":
        false, \\\"max\\\": false, \\\"min\\\": false, \\\"rightSide\\\": true, \\\"show\\\":
        true, \\\"total\\\": false, \\\"values\\\": false }, \\\"lines\\\": true,
        \\\"linewidth\\\": 1, \\\"links\\\": [], \\\"nullPointMode\\\": \\\"null\\\",
        \\\"percentage\\\": false, \\\"pluginVersion\\\": \\\"7.1.0\\\", \\\"pointradius\\\":
        5, \\\"points\\\": false, \\\"renderer\\\": \\\"flot\\\", \\\"seriesOverrides\\\":
        [], \\\"spaceLength\\\": 10, \\\"stack\\\": false, \\\"steppedLine\\\": false,
        \\\"targets\\\": [ { \\\"expr\\\": \\\"(histogram_quantile(0.50, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"destination\\\\\\\",destination_service=~\\\\\\\"$service\\\\\\\"}[1m]))
        by (le)) / 1000) or histogram_quantile(0.50, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"destination\\\\\\\",destination_service=~\\\\\\\"$service\\\\\\\"}[1m]))
        by (le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"interval\\\": \\\"\\\",
        \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"P50\\\", \\\"refId\\\":
        \\\"A\\\" }, { \\\"expr\\\": \\\"(histogram_quantile(0.90, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"destination\\\\\\\",destination_service=~\\\\\\\"$service\\\\\\\"}[1m]))
        by (le)) / 1000) or histogram_quantile(0.90, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"destination\\\\\\\",destination_service=~\\\\\\\"$service\\\\\\\"}[1m]))
        by (le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\":
        1, \\\"legendFormat\\\": \\\"P90\\\", \\\"refId\\\": \\\"B\\\" }, { \\\"expr\\\":
        \\\"(histogram_quantile(0.99, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"destination\\\\\\\",destination_service=~\\\\\\\"$service\\\\\\\"}[1m]))
        by (le)) / 1000) or histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"destination\\\\\\\",destination_service=~\\\\\\\"$service\\\\\\\"}[1m]))
        by (le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\":
        1, \\\"legendFormat\\\": \\\"P99\\\", \\\"refId\\\": \\\"C\\\" } ], \\\"thresholds\\\":
        [], \\\"timeFrom\\\": null, \\\"timeRegions\\\": [], \\\"timeShift\\\": null,
        \\\"title\\\": \\\"Server Request Duration\\\", \\\"tooltip\\\": { \\\"shared\\\":
        true, \\\"sort\\\": 0, \\\"value_type\\\": \\\"individual\\\" }, \\\"type\\\":
        \\\"graph\\\", \\\"xaxis\\\": { \\\"buckets\\\": null, \\\"mode\\\": \\\"time\\\",
        \\\"name\\\": null, \\\"show\\\": true, \\\"values\\\": [] }, \\\"yaxes\\\":
        [ { \\\"format\\\": \\\"s\\\", \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\":
        null, \\\"min\\\": null, \\\"show\\\": true }, { \\\"format\\\": \\\"short\\\",
        \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null, \\\"min\\\": null,
        \\\"show\\\": false } ], \\\"yaxis\\\": { \\\"align\\\": false, \\\"alignLevel\\\":
        null } }, { \\\"cacheTimeout\\\": null, \\\"colorBackground\\\": false, \\\"colorValue\\\":
        false, \\\"colors\\\": [ \\\"#299c46\\\", \\\"rgba(237, 129, 40, 0.89)\\\",
        \\\"#d44a3a\\\" ], \\\"datasource\\\": \\\"Prometheus\\\", \\\"fieldConfig\\\":
        { \\\"defaults\\\": { \\\"custom\\\": {} }, \\\"overrides\\\": [] }, \\\"format\\\":
        \\\"Bps\\\", \\\"gauge\\\": { \\\"maxValue\\\": 100, \\\"minValue\\\": 0,
        \\\"show\\\": false, \\\"thresholdLabels\\\": false, \\\"thresholdMarkers\\\":
        true }, \\\"gridPos\\\": { \\\"h\\\": 4, \\\"w\\\": 6, \\\"x\\\": 18, \\\"y\\\":
        8 }, \\\"id\\\": 100, \\\"interval\\\": null, \\\"links\\\": [], \\\"options\\\":
        { \\\"colorMode\\\": \\\"value\\\", \\\"graphMode\\\": \\\"area\\\", \\\"justifyMode\\\":
        \\\"auto\\\", \\\"orientation\\\": \\\"horizontal\\\", \\\"reduceOptions\\\":
        { \\\"calcs\\\": [ \\\"lastNotNull\\\" ], \\\"fields\\\": \\\"\\\", \\\"values\\\":
        false }, \\\"textMode\\\": \\\"auto\\\" }, \\\"mappingType\\\": 1, \\\"mappingTypes\\\":
        [ { \\\"name\\\": \\\"value to text\\\", \\\"value\\\": 1 }, { \\\"name\\\":
        \\\"range to text\\\", \\\"value\\\": 2 } ], \\\"maxDataPoints\\\": 100, \\\"nullPointMode\\\":
        \\\"connected\\\", \\\"nullText\\\": null, \\\"postfix\\\": \\\"\\\", \\\"postfixFontSize\\\":
        \\\"50%\\\", \\\"prefix\\\": \\\"\\\", \\\"prefixFontSize\\\": \\\"50%\\\",
        \\\"rangeMaps\\\": [ { \\\"from\\\": \\\"null\\\", \\\"text\\\": \\\"N/A\\\",
        \\\"to\\\": \\\"null\\\" } ], \\\"sparkline\\\": { \\\"fillColor\\\": \\\"rgba(31,
        118, 189, 0.18)\\\", \\\"full\\\": true, \\\"lineColor\\\": \\\"rgb(31, 120,
        193)\\\", \\\"show\\\": true }, \\\"tableColumn\\\": \\\"\\\", \\\"targets\\\":
        [ { \\\"expr\\\": \\\"sum(irate(istio_tcp_sent_bytes_total{reporter=\\\\\\\"$qrep\\\\\\\",
        destination_service=~\\\\\\\"$service\\\\\\\"}[1m]))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"\\\", \\\"refId\\\": \\\"A\\\" } ], \\\"thresholds\\\": \\\"\\\", \\\"title\\\":
        \\\"TCP Sent Bytes\\\", \\\"type\\\": \\\"singlestat\\\", \\\"valueFontSize\\\":
        \\\"80%\\\", \\\"valueMaps\\\": [ { \\\"op\\\": \\\"=\\\", \\\"text\\\": \\\"N/A\\\",
        \\\"value\\\": \\\"null\\\" } ], \\\"valueName\\\": \\\"avg\\\" } ], \\\"title\\\":
        \\\"General\\\", \\\"type\\\": \\\"row\\\" }, { \\\"collapsed\\\": true, \\\"gridPos\\\":
        { \\\"h\\\": 1, \\\"w\\\": 24, \\\"x\\\": 0, \\\"y\\\": 1 }, \\\"id\\\": 104,
        \\\"panels\\\": [ { \\\"content\\\": \\\"\\u003cdiv class=\\\\\\\"dashboard-header
        text-center\\\\\\\"\\u003e\\\\n\\u003cspan\\u003eCLIENT WORKLOADS\\u003c/span\\u003e\\\\n\\u003c/div\\u003e\\\",
        \\\"fieldConfig\\\": { \\\"defaults\\\": { \\\"custom\\\": {} }, \\\"overrides\\\":
        [] }, \\\"gridPos\\\": { \\\"h\\\": 3, \\\"w\\\": 24, \\\"x\\\": 0, \\\"y\\\":
        2 }, \\\"id\\\": 45, \\\"links\\\": [], \\\"mode\\\": \\\"html\\\", \\\"options\\\":
        { \\\"content\\\": \\\"\\u003cdiv class=\\\\\\\"dashboard-header text-center\\\\\\\"\\u003e\\\\n\\u003cspan\\u003eCLIENT
        WORKLOADS\\u003c/span\\u003e\\\\n\\u003c/div\\u003e\\\", \\\"mode\\\": \\\"html\\\"
        }, \\\"pluginVersion\\\": \\\"7.1.0\\\", \\\"title\\\": \\\"\\\", \\\"transparent\\\":
        true, \\\"type\\\": \\\"text\\\" }, { \\\"aliasColors\\\": {}, \\\"bars\\\":
        false, \\\"dashLength\\\": 10, \\\"dashes\\\": false, \\\"datasource\\\":
        \\\"Prometheus\\\", \\\"fieldConfig\\\": { \\\"defaults\\\": { \\\"custom\\\":
        {} }, \\\"overrides\\\": [] }, \\\"fill\\\": 0, \\\"fillGradient\\\": 0, \\\"gridPos\\\":
        { \\\"h\\\": 6, \\\"w\\\": 12, \\\"x\\\": 0, \\\"y\\\": 5 }, \\\"hiddenSeries\\\":
        false, \\\"id\\\": 25, \\\"legend\\\": { \\\"avg\\\": false, \\\"current\\\":
        false, \\\"hideEmpty\\\": true, \\\"max\\\": false, \\\"min\\\": false, \\\"show\\\":
        true, \\\"total\\\": false, \\\"values\\\": false }, \\\"lines\\\": true,
        \\\"linewidth\\\": 1, \\\"links\\\": [], \\\"nullPointMode\\\": \\\"null as
        zero\\\", \\\"percentage\\\": false, \\\"pluginVersion\\\": \\\"7.1.0\\\",
        \\\"pointradius\\\": 5, \\\"points\\\": false, \\\"renderer\\\": \\\"flot\\\",
        \\\"seriesOverrides\\\": [], \\\"spaceLength\\\": 10, \\\"stack\\\": false,
        \\\"steppedLine\\\": false, \\\"targets\\\": [ { \\\"expr\\\": \\\"round(sum(irate(istio_requests_total{connection_security_policy=\\\\\\\"mutual_tls\\\\\\\",destination_service=~\\\\\\\"$service\\\\\\\",reporter=\\\\\\\"$qrep\\\\\\\",source_workload=~\\\\\\\"$srcwl\\\\\\\",source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[5m]))
        by (source_workload, source_workload_namespace, response_code), 0.001)\\\",
        \\\"format\\\": \\\"time_series\\\", \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ source_workload }}.{{ source_workload_namespace }} : {{ response_code
        }} (\U0001F510mTLS)\\\", \\\"refId\\\": \\\"A\\\", \\\"step\\\": 2 }, { \\\"expr\\\":
        \\\"round(sum(irate(istio_requests_total{connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        destination_service=~\\\\\\\"$service\\\\\\\", reporter=\\\\\\\"$qrep\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[5m]))
        by (source_workload, source_workload_namespace, response_code), 0.001)\\\",
        \\\"format\\\": \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\":
        1, \\\"legendFormat\\\": \\\"{{ source_workload }}.{{ source_workload_namespace
        }} : {{ response_code }}\\\", \\\"refId\\\": \\\"B\\\", \\\"step\\\": 2 }
        ], \\\"thresholds\\\": [], \\\"timeFrom\\\": null, \\\"timeRegions\\\": [],
        \\\"timeShift\\\": null, \\\"title\\\": \\\"Incoming Requests By Source And
        Response Code\\\", \\\"tooltip\\\": { \\\"shared\\\": false, \\\"sort\\\":
        0, \\\"value_type\\\": \\\"individual\\\" }, \\\"type\\\": \\\"graph\\\",
        \\\"xaxis\\\": { \\\"buckets\\\": null, \\\"mode\\\": \\\"time\\\", \\\"name\\\":
        null, \\\"show\\\": true, \\\"values\\\": [ \\\"total\\\" ] }, \\\"yaxes\\\":
        [ { \\\"format\\\": \\\"ops\\\", \\\"label\\\": null, \\\"logBase\\\": 1,
        \\\"max\\\": null, \\\"min\\\": \\\"0\\\", \\\"show\\\": true }, { \\\"format\\\":
        \\\"short\\\", \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null,
        \\\"min\\\": null, \\\"show\\\": false } ], \\\"yaxis\\\": { \\\"align\\\":
        false, \\\"alignLevel\\\": null } }, { \\\"aliasColors\\\": {}, \\\"bars\\\":
        false, \\\"dashLength\\\": 10, \\\"dashes\\\": false, \\\"datasource\\\":
        \\\"Prometheus\\\", \\\"fieldConfig\\\": { \\\"defaults\\\": { \\\"custom\\\":
        {} }, \\\"overrides\\\": [] }, \\\"fill\\\": 1, \\\"fillGradient\\\": 0, \\\"gridPos\\\":
        { \\\"h\\\": 6, \\\"w\\\": 12, \\\"x\\\": 12, \\\"y\\\": 5 }, \\\"hiddenSeries\\\":
        false, \\\"id\\\": 26, \\\"legend\\\": { \\\"avg\\\": false, \\\"current\\\":
        false, \\\"hideEmpty\\\": true, \\\"hideZero\\\": false, \\\"max\\\": false,
        \\\"min\\\": false, \\\"show\\\": true, \\\"total\\\": false, \\\"values\\\":
        false }, \\\"lines\\\": true, \\\"linewidth\\\": 1, \\\"links\\\": [], \\\"nullPointMode\\\":
        \\\"null\\\", \\\"percentage\\\": false, \\\"pluginVersion\\\": \\\"7.1.0\\\",
        \\\"pointradius\\\": 5, \\\"points\\\": false, \\\"renderer\\\": \\\"flot\\\",
        \\\"seriesOverrides\\\": [], \\\"spaceLength\\\": 10, \\\"stack\\\": false,
        \\\"steppedLine\\\": false, \\\"targets\\\": [ { \\\"expr\\\": \\\"sum(irate(istio_requests_total{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",response_code!~\\\\\\\"5.*\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[5m]))
        by (source_workload, source_workload_namespace) / sum(irate(istio_requests_total{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[5m]))
        by (source_workload, source_workload_namespace)\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{
        source_workload }}.{{ source_workload_namespace }} (\U0001F510mTLS)\\\", \\\"refId\\\":
        \\\"A\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"sum(irate(istio_requests_total{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",response_code!~\\\\\\\"5.*\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[5m]))
        by (source_workload, source_workload_namespace) / sum(irate(istio_requests_total{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[5m]))
        by (source_workload, source_workload_namespace)\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{
        source_workload }}.{{ source_workload_namespace }}\\\", \\\"refId\\\": \\\"B\\\",
        \\\"step\\\": 2 } ], \\\"thresholds\\\": [], \\\"timeFrom\\\": null, \\\"timeRegions\\\":
        [], \\\"timeShift\\\": null, \\\"title\\\": \\\"Incoming Success Rate (non-5xx
        responses) By Source\\\", \\\"tooltip\\\": { \\\"shared\\\": true, \\\"sort\\\":
        0, \\\"value_type\\\": \\\"individual\\\" }, \\\"type\\\": \\\"graph\\\",
        \\\"xaxis\\\": { \\\"buckets\\\": null, \\\"mode\\\": \\\"time\\\", \\\"name\\\":
        null, \\\"show\\\": true, \\\"values\\\": [] }, \\\"yaxes\\\": [ { \\\"format\\\":
        \\\"percentunit\\\", \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\":
        \\\"1.01\\\", \\\"min\\\": \\\"0\\\", \\\"show\\\": true }, { \\\"format\\\":
        \\\"short\\\", \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null,
        \\\"min\\\": null, \\\"show\\\": false } ], \\\"yaxis\\\": { \\\"align\\\":
        false, \\\"alignLevel\\\": null } }, { \\\"aliasColors\\\": {}, \\\"bars\\\":
        false, \\\"dashLength\\\": 10, \\\"dashes\\\": false, \\\"datasource\\\":
        \\\"Prometheus\\\", \\\"description\\\": \\\"\\\", \\\"fieldConfig\\\": {
        \\\"defaults\\\": { \\\"custom\\\": {} }, \\\"overrides\\\": [] }, \\\"fill\\\":
        1, \\\"fillGradient\\\": 0, \\\"gridPos\\\": { \\\"h\\\": 6, \\\"w\\\": 8,
        \\\"x\\\": 0, \\\"y\\\": 11 }, \\\"hiddenSeries\\\": false, \\\"id\\\": 27,
        \\\"legend\\\": { \\\"alignAsTable\\\": false, \\\"avg\\\": false, \\\"current\\\":
        false, \\\"hideEmpty\\\": true, \\\"hideZero\\\": false, \\\"max\\\": false,
        \\\"min\\\": false, \\\"rightSide\\\": false, \\\"show\\\": true, \\\"total\\\":
        false, \\\"values\\\": false }, \\\"lines\\\": true, \\\"linewidth\\\": 1,
        \\\"links\\\": [], \\\"nullPointMode\\\": \\\"null\\\", \\\"percentage\\\":
        false, \\\"pluginVersion\\\": \\\"7.1.0\\\", \\\"pointradius\\\": 5, \\\"points\\\":
        false, \\\"renderer\\\": \\\"flot\\\", \\\"seriesOverrides\\\": [], \\\"spaceLength\\\":
        10, \\\"stack\\\": false, \\\"steppedLine\\\": false, \\\"targets\\\": [ {
        \\\"expr\\\": \\\"(histogram_quantile(0.50, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.50,
        sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{source_workload}}.{{source_workload_namespace}} P50 (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"A\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"(histogram_quantile(0.90,
        sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.90,
        sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{source_workload}}.{{source_workload_namespace}} P90 (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"B\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"(histogram_quantile(0.95,
        sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.95,
        sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{source_workload}}.{{source_workload_namespace}} P95 (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"C\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"(histogram_quantile(0.99,
        sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.99,
        sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{source_workload}}.{{source_workload_namespace}} P99 (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"D\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"(histogram_quantile(0.50,
        sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.50,
        sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{source_workload}}.{{source_workload_namespace}} P50\\\", \\\"refId\\\":
        \\\"E\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"(histogram_quantile(0.90,
        sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.90,
        sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{source_workload}}.{{source_workload_namespace}} P90\\\", \\\"refId\\\":
        \\\"F\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"(histogram_quantile(0.95,
        sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.95,
        sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{source_workload}}.{{source_workload_namespace}} P95\\\", \\\"refId\\\":
        \\\"G\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"(histogram_quantile(0.99,
        sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le)) / 1000) or histogram_quantile(0.99,
        sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{source_workload}}.{{source_workload_namespace}} P99\\\", \\\"refId\\\":
        \\\"H\\\", \\\"step\\\": 2 } ], \\\"thresholds\\\": [], \\\"timeFrom\\\":
        null, \\\"timeRegions\\\": [], \\\"timeShift\\\": null, \\\"title\\\": \\\"Incoming
        Request Duration By Source\\\", \\\"tooltip\\\": { \\\"shared\\\": true, \\\"sort\\\":
        0, \\\"value_type\\\": \\\"individual\\\" }, \\\"type\\\": \\\"graph\\\",
        \\\"xaxis\\\": { \\\"buckets\\\": null, \\\"mode\\\": \\\"time\\\", \\\"name\\\":
        null, \\\"show\\\": true, \\\"values\\\": [] }, \\\"yaxes\\\": [ { \\\"format\\\":
        \\\"s\\\", \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null, \\\"min\\\":
        \\\"0\\\", \\\"show\\\": true }, { \\\"format\\\": \\\"short\\\", \\\"label\\\":
        null, \\\"logBase\\\": 1, \\\"max\\\": null, \\\"min\\\": null, \\\"show\\\":
        false } ], \\\"yaxis\\\": { \\\"align\\\": false, \\\"alignLevel\\\": null
        } }, { \\\"aliasColors\\\": {}, \\\"bars\\\": false, \\\"dashLength\\\": 10,
        \\\"dashes\\\": false, \\\"datasource\\\": \\\"Prometheus\\\", \\\"fieldConfig\\\":
        { \\\"defaults\\\": { \\\"custom\\\": {} }, \\\"overrides\\\": [] }, \\\"fill\\\":
        1, \\\"fillGradient\\\": 0, \\\"gridPos\\\": { \\\"h\\\": 6, \\\"w\\\": 8,
        \\\"x\\\": 8, \\\"y\\\": 11 }, \\\"hiddenSeries\\\": false, \\\"id\\\": 28,
        \\\"legend\\\": { \\\"alignAsTable\\\": false, \\\"avg\\\": false, \\\"current\\\":
        false, \\\"hideEmpty\\\": true, \\\"max\\\": false, \\\"min\\\": false, \\\"rightSide\\\":
        false, \\\"show\\\": true, \\\"total\\\": false, \\\"values\\\": false },
        \\\"lines\\\": true, \\\"linewidth\\\": 1, \\\"links\\\": [], \\\"nullPointMode\\\":
        \\\"null\\\", \\\"percentage\\\": false, \\\"pluginVersion\\\": \\\"7.1.0\\\",
        \\\"pointradius\\\": 5, \\\"points\\\": false, \\\"renderer\\\": \\\"flot\\\",
        \\\"seriesOverrides\\\": [], \\\"spaceLength\\\": 10, \\\"stack\\\": false,
        \\\"steppedLine\\\": false, \\\"targets\\\": [ { \\\"expr\\\": \\\"histogram_quantile(0.50,
        sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\", connection_security_policy=\\\\\\\"mutual_tls\\\\\\\",
        destination_service=~\\\\\\\"$service\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le))\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{source_workload}}.{{source_workload_namespace}}
        P50 (\U0001F510mTLS)\\\", \\\"refId\\\": \\\"A\\\", \\\"step\\\": 2 }, { \\\"expr\\\":
        \\\"histogram_quantile(0.90, sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{source_workload}}.{{source_workload_namespace}}  P90 (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"B\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.95,
        sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\", connection_security_policy=\\\\\\\"mutual_tls\\\\\\\",
        destination_service=~\\\\\\\"$service\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le))\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{source_workload}}.{{source_workload_namespace}}
        P95 (\U0001F510mTLS)\\\", \\\"refId\\\": \\\"C\\\", \\\"step\\\": 2 }, { \\\"expr\\\":
        \\\"histogram_quantile(0.99, sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{source_workload}}.{{source_workload_namespace}}  P99 (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"D\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.50,
        sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\", connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        destination_service=~\\\\\\\"$service\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le))\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{source_workload}}.{{source_workload_namespace}}
        P50\\\", \\\"refId\\\": \\\"E\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.90,
        sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\", connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        destination_service=~\\\\\\\"$service\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le))\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{source_workload}}.{{source_workload_namespace}}
        P90\\\", \\\"refId\\\": \\\"F\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.95,
        sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\", connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        destination_service=~\\\\\\\"$service\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le))\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{source_workload}}.{{source_workload_namespace}}
        P95\\\", \\\"refId\\\": \\\"G\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.99,
        sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\", connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        destination_service=~\\\\\\\"$service\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le))\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{source_workload}}.{{source_workload_namespace}}
        P99\\\", \\\"refId\\\": \\\"H\\\", \\\"step\\\": 2 } ], \\\"thresholds\\\":
        [], \\\"timeFrom\\\": null, \\\"timeRegions\\\": [], \\\"timeShift\\\": null,
        \\\"title\\\": \\\"Incoming Request Size By Source\\\", \\\"tooltip\\\": {
        \\\"shared\\\": true, \\\"sort\\\": 0, \\\"value_type\\\": \\\"individual\\\"
        }, \\\"type\\\": \\\"graph\\\", \\\"xaxis\\\": { \\\"buckets\\\": null, \\\"mode\\\":
        \\\"time\\\", \\\"name\\\": null, \\\"show\\\": true, \\\"values\\\": [] },
        \\\"yaxes\\\": [ { \\\"format\\\": \\\"decbytes\\\", \\\"label\\\": null,
        \\\"logBase\\\": 1, \\\"max\\\": null, \\\"min\\\": \\\"0\\\", \\\"show\\\":
        true }, { \\\"format\\\": \\\"short\\\", \\\"label\\\": null, \\\"logBase\\\":
        1, \\\"max\\\": null, \\\"min\\\": null, \\\"show\\\": false } ], \\\"yaxis\\\":
        { \\\"align\\\": false, \\\"alignLevel\\\": null } }, { \\\"aliasColors\\\":
        {}, \\\"bars\\\": false, \\\"dashLength\\\": 10, \\\"dashes\\\": false, \\\"datasource\\\":
        \\\"Prometheus\\\", \\\"fieldConfig\\\": { \\\"defaults\\\": { \\\"custom\\\":
        {} }, \\\"overrides\\\": [] }, \\\"fill\\\": 1, \\\"fillGradient\\\": 0, \\\"gridPos\\\":
        { \\\"h\\\": 6, \\\"w\\\": 8, \\\"x\\\": 16, \\\"y\\\": 11 }, \\\"hiddenSeries\\\":
        false, \\\"id\\\": 68, \\\"legend\\\": { \\\"alignAsTable\\\": false, \\\"avg\\\":
        false, \\\"current\\\": false, \\\"hideEmpty\\\": true, \\\"max\\\": false,
        \\\"min\\\": false, \\\"rightSide\\\": false, \\\"show\\\": true, \\\"total\\\":
        false, \\\"values\\\": false }, \\\"lines\\\": true, \\\"linewidth\\\": 1,
        \\\"links\\\": [], \\\"nullPointMode\\\": \\\"null\\\", \\\"percentage\\\":
        false, \\\"pluginVersion\\\": \\\"7.1.0\\\", \\\"pointradius\\\": 5, \\\"points\\\":
        false, \\\"renderer\\\": \\\"flot\\\", \\\"seriesOverrides\\\": [], \\\"spaceLength\\\":
        10, \\\"stack\\\": false, \\\"steppedLine\\\": false, \\\"targets\\\": [ {
        \\\"expr\\\": \\\"histogram_quantile(0.50, sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{source_workload}}.{{source_workload_namespace}} P50 (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"A\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.90,
        sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\", connection_security_policy=\\\\\\\"mutual_tls\\\\\\\",
        destination_service=~\\\\\\\"$service\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le))\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{source_workload}}.{{source_workload_namespace}}
        \ P90 (\U0001F510mTLS)\\\", \\\"refId\\\": \\\"B\\\", \\\"step\\\": 2 }, {
        \\\"expr\\\": \\\"histogram_quantile(0.95, sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{source_workload}}.{{source_workload_namespace}} P95 (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"C\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.99,
        sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\", connection_security_policy=\\\\\\\"mutual_tls\\\\\\\",
        destination_service=~\\\\\\\"$service\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le))\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{source_workload}}.{{source_workload_namespace}}
        \ P99 (\U0001F510mTLS)\\\", \\\"refId\\\": \\\"D\\\", \\\"step\\\": 2 }, {
        \\\"expr\\\": \\\"histogram_quantile(0.50, sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{source_workload}}.{{source_workload_namespace}} P50\\\", \\\"refId\\\":
        \\\"E\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.90,
        sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\", connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        destination_service=~\\\\\\\"$service\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le))\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{source_workload}}.{{source_workload_namespace}}
        P90\\\", \\\"refId\\\": \\\"F\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.95,
        sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\", connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        destination_service=~\\\\\\\"$service\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le))\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{source_workload}}.{{source_workload_namespace}}
        P95\\\", \\\"refId\\\": \\\"G\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.99,
        sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\", connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        destination_service=~\\\\\\\"$service\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le))\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{source_workload}}.{{source_workload_namespace}}
        P99\\\", \\\"refId\\\": \\\"H\\\", \\\"step\\\": 2 } ], \\\"thresholds\\\":
        [], \\\"timeFrom\\\": null, \\\"timeRegions\\\": [], \\\"timeShift\\\": null,
        \\\"title\\\": \\\"Response Size By Source\\\", \\\"tooltip\\\": { \\\"shared\\\":
        true, \\\"sort\\\": 0, \\\"value_type\\\": \\\"individual\\\" }, \\\"type\\\":
        \\\"graph\\\", \\\"xaxis\\\": { \\\"buckets\\\": null, \\\"mode\\\": \\\"time\\\",
        \\\"name\\\": null, \\\"show\\\": true, \\\"values\\\": [] }, \\\"yaxes\\\":
        [ { \\\"format\\\": \\\"decbytes\\\", \\\"label\\\": null, \\\"logBase\\\":
        1, \\\"max\\\": null, \\\"min\\\": \\\"0\\\", \\\"show\\\": true }, { \\\"format\\\":
        \\\"short\\\", \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null,
        \\\"min\\\": null, \\\"show\\\": false } ], \\\"yaxis\\\": { \\\"align\\\":
        false, \\\"alignLevel\\\": null } }, { \\\"aliasColors\\\": {}, \\\"bars\\\":
        false, \\\"dashLength\\\": 10, \\\"dashes\\\": false, \\\"datasource\\\":
        \\\"Prometheus\\\", \\\"fieldConfig\\\": { \\\"defaults\\\": { \\\"custom\\\":
        {} }, \\\"overrides\\\": [] }, \\\"fill\\\": 1, \\\"fillGradient\\\": 0, \\\"gridPos\\\":
        { \\\"h\\\": 6, \\\"w\\\": 12, \\\"x\\\": 0, \\\"y\\\": 17 }, \\\"hiddenSeries\\\":
        false, \\\"id\\\": 80, \\\"legend\\\": { \\\"avg\\\": false, \\\"current\\\":
        false, \\\"max\\\": false, \\\"min\\\": false, \\\"show\\\": true, \\\"total\\\":
        false, \\\"values\\\": false }, \\\"lines\\\": true, \\\"linewidth\\\": 1,
        \\\"links\\\": [], \\\"nullPointMode\\\": \\\"null\\\", \\\"percentage\\\":
        false, \\\"pluginVersion\\\": \\\"7.1.0\\\", \\\"pointradius\\\": 5, \\\"points\\\":
        false, \\\"renderer\\\": \\\"flot\\\", \\\"seriesOverrides\\\": [], \\\"spaceLength\\\":
        10, \\\"stack\\\": false, \\\"steppedLine\\\": false, \\\"targets\\\": [ {
        \\\"expr\\\": \\\"round(sum(irate(istio_tcp_received_bytes_total{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace), 0.001)\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ source_workload }}.{{ source_workload_namespace}} (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"A\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"round(sum(irate(istio_tcp_received_bytes_total{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace), 0.001)\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{
        source_workload }}.{{ source_workload_namespace}}\\\", \\\"refId\\\": \\\"B\\\",
        \\\"step\\\": 2 } ], \\\"thresholds\\\": [], \\\"timeFrom\\\": null, \\\"timeRegions\\\":
        [], \\\"timeShift\\\": null, \\\"title\\\": \\\"Bytes Received from Incoming
        TCP Connection\\\", \\\"tooltip\\\": { \\\"shared\\\": true, \\\"sort\\\":
        0, \\\"value_type\\\": \\\"individual\\\" }, \\\"type\\\": \\\"graph\\\",
        \\\"xaxis\\\": { \\\"buckets\\\": null, \\\"mode\\\": \\\"time\\\", \\\"name\\\":
        null, \\\"show\\\": true, \\\"values\\\": [] }, \\\"yaxes\\\": [ { \\\"format\\\":
        \\\"Bps\\\", \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null, \\\"min\\\":
        \\\"0\\\", \\\"show\\\": true }, { \\\"format\\\": \\\"short\\\", \\\"label\\\":
        null, \\\"logBase\\\": 1, \\\"max\\\": null, \\\"min\\\": null, \\\"show\\\":
        true } ], \\\"yaxis\\\": { \\\"align\\\": false, \\\"alignLevel\\\": null
        } }, { \\\"aliasColors\\\": {}, \\\"bars\\\": false, \\\"dashLength\\\": 10,
        \\\"dashes\\\": false, \\\"datasource\\\": \\\"Prometheus\\\", \\\"fieldConfig\\\":
        { \\\"defaults\\\": { \\\"custom\\\": {} }, \\\"overrides\\\": [] }, \\\"fill\\\":
        1, \\\"fillGradient\\\": 0, \\\"gridPos\\\": { \\\"h\\\": 6, \\\"w\\\": 12,
        \\\"x\\\": 12, \\\"y\\\": 17 }, \\\"hiddenSeries\\\": false, \\\"id\\\": 82,
        \\\"legend\\\": { \\\"avg\\\": false, \\\"current\\\": false, \\\"max\\\":
        false, \\\"min\\\": false, \\\"show\\\": true, \\\"total\\\": false, \\\"values\\\":
        false }, \\\"lines\\\": true, \\\"linewidth\\\": 1, \\\"links\\\": [], \\\"nullPointMode\\\":
        \\\"null\\\", \\\"percentage\\\": false, \\\"pluginVersion\\\": \\\"7.1.0\\\",
        \\\"pointradius\\\": 5, \\\"points\\\": false, \\\"renderer\\\": \\\"flot\\\",
        \\\"seriesOverrides\\\": [], \\\"spaceLength\\\": 10, \\\"stack\\\": false,
        \\\"steppedLine\\\": false, \\\"targets\\\": [ { \\\"expr\\\": \\\"round(sum(irate(istio_tcp_sent_bytes_total{connection_security_policy=\\\\\\\"mutual_tls\\\\\\\",
        reporter=\\\\\\\"$qrep\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace), 0.001)\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{
        source_workload }}.{{ source_workload_namespace}} (\U0001F510mTLS)\\\", \\\"refId\\\":
        \\\"A\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"round(sum(irate(istio_tcp_sent_bytes_total{connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        reporter=\\\\\\\"$qrep\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace), 0.001)\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{
        source_workload }}.{{ source_workload_namespace}}\\\", \\\"refId\\\": \\\"B\\\",
        \\\"step\\\": 2 } ], \\\"thresholds\\\": [], \\\"timeFrom\\\": null, \\\"timeRegions\\\":
        [], \\\"timeShift\\\": null, \\\"title\\\": \\\"Bytes Sent to Incoming TCP
        Connection\\\", \\\"tooltip\\\": { \\\"shared\\\": true, \\\"sort\\\": 0,
        \\\"value_type\\\": \\\"individual\\\" }, \\\"type\\\": \\\"graph\\\", \\\"xaxis\\\":
        { \\\"buckets\\\": null, \\\"mode\\\": \\\"time\\\", \\\"name\\\": null, \\\"show\\\":
        true, \\\"values\\\": [] }, \\\"yaxes\\\": [ { \\\"format\\\": \\\"Bps\\\",
        \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null, \\\"min\\\": \\\"0\\\",
        \\\"show\\\": true }, { \\\"format\\\": \\\"short\\\", \\\"label\\\": null,
        \\\"logBase\\\": 1, \\\"max\\\": null, \\\"min\\\": null, \\\"show\\\": true
        } ], \\\"yaxis\\\": { \\\"align\\\": false, \\\"alignLevel\\\": null } } ],
        \\\"title\\\": \\\"Client Workloads\\\", \\\"type\\\": \\\"row\\\" }, { \\\"collapsed\\\":
        true, \\\"gridPos\\\": { \\\"h\\\": 1, \\\"w\\\": 24, \\\"x\\\": 0, \\\"y\\\":
        2 }, \\\"id\\\": 102, \\\"panels\\\": [ { \\\"content\\\": \\\"\\u003cdiv
        class=\\\\\\\"dashboard-header text-center\\\\\\\"\\u003e\\\\n\\u003cspan\\u003eSERVICE
        WORKLOADS\\u003c/span\\u003e\\\\n\\u003c/div\\u003e\\\", \\\"fieldConfig\\\":
        { \\\"defaults\\\": { \\\"custom\\\": {} }, \\\"overrides\\\": [] }, \\\"gridPos\\\":
        { \\\"h\\\": 3, \\\"w\\\": 24, \\\"x\\\": 0, \\\"y\\\": 3 }, \\\"id\\\": 69,
        \\\"links\\\": [], \\\"mode\\\": \\\"html\\\", \\\"options\\\": { \\\"content\\\":
        \\\"\\u003cdiv class=\\\\\\\"dashboard-header text-center\\\\\\\"\\u003e\\\\n\\u003cspan\\u003eSERVICE
        WORKLOADS\\u003c/span\\u003e\\\\n\\u003c/div\\u003e\\\", \\\"mode\\\": \\\"html\\\"
        }, \\\"pluginVersion\\\": \\\"7.1.0\\\", \\\"title\\\": \\\"\\\", \\\"transparent\\\":
        true, \\\"type\\\": \\\"text\\\" }, { \\\"aliasColors\\\": {}, \\\"bars\\\":
        false, \\\"dashLength\\\": 10, \\\"dashes\\\": false, \\\"datasource\\\":
        \\\"Prometheus\\\", \\\"fieldConfig\\\": { \\\"defaults\\\": { \\\"custom\\\":
        {} }, \\\"overrides\\\": [] }, \\\"fill\\\": 0, \\\"fillGradient\\\": 0, \\\"gridPos\\\":
        { \\\"h\\\": 6, \\\"w\\\": 12, \\\"x\\\": 0, \\\"y\\\": 6 }, \\\"hiddenSeries\\\":
        false, \\\"id\\\": 90, \\\"legend\\\": { \\\"avg\\\": false, \\\"current\\\":
        false, \\\"hideEmpty\\\": true, \\\"max\\\": false, \\\"min\\\": false, \\\"show\\\":
        true, \\\"total\\\": false, \\\"values\\\": false }, \\\"lines\\\": true,
        \\\"linewidth\\\": 1, \\\"links\\\": [], \\\"nullPointMode\\\": \\\"null as
        zero\\\", \\\"percentage\\\": false, \\\"pluginVersion\\\": \\\"7.1.0\\\",
        \\\"pointradius\\\": 5, \\\"points\\\": false, \\\"renderer\\\": \\\"flot\\\",
        \\\"seriesOverrides\\\": [], \\\"spaceLength\\\": 10, \\\"stack\\\": false,
        \\\"steppedLine\\\": false, \\\"targets\\\": [ { \\\"expr\\\": \\\"round(sum(irate(istio_requests_total{connection_security_policy=\\\\\\\"mutual_tls\\\\\\\",destination_service=~\\\\\\\"$service\\\\\\\",reporter=\\\\\\\"destination\\\\\\\",destination_workload=~\\\\\\\"$dstwl\\\\\\\",destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[5m]))
        by (destination_workload, destination_workload_namespace, response_code),
        0.001)\\\", \\\"format\\\": \\\"time_series\\\", \\\"intervalFactor\\\": 1,
        \\\"legendFormat\\\": \\\"{{ destination_workload }}.{{ destination_workload_namespace
        }} : {{ response_code }} (\U0001F510mTLS)\\\", \\\"refId\\\": \\\"A\\\", \\\"step\\\":
        2 }, { \\\"expr\\\": \\\"round(sum(irate(istio_requests_total{connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        destination_service=~\\\\\\\"$service\\\\\\\", reporter=\\\\\\\"destination\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[5m]))
        by (destination_workload, destination_workload_namespace, response_code),
        0.001)\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\":
        1, \\\"legendFormat\\\": \\\"{{ destination_workload }}.{{ destination_workload_namespace
        }} : {{ response_code }}\\\", \\\"refId\\\": \\\"B\\\", \\\"step\\\": 2 }
        ], \\\"thresholds\\\": [], \\\"timeFrom\\\": null, \\\"timeRegions\\\": [],
        \\\"timeShift\\\": null, \\\"title\\\": \\\"Incoming Requests By Destination
        Workload And Response Code\\\", \\\"tooltip\\\": { \\\"shared\\\": false,
        \\\"sort\\\": 0, \\\"value_type\\\": \\\"individual\\\" }, \\\"type\\\": \\\"graph\\\",
        \\\"xaxis\\\": { \\\"buckets\\\": null, \\\"mode\\\": \\\"time\\\", \\\"name\\\":
        null, \\\"show\\\": true, \\\"values\\\": [ \\\"total\\\" ] }, \\\"yaxes\\\":
        [ { \\\"format\\\": \\\"ops\\\", \\\"label\\\": null, \\\"logBase\\\": 1,
        \\\"max\\\": null, \\\"min\\\": \\\"0\\\", \\\"show\\\": true }, { \\\"format\\\":
        \\\"short\\\", \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null,
        \\\"min\\\": null, \\\"show\\\": false } ], \\\"yaxis\\\": { \\\"align\\\":
        false, \\\"alignLevel\\\": null } }, { \\\"aliasColors\\\": {}, \\\"bars\\\":
        false, \\\"dashLength\\\": 10, \\\"dashes\\\": false, \\\"datasource\\\":
        \\\"Prometheus\\\", \\\"fieldConfig\\\": { \\\"defaults\\\": { \\\"custom\\\":
        {} }, \\\"overrides\\\": [] }, \\\"fill\\\": 1, \\\"fillGradient\\\": 0, \\\"gridPos\\\":
        { \\\"h\\\": 6, \\\"w\\\": 12, \\\"x\\\": 12, \\\"y\\\": 6 }, \\\"hiddenSeries\\\":
        false, \\\"id\\\": 91, \\\"legend\\\": { \\\"avg\\\": false, \\\"current\\\":
        false, \\\"hideEmpty\\\": true, \\\"hideZero\\\": false, \\\"max\\\": false,
        \\\"min\\\": false, \\\"show\\\": true, \\\"total\\\": false, \\\"values\\\":
        false }, \\\"lines\\\": true, \\\"linewidth\\\": 1, \\\"links\\\": [], \\\"nullPointMode\\\":
        \\\"null\\\", \\\"percentage\\\": false, \\\"pluginVersion\\\": \\\"7.1.0\\\",
        \\\"pointradius\\\": 5, \\\"points\\\": false, \\\"renderer\\\": \\\"flot\\\",
        \\\"seriesOverrides\\\": [], \\\"spaceLength\\\": 10, \\\"stack\\\": false,
        \\\"steppedLine\\\": false, \\\"targets\\\": [ { \\\"expr\\\": \\\"sum(irate(istio_requests_total{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",response_code!~\\\\\\\"5.*\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[5m]))
        by (destination_workload, destination_workload_namespace) / sum(irate(istio_requests_total{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[5m]))
        by (destination_workload, destination_workload_namespace)\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ destination_workload }}.{{ destination_workload_namespace }} (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"A\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"sum(irate(istio_requests_total{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",response_code!~\\\\\\\"5.*\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[5m]))
        by (destination_workload, destination_workload_namespace) / sum(irate(istio_requests_total{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[5m]))
        by (destination_workload, destination_workload_namespace)\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ destination_workload }}.{{ destination_workload_namespace }}\\\", \\\"refId\\\":
        \\\"B\\\", \\\"step\\\": 2 } ], \\\"thresholds\\\": [], \\\"timeFrom\\\":
        null, \\\"timeRegions\\\": [], \\\"timeShift\\\": null, \\\"title\\\": \\\"Incoming
        Success Rate (non-5xx responses) By Destination Workload\\\", \\\"tooltip\\\":
        { \\\"shared\\\": true, \\\"sort\\\": 0, \\\"value_type\\\": \\\"individual\\\"
        }, \\\"type\\\": \\\"graph\\\", \\\"xaxis\\\": { \\\"buckets\\\": null, \\\"mode\\\":
        \\\"time\\\", \\\"name\\\": null, \\\"show\\\": true, \\\"values\\\": [] },
        \\\"yaxes\\\": [ { \\\"format\\\": \\\"percentunit\\\", \\\"label\\\": null,
        \\\"logBase\\\": 1, \\\"max\\\": \\\"1.01\\\", \\\"min\\\": \\\"0\\\", \\\"show\\\":
        true }, { \\\"format\\\": \\\"short\\\", \\\"label\\\": null, \\\"logBase\\\":
        1, \\\"max\\\": null, \\\"min\\\": null, \\\"show\\\": false } ], \\\"yaxis\\\":
        { \\\"align\\\": false, \\\"alignLevel\\\": null } }, { \\\"aliasColors\\\":
        {}, \\\"bars\\\": false, \\\"dashLength\\\": 10, \\\"dashes\\\": false, \\\"datasource\\\":
        \\\"Prometheus\\\", \\\"description\\\": \\\"\\\", \\\"fieldConfig\\\": {
        \\\"defaults\\\": { \\\"custom\\\": {} }, \\\"overrides\\\": [] }, \\\"fill\\\":
        1, \\\"fillGradient\\\": 0, \\\"gridPos\\\": { \\\"h\\\": 6, \\\"w\\\": 8,
        \\\"x\\\": 0, \\\"y\\\": 12 }, \\\"hiddenSeries\\\": false, \\\"id\\\": 94,
        \\\"legend\\\": { \\\"alignAsTable\\\": false, \\\"avg\\\": false, \\\"current\\\":
        false, \\\"hideEmpty\\\": true, \\\"hideZero\\\": false, \\\"max\\\": false,
        \\\"min\\\": false, \\\"rightSide\\\": false, \\\"show\\\": true, \\\"total\\\":
        false, \\\"values\\\": false }, \\\"lines\\\": true, \\\"linewidth\\\": 1,
        \\\"links\\\": [], \\\"nullPointMode\\\": \\\"null\\\", \\\"percentage\\\":
        false, \\\"pluginVersion\\\": \\\"7.1.0\\\", \\\"pointradius\\\": 5, \\\"points\\\":
        false, \\\"renderer\\\": \\\"flot\\\", \\\"seriesOverrides\\\": [], \\\"spaceLength\\\":
        10, \\\"stack\\\": false, \\\"steppedLine\\\": false, \\\"targets\\\": [ {
        \\\"expr\\\": \\\"(histogram_quantile(0.50, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le)) / 1000) or
        histogram_quantile(0.50, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ destination_workload }}.{{ destination_workload_namespace }} P50 (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"A\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"(histogram_quantile(0.90,
        sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le)) / 1000) or
        histogram_quantile(0.90, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ destination_workload }}.{{ destination_workload_namespace }} P90 (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"B\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"(histogram_quantile(0.95,
        sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le)) / 1000) or
        histogram_quantile(0.95, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ destination_workload }}.{{ destination_workload_namespace }} P95 (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"C\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"(histogram_quantile(0.99,
        sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le)) / 1000) or
        histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ destination_workload }}.{{ destination_workload_namespace }} P99 (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"D\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"(histogram_quantile(0.50,
        sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le)) / 1000) or
        histogram_quantile(0.50, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ destination_workload }}.{{ destination_workload_namespace }} P50\\\",
        \\\"refId\\\": \\\"E\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"(histogram_quantile(0.90,
        sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le)) / 1000) or
        histogram_quantile(0.90, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ destination_workload }}.{{ destination_workload_namespace }} P90\\\",
        \\\"refId\\\": \\\"F\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"(histogram_quantile(0.95,
        sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le)) / 1000) or
        histogram_quantile(0.95, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ destination_workload }}.{{ destination_workload_namespace }} P95\\\",
        \\\"refId\\\": \\\"G\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"(histogram_quantile(0.99,
        sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le)) / 1000) or
        histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ destination_workload }}.{{ destination_workload_namespace }} P99\\\",
        \\\"refId\\\": \\\"H\\\", \\\"step\\\": 2 } ], \\\"thresholds\\\": [], \\\"timeFrom\\\":
        null, \\\"timeRegions\\\": [], \\\"timeShift\\\": null, \\\"title\\\": \\\"Incoming
        Request Duration By Service Workload\\\", \\\"tooltip\\\": { \\\"shared\\\":
        true, \\\"sort\\\": 0, \\\"value_type\\\": \\\"individual\\\" }, \\\"type\\\":
        \\\"graph\\\", \\\"xaxis\\\": { \\\"buckets\\\": null, \\\"mode\\\": \\\"time\\\",
        \\\"name\\\": null, \\\"show\\\": true, \\\"values\\\": [] }, \\\"yaxes\\\":
        [ { \\\"format\\\": \\\"s\\\", \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\":
        null, \\\"min\\\": \\\"0\\\", \\\"show\\\": true }, { \\\"format\\\": \\\"short\\\",
        \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null, \\\"min\\\": null,
        \\\"show\\\": false } ], \\\"yaxis\\\": { \\\"align\\\": false, \\\"alignLevel\\\":
        null } }, { \\\"aliasColors\\\": {}, \\\"bars\\\": false, \\\"dashLength\\\":
        10, \\\"dashes\\\": false, \\\"datasource\\\": \\\"Prometheus\\\", \\\"fieldConfig\\\":
        { \\\"defaults\\\": { \\\"custom\\\": {} }, \\\"overrides\\\": [] }, \\\"fill\\\":
        1, \\\"fillGradient\\\": 0, \\\"gridPos\\\": { \\\"h\\\": 6, \\\"w\\\": 8,
        \\\"x\\\": 8, \\\"y\\\": 12 }, \\\"hiddenSeries\\\": false, \\\"id\\\": 95,
        \\\"legend\\\": { \\\"alignAsTable\\\": false, \\\"avg\\\": false, \\\"current\\\":
        false, \\\"hideEmpty\\\": true, \\\"max\\\": false, \\\"min\\\": false, \\\"rightSide\\\":
        false, \\\"show\\\": true, \\\"total\\\": false, \\\"values\\\": false },
        \\\"lines\\\": true, \\\"linewidth\\\": 1, \\\"links\\\": [], \\\"nullPointMode\\\":
        \\\"null\\\", \\\"percentage\\\": false, \\\"pluginVersion\\\": \\\"7.1.0\\\",
        \\\"pointradius\\\": 5, \\\"points\\\": false, \\\"renderer\\\": \\\"flot\\\",
        \\\"seriesOverrides\\\": [], \\\"spaceLength\\\": 10, \\\"stack\\\": false,
        \\\"steppedLine\\\": false, \\\"targets\\\": [ { \\\"expr\\\": \\\"histogram_quantile(0.50,
        sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ destination_workload }}.{{ destination_workload_namespace }} P50 (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"A\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.90,
        sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ destination_workload }}.{{ destination_workload_namespace }}  P90 (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"B\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.95,
        sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ destination_workload }}.{{ destination_workload_namespace }} P95 (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"C\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.99,
        sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ destination_workload }}.{{ destination_workload_namespace }}  P99 (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"D\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.50,
        sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ destination_workload }}.{{ destination_workload_namespace }} P50\\\",
        \\\"refId\\\": \\\"E\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.90,
        sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ destination_workload }}.{{ destination_workload_namespace }} P90\\\",
        \\\"refId\\\": \\\"F\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.95,
        sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ destination_workload }}.{{ destination_workload_namespace }} P95\\\",
        \\\"refId\\\": \\\"G\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.99,
        sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ destination_workload }}.{{ destination_workload_namespace }} P99\\\",
        \\\"refId\\\": \\\"H\\\", \\\"step\\\": 2 } ], \\\"thresholds\\\": [], \\\"timeFrom\\\":
        null, \\\"timeRegions\\\": [], \\\"timeShift\\\": null, \\\"title\\\": \\\"Incoming
        Request Size By Service Workload\\\", \\\"tooltip\\\": { \\\"shared\\\": true,
        \\\"sort\\\": 0, \\\"value_type\\\": \\\"individual\\\" }, \\\"type\\\": \\\"graph\\\",
        \\\"xaxis\\\": { \\\"buckets\\\": null, \\\"mode\\\": \\\"time\\\", \\\"name\\\":
        null, \\\"show\\\": true, \\\"values\\\": [] }, \\\"yaxes\\\": [ { \\\"format\\\":
        \\\"decbytes\\\", \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null,
        \\\"min\\\": \\\"0\\\", \\\"show\\\": true }, { \\\"format\\\": \\\"short\\\",
        \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null, \\\"min\\\": null,
        \\\"show\\\": false } ], \\\"yaxis\\\": { \\\"align\\\": false, \\\"alignLevel\\\":
        null } }, { \\\"aliasColors\\\": {}, \\\"bars\\\": false, \\\"dashLength\\\":
        10, \\\"dashes\\\": false, \\\"datasource\\\": \\\"Prometheus\\\", \\\"fieldConfig\\\":
        { \\\"defaults\\\": { \\\"custom\\\": {} }, \\\"overrides\\\": [] }, \\\"fill\\\":
        1, \\\"fillGradient\\\": 0, \\\"gridPos\\\": { \\\"h\\\": 6, \\\"w\\\": 8,
        \\\"x\\\": 16, \\\"y\\\": 12 }, \\\"hiddenSeries\\\": false, \\\"id\\\": 96,
        \\\"legend\\\": { \\\"alignAsTable\\\": false, \\\"avg\\\": false, \\\"current\\\":
        false, \\\"hideEmpty\\\": true, \\\"max\\\": false, \\\"min\\\": false, \\\"rightSide\\\":
        false, \\\"show\\\": true, \\\"total\\\": false, \\\"values\\\": false },
        \\\"lines\\\": true, \\\"linewidth\\\": 1, \\\"links\\\": [], \\\"nullPointMode\\\":
        \\\"null\\\", \\\"percentage\\\": false, \\\"pluginVersion\\\": \\\"7.1.0\\\",
        \\\"pointradius\\\": 5, \\\"points\\\": false, \\\"renderer\\\": \\\"flot\\\",
        \\\"seriesOverrides\\\": [], \\\"spaceLength\\\": 10, \\\"stack\\\": false,
        \\\"steppedLine\\\": false, \\\"targets\\\": [ { \\\"expr\\\": \\\"histogram_quantile(0.50,
        sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ destination_workload }}.{{ destination_workload_namespace }} P50 (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"A\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.90,
        sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ destination_workload }}.{{ destination_workload_namespace }}  P90 (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"B\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.95,
        sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ destination_workload }}.{{ destination_workload_namespace }} P95 (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"C\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.99,
        sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ destination_workload }}.{{ destination_workload_namespace }}  P99 (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"D\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.50,
        sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ destination_workload }}.{{ destination_workload_namespace }} P50\\\",
        \\\"refId\\\": \\\"E\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.90,
        sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ destination_workload }}.{{ destination_workload_namespace }} P90\\\",
        \\\"refId\\\": \\\"F\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.95,
        sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ destination_workload }}.{{ destination_workload_namespace }} P95\\\",
        \\\"refId\\\": \\\"G\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.99,
        sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ destination_workload }}.{{ destination_workload_namespace }} P99\\\",
        \\\"refId\\\": \\\"H\\\", \\\"step\\\": 2 } ], \\\"thresholds\\\": [], \\\"timeFrom\\\":
        null, \\\"timeRegions\\\": [], \\\"timeShift\\\": null, \\\"title\\\": \\\"Response
        Size By Service Workload\\\", \\\"tooltip\\\": { \\\"shared\\\": true, \\\"sort\\\":
        0, \\\"value_type\\\": \\\"individual\\\" }, \\\"type\\\": \\\"graph\\\",
        \\\"xaxis\\\": { \\\"buckets\\\": null, \\\"mode\\\": \\\"time\\\", \\\"name\\\":
        null, \\\"show\\\": true, \\\"values\\\": [] }, \\\"yaxes\\\": [ { \\\"format\\\":
        \\\"decbytes\\\", \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null,
        \\\"min\\\": \\\"0\\\", \\\"show\\\": true }, { \\\"format\\\": \\\"short\\\",
        \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null, \\\"min\\\": null,
        \\\"show\\\": false } ], \\\"yaxis\\\": { \\\"align\\\": false, \\\"alignLevel\\\":
        null } }, { \\\"aliasColors\\\": {}, \\\"bars\\\": false, \\\"dashLength\\\":
        10, \\\"dashes\\\": false, \\\"datasource\\\": \\\"Prometheus\\\", \\\"fieldConfig\\\":
        { \\\"defaults\\\": { \\\"custom\\\": {} }, \\\"overrides\\\": [] }, \\\"fill\\\":
        1, \\\"fillGradient\\\": 0, \\\"gridPos\\\": { \\\"h\\\": 6, \\\"w\\\": 12,
        \\\"x\\\": 0, \\\"y\\\": 18 }, \\\"hiddenSeries\\\": false, \\\"id\\\": 92,
        \\\"legend\\\": { \\\"avg\\\": false, \\\"current\\\": false, \\\"max\\\":
        false, \\\"min\\\": false, \\\"show\\\": true, \\\"total\\\": false, \\\"values\\\":
        false }, \\\"lines\\\": true, \\\"linewidth\\\": 1, \\\"links\\\": [], \\\"nullPointMode\\\":
        \\\"null\\\", \\\"percentage\\\": false, \\\"pluginVersion\\\": \\\"7.1.0\\\",
        \\\"pointradius\\\": 5, \\\"points\\\": false, \\\"renderer\\\": \\\"flot\\\",
        \\\"seriesOverrides\\\": [], \\\"spaceLength\\\": 10, \\\"stack\\\": false,
        \\\"steppedLine\\\": false, \\\"targets\\\": [ { \\\"expr\\\": \\\"round(sum(irate(istio_tcp_received_bytes_total{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace), 0.001)\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ destination_workload }}.{{ destination_workload_namespace}} (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"A\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"round(sum(irate(istio_tcp_received_bytes_total{reporter=\\\\\\\"destination\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace), 0.001)\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{
        destination_workload }}.{{ destination_workload_namespace}}\\\", \\\"refId\\\":
        \\\"B\\\", \\\"step\\\": 2 } ], \\\"thresholds\\\": [], \\\"timeFrom\\\":
        null, \\\"timeRegions\\\": [], \\\"timeShift\\\": null, \\\"title\\\": \\\"Bytes
        Received from Incoming TCP Connection\\\", \\\"tooltip\\\": { \\\"shared\\\":
        true, \\\"sort\\\": 0, \\\"value_type\\\": \\\"individual\\\" }, \\\"type\\\":
        \\\"graph\\\", \\\"xaxis\\\": { \\\"buckets\\\": null, \\\"mode\\\": \\\"time\\\",
        \\\"name\\\": null, \\\"show\\\": true, \\\"values\\\": [] }, \\\"yaxes\\\":
        [ { \\\"format\\\": \\\"Bps\\\", \\\"label\\\": null, \\\"logBase\\\": 1,
        \\\"max\\\": null, \\\"min\\\": \\\"0\\\", \\\"show\\\": true }, { \\\"format\\\":
        \\\"short\\\", \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null,
        \\\"min\\\": null, \\\"show\\\": true } ], \\\"yaxis\\\": { \\\"align\\\":
        false, \\\"alignLevel\\\": null } }, { \\\"aliasColors\\\": {}, \\\"bars\\\":
        false, \\\"dashLength\\\": 10, \\\"dashes\\\": false, \\\"datasource\\\":
        \\\"Prometheus\\\", \\\"fieldConfig\\\": { \\\"defaults\\\": { \\\"custom\\\":
        {} }, \\\"overrides\\\": [] }, \\\"fill\\\": 1, \\\"fillGradient\\\": 0, \\\"gridPos\\\":
        { \\\"h\\\": 6, \\\"w\\\": 12, \\\"x\\\": 12, \\\"y\\\": 18 }, \\\"hiddenSeries\\\":
        false, \\\"id\\\": 93, \\\"legend\\\": { \\\"avg\\\": false, \\\"current\\\":
        false, \\\"max\\\": false, \\\"min\\\": false, \\\"show\\\": true, \\\"total\\\":
        false, \\\"values\\\": false }, \\\"lines\\\": true, \\\"linewidth\\\": 1,
        \\\"links\\\": [], \\\"nullPointMode\\\": \\\"null\\\", \\\"percentage\\\":
        false, \\\"pluginVersion\\\": \\\"7.1.0\\\", \\\"pointradius\\\": 5, \\\"points\\\":
        false, \\\"renderer\\\": \\\"flot\\\", \\\"seriesOverrides\\\": [], \\\"spaceLength\\\":
        10, \\\"stack\\\": false, \\\"steppedLine\\\": false, \\\"targets\\\": [ {
        \\\"expr\\\": \\\"round(sum(irate(istio_tcp_sent_bytes_total{connection_security_policy=\\\\\\\"mutual_tls\\\\\\\",
        reporter=\\\\\\\"destination\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace), 0.001)\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{
        destination_workload }}.{{destination_workload_namespace }} (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"A\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"round(sum(irate(istio_tcp_sent_bytes_total{connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        reporter=\\\\\\\"destination\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\",
        destination_workload=~\\\\\\\"$dstwl\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"}[1m]))
        by (destination_workload, destination_workload_namespace), 0.001)\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{
        destination_workload }}.{{destination_workload_namespace }}\\\", \\\"refId\\\":
        \\\"B\\\", \\\"step\\\": 2 } ], \\\"thresholds\\\": [], \\\"timeFrom\\\":
        null, \\\"timeRegions\\\": [], \\\"timeShift\\\": null, \\\"title\\\": \\\"Bytes
        Sent to Incoming TCP Connection\\\", \\\"tooltip\\\": { \\\"shared\\\": true,
        \\\"sort\\\": 0, \\\"value_type\\\": \\\"individual\\\" }, \\\"type\\\": \\\"graph\\\",
        \\\"xaxis\\\": { \\\"buckets\\\": null, \\\"mode\\\": \\\"time\\\", \\\"name\\\":
        null, \\\"show\\\": true, \\\"values\\\": [] }, \\\"yaxes\\\": [ { \\\"format\\\":
        \\\"Bps\\\", \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null, \\\"min\\\":
        \\\"0\\\", \\\"show\\\": true }, { \\\"format\\\": \\\"short\\\", \\\"label\\\":
        null, \\\"logBase\\\": 1, \\\"max\\\": null, \\\"min\\\": null, \\\"show\\\":
        true } ], \\\"yaxis\\\": { \\\"align\\\": false, \\\"alignLevel\\\": null
        } } ], \\\"title\\\": \\\"Service Workloads\\\", \\\"type\\\": \\\"row\\\"
        } ], \\\"refresh\\\": \\\"1m\\\", \\\"schemaVersion\\\": 26, \\\"style\\\":
        \\\"dark\\\", \\\"tags\\\": [], \\\"templating\\\": { \\\"list\\\": [ { \\\"current\\\":
        { \\\"selected\\\": true, \\\"text\\\": \\\"default\\\", \\\"value\\\": \\\"default\\\"
        }, \\\"hide\\\": 0, \\\"includeAll\\\": false, \\\"label\\\": null, \\\"multi\\\":
        false, \\\"name\\\": \\\"datasource\\\", \\\"options\\\": [], \\\"query\\\":
        \\\"prometheus\\\", \\\"queryValue\\\": \\\"\\\", \\\"refresh\\\": 1, \\\"regex\\\":
        \\\"\\\", \\\"skipUrlSync\\\": false, \\\"type\\\": \\\"datasource\\\" },
        { \\\"allValue\\\": null, \\\"current\\\": {}, \\\"datasource\\\": \\\"Prometheus\\\",
        \\\"definition\\\": \\\"\\\", \\\"hide\\\": 0, \\\"includeAll\\\": false,
        \\\"label\\\": \\\"Service\\\", \\\"multi\\\": false, \\\"name\\\": \\\"service\\\",
        \\\"options\\\": [], \\\"query\\\": \\\"label_values(destination_service)\\\",
        \\\"refresh\\\": 1, \\\"regex\\\": \\\"\\\", \\\"skipUrlSync\\\": false, \\\"sort\\\":
        0, \\\"tagValuesQuery\\\": \\\"\\\", \\\"tags\\\": [], \\\"tagsQuery\\\":
        \\\"\\\", \\\"type\\\": \\\"query\\\", \\\"useTags\\\": false }, { \\\"allValue\\\":
        null, \\\"current\\\": { \\\"selected\\\": true, \\\"text\\\": \\\"destination\\\",
        \\\"value\\\": \\\"destination\\\" }, \\\"datasource\\\": \\\"Prometheus\\\",
        \\\"definition\\\": \\\"\\\", \\\"hide\\\": 0, \\\"includeAll\\\": false,
        \\\"label\\\": \\\"Reporter\\\", \\\"multi\\\": true, \\\"name\\\": \\\"qrep\\\",
        \\\"options\\\": [], \\\"query\\\": \\\"label_values(reporter)\\\", \\\"refresh\\\":
        1, \\\"regex\\\": \\\"\\\", \\\"skipUrlSync\\\": false, \\\"sort\\\": 2, \\\"tagValuesQuery\\\":
        \\\"\\\", \\\"tags\\\": [], \\\"tagsQuery\\\": \\\"\\\", \\\"type\\\": \\\"query\\\",
        \\\"useTags\\\": false }, { \\\"allValue\\\": null, \\\"current\\\": {}, \\\"datasource\\\":
        \\\"Prometheus\\\", \\\"definition\\\": \\\"\\\", \\\"hide\\\": 0, \\\"includeAll\\\":
        true, \\\"label\\\": \\\"Client Workload Namespace\\\", \\\"multi\\\": true,
        \\\"name\\\": \\\"srcns\\\", \\\"options\\\": [], \\\"query\\\": \\\"query_result(sum(istio_requests_total{reporter=\\\\\\\"$qrep\\\\\\\",
        destination_service=\\\\\\\"$service\\\\\\\"}) by (source_workload_namespace)
        or sum(istio_tcp_sent_bytes_total{reporter=\\\\\\\"$qrep\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\"})
        by (source_workload_namespace))\\\", \\\"refresh\\\": 1, \\\"regex\\\": \\\"/.*namespace=\\\\\\\"([^\\\\\\\"]*).*/\\\",
        \\\"skipUrlSync\\\": false, \\\"sort\\\": 2, \\\"tagValuesQuery\\\": \\\"\\\",
        \\\"tags\\\": [], \\\"tagsQuery\\\": \\\"\\\", \\\"type\\\": \\\"query\\\",
        \\\"useTags\\\": false }, { \\\"allValue\\\": null, \\\"current\\\": {}, \\\"datasource\\\":
        \\\"Prometheus\\\", \\\"definition\\\": \\\"\\\", \\\"hide\\\": 0, \\\"includeAll\\\":
        true, \\\"label\\\": \\\"Client Workload\\\", \\\"multi\\\": true, \\\"name\\\":
        \\\"srcwl\\\", \\\"options\\\": [], \\\"query\\\": \\\"query_result(sum(istio_requests_total{reporter=\\\\\\\"$qrep\\\\\\\",
        destination_service=~\\\\\\\"$service\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"})
        by (source_workload) or sum(istio_tcp_sent_bytes_total{reporter=\\\\\\\"$qrep\\\\\\\",
        destination_service=~\\\\\\\"$service\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"})
        by (source_workload))\\\", \\\"refresh\\\": 1, \\\"regex\\\": \\\"/.*workload=\\\\\\\"([^\\\\\\\"]*).*/\\\",
        \\\"skipUrlSync\\\": false, \\\"sort\\\": 3, \\\"tagValuesQuery\\\": \\\"\\\",
        \\\"tags\\\": [], \\\"tagsQuery\\\": \\\"\\\", \\\"type\\\": \\\"query\\\",
        \\\"useTags\\\": false }, { \\\"allValue\\\": null, \\\"current\\\": {}, \\\"datasource\\\":
        \\\"Prometheus\\\", \\\"definition\\\": \\\"\\\", \\\"hide\\\": 0, \\\"includeAll\\\":
        true, \\\"label\\\": \\\"Service Workload Namespace\\\", \\\"multi\\\": true,
        \\\"name\\\": \\\"dstns\\\", \\\"options\\\": [], \\\"query\\\": \\\"query_result(sum(istio_requests_total{reporter=\\\\\\\"destination\\\\\\\",
        destination_service=\\\\\\\"$service\\\\\\\"}) by (destination_workload_namespace)
        or sum(istio_tcp_sent_bytes_total{reporter=\\\\\\\"destination\\\\\\\", destination_service=~\\\\\\\"$service\\\\\\\"})
        by (destination_workload_namespace))\\\", \\\"refresh\\\": 1, \\\"regex\\\":
        \\\"/.*namespace=\\\\\\\"([^\\\\\\\"]*).*/\\\", \\\"skipUrlSync\\\": false,
        \\\"sort\\\": 2, \\\"tagValuesQuery\\\": \\\"\\\", \\\"tags\\\": [], \\\"tagsQuery\\\":
        \\\"\\\", \\\"type\\\": \\\"query\\\", \\\"useTags\\\": false }, { \\\"allValue\\\":
        null, \\\"current\\\": {}, \\\"datasource\\\": \\\"Prometheus\\\", \\\"definition\\\":
        \\\"\\\", \\\"hide\\\": 0, \\\"includeAll\\\": true, \\\"label\\\": \\\"Service
        Workload\\\", \\\"multi\\\": true, \\\"name\\\": \\\"dstwl\\\", \\\"options\\\":
        [], \\\"query\\\": \\\"query_result( sum(istio_requests_total{reporter=\\\\\\\"destination\\\\\\\",
        destination_service=~\\\\\\\"$service\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"})
        by (destination_workload) or sum(istio_tcp_sent_bytes_total{reporter=\\\\\\\"destination\\\\\\\",
        destination_service=~\\\\\\\"$service\\\\\\\", destination_workload_namespace=~\\\\\\\"$dstns\\\\\\\"})
        by (destination_workload))\\\", \\\"refresh\\\": 1, \\\"regex\\\": \\\"/.*workload=\\\\\\\"([^\\\\\\\"]*).*/\\\",
        \\\"skipUrlSync\\\": false, \\\"sort\\\": 3, \\\"tagValuesQuery\\\": \\\"\\\",
        \\\"tags\\\": [], \\\"tagsQuery\\\": \\\"\\\", \\\"type\\\": \\\"query\\\",
        \\\"useTags\\\": false } ] }, \\\"time\\\": { \\\"from\\\": \\\"now-5m\\\",
        \\\"to\\\": \\\"now\\\" }, \\\"timepicker\\\": { \\\"refresh_intervals\\\":
        [ \\\"5m\\\", \\\"15m\\\", \\\"30m\\\", \\\"1h\\\", \\\"2h\\\", \\\"1d\\\"
        ], \\\"time_options\\\": [ \\\"5m\\\", \\\"15m\\\", \\\"1h\\\", \\\"6h\\\",
        \\\"12h\\\", \\\"24h\\\", \\\"2d\\\", \\\"7d\\\", \\\"30d\\\" ] }, \\\"timezone\\\":
        \\\"\\\", \\\"title\\\": \\\"Istio Service Dashboard\\\", \\\"uid\\\": \\\"LJ_uJAvmk\\\",
        \\\"version\\\": 1 } \"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{\"maistra.io/mesh-generation\":\"2.3.1-1-2\"},\"labels\":{\"app\":\"grafana\",\"app.kubernetes.io/component\":\"grafana\",\"app.kubernetes.io/instance\":\"istio-system\",\"app.kubernetes.io/managed-by\":\"maistra-istio-operator\",\"app.kubernetes.io/name\":\"grafana\",\"app.kubernetes.io/part-of\":\"istio\",\"app.kubernetes.io/version\":\"2.3.1-1-2\",\"istio\":\"grafana\",\"maistra-version\":\"2.1.6\",\"maistra.io/owner\":\"istio-system\",\"maistra.io/owner-name\":\"basic\",\"release\":\"istio\"},\"name\":\"istio-grafana-configuration-dashboards-istio-service-dashboard\",\"namespace\":\"istio-system\",\"ownerReferences\":[{\"apiVersion\":\"maistra.io/v2\",\"blockOwnerDeletion\":true,\"controller\":true,\"kind\":\"ServiceMeshControlPlane\",\"name\":\"basic\",\"uid\":\"0c79eb74-854c-4f98-85c6-5955e78fd93e\"}]}}\n"
      maistra.io/mesh-generation: 2.3.1-1-2
    creationTimestamp: "2023-03-03T20:03:20Z"
    labels:
      app: grafana
      app.kubernetes.io/component: grafana
      app.kubernetes.io/instance: istio-system
      app.kubernetes.io/managed-by: maistra-istio-operator
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: istio
      app.kubernetes.io/version: 2.3.1-1-2
      istio: grafana
      maistra-version: 2.1.6
      maistra.io/owner: istio-system
      maistra.io/owner-name: basic
      release: istio
    name: istio-grafana-configuration-dashboards-istio-service-dashboard
    namespace: istio-system
    ownerReferences:
    - apiVersion: maistra.io/v2
      blockOwnerDeletion: true
      controller: true
      kind: ServiceMeshControlPlane
      name: basic
      uid: 0c79eb74-854c-4f98-85c6-5955e78fd93e
    resourceVersion: "34884"
    uid: f5a07729-d8ef-4203-80fe-415cc78670ca
- apiVersion: v1
  data:
    istio-workload-dashboard.json: "{ \"annotations\": { \"list\": [ { \"builtIn\":
      1, \"datasource\": \"-- Grafana --\", \"enable\": true, \"hide\": true, \"iconColor\":
      \"rgba(0, 211, 255, 1)\", \"name\": \"Annotations & Alerts\", \"type\": \"dashboard\"
      } ] }, \"editable\": false, \"gnetId\": null, \"graphTooltip\": 0, \"iteration\":
      1531345461465, \"links\": [], \"panels\": [ { \"collapsed\": true, \"gridPos\":
      { \"h\": 1, \"w\": 24, \"x\": 0, \"y\": 0 }, \"id\": 95, \"panels\": [ { \"content\":
      \"<div class=\\\"dashboard-header text-center\\\">\\n<span>WORKLOAD: $workload.$namespace</span>\\n</div>\",
      \"fieldConfig\": { \"defaults\": { \"custom\": {} }, \"overrides\": [] }, \"gridPos\":
      { \"h\": 3, \"w\": 24, \"x\": 0, \"y\": 1 }, \"id\": 89, \"links\": [], \"mode\":
      \"html\", \"options\": { \"content\": \"<div class=\\\"dashboard-header text-center\\\">\\n<span>WORKLOAD:
      $workload.$namespace</span>\\n</div>\", \"mode\": \"html\" }, \"pluginVersion\":
      \"7.1.0\", \"title\": \"\", \"transparent\": true, \"type\": \"text\" }, { \"cacheTimeout\":
      null, \"colorBackground\": false, \"colorValue\": false, \"colors\": [ \"rgba(245,
      54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\" ],
      \"datasource\": \"Prometheus\", \"fieldConfig\": { \"defaults\": { \"custom\":
      {} }, \"overrides\": [] }, \"format\": \"ops\", \"gauge\": { \"maxValue\": 100,
      \"minValue\": 0, \"show\": false, \"thresholdLabels\": false, \"thresholdMarkers\":
      true }, \"gridPos\": { \"h\": 4, \"w\": 8, \"x\": 0, \"y\": 4 }, \"id\": 12,
      \"interval\": null, \"links\": [], \"options\": { \"colorMode\": \"value\",
      \"graphMode\": \"area\", \"justifyMode\": \"auto\", \"orientation\": \"horizontal\",
      \"reduceOptions\": { \"calcs\": [ \"lastNotNull\" ], \"fields\": \"\", \"values\":
      false }, \"textMode\": \"auto\" }, \"mappingType\": 1, \"mappingTypes\": [ {
      \"name\": \"value to text\", \"value\": 1 }, { \"name\": \"range to text\",
      \"value\": 2 } ], \"maxDataPoints\": 100, \"nullPointMode\": \"connected\",
      \"nullText\": null, \"postfix\": \"\", \"postfixFontSize\": \"50%\", \"prefix\":
      \"\", \"prefixFontSize\": \"50%\", \"rangeMaps\": [ { \"from\": \"null\", \"text\":
      \"N/A\", \"to\": \"null\" } ], \"sparkline\": { \"fillColor\": \"rgba(31, 118,
      189, 0.18)\", \"full\": true, \"lineColor\": \"rgb(31, 120, 193)\", \"show\":
      true }, \"tableColumn\": \"\", \"targets\": [ { \"expr\": \"round(sum(irate(istio_requests_total{reporter=\\\"$qrep\\\",destination_workload_namespace=~\\\"$namespace\\\",destination_workload=~\\\"$workload\\\"}[5m])),
      0.001)\", \"format\": \"time_series\", \"intervalFactor\": 1, \"refId\": \"A\",
      \"step\": 4 } ], \"thresholds\": \"\", \"title\": \"Incoming Request Volume\",
      \"type\": \"singlestat\", \"valueFontSize\": \"80%\", \"valueMaps\": [ { \"op\":
      \"=\", \"text\": \"N/A\", \"value\": \"null\" } ], \"valueName\": \"current\"
      }, { \"cacheTimeout\": null, \"colorBackground\": false, \"colorValue\": false,
      \"colors\": [ \"rgba(50, 172, 45, 0.97)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(245,
      54, 54, 0.9)\" ], \"datasource\": \"Prometheus\", \"decimals\": null, \"fieldConfig\":
      { \"defaults\": { \"custom\": {} }, \"overrides\": [] }, \"format\": \"percentunit\",
      \"gauge\": { \"maxValue\": 100, \"minValue\": 80, \"show\": false, \"thresholdLabels\":
      false, \"thresholdMarkers\": false }, \"gridPos\": { \"h\": 4, \"w\": 8, \"x\":
      8, \"y\": 4 }, \"id\": 14, \"interval\": null, \"links\": [], \"options\": {
      \"colorMode\": \"value\", \"graphMode\": \"area\", \"justifyMode\": \"auto\",
      \"orientation\": \"horizontal\", \"reduceOptions\": { \"calcs\": [ \"lastNotNull\"
      ], \"fields\": \"\", \"values\": false }, \"textMode\": \"auto\" }, \"mappingType\":
      1, \"mappingTypes\": [ { \"name\": \"value to text\", \"value\": 1 }, { \"name\":
      \"range to text\", \"value\": 2 } ], \"maxDataPoints\": 100, \"nullPointMode\":
      \"connected\", \"nullText\": null, \"postfix\": \"\", \"postfixFontSize\": \"50%\",
      \"prefix\": \"\", \"prefixFontSize\": \"50%\", \"rangeMaps\": [ { \"from\":
      \"null\", \"text\": \"N/A\", \"to\": \"null\" } ], \"sparkline\": { \"fillColor\":
      \"rgba(31, 118, 189, 0.18)\", \"full\": true, \"lineColor\": \"rgb(31, 120,
      193)\", \"show\": true }, \"tableColumn\": \"\", \"targets\": [ { \"expr\":
      \"sum(irate(istio_requests_total{reporter=\\\"$qrep\\\",destination_workload_namespace=~\\\"$namespace\\\",destination_workload=~\\\"$workload\\\",response_code!~\\\"5.*\\\"}[5m]))
      / sum(irate(istio_requests_total{reporter=\\\"$qrep\\\",destination_workload_namespace=~\\\"$namespace\\\",destination_workload=~\\\"$workload\\\"}[5m]))\",
      \"format\": \"time_series\", \"intervalFactor\": 1, \"refId\": \"A\" } ], \"thresholds\":
      \"95, 99, 99.5\", \"title\": \"Incoming Success Rate (non-5xx responses)\",
      \"type\": \"singlestat\", \"valueFontSize\": \"80%\", \"valueMaps\": [ { \"op\":
      \"=\", \"text\": \"N/A\", \"value\": \"null\" } ], \"valueName\": \"avg\" },
      { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false,
      \"datasource\": \"Prometheus\", \"fieldConfig\": { \"defaults\": { \"custom\":
      {} }, \"overrides\": [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\": {
      \"h\": 4, \"w\": 8, \"x\": 16, \"y\": 4 }, \"hiddenSeries\": false, \"id\":
      87, \"legend\": { \"alignAsTable\": false, \"avg\": false, \"current\": false,
      \"hideEmpty\": false, \"hideZero\": false, \"max\": false, \"min\": false, \"rightSide\":
      true, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true,
      \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\":
      false, \"pluginVersion\": \"7.1.0\", \"pointradius\": 5, \"points\": false,
      \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\":
      false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"(histogram_quantile(0.50,
      sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"$qrep\\\",destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\"}[1m])) by (le)) / 1000) or
      histogram_quantile(0.50, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"$qrep\\\",destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\"}[1m])) by (le))\", \"format\":
      \"time_series\", \"interval\": \"\", \"intervalFactor\": 1, \"legendFormat\":
      \"P50\", \"refId\": \"A\" }, { \"expr\": \"(histogram_quantile(0.90, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"$qrep\\\",destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\"}[1m])) by (le)) / 1000) or
      histogram_quantile(0.90, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"$qrep\\\",destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\"}[1m])) by (le))\", \"format\":
      \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"P90\",
      \"refId\": \"B\" }, { \"expr\": \"(histogram_quantile(0.99, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"$qrep\\\",destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\"}[1m])) by (le)) / 1000) or
      histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"$qrep\\\",destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\"}[1m])) by (le))\", \"format\":
      \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"P99\",
      \"refId\": \"C\" } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\":
      [], \"timeShift\": null, \"title\": \"Request Duration\", \"tooltip\": { \"shared\":
      true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\":
      { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\":
      [] }, \"yaxes\": [ { \"format\": \"s\", \"label\": null, \"logBase\": 1, \"max\":
      null, \"min\": null, \"show\": true }, { \"format\": \"short\", \"label\": null,
      \"logBase\": 1, \"max\": null, \"min\": null, \"show\": false } ], \"yaxis\":
      { \"align\": false, \"alignLevel\": null } }, { \"cacheTimeout\": null, \"colorBackground\":
      false, \"colorValue\": false, \"colors\": [ \"#299c46\", \"rgba(237, 129, 40,
      0.89)\", \"#d44a3a\" ], \"datasource\": \"Prometheus\", \"fieldConfig\": { \"defaults\":
      { \"custom\": {} }, \"overrides\": [] }, \"format\": \"Bps\", \"gauge\": { \"maxValue\":
      100, \"minValue\": 0, \"show\": false, \"thresholdLabels\": false, \"thresholdMarkers\":
      true }, \"gridPos\": { \"h\": 4, \"w\": 12, \"x\": 0, \"y\": 8 }, \"id\": 84,
      \"interval\": null, \"links\": [], \"options\": { \"colorMode\": \"value\",
      \"graphMode\": \"area\", \"justifyMode\": \"auto\", \"orientation\": \"horizontal\",
      \"reduceOptions\": { \"calcs\": [ \"lastNotNull\" ], \"fields\": \"\", \"values\":
      false }, \"textMode\": \"auto\" }, \"mappingType\": 1, \"mappingTypes\": [ {
      \"name\": \"value to text\", \"value\": 1 }, { \"name\": \"range to text\",
      \"value\": 2 } ], \"maxDataPoints\": 100, \"nullPointMode\": \"connected\",
      \"nullText\": null, \"postfix\": \"\", \"postfixFontSize\": \"50%\", \"prefix\":
      \"\", \"prefixFontSize\": \"50%\", \"rangeMaps\": [ { \"from\": \"null\", \"text\":
      \"N/A\", \"to\": \"null\" } ], \"sparkline\": { \"fillColor\": \"rgba(31, 118,
      189, 0.18)\", \"full\": true, \"lineColor\": \"rgb(31, 120, 193)\", \"show\":
      true }, \"tableColumn\": \"\", \"targets\": [ { \"expr\": \"sum(irate(istio_tcp_sent_bytes_total{reporter=\\\"$qrep\\\",
      destination_workload_namespace=~\\\"$namespace\\\", destination_workload=~\\\"$workload\\\"}[1m]))
      + sum(irate(istio_tcp_received_bytes_total{reporter=\\\"$qrep\\\", destination_workload_namespace=~\\\"$namespace\\\",
      destination_workload=~\\\"$workload\\\"}[1m]))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"\", \"refId\": \"A\"
      } ], \"thresholds\": \"\", \"title\": \"TCP Server Traffic\", \"type\": \"singlestat\",
      \"valueFontSize\": \"80%\", \"valueMaps\": [ { \"op\": \"=\", \"text\": \"N/A\",
      \"value\": \"null\" } ], \"valueName\": \"avg\" }, { \"cacheTimeout\": null,
      \"colorBackground\": false, \"colorValue\": false, \"colors\": [ \"#299c46\",
      \"rgba(237, 129, 40, 0.89)\", \"#d44a3a\" ], \"datasource\": \"Prometheus\",
      \"fieldConfig\": { \"defaults\": { \"custom\": {} }, \"overrides\": [] }, \"format\":
      \"Bps\", \"gauge\": { \"maxValue\": 100, \"minValue\": 0, \"show\": false, \"thresholdLabels\":
      false, \"thresholdMarkers\": true }, \"gridPos\": { \"h\": 4, \"w\": 12, \"x\":
      12, \"y\": 8 }, \"id\": 85, \"interval\": null, \"links\": [], \"options\":
      { \"colorMode\": \"value\", \"graphMode\": \"area\", \"justifyMode\": \"auto\",
      \"orientation\": \"horizontal\", \"reduceOptions\": { \"calcs\": [ \"lastNotNull\"
      ], \"fields\": \"\", \"values\": false }, \"textMode\": \"auto\" }, \"mappingType\":
      1, \"mappingTypes\": [ { \"name\": \"value to text\", \"value\": 1 }, { \"name\":
      \"range to text\", \"value\": 2 } ], \"maxDataPoints\": 100, \"nullPointMode\":
      \"connected\", \"nullText\": null, \"postfix\": \"\", \"postfixFontSize\": \"50%\",
      \"prefix\": \"\", \"prefixFontSize\": \"50%\", \"rangeMaps\": [ { \"from\":
      \"null\", \"text\": \"N/A\", \"to\": \"null\" } ], \"sparkline\": { \"fillColor\":
      \"rgba(31, 118, 189, 0.18)\", \"full\": true, \"lineColor\": \"rgb(31, 120,
      193)\", \"show\": true }, \"tableColumn\": \"\", \"targets\": [ { \"expr\":
      \"sum(irate(istio_tcp_sent_bytes_total{reporter=\\\"$qrep\\\", source_workload_namespace=~\\\"$namespace\\\",
      source_workload=~\\\"$workload\\\"}[1m])) + sum(irate(istio_tcp_received_bytes_total{reporter=\\\"$qrep\\\",
      source_workload_namespace=~\\\"$namespace\\\", source_workload=~\\\"$workload\\\"}[1m]))\",
      \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\":
      \"\", \"refId\": \"A\" } ], \"thresholds\": \"\", \"title\": \"TCP Client Traffic\",
      \"type\": \"singlestat\", \"valueFontSize\": \"80%\", \"valueMaps\": [ { \"op\":
      \"=\", \"text\": \"N/A\", \"value\": \"null\" } ], \"valueName\": \"avg\" }
      ], \"title\": \"General\", \"type\": \"row\" }, { \"collapsed\": true, \"gridPos\":
      { \"h\": 1, \"w\": 24, \"x\": 0, \"y\": 1 }, \"id\": 93, \"panels\": [ { \"content\":
      \"<div class=\\\"dashboard-header text-center\\\">\\n<span>INBOUND WORKLOADS</span>\\n</div>\",
      \"fieldConfig\": { \"defaults\": { \"custom\": {} }, \"overrides\": [] }, \"gridPos\":
      { \"h\": 3, \"w\": 24, \"x\": 0, \"y\": 13 }, \"id\": 45, \"links\": [], \"mode\":
      \"html\", \"options\": { \"content\": \"<div class=\\\"dashboard-header text-center\\\">\\n<span>INBOUND
      WORKLOADS</span>\\n</div>\", \"mode\": \"html\" }, \"pluginVersion\": \"7.1.0\",
      \"title\": \"\", \"transparent\": true, \"type\": \"text\" }, { \"aliasColors\":
      {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\":
      \"Prometheus\", \"fieldConfig\": { \"defaults\": { \"custom\": {} }, \"overrides\":
      [] }, \"fill\": 0, \"fillGradient\": 0, \"gridPos\": { \"h\": 6, \"w\": 12,
      \"x\": 0, \"y\": 16 }, \"hiddenSeries\": false, \"id\": 25, \"legend\": { \"avg\":
      false, \"current\": false, \"hideEmpty\": true, \"max\": false, \"min\": false,
      \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\":
      1, \"links\": [], \"nullPointMode\": \"null as zero\", \"percentage\": false,
      \"pluginVersion\": \"7.1.0\", \"pointradius\": 5, \"points\": false, \"renderer\":
      \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\":
      false, \"targets\": [ { \"expr\": \"round(sum(irate(istio_requests_total{connection_security_policy=\\\"mutual_tls\\\",
      destination_workload_namespace=~\\\"$namespace\\\", destination_workload=~\\\"$workload\\\",
      reporter=\\\"$qrep\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[5m]))
      by (source_workload, source_workload_namespace, response_code), 0.001)\", \"format\":
      \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"{{ source_workload
      }}.{{ source_workload_namespace }} : {{ response_code }} (\U0001F510mTLS)\",
      \"refId\": \"A\", \"step\": 2 }, { \"expr\": \"round(sum(irate(istio_requests_total{connection_security_policy!=\\\"mutual_tls\\\",
      destination_workload_namespace=~\\\"$namespace\\\", destination_workload=~\\\"$workload\\\",
      reporter=\\\"$qrep\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[5m]))
      by (source_workload, source_workload_namespace, response_code), 0.001)\", \"format\":
      \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{
      source_workload }}.{{ source_workload_namespace }} : {{ response_code }}\",
      \"refId\": \"B\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\":
      [], \"timeShift\": null, \"title\": \"Incoming Requests By Source And Response
      Code\", \"tooltip\": { \"shared\": false, \"sort\": 0, \"value_type\": \"individual\"
      }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\",
      \"name\": null, \"show\": true, \"values\": [ \"total\" ] }, \"yaxes\": [ {
      \"format\": \"ops\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\":
      \"0\", \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\":
      1, \"max\": null, \"min\": null, \"show\": false } ], \"yaxis\": { \"align\":
      false, \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\":
      10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fieldConfig\": { \"defaults\":
      { \"custom\": {} }, \"overrides\": [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\":
      { \"h\": 6, \"w\": 12, \"x\": 12, \"y\": 16 }, \"hiddenSeries\": false, \"id\":
      26, \"legend\": { \"avg\": false, \"current\": false, \"hideEmpty\": true, \"hideZero\":
      false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\":
      false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\":
      \"null\", \"percentage\": false, \"pluginVersion\": \"7.1.0\", \"pointradius\":
      5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\":
      10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"sum(irate(istio_requests_total{reporter=\\\"$qrep\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_workload_namespace=~\\\"$namespace\\\",
      destination_workload=~\\\"$workload\\\",response_code!~\\\"5.*\\\", source_workload=~\\\"$srcwl\\\",
      source_workload_namespace=~\\\"$srcns\\\"}[5m])) by (source_workload, source_workload_namespace)
      / sum(irate(istio_requests_total{reporter=\\\"$qrep\\\", connection_security_policy=\\\"mutual_tls\\\",
      destination_workload_namespace=~\\\"$namespace\\\", destination_workload=~\\\"$workload\\\",
      source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[5m]))
      by (source_workload, source_workload_namespace)\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{ source_workload
      }}.{{ source_workload_namespace }} (\U0001F510mTLS)\", \"refId\": \"A\", \"step\":
      2 }, { \"expr\": \"sum(irate(istio_requests_total{reporter=\\\"$qrep\\\", connection_security_policy!=\\\"mutual_tls\\\",
      destination_workload_namespace=~\\\"$namespace\\\", destination_workload=~\\\"$workload\\\",response_code!~\\\"5.*\\\",
      source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[5m]))
      by (source_workload, source_workload_namespace) / sum(irate(istio_requests_total{reporter=\\\"$qrep\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_workload_namespace=~\\\"$namespace\\\",
      destination_workload=~\\\"$workload\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[5m]))
      by (source_workload, source_workload_namespace)\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{ source_workload
      }}.{{ source_workload_namespace }}\", \"refId\": \"B\", \"step\": 2 } ], \"thresholds\":
      [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\":
      \"Incoming Success Rate (non-5xx responses) By Source\", \"tooltip\": { \"shared\":
      true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\":
      { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\":
      [] }, \"yaxes\": [ { \"format\": \"percentunit\", \"label\": null, \"logBase\":
      1, \"max\": \"1.01\", \"min\": \"0\", \"show\": true }, { \"format\": \"short\",
      \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": false
      } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"aliasColors\":
      {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\":
      \"Prometheus\", \"description\": \"\", \"fieldConfig\": { \"defaults\": { \"custom\":
      {} }, \"overrides\": [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\": {
      \"h\": 6, \"w\": 8, \"x\": 0, \"y\": 22 }, \"hiddenSeries\": false, \"id\":
      27, \"legend\": { \"alignAsTable\": false, \"avg\": false, \"current\": false,
      \"hideEmpty\": true, \"hideZero\": false, \"max\": false, \"min\": false, \"rightSide\":
      false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true,
      \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\":
      false, \"pluginVersion\": \"7.1.0\", \"pointradius\": 5, \"points\": false,
      \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\":
      false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"(histogram_quantile(0.50,
      sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\", source_workload=~\\\"$srcwl\\\",
      source_workload_namespace=~\\\"$srcns\\\"}[1m])) by (source_workload, source_workload_namespace,
      le)) / 1000) or histogram_quantile(0.50, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\", source_workload=~\\\"$srcwl\\\",
      source_workload_namespace=~\\\"$srcns\\\"}[1m])) by (source_workload, source_workload_namespace,
      le))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1,
      \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}} P50 (\U0001F510mTLS)\",
      \"refId\": \"A\", \"step\": 2 }, { \"expr\": \"(histogram_quantile(0.90, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\", source_workload=~\\\"$srcwl\\\",
      source_workload_namespace=~\\\"$srcns\\\"}[1m])) by (source_workload, source_workload_namespace,
      le)) / 1000) or histogram_quantile(0.90, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\", source_workload=~\\\"$srcwl\\\",
      source_workload_namespace=~\\\"$srcns\\\"}[1m])) by (source_workload, source_workload_namespace,
      le))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1,
      \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}} P90 (\U0001F510mTLS)\",
      \"refId\": \"B\", \"step\": 2 }, { \"expr\": \"(histogram_quantile(0.95, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\", source_workload=~\\\"$srcwl\\\",
      source_workload_namespace=~\\\"$srcns\\\"}[1m])) by (source_workload, source_workload_namespace,
      le)) / 1000) or histogram_quantile(0.95, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\", source_workload=~\\\"$srcwl\\\",
      source_workload_namespace=~\\\"$srcns\\\"}[1m])) by (source_workload, source_workload_namespace,
      le))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1,
      \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}} P95 (\U0001F510mTLS)\",
      \"refId\": \"C\", \"step\": 2 }, { \"expr\": \"(histogram_quantile(0.99, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\", source_workload=~\\\"$srcwl\\\",
      source_workload_namespace=~\\\"$srcns\\\"}[1m])) by (source_workload, source_workload_namespace,
      le)) / 1000) or histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\", source_workload=~\\\"$srcwl\\\",
      source_workload_namespace=~\\\"$srcns\\\"}[1m])) by (source_workload, source_workload_namespace,
      le))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1,
      \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}} P99 (\U0001F510mTLS)\",
      \"refId\": \"D\", \"step\": 2 }, { \"expr\": \"(histogram_quantile(0.50, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\", source_workload=~\\\"$srcwl\\\",
      source_workload_namespace=~\\\"$srcns\\\"}[1m])) by (source_workload, source_workload_namespace,
      le)) / 1000) or histogram_quantile(0.50, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\", source_workload=~\\\"$srcwl\\\",
      source_workload_namespace=~\\\"$srcns\\\"}[1m])) by (source_workload, source_workload_namespace,
      le))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1,
      \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}} P50\",
      \"refId\": \"E\", \"step\": 2 }, { \"expr\": \"(histogram_quantile(0.90, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\", source_workload=~\\\"$srcwl\\\",
      source_workload_namespace=~\\\"$srcns\\\"}[1m])) by (source_workload, source_workload_namespace,
      le)) / 1000) or histogram_quantile(0.90, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\", source_workload=~\\\"$srcwl\\\",
      source_workload_namespace=~\\\"$srcns\\\"}[1m])) by (source_workload, source_workload_namespace,
      le))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1,
      \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}} P90\",
      \"refId\": \"F\", \"step\": 2 }, { \"expr\": \"(histogram_quantile(0.95, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\", source_workload=~\\\"$srcwl\\\",
      source_workload_namespace=~\\\"$srcns\\\"}[1m])) by (source_workload, source_workload_namespace,
      le)) / 1000) or histogram_quantile(0.95, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\", source_workload=~\\\"$srcwl\\\",
      source_workload_namespace=~\\\"$srcns\\\"}[1m])) by (source_workload, source_workload_namespace,
      le))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1,
      \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}} P95\",
      \"refId\": \"G\", \"step\": 2 }, { \"expr\": \"(histogram_quantile(0.99, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\", source_workload=~\\\"$srcwl\\\",
      source_workload_namespace=~\\\"$srcns\\\"}[1m])) by (source_workload, source_workload_namespace,
      le)) / 1000) or histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\", source_workload=~\\\"$srcwl\\\",
      source_workload_namespace=~\\\"$srcns\\\"}[1m])) by (source_workload, source_workload_namespace,
      le))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1,
      \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}} P99\",
      \"refId\": \"H\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\":
      [], \"timeShift\": null, \"title\": \"Incoming Request Duration By Source\",
      \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\"
      }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\",
      \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\":
      \"s\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": \"0\", \"show\":
      true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null,
      \"min\": null, \"show\": false } ], \"yaxis\": { \"align\": false, \"alignLevel\":
      null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\":
      false, \"datasource\": \"Prometheus\", \"fieldConfig\": { \"defaults\": { \"custom\":
      {} }, \"overrides\": [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\": {
      \"h\": 6, \"w\": 8, \"x\": 8, \"y\": 22 }, \"hiddenSeries\": false, \"id\":
      28, \"legend\": { \"alignAsTable\": false, \"avg\": false, \"current\": false,
      \"hideEmpty\": true, \"max\": false, \"min\": false, \"rightSide\": false, \"show\":
      true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\":
      1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pluginVersion\":
      \"7.1.0\", \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\":
      [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\":
      [ { \"expr\": \"histogram_quantile(0.50, sum(irate(istio_request_bytes_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\", source_workload=~\\\"$srcwl\\\",
      source_workload_namespace=~\\\"$srcns\\\"}[1m])) by (source_workload, source_workload_namespace,
      le))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1,
      \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}} P50 (\U0001F510mTLS)\",
      \"refId\": \"A\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.90, sum(irate(istio_request_bytes_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\", source_workload=~\\\"$srcwl\\\",
      source_workload_namespace=~\\\"$srcns\\\"}[1m])) by (source_workload, source_workload_namespace,
      le))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1,
      \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}  P90 (\U0001F510mTLS)\",
      \"refId\": \"B\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.95, sum(irate(istio_request_bytes_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\", source_workload=~\\\"$srcwl\\\",
      source_workload_namespace=~\\\"$srcns\\\"}[1m])) by (source_workload, source_workload_namespace,
      le))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1,
      \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}} P95 (\U0001F510mTLS)\",
      \"refId\": \"C\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.99, sum(irate(istio_request_bytes_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\", source_workload=~\\\"$srcwl\\\",
      source_workload_namespace=~\\\"$srcns\\\"}[1m])) by (source_workload, source_workload_namespace,
      le))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1,
      \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}  P99 (\U0001F510mTLS)\",
      \"refId\": \"D\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.50, sum(irate(istio_request_bytes_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\", source_workload=~\\\"$srcwl\\\",
      source_workload_namespace=~\\\"$srcns\\\"}[1m])) by (source_workload, source_workload_namespace,
      le))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1,
      \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}} P50\",
      \"refId\": \"E\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.90, sum(irate(istio_request_bytes_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\", source_workload=~\\\"$srcwl\\\",
      source_workload_namespace=~\\\"$srcns\\\"}[1m])) by (source_workload, source_workload_namespace,
      le))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1,
      \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}} P90\",
      \"refId\": \"F\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.95, sum(irate(istio_request_bytes_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\", source_workload=~\\\"$srcwl\\\",
      source_workload_namespace=~\\\"$srcns\\\"}[1m])) by (source_workload, source_workload_namespace,
      le))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1,
      \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}} P95\",
      \"refId\": \"G\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.99, sum(irate(istio_request_bytes_bucket{reporter=\\\"$qrep\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_workload=~\\\"$workload\\\",
      destination_workload_namespace=~\\\"$namespace\\\", source_workload=~\\\"$srcwl\\\",
      source_workload_namespace=~\\\"$srcns\\\"}[1m])) by (source_workload, source_workload_namespace,
      le))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1,
      \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}} P99\",
      \"refId\": \"H\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\":
      [], \"timeShift\": null, \"title\": \"Incoming Request Size By Source\", \"tooltip\":
      { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\":
      \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null,
      \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"decbytes\", \"label\":
      null, \"logBase\": 1, \"max\": null, \"min\": \"0\", \"show\": true }, { \"format\":
      \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\":
      false } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"aliasColors\":
      {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\":
      \"Prometheus\", \"fieldConfig\": { \"defaults\": { \"custom\": {} }, \"overrides\":
      [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\": { \"h\": 6, \"w\": 8, \"x\":
      16, \"y\": 22 }, \"hiddenSeries\": false, \"id\": 68, \"legend\": { \"alignAsTable\":
      false, \"avg\": false, \"current\": false, \"hideEmpty\": true, \"max\": false,
      \"min\": false, \"rightSide\": false, \"show\": true, \"total\": false, \"values\":
      false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\":
      \"null\", \"percentage\": false, \"pluginVersion\": \"7.1.0\", \"pointradius\":
      5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\":
      10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"histogram_quantile(0.50,
      sum(irate(istio_response_bytes_bucket{reporter=\\\"$qrep\\\", connection_security_policy=\\\"mutual_tls\\\",
      destination_workload=~\\\"$workload\\\", destination_workload_namespace=~\\\"$namespace\\\",
      source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      P50 (\U0001F510mTLS)\", \"refId\": \"A\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.90,
      sum(irate(istio_response_bytes_bucket{reporter=\\\"$qrep\\\", connection_security_policy=\\\"mutual_tls\\\",
      destination_workload=~\\\"$workload\\\", destination_workload_namespace=~\\\"$namespace\\\",
      source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      \ P90 (\U0001F510mTLS)\", \"refId\": \"B\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.95,
      sum(irate(istio_response_bytes_bucket{reporter=\\\"$qrep\\\", connection_security_policy=\\\"mutual_tls\\\",
      destination_workload=~\\\"$workload\\\", destination_workload_namespace=~\\\"$namespace\\\",
      source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      P95 (\U0001F510mTLS)\", \"refId\": \"C\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.99,
      sum(irate(istio_response_bytes_bucket{reporter=\\\"$qrep\\\", connection_security_policy=\\\"mutual_tls\\\",
      destination_workload=~\\\"$workload\\\", destination_workload_namespace=~\\\"$namespace\\\",
      source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      \ P99 (\U0001F510mTLS)\", \"refId\": \"D\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.50,
      sum(irate(istio_response_bytes_bucket{reporter=\\\"$qrep\\\", connection_security_policy!=\\\"mutual_tls\\\",
      destination_workload=~\\\"$workload\\\", destination_workload_namespace=~\\\"$namespace\\\",
      source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      P50\", \"refId\": \"E\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.90,
      sum(irate(istio_response_bytes_bucket{reporter=\\\"$qrep\\\", connection_security_policy!=\\\"mutual_tls\\\",
      destination_workload=~\\\"$workload\\\", destination_workload_namespace=~\\\"$namespace\\\",
      source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      P90\", \"refId\": \"F\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.95,
      sum(irate(istio_response_bytes_bucket{reporter=\\\"$qrep\\\", connection_security_policy!=\\\"mutual_tls\\\",
      destination_workload=~\\\"$workload\\\", destination_workload_namespace=~\\\"$namespace\\\",
      source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      P95\", \"refId\": \"G\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.99,
      sum(irate(istio_response_bytes_bucket{reporter=\\\"$qrep\\\", connection_security_policy!=\\\"mutual_tls\\\",
      destination_workload=~\\\"$workload\\\", destination_workload_namespace=~\\\"$namespace\\\",
      source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace, le))\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{source_workload}}.{{source_workload_namespace}}
      P99\", \"refId\": \"H\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\":
      null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Response Size By
      Source\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\"
      }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\",
      \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\":
      \"decbytes\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": \"0\",
      \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1,
      \"max\": null, \"min\": null, \"show\": false } ], \"yaxis\": { \"align\": false,
      \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\":
      10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fieldConfig\": { \"defaults\":
      { \"custom\": {} }, \"overrides\": [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\":
      { \"h\": 6, \"w\": 12, \"x\": 0, \"y\": 28 }, \"hiddenSeries\": false, \"id\":
      80, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\":
      false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true,
      \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\":
      false, \"pluginVersion\": \"7.1.0\", \"pointradius\": 5, \"points\": false,
      \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\":
      false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"round(sum(irate(istio_tcp_received_bytes_total{reporter=\\\"$qrep\\\",
      connection_security_policy=\\\"mutual_tls\\\", destination_workload_namespace=~\\\"$namespace\\\",
      destination_workload=~\\\"$workload\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace), 0.001)\", \"format\": \"time_series\",
      \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"{{ source_workload
      }}.{{ source_workload_namespace}} (\U0001F510mTLS)\", \"refId\": \"A\", \"step\":
      2 }, { \"expr\": \"round(sum(irate(istio_tcp_received_bytes_total{reporter=\\\"$qrep\\\",
      connection_security_policy!=\\\"mutual_tls\\\", destination_workload_namespace=~\\\"$namespace\\\",
      destination_workload=~\\\"$workload\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace), 0.001)\", \"format\": \"time_series\",
      \"intervalFactor\": 1, \"legendFormat\": \"{{ source_workload }}.{{ source_workload_namespace}}\",
      \"refId\": \"B\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\":
      [], \"timeShift\": null, \"title\": \"Bytes Received from Incoming TCP Connection\",
      \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\"
      }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\",
      \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\":
      \"Bps\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": \"0\", \"show\":
      true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null,
      \"min\": null, \"show\": true } ], \"yaxis\": { \"align\": false, \"alignLevel\":
      null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\":
      false, \"datasource\": \"Prometheus\", \"fieldConfig\": { \"defaults\": { \"custom\":
      {} }, \"overrides\": [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\": {
      \"h\": 6, \"w\": 12, \"x\": 12, \"y\": 28 }, \"hiddenSeries\": false, \"id\":
      82, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\":
      false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true,
      \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\":
      false, \"pluginVersion\": \"7.1.0\", \"pointradius\": 5, \"points\": false,
      \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\":
      false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"round(sum(irate(istio_tcp_sent_bytes_total{connection_security_policy=\\\"mutual_tls\\\",
      reporter=\\\"$qrep\\\", destination_workload_namespace=~\\\"$namespace\\\",
      destination_workload=~\\\"$workload\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace), 0.001)\", \"format\": \"time_series\",
      \"intervalFactor\": 1, \"legendFormat\": \"{{ source_workload }}.{{ source_workload_namespace}}
      (\U0001F510mTLS)\", \"refId\": \"A\", \"step\": 2 }, { \"expr\": \"round(sum(irate(istio_tcp_sent_bytes_total{connection_security_policy!=\\\"mutual_tls\\\",
      reporter=\\\"$qrep\\\", destination_workload_namespace=~\\\"$namespace\\\",
      destination_workload=~\\\"$workload\\\", source_workload=~\\\"$srcwl\\\", source_workload_namespace=~\\\"$srcns\\\"}[1m]))
      by (source_workload, source_workload_namespace), 0.001)\", \"format\": \"time_series\",
      \"intervalFactor\": 1, \"legendFormat\": \"{{ source_workload }}.{{ source_workload_namespace}}\",
      \"refId\": \"B\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\":
      [], \"timeShift\": null, \"title\": \"Bytes Sent to Incoming TCP Connection\",
      \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\"
      }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\",
      \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\":
      \"Bps\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": \"0\", \"show\":
      true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null,
      \"min\": null, \"show\": true } ], \"yaxis\": { \"align\": false, \"alignLevel\":
      null } } ], \"title\": \"Inbound Workloads\", \"type\": \"row\" }, { \"collapsed\":
      true, \"gridPos\": { \"h\": 1, \"w\": 24, \"x\": 0, \"y\": 2 }, \"id\": 91,
      \"panels\": [ { \"content\": \"<div class=\\\"dashboard-header text-center\\\">\\n<span>OUTBOUND
      SERVICES</span>\\n</div>\", \"fieldConfig\": { \"defaults\": { \"custom\": {}
      }, \"overrides\": [] }, \"gridPos\": { \"h\": 3, \"w\": 24, \"x\": 0, \"y\":
      14 }, \"id\": 69, \"links\": [], \"mode\": \"html\", \"options\": { \"content\":
      \"<div class=\\\"dashboard-header text-center\\\">\\n<span>OUTBOUND SERVICES</span>\\n</div>\",
      \"mode\": \"html\" }, \"pluginVersion\": \"7.1.0\", \"title\": \"\", \"transparent\":
      true, \"type\": \"text\" }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\":
      10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fieldConfig\": { \"defaults\":
      { \"custom\": {} }, \"overrides\": [] }, \"fill\": 0, \"fillGradient\": 0, \"gridPos\":
      { \"h\": 6, \"w\": 12, \"x\": 0, \"y\": 17 }, \"hiddenSeries\": false, \"id\":
      70, \"legend\": { \"avg\": false, \"current\": false, \"hideEmpty\": true, \"max\":
      false, \"min\": false, \"show\": true, \"total\": false, \"values\": false },
      \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null
      as zero\", \"percentage\": false, \"pluginVersion\": \"7.1.0\", \"pointradius\":
      5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\":
      10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"round(sum(irate(istio_requests_total{connection_security_policy=\\\"mutual_tls\\\",
      source_workload_namespace=~\\\"$namespace\\\", source_workload=~\\\"$workload\\\",
      reporter=\\\"source\\\", destination_service=~\\\"$dstsvc\\\"}[5m])) by (destination_service,
      response_code), 0.001)\", \"format\": \"time_series\", \"intervalFactor\": 1,
      \"legendFormat\": \"{{ destination_service }} : {{ response_code }} (\U0001F510mTLS)\",
      \"refId\": \"A\", \"step\": 2 }, { \"expr\": \"round(sum(irate(istio_requests_total{connection_security_policy!=\\\"mutual_tls\\\",
      source_workload_namespace=~\\\"$namespace\\\", source_workload=~\\\"$workload\\\",
      reporter=\\\"source\\\", destination_service=~\\\"$dstsvc\\\"}[5m])) by (destination_service,
      response_code), 0.001)\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\":
      1, \"legendFormat\": \"{{ destination_service }} : {{ response_code }}\", \"refId\":
      \"B\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\":
      [], \"timeShift\": null, \"title\": \"Outgoing Requests By Destination And Response
      Code\", \"tooltip\": { \"shared\": false, \"sort\": 0, \"value_type\": \"individual\"
      }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\",
      \"name\": null, \"show\": true, \"values\": [ \"total\" ] }, \"yaxes\": [ {
      \"format\": \"ops\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\":
      \"0\", \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\":
      1, \"max\": null, \"min\": null, \"show\": false } ], \"yaxis\": { \"align\":
      false, \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\":
      10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fieldConfig\": { \"defaults\":
      { \"custom\": {} }, \"overrides\": [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\":
      { \"h\": 6, \"w\": 12, \"x\": 12, \"y\": 17 }, \"hiddenSeries\": false, \"id\":
      71, \"legend\": { \"avg\": false, \"current\": false, \"hideEmpty\": true, \"hideZero\":
      false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\":
      false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\":
      \"null\", \"percentage\": false, \"pluginVersion\": \"7.1.0\", \"pointradius\":
      5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\":
      10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"sum(irate(istio_requests_total{reporter=\\\"source\\\",
      connection_security_policy=\\\"mutual_tls\\\", source_workload_namespace=~\\\"$namespace\\\",
      source_workload=~\\\"$workload\\\",response_code!~\\\"5.*\\\", destination_service=~\\\"$dstsvc\\\"}[5m]))
      by (destination_service) / sum(irate(istio_requests_total{reporter=\\\"source\\\",
      connection_security_policy=\\\"mutual_tls\\\", source_workload_namespace=~\\\"$namespace\\\",
      source_workload=~\\\"$workload\\\", destination_service=~\\\"$dstsvc\\\"}[5m]))
      by (destination_service)\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\":
      1, \"legendFormat\": \"{{ destination_service }} (\U0001F510mTLS)\", \"refId\":
      \"A\", \"step\": 2 }, { \"expr\": \"sum(irate(istio_requests_total{reporter=\\\"source\\\",
      connection_security_policy!=\\\"mutual_tls\\\", source_workload_namespace=~\\\"$namespace\\\",
      source_workload=~\\\"$workload\\\",response_code!~\\\"5.*\\\", destination_service=~\\\"$dstsvc\\\"}[5m]))
      by (destination_service) / sum(irate(istio_requests_total{reporter=\\\"source\\\",
      connection_security_policy!=\\\"mutual_tls\\\", source_workload_namespace=~\\\"$namespace\\\",
      source_workload=~\\\"$workload\\\", destination_service=~\\\"$dstsvc\\\"}[5m]))
      by (destination_service)\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\":
      1, \"legendFormat\": \"{{ destination_service }}\", \"refId\": \"B\", \"step\":
      2 } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\":
      null, \"title\": \"Outgoing Success Rate (non-5xx responses) By Destination\",
      \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\"
      }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\",
      \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\":
      \"percentunit\", \"label\": null, \"logBase\": 1, \"max\": \"1.01\", \"min\":
      \"0\", \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\":
      1, \"max\": null, \"min\": null, \"show\": false } ], \"yaxis\": { \"align\":
      false, \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\":
      10, \"dashes\": false, \"datasource\": \"Prometheus\", \"description\": \"\",
      \"fieldConfig\": { \"defaults\": { \"custom\": {} }, \"overrides\": [] }, \"fill\":
      1, \"fillGradient\": 0, \"gridPos\": { \"h\": 6, \"w\": 8, \"x\": 0, \"y\":
      23 }, \"hiddenSeries\": false, \"id\": 72, \"legend\": { \"alignAsTable\": false,
      \"avg\": false, \"current\": false, \"hideEmpty\": true, \"hideZero\": false,
      \"max\": false, \"min\": false, \"rightSide\": false, \"show\": true, \"total\":
      false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [],
      \"nullPointMode\": \"null\", \"percentage\": false, \"pluginVersion\": \"7.1.0\",
      \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\":
      [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\":
      [ { \"expr\": \"(histogram_quantile(0.50, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"source\\\",
      connection_security_policy=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le)) / 1000) or histogram_quantile(0.50, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"source\\\",
      connection_security_policy=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le))\", \"format\": \"time_series\", \"hide\": false,
      \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_service }} P50 (\U0001F510mTLS)\",
      \"refId\": \"A\", \"step\": 2 }, { \"expr\": \"(histogram_quantile(0.90, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"source\\\",
      connection_security_policy=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le)) / 1000) or histogram_quantile(0.90, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"source\\\",
      connection_security_policy=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le))\", \"format\": \"time_series\", \"hide\": false,
      \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_service }} P90 (\U0001F510mTLS)\",
      \"refId\": \"B\", \"step\": 2 }, { \"expr\": \"(histogram_quantile(0.95, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"source\\\",
      connection_security_policy=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le)) / 1000) or histogram_quantile(0.95, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"source\\\",
      connection_security_policy=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le))\", \"format\": \"time_series\", \"hide\": false,
      \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_service }} P95 (\U0001F510mTLS)\",
      \"refId\": \"C\", \"step\": 2 }, { \"expr\": \"(histogram_quantile(0.99, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"source\\\",
      connection_security_policy=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le)) / 1000) or histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"source\\\",
      connection_security_policy=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le))\", \"format\": \"time_series\", \"hide\": false,
      \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_service }} P99 (\U0001F510mTLS)\",
      \"refId\": \"D\", \"step\": 2 }, { \"expr\": \"(histogram_quantile(0.50, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"source\\\",
      connection_security_policy!=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le)) / 1000) or histogram_quantile(0.50, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"source\\\",
      connection_security_policy!=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le))\", \"format\": \"time_series\", \"hide\": false,
      \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_service }} P50\",
      \"refId\": \"E\", \"step\": 2 }, { \"expr\": \"(histogram_quantile(0.90, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"source\\\",
      connection_security_policy!=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le)) / 1000) or histogram_quantile(0.90, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"source\\\",
      connection_security_policy!=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le))\", \"format\": \"time_series\", \"hide\": false,
      \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_service }} P90\",
      \"refId\": \"F\", \"step\": 2 }, { \"expr\": \"(histogram_quantile(0.95, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"source\\\",
      connection_security_policy!=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le)) / 1000) or histogram_quantile(0.95, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"source\\\",
      connection_security_policy!=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le))\", \"format\": \"time_series\", \"hide\": false,
      \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_service }} P95\",
      \"refId\": \"G\", \"step\": 2 }, { \"expr\": \"(histogram_quantile(0.99, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\"source\\\",
      connection_security_policy!=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le)) / 1000) or histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\"source\\\",
      connection_security_policy!=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le))\", \"format\": \"time_series\", \"hide\": false,
      \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_service }} P99\",
      \"refId\": \"H\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\":
      [], \"timeShift\": null, \"title\": \"Outgoing Request Duration By Destination\",
      \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\"
      }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\",
      \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\":
      \"s\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": \"0\", \"show\":
      true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null,
      \"min\": null, \"show\": false } ], \"yaxis\": { \"align\": false, \"alignLevel\":
      null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\":
      false, \"datasource\": \"Prometheus\", \"fieldConfig\": { \"defaults\": { \"custom\":
      {} }, \"overrides\": [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\": {
      \"h\": 6, \"w\": 8, \"x\": 8, \"y\": 23 }, \"hiddenSeries\": false, \"id\":
      73, \"legend\": { \"alignAsTable\": false, \"avg\": false, \"current\": false,
      \"hideEmpty\": true, \"max\": false, \"min\": false, \"rightSide\": false, \"show\":
      true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\":
      1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pluginVersion\":
      \"7.1.0\", \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\":
      [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\":
      [ { \"expr\": \"histogram_quantile(0.50, sum(irate(istio_request_bytes_bucket{reporter=\\\"source\\\",
      connection_security_policy=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le))\", \"format\": \"time_series\", \"hide\": false,
      \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_service }} P50 (\U0001F510mTLS)\",
      \"refId\": \"A\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.90, sum(irate(istio_request_bytes_bucket{reporter=\\\"source\\\",
      connection_security_policy=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le))\", \"format\": \"time_series\", \"hide\": false,
      \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_service }} P90 (\U0001F510mTLS)\",
      \"refId\": \"B\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.95, sum(irate(istio_request_bytes_bucket{reporter=\\\"source\\\",
      connection_security_policy=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le))\", \"format\": \"time_series\", \"hide\": false,
      \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_service }} P95 (\U0001F510mTLS)\",
      \"refId\": \"C\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.99, sum(irate(istio_request_bytes_bucket{reporter=\\\"source\\\",
      connection_security_policy=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le))\", \"format\": \"time_series\", \"hide\": false,
      \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_service }} P99 (\U0001F510mTLS)\",
      \"refId\": \"D\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.50, sum(irate(istio_request_bytes_bucket{reporter=\\\"source\\\",
      connection_security_policy!=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le))\", \"format\": \"time_series\", \"hide\": false,
      \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_service }} P50\",
      \"refId\": \"E\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.90, sum(irate(istio_request_bytes_bucket{reporter=\\\"source\\\",
      connection_security_policy!=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le))\", \"format\": \"time_series\", \"hide\": false,
      \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_service }} P90\",
      \"refId\": \"F\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.95, sum(irate(istio_request_bytes_bucket{reporter=\\\"source\\\",
      connection_security_policy!=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le))\", \"format\": \"time_series\", \"hide\": false,
      \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_service }} P95\",
      \"refId\": \"G\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.99, sum(irate(istio_request_bytes_bucket{reporter=\\\"source\\\",
      connection_security_policy!=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le))\", \"format\": \"time_series\", \"hide\": false,
      \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_service }} P99\",
      \"refId\": \"H\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\":
      [], \"timeShift\": null, \"title\": \"Outgoing Request Size By Destination\",
      \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\"
      }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\",
      \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\":
      \"decbytes\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": \"0\",
      \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1,
      \"max\": null, \"min\": null, \"show\": false } ], \"yaxis\": { \"align\": false,
      \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\":
      10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fieldConfig\": { \"defaults\":
      { \"custom\": {} }, \"overrides\": [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\":
      { \"h\": 6, \"w\": 8, \"x\": 16, \"y\": 23 }, \"hiddenSeries\": false, \"id\":
      74, \"legend\": { \"alignAsTable\": false, \"avg\": false, \"current\": false,
      \"hideEmpty\": true, \"max\": false, \"min\": false, \"rightSide\": false, \"show\":
      true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\":
      1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pluginVersion\":
      \"7.1.0\", \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\":
      [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\":
      [ { \"expr\": \"histogram_quantile(0.50, sum(irate(istio_response_bytes_bucket{reporter=\\\"source\\\",
      connection_security_policy=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le))\", \"format\": \"time_series\", \"hide\": false,
      \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_service }} P50 (\U0001F510mTLS)\",
      \"refId\": \"A\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.90, sum(irate(istio_response_bytes_bucket{reporter=\\\"source\\\",
      connection_security_policy=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le))\", \"format\": \"time_series\", \"hide\": false,
      \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_service }} P90 (\U0001F510mTLS)\",
      \"refId\": \"B\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.95, sum(irate(istio_response_bytes_bucket{reporter=\\\"source\\\",
      connection_security_policy=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le))\", \"format\": \"time_series\", \"hide\": false,
      \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_service }} P95 (\U0001F510mTLS)\",
      \"refId\": \"C\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.99, sum(irate(istio_response_bytes_bucket{reporter=\\\"source\\\",
      connection_security_policy=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le))\", \"format\": \"time_series\", \"hide\": false,
      \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_service }}  P99 (\U0001F510mTLS)\",
      \"refId\": \"D\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.50, sum(irate(istio_response_bytes_bucket{reporter=\\\"source\\\",
      connection_security_policy!=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le))\", \"format\": \"time_series\", \"hide\": false,
      \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_service }} P50\",
      \"refId\": \"E\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.90, sum(irate(istio_response_bytes_bucket{reporter=\\\"source\\\",
      connection_security_policy!=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le))\", \"format\": \"time_series\", \"hide\": false,
      \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_service }} P90\",
      \"refId\": \"F\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.95, sum(irate(istio_response_bytes_bucket{reporter=\\\"source\\\",
      connection_security_policy!=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le))\", \"format\": \"time_series\", \"hide\": false,
      \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_service }} P95\",
      \"refId\": \"G\", \"step\": 2 }, { \"expr\": \"histogram_quantile(0.99, sum(irate(istio_response_bytes_bucket{reporter=\\\"source\\\",
      connection_security_policy!=\\\"mutual_tls\\\", source_workload=~\\\"$workload\\\",
      source_workload_namespace=~\\\"$namespace\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service, le))\", \"format\": \"time_series\", \"hide\": false,
      \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_service }} P99\",
      \"refId\": \"H\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\":
      [], \"timeShift\": null, \"title\": \"Response Size By Destination\", \"tooltip\":
      { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\":
      \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null,
      \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"decbytes\", \"label\":
      null, \"logBase\": 1, \"max\": null, \"min\": \"0\", \"show\": true }, { \"format\":
      \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\":
      false } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"aliasColors\":
      {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\":
      \"Prometheus\", \"fieldConfig\": { \"defaults\": { \"custom\": {} }, \"overrides\":
      [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\": { \"h\": 6, \"w\": 12,
      \"x\": 0, \"y\": 29 }, \"hiddenSeries\": false, \"id\": 76, \"legend\": { \"avg\":
      false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\":
      false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [],
      \"nullPointMode\": \"null\", \"percentage\": false, \"pluginVersion\": \"7.1.0\",
      \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\":
      [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\":
      [ { \"expr\": \"round(sum(irate(istio_tcp_sent_bytes_total{connection_security_policy=\\\"mutual_tls\\\",
      reporter=\\\"source\\\", source_workload_namespace=~\\\"$namespace\\\", source_workload=~\\\"$workload\\\",
      destination_service=~\\\"$dstsvc\\\"}[1m])) by (destination_service), 0.001)\",
      \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_service
      }} (\U0001F510mTLS)\", \"refId\": \"A\", \"step\": 2 }, { \"expr\": \"round(sum(irate(istio_tcp_sent_bytes_total{connection_security_policy!=\\\"mutual_tls\\\",
      reporter=\\\"source\\\", source_workload_namespace=~\\\"$namespace\\\", source_workload=~\\\"$workload\\\",
      destination_service=~\\\"$dstsvc\\\"}[1m])) by (destination_service), 0.001)\",
      \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"{{ destination_service
      }}\", \"refId\": \"B\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\": null,
      \"timeRegions\": [], \"timeShift\": null, \"title\": \"Bytes Sent on Outgoing
      TCP Connection\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\":
      \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\":
      \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\":
      \"Bps\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": \"0\", \"show\":
      true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null,
      \"min\": null, \"show\": true } ], \"yaxis\": { \"align\": false, \"alignLevel\":
      null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\":
      false, \"datasource\": \"Prometheus\", \"fieldConfig\": { \"defaults\": { \"custom\":
      {} }, \"overrides\": [] }, \"fill\": 1, \"fillGradient\": 0, \"gridPos\": {
      \"h\": 6, \"w\": 12, \"x\": 12, \"y\": 29 }, \"hiddenSeries\": false, \"id\":
      78, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\":
      false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true,
      \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\":
      false, \"pluginVersion\": \"7.1.0\", \"pointradius\": 5, \"points\": false,
      \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\":
      false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"round(sum(irate(istio_tcp_received_bytes_total{reporter=\\\"source\\\",
      connection_security_policy=\\\"mutual_tls\\\", source_workload_namespace=~\\\"$namespace\\\",
      source_workload=~\\\"$workload\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service), 0.001)\", \"format\": \"time_series\", \"intervalFactor\":
      1, \"legendFormat\": \"{{ destination_service }} (\U0001F510mTLS)\", \"refId\":
      \"A\", \"step\": 2 }, { \"expr\": \"round(sum(irate(istio_tcp_received_bytes_total{reporter=\\\"source\\\",
      connection_security_policy!=\\\"mutual_tls\\\", source_workload_namespace=~\\\"$namespace\\\",
      source_workload=~\\\"$workload\\\", destination_service=~\\\"$dstsvc\\\"}[1m]))
      by (destination_service), 0.001)\", \"format\": \"time_series\", \"intervalFactor\":
      1, \"legendFormat\": \"{{ destination_service }}\", \"refId\": \"B\", \"step\":
      2 } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\":
      null, \"title\": \"Bytes Received from Outgoing TCP Connection\", \"tooltip\":
      { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\":
      \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null,
      \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"Bps\", \"label\":
      null, \"logBase\": 1, \"max\": null, \"min\": \"0\", \"show\": true }, { \"format\":
      \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\":
      true } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } } ], \"title\":
      \"Outbound Services\", \"type\": \"row\" } ], \"refresh\": \"1m\", \"schemaVersion\":
      26, \"style\": \"dark\", \"tags\": [], \"templating\": { \"list\": [ { \"current\":
      { \"selected\": true, \"text\": \"default\", \"value\": \"default\" }, \"hide\":
      0, \"includeAll\": false, \"label\": null, \"multi\": false, \"name\": \"datasource\",
      \"options\": [], \"query\": \"prometheus\", \"queryValue\": \"\", \"refresh\":
      1, \"regex\": \"\", \"skipUrlSync\": false, \"type\": \"datasource\" }, { \"allValue\":
      null, \"current\": {}, \"datasource\": \"Prometheus\", \"definition\": \"\",
      \"hide\": 0, \"includeAll\": false, \"label\": \"Namespace\", \"multi\": false,
      \"name\": \"namespace\", \"options\": [], \"query\": \"query_result(sum(istio_requests_total)
      by (destination_workload_namespace) or sum(istio_tcp_sent_bytes_total) by (destination_workload_namespace))\",
      \"refresh\": 1, \"regex\": \"/.*_namespace=\\\"([^\\\"]*).*/\", \"skipUrlSync\":
      false, \"sort\": 0, \"tagValuesQuery\": \"\", \"tags\": [], \"tagsQuery\": \"\",
      \"type\": \"query\", \"useTags\": false }, { \"allValue\": null, \"current\":
      {}, \"datasource\": \"Prometheus\", \"definition\": \"\", \"hide\": 0, \"includeAll\":
      false, \"label\": \"Workload\", \"multi\": false, \"name\": \"workload\", \"options\":
      [], \"query\": \"query_result((sum(istio_requests_total{destination_workload_namespace=~\\\"$namespace\\\"})
      by (destination_workload) or sum(istio_requests_total{source_workload_namespace=~\\\"$namespace\\\"})
      by (source_workload)) or (sum(istio_tcp_sent_bytes_total{destination_workload_namespace=~\\\"$namespace\\\"})
      by (destination_workload) or sum(istio_tcp_sent_bytes_total{source_workload_namespace=~\\\"$namespace\\\"})
      by (source_workload)))\", \"refresh\": 1, \"regex\": \"/.*workload=\\\"([^\\\"]*).*/\",
      \"skipUrlSync\": false, \"sort\": 1, \"tagValuesQuery\": \"\", \"tags\": [],
      \"tagsQuery\": \"\", \"type\": \"query\", \"useTags\": false }, { \"allValue\":
      null, \"current\": { \"selected\": true, \"text\": \"destination\", \"value\":
      \"destination\" }, \"datasource\": \"Prometheus\", \"definition\": \"\", \"hide\":
      0, \"includeAll\": false, \"label\": \"Reporter\", \"multi\": true, \"name\":
      \"qrep\", \"options\": [], \"query\": \"label_values(reporter)\", \"refresh\":
      1, \"regex\": \"\", \"skipUrlSync\": false, \"sort\": 2, \"tagValuesQuery\":
      \"\", \"tags\": [], \"tagsQuery\": \"\", \"type\": \"query\", \"useTags\": false
      }, { \"allValue\": null, \"current\": {}, \"datasource\": \"Prometheus\", \"definition\":
      \"\", \"hide\": 0, \"includeAll\": true, \"label\": \"Inbound Workload Namespace\",
      \"multi\": true, \"name\": \"srcns\", \"options\": [], \"query\": \"query_result(sum(istio_requests_total{reporter=\\\"$qrep\\\",
      destination_workload=\\\"$workload\\\", destination_workload_namespace=~\\\"$namespace\\\"})
      by (source_workload_namespace) or sum(istio_tcp_sent_bytes_total{reporter=\\\"$qrep\\\",
      destination_workload=\\\"$workload\\\", destination_workload_namespace=~\\\"$namespace\\\"})
      by (source_workload_namespace))\", \"refresh\": 1, \"regex\": \"/.*namespace=\\\"([^\\\"]*).*/\",
      \"skipUrlSync\": false, \"sort\": 2, \"tagValuesQuery\": \"\", \"tags\": [],
      \"tagsQuery\": \"\", \"type\": \"query\", \"useTags\": false }, { \"allValue\":
      null, \"current\": {}, \"datasource\": \"Prometheus\", \"definition\": \"\",
      \"hide\": 0, \"includeAll\": true, \"label\": \"Inbound Workload\", \"multi\":
      true, \"name\": \"srcwl\", \"options\": [], \"query\": \"query_result(sum(istio_requests_total{reporter=\\\"$qrep\\\",
      destination_workload=\\\"$workload\\\", destination_workload_namespace=~\\\"$namespace\\\",
      source_workload_namespace=~\\\"$srcns\\\"}) by (source_workload) or sum(istio_tcp_sent_bytes_total{reporter=\\\"$qrep\\\",
      destination_workload=\\\"$workload\\\", destination_workload_namespace=~\\\"$namespace\\\",
      source_workload_namespace=~\\\"$srcns\\\"}) by (source_workload))\", \"refresh\":
      1, \"regex\": \"/.*workload=\\\"([^\\\"]*).*/\", \"skipUrlSync\": false, \"sort\":
      3, \"tagValuesQuery\": \"\", \"tags\": [], \"tagsQuery\": \"\", \"type\": \"query\",
      \"useTags\": false }, { \"allValue\": null, \"current\": {}, \"datasource\":
      \"Prometheus\", \"definition\": \"\", \"hide\": 0, \"includeAll\": true, \"label\":
      \"Destination Service\", \"multi\": true, \"name\": \"dstsvc\", \"options\":
      [], \"query\": \"query_result(sum(istio_requests_total{reporter=\\\"source\\\",
      source_workload=~\\\"$workload\\\", source_workload_namespace=~\\\"$namespace\\\"})
      by (destination_service) or sum(istio_tcp_sent_bytes_total{reporter=\\\"source\\\",
      source_workload=~\\\"$workload\\\", source_workload_namespace=~\\\"$namespace\\\"})
      by (destination_service))\", \"refresh\": 1, \"regex\": \"/.*destination_service=\\\"([^\\\"]*).*/\",
      \"skipUrlSync\": false, \"sort\": 4, \"tagValuesQuery\": \"\", \"tags\": [],
      \"tagsQuery\": \"\", \"type\": \"query\", \"useTags\": false } ] }, \"time\":
      { \"from\": \"now-5m\", \"to\": \"now\" }, \"timepicker\": { \"refresh_intervals\":
      [ \"5m\", \"15m\", \"30m\", \"1h\", \"2h\", \"1d\" ], \"time_options\": [ \"5m\",
      \"15m\", \"1h\", \"6h\", \"12h\", \"24h\", \"2d\", \"7d\", \"30d\" ] }, \"timezone\":
      \"\", \"title\": \"Istio Workload Dashboard\", \"uid\": \"UbsSZTDik\", \"version\":
      1 }"
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: "{\"apiVersion\":\"v1\",\"data\":{\"istio-workload-dashboard.json\":\"{
        \\\"annotations\\\": { \\\"list\\\": [ { \\\"builtIn\\\": 1, \\\"datasource\\\":
        \\\"-- Grafana --\\\", \\\"enable\\\": true, \\\"hide\\\": true, \\\"iconColor\\\":
        \\\"rgba(0, 211, 255, 1)\\\", \\\"name\\\": \\\"Annotations \\u0026 Alerts\\\",
        \\\"type\\\": \\\"dashboard\\\" } ] }, \\\"editable\\\": false, \\\"gnetId\\\":
        null, \\\"graphTooltip\\\": 0, \\\"iteration\\\": 1531345461465, \\\"links\\\":
        [], \\\"panels\\\": [ { \\\"collapsed\\\": true, \\\"gridPos\\\": { \\\"h\\\":
        1, \\\"w\\\": 24, \\\"x\\\": 0, \\\"y\\\": 0 }, \\\"id\\\": 95, \\\"panels\\\":
        [ { \\\"content\\\": \\\"\\u003cdiv class=\\\\\\\"dashboard-header text-center\\\\\\\"\\u003e\\\\n\\u003cspan\\u003eWORKLOAD:
        $workload.$namespace\\u003c/span\\u003e\\\\n\\u003c/div\\u003e\\\", \\\"fieldConfig\\\":
        { \\\"defaults\\\": { \\\"custom\\\": {} }, \\\"overrides\\\": [] }, \\\"gridPos\\\":
        { \\\"h\\\": 3, \\\"w\\\": 24, \\\"x\\\": 0, \\\"y\\\": 1 }, \\\"id\\\": 89,
        \\\"links\\\": [], \\\"mode\\\": \\\"html\\\", \\\"options\\\": { \\\"content\\\":
        \\\"\\u003cdiv class=\\\\\\\"dashboard-header text-center\\\\\\\"\\u003e\\\\n\\u003cspan\\u003eWORKLOAD:
        $workload.$namespace\\u003c/span\\u003e\\\\n\\u003c/div\\u003e\\\", \\\"mode\\\":
        \\\"html\\\" }, \\\"pluginVersion\\\": \\\"7.1.0\\\", \\\"title\\\": \\\"\\\",
        \\\"transparent\\\": true, \\\"type\\\": \\\"text\\\" }, { \\\"cacheTimeout\\\":
        null, \\\"colorBackground\\\": false, \\\"colorValue\\\": false, \\\"colors\\\":
        [ \\\"rgba(245, 54, 54, 0.9)\\\", \\\"rgba(237, 129, 40, 0.89)\\\", \\\"rgba(50,
        172, 45, 0.97)\\\" ], \\\"datasource\\\": \\\"Prometheus\\\", \\\"fieldConfig\\\":
        { \\\"defaults\\\": { \\\"custom\\\": {} }, \\\"overrides\\\": [] }, \\\"format\\\":
        \\\"ops\\\", \\\"gauge\\\": { \\\"maxValue\\\": 100, \\\"minValue\\\": 0,
        \\\"show\\\": false, \\\"thresholdLabels\\\": false, \\\"thresholdMarkers\\\":
        true }, \\\"gridPos\\\": { \\\"h\\\": 4, \\\"w\\\": 8, \\\"x\\\": 0, \\\"y\\\":
        4 }, \\\"id\\\": 12, \\\"interval\\\": null, \\\"links\\\": [], \\\"options\\\":
        { \\\"colorMode\\\": \\\"value\\\", \\\"graphMode\\\": \\\"area\\\", \\\"justifyMode\\\":
        \\\"auto\\\", \\\"orientation\\\": \\\"horizontal\\\", \\\"reduceOptions\\\":
        { \\\"calcs\\\": [ \\\"lastNotNull\\\" ], \\\"fields\\\": \\\"\\\", \\\"values\\\":
        false }, \\\"textMode\\\": \\\"auto\\\" }, \\\"mappingType\\\": 1, \\\"mappingTypes\\\":
        [ { \\\"name\\\": \\\"value to text\\\", \\\"value\\\": 1 }, { \\\"name\\\":
        \\\"range to text\\\", \\\"value\\\": 2 } ], \\\"maxDataPoints\\\": 100, \\\"nullPointMode\\\":
        \\\"connected\\\", \\\"nullText\\\": null, \\\"postfix\\\": \\\"\\\", \\\"postfixFontSize\\\":
        \\\"50%\\\", \\\"prefix\\\": \\\"\\\", \\\"prefixFontSize\\\": \\\"50%\\\",
        \\\"rangeMaps\\\": [ { \\\"from\\\": \\\"null\\\", \\\"text\\\": \\\"N/A\\\",
        \\\"to\\\": \\\"null\\\" } ], \\\"sparkline\\\": { \\\"fillColor\\\": \\\"rgba(31,
        118, 189, 0.18)\\\", \\\"full\\\": true, \\\"lineColor\\\": \\\"rgb(31, 120,
        193)\\\", \\\"show\\\": true }, \\\"tableColumn\\\": \\\"\\\", \\\"targets\\\":
        [ { \\\"expr\\\": \\\"round(sum(irate(istio_requests_total{reporter=\\\\\\\"$qrep\\\\\\\",destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\",destination_workload=~\\\\\\\"$workload\\\\\\\"}[5m])),
        0.001)\\\", \\\"format\\\": \\\"time_series\\\", \\\"intervalFactor\\\": 1,
        \\\"refId\\\": \\\"A\\\", \\\"step\\\": 4 } ], \\\"thresholds\\\": \\\"\\\",
        \\\"title\\\": \\\"Incoming Request Volume\\\", \\\"type\\\": \\\"singlestat\\\",
        \\\"valueFontSize\\\": \\\"80%\\\", \\\"valueMaps\\\": [ { \\\"op\\\": \\\"=\\\",
        \\\"text\\\": \\\"N/A\\\", \\\"value\\\": \\\"null\\\" } ], \\\"valueName\\\":
        \\\"current\\\" }, { \\\"cacheTimeout\\\": null, \\\"colorBackground\\\":
        false, \\\"colorValue\\\": false, \\\"colors\\\": [ \\\"rgba(50, 172, 45,
        0.97)\\\", \\\"rgba(237, 129, 40, 0.89)\\\", \\\"rgba(245, 54, 54, 0.9)\\\"
        ], \\\"datasource\\\": \\\"Prometheus\\\", \\\"decimals\\\": null, \\\"fieldConfig\\\":
        { \\\"defaults\\\": { \\\"custom\\\": {} }, \\\"overrides\\\": [] }, \\\"format\\\":
        \\\"percentunit\\\", \\\"gauge\\\": { \\\"maxValue\\\": 100, \\\"minValue\\\":
        80, \\\"show\\\": false, \\\"thresholdLabels\\\": false, \\\"thresholdMarkers\\\":
        false }, \\\"gridPos\\\": { \\\"h\\\": 4, \\\"w\\\": 8, \\\"x\\\": 8, \\\"y\\\":
        4 }, \\\"id\\\": 14, \\\"interval\\\": null, \\\"links\\\": [], \\\"options\\\":
        { \\\"colorMode\\\": \\\"value\\\", \\\"graphMode\\\": \\\"area\\\", \\\"justifyMode\\\":
        \\\"auto\\\", \\\"orientation\\\": \\\"horizontal\\\", \\\"reduceOptions\\\":
        { \\\"calcs\\\": [ \\\"lastNotNull\\\" ], \\\"fields\\\": \\\"\\\", \\\"values\\\":
        false }, \\\"textMode\\\": \\\"auto\\\" }, \\\"mappingType\\\": 1, \\\"mappingTypes\\\":
        [ { \\\"name\\\": \\\"value to text\\\", \\\"value\\\": 1 }, { \\\"name\\\":
        \\\"range to text\\\", \\\"value\\\": 2 } ], \\\"maxDataPoints\\\": 100, \\\"nullPointMode\\\":
        \\\"connected\\\", \\\"nullText\\\": null, \\\"postfix\\\": \\\"\\\", \\\"postfixFontSize\\\":
        \\\"50%\\\", \\\"prefix\\\": \\\"\\\", \\\"prefixFontSize\\\": \\\"50%\\\",
        \\\"rangeMaps\\\": [ { \\\"from\\\": \\\"null\\\", \\\"text\\\": \\\"N/A\\\",
        \\\"to\\\": \\\"null\\\" } ], \\\"sparkline\\\": { \\\"fillColor\\\": \\\"rgba(31,
        118, 189, 0.18)\\\", \\\"full\\\": true, \\\"lineColor\\\": \\\"rgb(31, 120,
        193)\\\", \\\"show\\\": true }, \\\"tableColumn\\\": \\\"\\\", \\\"targets\\\":
        [ { \\\"expr\\\": \\\"sum(irate(istio_requests_total{reporter=\\\\\\\"$qrep\\\\\\\",destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\",destination_workload=~\\\\\\\"$workload\\\\\\\",response_code!~\\\\\\\"5.*\\\\\\\"}[5m]))
        / sum(irate(istio_requests_total{reporter=\\\\\\\"$qrep\\\\\\\",destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\",destination_workload=~\\\\\\\"$workload\\\\\\\"}[5m]))\\\",
        \\\"format\\\": \\\"time_series\\\", \\\"intervalFactor\\\": 1, \\\"refId\\\":
        \\\"A\\\" } ], \\\"thresholds\\\": \\\"95, 99, 99.5\\\", \\\"title\\\": \\\"Incoming
        Success Rate (non-5xx responses)\\\", \\\"type\\\": \\\"singlestat\\\", \\\"valueFontSize\\\":
        \\\"80%\\\", \\\"valueMaps\\\": [ { \\\"op\\\": \\\"=\\\", \\\"text\\\": \\\"N/A\\\",
        \\\"value\\\": \\\"null\\\" } ], \\\"valueName\\\": \\\"avg\\\" }, { \\\"aliasColors\\\":
        {}, \\\"bars\\\": false, \\\"dashLength\\\": 10, \\\"dashes\\\": false, \\\"datasource\\\":
        \\\"Prometheus\\\", \\\"fieldConfig\\\": { \\\"defaults\\\": { \\\"custom\\\":
        {} }, \\\"overrides\\\": [] }, \\\"fill\\\": 1, \\\"fillGradient\\\": 0, \\\"gridPos\\\":
        { \\\"h\\\": 4, \\\"w\\\": 8, \\\"x\\\": 16, \\\"y\\\": 4 }, \\\"hiddenSeries\\\":
        false, \\\"id\\\": 87, \\\"legend\\\": { \\\"alignAsTable\\\": false, \\\"avg\\\":
        false, \\\"current\\\": false, \\\"hideEmpty\\\": false, \\\"hideZero\\\":
        false, \\\"max\\\": false, \\\"min\\\": false, \\\"rightSide\\\": true, \\\"show\\\":
        true, \\\"total\\\": false, \\\"values\\\": false }, \\\"lines\\\": true,
        \\\"linewidth\\\": 1, \\\"links\\\": [], \\\"nullPointMode\\\": \\\"null\\\",
        \\\"percentage\\\": false, \\\"pluginVersion\\\": \\\"7.1.0\\\", \\\"pointradius\\\":
        5, \\\"points\\\": false, \\\"renderer\\\": \\\"flot\\\", \\\"seriesOverrides\\\":
        [], \\\"spaceLength\\\": 10, \\\"stack\\\": false, \\\"steppedLine\\\": false,
        \\\"targets\\\": [ { \\\"expr\\\": \\\"(histogram_quantile(0.50, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",destination_workload=~\\\\\\\"$workload\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\"}[1m])) by (le))
        / 1000) or histogram_quantile(0.50, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",destination_workload=~\\\\\\\"$workload\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\"}[1m])) by (le))\\\",
        \\\"format\\\": \\\"time_series\\\", \\\"interval\\\": \\\"\\\", \\\"intervalFactor\\\":
        1, \\\"legendFormat\\\": \\\"P50\\\", \\\"refId\\\": \\\"A\\\" }, { \\\"expr\\\":
        \\\"(histogram_quantile(0.90, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",destination_workload=~\\\\\\\"$workload\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\"}[1m])) by (le))
        / 1000) or histogram_quantile(0.90, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",destination_workload=~\\\\\\\"$workload\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\"}[1m])) by (le))\\\",
        \\\"format\\\": \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\":
        1, \\\"legendFormat\\\": \\\"P90\\\", \\\"refId\\\": \\\"B\\\" }, { \\\"expr\\\":
        \\\"(histogram_quantile(0.99, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",destination_workload=~\\\\\\\"$workload\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\"}[1m])) by (le))
        / 1000) or histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",destination_workload=~\\\\\\\"$workload\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\"}[1m])) by (le))\\\",
        \\\"format\\\": \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\":
        1, \\\"legendFormat\\\": \\\"P99\\\", \\\"refId\\\": \\\"C\\\" } ], \\\"thresholds\\\":
        [], \\\"timeFrom\\\": null, \\\"timeRegions\\\": [], \\\"timeShift\\\": null,
        \\\"title\\\": \\\"Request Duration\\\", \\\"tooltip\\\": { \\\"shared\\\":
        true, \\\"sort\\\": 0, \\\"value_type\\\": \\\"individual\\\" }, \\\"type\\\":
        \\\"graph\\\", \\\"xaxis\\\": { \\\"buckets\\\": null, \\\"mode\\\": \\\"time\\\",
        \\\"name\\\": null, \\\"show\\\": true, \\\"values\\\": [] }, \\\"yaxes\\\":
        [ { \\\"format\\\": \\\"s\\\", \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\":
        null, \\\"min\\\": null, \\\"show\\\": true }, { \\\"format\\\": \\\"short\\\",
        \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null, \\\"min\\\": null,
        \\\"show\\\": false } ], \\\"yaxis\\\": { \\\"align\\\": false, \\\"alignLevel\\\":
        null } }, { \\\"cacheTimeout\\\": null, \\\"colorBackground\\\": false, \\\"colorValue\\\":
        false, \\\"colors\\\": [ \\\"#299c46\\\", \\\"rgba(237, 129, 40, 0.89)\\\",
        \\\"#d44a3a\\\" ], \\\"datasource\\\": \\\"Prometheus\\\", \\\"fieldConfig\\\":
        { \\\"defaults\\\": { \\\"custom\\\": {} }, \\\"overrides\\\": [] }, \\\"format\\\":
        \\\"Bps\\\", \\\"gauge\\\": { \\\"maxValue\\\": 100, \\\"minValue\\\": 0,
        \\\"show\\\": false, \\\"thresholdLabels\\\": false, \\\"thresholdMarkers\\\":
        true }, \\\"gridPos\\\": { \\\"h\\\": 4, \\\"w\\\": 12, \\\"x\\\": 0, \\\"y\\\":
        8 }, \\\"id\\\": 84, \\\"interval\\\": null, \\\"links\\\": [], \\\"options\\\":
        { \\\"colorMode\\\": \\\"value\\\", \\\"graphMode\\\": \\\"area\\\", \\\"justifyMode\\\":
        \\\"auto\\\", \\\"orientation\\\": \\\"horizontal\\\", \\\"reduceOptions\\\":
        { \\\"calcs\\\": [ \\\"lastNotNull\\\" ], \\\"fields\\\": \\\"\\\", \\\"values\\\":
        false }, \\\"textMode\\\": \\\"auto\\\" }, \\\"mappingType\\\": 1, \\\"mappingTypes\\\":
        [ { \\\"name\\\": \\\"value to text\\\", \\\"value\\\": 1 }, { \\\"name\\\":
        \\\"range to text\\\", \\\"value\\\": 2 } ], \\\"maxDataPoints\\\": 100, \\\"nullPointMode\\\":
        \\\"connected\\\", \\\"nullText\\\": null, \\\"postfix\\\": \\\"\\\", \\\"postfixFontSize\\\":
        \\\"50%\\\", \\\"prefix\\\": \\\"\\\", \\\"prefixFontSize\\\": \\\"50%\\\",
        \\\"rangeMaps\\\": [ { \\\"from\\\": \\\"null\\\", \\\"text\\\": \\\"N/A\\\",
        \\\"to\\\": \\\"null\\\" } ], \\\"sparkline\\\": { \\\"fillColor\\\": \\\"rgba(31,
        118, 189, 0.18)\\\", \\\"full\\\": true, \\\"lineColor\\\": \\\"rgb(31, 120,
        193)\\\", \\\"show\\\": true }, \\\"tableColumn\\\": \\\"\\\", \\\"targets\\\":
        [ { \\\"expr\\\": \\\"sum(irate(istio_tcp_sent_bytes_total{reporter=\\\\\\\"$qrep\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\", destination_workload=~\\\\\\\"$workload\\\\\\\"}[1m]))
        + sum(irate(istio_tcp_received_bytes_total{reporter=\\\\\\\"$qrep\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\", destination_workload=~\\\\\\\"$workload\\\\\\\"}[1m]))\\\",
        \\\"format\\\": \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\":
        1, \\\"legendFormat\\\": \\\"\\\", \\\"refId\\\": \\\"A\\\" } ], \\\"thresholds\\\":
        \\\"\\\", \\\"title\\\": \\\"TCP Server Traffic\\\", \\\"type\\\": \\\"singlestat\\\",
        \\\"valueFontSize\\\": \\\"80%\\\", \\\"valueMaps\\\": [ { \\\"op\\\": \\\"=\\\",
        \\\"text\\\": \\\"N/A\\\", \\\"value\\\": \\\"null\\\" } ], \\\"valueName\\\":
        \\\"avg\\\" }, { \\\"cacheTimeout\\\": null, \\\"colorBackground\\\": false,
        \\\"colorValue\\\": false, \\\"colors\\\": [ \\\"#299c46\\\", \\\"rgba(237,
        129, 40, 0.89)\\\", \\\"#d44a3a\\\" ], \\\"datasource\\\": \\\"Prometheus\\\",
        \\\"fieldConfig\\\": { \\\"defaults\\\": { \\\"custom\\\": {} }, \\\"overrides\\\":
        [] }, \\\"format\\\": \\\"Bps\\\", \\\"gauge\\\": { \\\"maxValue\\\": 100,
        \\\"minValue\\\": 0, \\\"show\\\": false, \\\"thresholdLabels\\\": false,
        \\\"thresholdMarkers\\\": true }, \\\"gridPos\\\": { \\\"h\\\": 4, \\\"w\\\":
        12, \\\"x\\\": 12, \\\"y\\\": 8 }, \\\"id\\\": 85, \\\"interval\\\": null,
        \\\"links\\\": [], \\\"options\\\": { \\\"colorMode\\\": \\\"value\\\", \\\"graphMode\\\":
        \\\"area\\\", \\\"justifyMode\\\": \\\"auto\\\", \\\"orientation\\\": \\\"horizontal\\\",
        \\\"reduceOptions\\\": { \\\"calcs\\\": [ \\\"lastNotNull\\\" ], \\\"fields\\\":
        \\\"\\\", \\\"values\\\": false }, \\\"textMode\\\": \\\"auto\\\" }, \\\"mappingType\\\":
        1, \\\"mappingTypes\\\": [ { \\\"name\\\": \\\"value to text\\\", \\\"value\\\":
        1 }, { \\\"name\\\": \\\"range to text\\\", \\\"value\\\": 2 } ], \\\"maxDataPoints\\\":
        100, \\\"nullPointMode\\\": \\\"connected\\\", \\\"nullText\\\": null, \\\"postfix\\\":
        \\\"\\\", \\\"postfixFontSize\\\": \\\"50%\\\", \\\"prefix\\\": \\\"\\\",
        \\\"prefixFontSize\\\": \\\"50%\\\", \\\"rangeMaps\\\": [ { \\\"from\\\":
        \\\"null\\\", \\\"text\\\": \\\"N/A\\\", \\\"to\\\": \\\"null\\\" } ], \\\"sparkline\\\":
        { \\\"fillColor\\\": \\\"rgba(31, 118, 189, 0.18)\\\", \\\"full\\\": true,
        \\\"lineColor\\\": \\\"rgb(31, 120, 193)\\\", \\\"show\\\": true }, \\\"tableColumn\\\":
        \\\"\\\", \\\"targets\\\": [ { \\\"expr\\\": \\\"sum(irate(istio_tcp_sent_bytes_total{reporter=\\\\\\\"$qrep\\\\\\\",
        source_workload_namespace=~\\\\\\\"$namespace\\\\\\\", source_workload=~\\\\\\\"$workload\\\\\\\"}[1m]))
        + sum(irate(istio_tcp_received_bytes_total{reporter=\\\\\\\"$qrep\\\\\\\",
        source_workload_namespace=~\\\\\\\"$namespace\\\\\\\", source_workload=~\\\\\\\"$workload\\\\\\\"}[1m]))\\\",
        \\\"format\\\": \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\":
        1, \\\"legendFormat\\\": \\\"\\\", \\\"refId\\\": \\\"A\\\" } ], \\\"thresholds\\\":
        \\\"\\\", \\\"title\\\": \\\"TCP Client Traffic\\\", \\\"type\\\": \\\"singlestat\\\",
        \\\"valueFontSize\\\": \\\"80%\\\", \\\"valueMaps\\\": [ { \\\"op\\\": \\\"=\\\",
        \\\"text\\\": \\\"N/A\\\", \\\"value\\\": \\\"null\\\" } ], \\\"valueName\\\":
        \\\"avg\\\" } ], \\\"title\\\": \\\"General\\\", \\\"type\\\": \\\"row\\\"
        }, { \\\"collapsed\\\": true, \\\"gridPos\\\": { \\\"h\\\": 1, \\\"w\\\":
        24, \\\"x\\\": 0, \\\"y\\\": 1 }, \\\"id\\\": 93, \\\"panels\\\": [ { \\\"content\\\":
        \\\"\\u003cdiv class=\\\\\\\"dashboard-header text-center\\\\\\\"\\u003e\\\\n\\u003cspan\\u003eINBOUND
        WORKLOADS\\u003c/span\\u003e\\\\n\\u003c/div\\u003e\\\", \\\"fieldConfig\\\":
        { \\\"defaults\\\": { \\\"custom\\\": {} }, \\\"overrides\\\": [] }, \\\"gridPos\\\":
        { \\\"h\\\": 3, \\\"w\\\": 24, \\\"x\\\": 0, \\\"y\\\": 13 }, \\\"id\\\":
        45, \\\"links\\\": [], \\\"mode\\\": \\\"html\\\", \\\"options\\\": { \\\"content\\\":
        \\\"\\u003cdiv class=\\\\\\\"dashboard-header text-center\\\\\\\"\\u003e\\\\n\\u003cspan\\u003eINBOUND
        WORKLOADS\\u003c/span\\u003e\\\\n\\u003c/div\\u003e\\\", \\\"mode\\\": \\\"html\\\"
        }, \\\"pluginVersion\\\": \\\"7.1.0\\\", \\\"title\\\": \\\"\\\", \\\"transparent\\\":
        true, \\\"type\\\": \\\"text\\\" }, { \\\"aliasColors\\\": {}, \\\"bars\\\":
        false, \\\"dashLength\\\": 10, \\\"dashes\\\": false, \\\"datasource\\\":
        \\\"Prometheus\\\", \\\"fieldConfig\\\": { \\\"defaults\\\": { \\\"custom\\\":
        {} }, \\\"overrides\\\": [] }, \\\"fill\\\": 0, \\\"fillGradient\\\": 0, \\\"gridPos\\\":
        { \\\"h\\\": 6, \\\"w\\\": 12, \\\"x\\\": 0, \\\"y\\\": 16 }, \\\"hiddenSeries\\\":
        false, \\\"id\\\": 25, \\\"legend\\\": { \\\"avg\\\": false, \\\"current\\\":
        false, \\\"hideEmpty\\\": true, \\\"max\\\": false, \\\"min\\\": false, \\\"show\\\":
        true, \\\"total\\\": false, \\\"values\\\": false }, \\\"lines\\\": true,
        \\\"linewidth\\\": 1, \\\"links\\\": [], \\\"nullPointMode\\\": \\\"null as
        zero\\\", \\\"percentage\\\": false, \\\"pluginVersion\\\": \\\"7.1.0\\\",
        \\\"pointradius\\\": 5, \\\"points\\\": false, \\\"renderer\\\": \\\"flot\\\",
        \\\"seriesOverrides\\\": [], \\\"spaceLength\\\": 10, \\\"stack\\\": false,
        \\\"steppedLine\\\": false, \\\"targets\\\": [ { \\\"expr\\\": \\\"round(sum(irate(istio_requests_total{connection_security_policy=\\\\\\\"mutual_tls\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\", destination_workload=~\\\\\\\"$workload\\\\\\\",
        reporter=\\\\\\\"$qrep\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[5m]))
        by (source_workload, source_workload_namespace, response_code), 0.001)\\\",
        \\\"format\\\": \\\"time_series\\\", \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{ source_workload }}.{{ source_workload_namespace }} : {{ response_code
        }} (\U0001F510mTLS)\\\", \\\"refId\\\": \\\"A\\\", \\\"step\\\": 2 }, { \\\"expr\\\":
        \\\"round(sum(irate(istio_requests_total{connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\", destination_workload=~\\\\\\\"$workload\\\\\\\",
        reporter=\\\\\\\"$qrep\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[5m]))
        by (source_workload, source_workload_namespace, response_code), 0.001)\\\",
        \\\"format\\\": \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\":
        1, \\\"legendFormat\\\": \\\"{{ source_workload }}.{{ source_workload_namespace
        }} : {{ response_code }}\\\", \\\"refId\\\": \\\"B\\\", \\\"step\\\": 2 }
        ], \\\"thresholds\\\": [], \\\"timeFrom\\\": null, \\\"timeRegions\\\": [],
        \\\"timeShift\\\": null, \\\"title\\\": \\\"Incoming Requests By Source And
        Response Code\\\", \\\"tooltip\\\": { \\\"shared\\\": false, \\\"sort\\\":
        0, \\\"value_type\\\": \\\"individual\\\" }, \\\"type\\\": \\\"graph\\\",
        \\\"xaxis\\\": { \\\"buckets\\\": null, \\\"mode\\\": \\\"time\\\", \\\"name\\\":
        null, \\\"show\\\": true, \\\"values\\\": [ \\\"total\\\" ] }, \\\"yaxes\\\":
        [ { \\\"format\\\": \\\"ops\\\", \\\"label\\\": null, \\\"logBase\\\": 1,
        \\\"max\\\": null, \\\"min\\\": \\\"0\\\", \\\"show\\\": true }, { \\\"format\\\":
        \\\"short\\\", \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null,
        \\\"min\\\": null, \\\"show\\\": false } ], \\\"yaxis\\\": { \\\"align\\\":
        false, \\\"alignLevel\\\": null } }, { \\\"aliasColors\\\": {}, \\\"bars\\\":
        false, \\\"dashLength\\\": 10, \\\"dashes\\\": false, \\\"datasource\\\":
        \\\"Prometheus\\\", \\\"fieldConfig\\\": { \\\"defaults\\\": { \\\"custom\\\":
        {} }, \\\"overrides\\\": [] }, \\\"fill\\\": 1, \\\"fillGradient\\\": 0, \\\"gridPos\\\":
        { \\\"h\\\": 6, \\\"w\\\": 12, \\\"x\\\": 12, \\\"y\\\": 16 }, \\\"hiddenSeries\\\":
        false, \\\"id\\\": 26, \\\"legend\\\": { \\\"avg\\\": false, \\\"current\\\":
        false, \\\"hideEmpty\\\": true, \\\"hideZero\\\": false, \\\"max\\\": false,
        \\\"min\\\": false, \\\"show\\\": true, \\\"total\\\": false, \\\"values\\\":
        false }, \\\"lines\\\": true, \\\"linewidth\\\": 1, \\\"links\\\": [], \\\"nullPointMode\\\":
        \\\"null\\\", \\\"percentage\\\": false, \\\"pluginVersion\\\": \\\"7.1.0\\\",
        \\\"pointradius\\\": 5, \\\"points\\\": false, \\\"renderer\\\": \\\"flot\\\",
        \\\"seriesOverrides\\\": [], \\\"spaceLength\\\": 10, \\\"stack\\\": false,
        \\\"steppedLine\\\": false, \\\"targets\\\": [ { \\\"expr\\\": \\\"sum(irate(istio_requests_total{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        destination_workload=~\\\\\\\"$workload\\\\\\\",response_code!~\\\\\\\"5.*\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[5m]))
        by (source_workload, source_workload_namespace) / sum(irate(istio_requests_total{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        destination_workload=~\\\\\\\"$workload\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[5m])) by (source_workload,
        source_workload_namespace)\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\":
        false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{ source_workload
        }}.{{ source_workload_namespace }} (\U0001F510mTLS)\\\", \\\"refId\\\": \\\"A\\\",
        \\\"step\\\": 2 }, { \\\"expr\\\": \\\"sum(irate(istio_requests_total{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        destination_workload=~\\\\\\\"$workload\\\\\\\",response_code!~\\\\\\\"5.*\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[5m]))
        by (source_workload, source_workload_namespace) / sum(irate(istio_requests_total{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        destination_workload=~\\\\\\\"$workload\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[5m])) by (source_workload,
        source_workload_namespace)\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\":
        false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{ source_workload
        }}.{{ source_workload_namespace }}\\\", \\\"refId\\\": \\\"B\\\", \\\"step\\\":
        2 } ], \\\"thresholds\\\": [], \\\"timeFrom\\\": null, \\\"timeRegions\\\":
        [], \\\"timeShift\\\": null, \\\"title\\\": \\\"Incoming Success Rate (non-5xx
        responses) By Source\\\", \\\"tooltip\\\": { \\\"shared\\\": true, \\\"sort\\\":
        0, \\\"value_type\\\": \\\"individual\\\" }, \\\"type\\\": \\\"graph\\\",
        \\\"xaxis\\\": { \\\"buckets\\\": null, \\\"mode\\\": \\\"time\\\", \\\"name\\\":
        null, \\\"show\\\": true, \\\"values\\\": [] }, \\\"yaxes\\\": [ { \\\"format\\\":
        \\\"percentunit\\\", \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\":
        \\\"1.01\\\", \\\"min\\\": \\\"0\\\", \\\"show\\\": true }, { \\\"format\\\":
        \\\"short\\\", \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null,
        \\\"min\\\": null, \\\"show\\\": false } ], \\\"yaxis\\\": { \\\"align\\\":
        false, \\\"alignLevel\\\": null } }, { \\\"aliasColors\\\": {}, \\\"bars\\\":
        false, \\\"dashLength\\\": 10, \\\"dashes\\\": false, \\\"datasource\\\":
        \\\"Prometheus\\\", \\\"description\\\": \\\"\\\", \\\"fieldConfig\\\": {
        \\\"defaults\\\": { \\\"custom\\\": {} }, \\\"overrides\\\": [] }, \\\"fill\\\":
        1, \\\"fillGradient\\\": 0, \\\"gridPos\\\": { \\\"h\\\": 6, \\\"w\\\": 8,
        \\\"x\\\": 0, \\\"y\\\": 22 }, \\\"hiddenSeries\\\": false, \\\"id\\\": 27,
        \\\"legend\\\": { \\\"alignAsTable\\\": false, \\\"avg\\\": false, \\\"current\\\":
        false, \\\"hideEmpty\\\": true, \\\"hideZero\\\": false, \\\"max\\\": false,
        \\\"min\\\": false, \\\"rightSide\\\": false, \\\"show\\\": true, \\\"total\\\":
        false, \\\"values\\\": false }, \\\"lines\\\": true, \\\"linewidth\\\": 1,
        \\\"links\\\": [], \\\"nullPointMode\\\": \\\"null\\\", \\\"percentage\\\":
        false, \\\"pluginVersion\\\": \\\"7.1.0\\\", \\\"pointradius\\\": 5, \\\"points\\\":
        false, \\\"renderer\\\": \\\"flot\\\", \\\"seriesOverrides\\\": [], \\\"spaceLength\\\":
        10, \\\"stack\\\": false, \\\"steppedLine\\\": false, \\\"targets\\\": [ {
        \\\"expr\\\": \\\"(histogram_quantile(0.50, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_workload=~\\\\\\\"$workload\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le)) / 1000) or histogram_quantile(0.50, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_workload=~\\\\\\\"$workload\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le))\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{source_workload}}.{{source_workload_namespace}}
        P50 (\U0001F510mTLS)\\\", \\\"refId\\\": \\\"A\\\", \\\"step\\\": 2 }, { \\\"expr\\\":
        \\\"(histogram_quantile(0.90, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_workload=~\\\\\\\"$workload\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le)) / 1000) or histogram_quantile(0.90, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_workload=~\\\\\\\"$workload\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le))\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{source_workload}}.{{source_workload_namespace}}
        P90 (\U0001F510mTLS)\\\", \\\"refId\\\": \\\"B\\\", \\\"step\\\": 2 }, { \\\"expr\\\":
        \\\"(histogram_quantile(0.95, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_workload=~\\\\\\\"$workload\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le)) / 1000) or histogram_quantile(0.95, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_workload=~\\\\\\\"$workload\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le))\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{source_workload}}.{{source_workload_namespace}}
        P95 (\U0001F510mTLS)\\\", \\\"refId\\\": \\\"C\\\", \\\"step\\\": 2 }, { \\\"expr\\\":
        \\\"(histogram_quantile(0.99, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_workload=~\\\\\\\"$workload\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le)) / 1000) or histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_workload=~\\\\\\\"$workload\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le))\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{source_workload}}.{{source_workload_namespace}}
        P99 (\U0001F510mTLS)\\\", \\\"refId\\\": \\\"D\\\", \\\"step\\\": 2 }, { \\\"expr\\\":
        \\\"(histogram_quantile(0.50, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_workload=~\\\\\\\"$workload\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le)) / 1000) or histogram_quantile(0.50, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_workload=~\\\\\\\"$workload\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le))\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{source_workload}}.{{source_workload_namespace}}
        P50\\\", \\\"refId\\\": \\\"E\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"(histogram_quantile(0.90,
        sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_workload=~\\\\\\\"$workload\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le)) / 1000) or histogram_quantile(0.90, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_workload=~\\\\\\\"$workload\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le))\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{source_workload}}.{{source_workload_namespace}}
        P90\\\", \\\"refId\\\": \\\"F\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"(histogram_quantile(0.95,
        sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_workload=~\\\\\\\"$workload\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le)) / 1000) or histogram_quantile(0.95, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_workload=~\\\\\\\"$workload\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le))\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{source_workload}}.{{source_workload_namespace}}
        P95\\\", \\\"refId\\\": \\\"G\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"(histogram_quantile(0.99,
        sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_workload=~\\\\\\\"$workload\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le)) / 1000) or histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_workload=~\\\\\\\"$workload\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le))\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{source_workload}}.{{source_workload_namespace}}
        P99\\\", \\\"refId\\\": \\\"H\\\", \\\"step\\\": 2 } ], \\\"thresholds\\\":
        [], \\\"timeFrom\\\": null, \\\"timeRegions\\\": [], \\\"timeShift\\\": null,
        \\\"title\\\": \\\"Incoming Request Duration By Source\\\", \\\"tooltip\\\":
        { \\\"shared\\\": true, \\\"sort\\\": 0, \\\"value_type\\\": \\\"individual\\\"
        }, \\\"type\\\": \\\"graph\\\", \\\"xaxis\\\": { \\\"buckets\\\": null, \\\"mode\\\":
        \\\"time\\\", \\\"name\\\": null, \\\"show\\\": true, \\\"values\\\": [] },
        \\\"yaxes\\\": [ { \\\"format\\\": \\\"s\\\", \\\"label\\\": null, \\\"logBase\\\":
        1, \\\"max\\\": null, \\\"min\\\": \\\"0\\\", \\\"show\\\": true }, { \\\"format\\\":
        \\\"short\\\", \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null,
        \\\"min\\\": null, \\\"show\\\": false } ], \\\"yaxis\\\": { \\\"align\\\":
        false, \\\"alignLevel\\\": null } }, { \\\"aliasColors\\\": {}, \\\"bars\\\":
        false, \\\"dashLength\\\": 10, \\\"dashes\\\": false, \\\"datasource\\\":
        \\\"Prometheus\\\", \\\"fieldConfig\\\": { \\\"defaults\\\": { \\\"custom\\\":
        {} }, \\\"overrides\\\": [] }, \\\"fill\\\": 1, \\\"fillGradient\\\": 0, \\\"gridPos\\\":
        { \\\"h\\\": 6, \\\"w\\\": 8, \\\"x\\\": 8, \\\"y\\\": 22 }, \\\"hiddenSeries\\\":
        false, \\\"id\\\": 28, \\\"legend\\\": { \\\"alignAsTable\\\": false, \\\"avg\\\":
        false, \\\"current\\\": false, \\\"hideEmpty\\\": true, \\\"max\\\": false,
        \\\"min\\\": false, \\\"rightSide\\\": false, \\\"show\\\": true, \\\"total\\\":
        false, \\\"values\\\": false }, \\\"lines\\\": true, \\\"linewidth\\\": 1,
        \\\"links\\\": [], \\\"nullPointMode\\\": \\\"null\\\", \\\"percentage\\\":
        false, \\\"pluginVersion\\\": \\\"7.1.0\\\", \\\"pointradius\\\": 5, \\\"points\\\":
        false, \\\"renderer\\\": \\\"flot\\\", \\\"seriesOverrides\\\": [], \\\"spaceLength\\\":
        10, \\\"stack\\\": false, \\\"steppedLine\\\": false, \\\"targets\\\": [ {
        \\\"expr\\\": \\\"histogram_quantile(0.50, sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_workload=~\\\\\\\"$workload\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le))\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{source_workload}}.{{source_workload_namespace}}
        P50 (\U0001F510mTLS)\\\", \\\"refId\\\": \\\"A\\\", \\\"step\\\": 2 }, { \\\"expr\\\":
        \\\"histogram_quantile(0.90, sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_workload=~\\\\\\\"$workload\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le))\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{source_workload}}.{{source_workload_namespace}}
        \ P90 (\U0001F510mTLS)\\\", \\\"refId\\\": \\\"B\\\", \\\"step\\\": 2 }, {
        \\\"expr\\\": \\\"histogram_quantile(0.95, sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_workload=~\\\\\\\"$workload\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le))\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{source_workload}}.{{source_workload_namespace}}
        P95 (\U0001F510mTLS)\\\", \\\"refId\\\": \\\"C\\\", \\\"step\\\": 2 }, { \\\"expr\\\":
        \\\"histogram_quantile(0.99, sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_workload=~\\\\\\\"$workload\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le))\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{source_workload}}.{{source_workload_namespace}}
        \ P99 (\U0001F510mTLS)\\\", \\\"refId\\\": \\\"D\\\", \\\"step\\\": 2 }, {
        \\\"expr\\\": \\\"histogram_quantile(0.50, sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_workload=~\\\\\\\"$workload\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace, le))\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{source_workload}}.{{source_workload_namespace}}
        P50\\\", \\\"refId\\\": \\\"E\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.90,
        sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\", connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        destination_workload=~\\\\\\\"$workload\\\\\\\", destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{source_workload}}.{{source_workload_namespace}} P90\\\", \\\"refId\\\":
        \\\"F\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.95,
        sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\", connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        destination_workload=~\\\\\\\"$workload\\\\\\\", destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{source_workload}}.{{source_workload_namespace}} P95\\\", \\\"refId\\\":
        \\\"G\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.99,
        sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\", connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        destination_workload=~\\\\\\\"$workload\\\\\\\", destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{source_workload}}.{{source_workload_namespace}} P99\\\", \\\"refId\\\":
        \\\"H\\\", \\\"step\\\": 2 } ], \\\"thresholds\\\": [], \\\"timeFrom\\\":
        null, \\\"timeRegions\\\": [], \\\"timeShift\\\": null, \\\"title\\\": \\\"Incoming
        Request Size By Source\\\", \\\"tooltip\\\": { \\\"shared\\\": true, \\\"sort\\\":
        0, \\\"value_type\\\": \\\"individual\\\" }, \\\"type\\\": \\\"graph\\\",
        \\\"xaxis\\\": { \\\"buckets\\\": null, \\\"mode\\\": \\\"time\\\", \\\"name\\\":
        null, \\\"show\\\": true, \\\"values\\\": [] }, \\\"yaxes\\\": [ { \\\"format\\\":
        \\\"decbytes\\\", \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null,
        \\\"min\\\": \\\"0\\\", \\\"show\\\": true }, { \\\"format\\\": \\\"short\\\",
        \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null, \\\"min\\\": null,
        \\\"show\\\": false } ], \\\"yaxis\\\": { \\\"align\\\": false, \\\"alignLevel\\\":
        null } }, { \\\"aliasColors\\\": {}, \\\"bars\\\": false, \\\"dashLength\\\":
        10, \\\"dashes\\\": false, \\\"datasource\\\": \\\"Prometheus\\\", \\\"fieldConfig\\\":
        { \\\"defaults\\\": { \\\"custom\\\": {} }, \\\"overrides\\\": [] }, \\\"fill\\\":
        1, \\\"fillGradient\\\": 0, \\\"gridPos\\\": { \\\"h\\\": 6, \\\"w\\\": 8,
        \\\"x\\\": 16, \\\"y\\\": 22 }, \\\"hiddenSeries\\\": false, \\\"id\\\": 68,
        \\\"legend\\\": { \\\"alignAsTable\\\": false, \\\"avg\\\": false, \\\"current\\\":
        false, \\\"hideEmpty\\\": true, \\\"max\\\": false, \\\"min\\\": false, \\\"rightSide\\\":
        false, \\\"show\\\": true, \\\"total\\\": false, \\\"values\\\": false },
        \\\"lines\\\": true, \\\"linewidth\\\": 1, \\\"links\\\": [], \\\"nullPointMode\\\":
        \\\"null\\\", \\\"percentage\\\": false, \\\"pluginVersion\\\": \\\"7.1.0\\\",
        \\\"pointradius\\\": 5, \\\"points\\\": false, \\\"renderer\\\": \\\"flot\\\",
        \\\"seriesOverrides\\\": [], \\\"spaceLength\\\": 10, \\\"stack\\\": false,
        \\\"steppedLine\\\": false, \\\"targets\\\": [ { \\\"expr\\\": \\\"histogram_quantile(0.50,
        sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\", connection_security_policy=\\\\\\\"mutual_tls\\\\\\\",
        destination_workload=~\\\\\\\"$workload\\\\\\\", destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{source_workload}}.{{source_workload_namespace}} P50 (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"A\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.90,
        sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\", connection_security_policy=\\\\\\\"mutual_tls\\\\\\\",
        destination_workload=~\\\\\\\"$workload\\\\\\\", destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{source_workload}}.{{source_workload_namespace}}  P90 (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"B\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.95,
        sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\", connection_security_policy=\\\\\\\"mutual_tls\\\\\\\",
        destination_workload=~\\\\\\\"$workload\\\\\\\", destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{source_workload}}.{{source_workload_namespace}} P95 (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"C\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.99,
        sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\", connection_security_policy=\\\\\\\"mutual_tls\\\\\\\",
        destination_workload=~\\\\\\\"$workload\\\\\\\", destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{source_workload}}.{{source_workload_namespace}}  P99 (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"D\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.50,
        sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\", connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        destination_workload=~\\\\\\\"$workload\\\\\\\", destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{source_workload}}.{{source_workload_namespace}} P50\\\", \\\"refId\\\":
        \\\"E\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.90,
        sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\", connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        destination_workload=~\\\\\\\"$workload\\\\\\\", destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{source_workload}}.{{source_workload_namespace}} P90\\\", \\\"refId\\\":
        \\\"F\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.95,
        sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\", connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        destination_workload=~\\\\\\\"$workload\\\\\\\", destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{source_workload}}.{{source_workload_namespace}} P95\\\", \\\"refId\\\":
        \\\"G\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.99,
        sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"$qrep\\\\\\\", connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        destination_workload=~\\\\\\\"$workload\\\\\\\", destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        source_workload=~\\\\\\\"$srcwl\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m]))
        by (source_workload, source_workload_namespace, le))\\\", \\\"format\\\":
        \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\":
        \\\"{{source_workload}}.{{source_workload_namespace}} P99\\\", \\\"refId\\\":
        \\\"H\\\", \\\"step\\\": 2 } ], \\\"thresholds\\\": [], \\\"timeFrom\\\":
        null, \\\"timeRegions\\\": [], \\\"timeShift\\\": null, \\\"title\\\": \\\"Response
        Size By Source\\\", \\\"tooltip\\\": { \\\"shared\\\": true, \\\"sort\\\":
        0, \\\"value_type\\\": \\\"individual\\\" }, \\\"type\\\": \\\"graph\\\",
        \\\"xaxis\\\": { \\\"buckets\\\": null, \\\"mode\\\": \\\"time\\\", \\\"name\\\":
        null, \\\"show\\\": true, \\\"values\\\": [] }, \\\"yaxes\\\": [ { \\\"format\\\":
        \\\"decbytes\\\", \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null,
        \\\"min\\\": \\\"0\\\", \\\"show\\\": true }, { \\\"format\\\": \\\"short\\\",
        \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null, \\\"min\\\": null,
        \\\"show\\\": false } ], \\\"yaxis\\\": { \\\"align\\\": false, \\\"alignLevel\\\":
        null } }, { \\\"aliasColors\\\": {}, \\\"bars\\\": false, \\\"dashLength\\\":
        10, \\\"dashes\\\": false, \\\"datasource\\\": \\\"Prometheus\\\", \\\"fieldConfig\\\":
        { \\\"defaults\\\": { \\\"custom\\\": {} }, \\\"overrides\\\": [] }, \\\"fill\\\":
        1, \\\"fillGradient\\\": 0, \\\"gridPos\\\": { \\\"h\\\": 6, \\\"w\\\": 12,
        \\\"x\\\": 0, \\\"y\\\": 28 }, \\\"hiddenSeries\\\": false, \\\"id\\\": 80,
        \\\"legend\\\": { \\\"avg\\\": false, \\\"current\\\": false, \\\"max\\\":
        false, \\\"min\\\": false, \\\"show\\\": true, \\\"total\\\": false, \\\"values\\\":
        false }, \\\"lines\\\": true, \\\"linewidth\\\": 1, \\\"links\\\": [], \\\"nullPointMode\\\":
        \\\"null\\\", \\\"percentage\\\": false, \\\"pluginVersion\\\": \\\"7.1.0\\\",
        \\\"pointradius\\\": 5, \\\"points\\\": false, \\\"renderer\\\": \\\"flot\\\",
        \\\"seriesOverrides\\\": [], \\\"spaceLength\\\": 10, \\\"stack\\\": false,
        \\\"steppedLine\\\": false, \\\"targets\\\": [ { \\\"expr\\\": \\\"round(sum(irate(istio_tcp_received_bytes_total{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        destination_workload=~\\\\\\\"$workload\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace), 0.001)\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{
        source_workload }}.{{ source_workload_namespace}} (\U0001F510mTLS)\\\", \\\"refId\\\":
        \\\"A\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"round(sum(irate(istio_tcp_received_bytes_total{reporter=\\\\\\\"$qrep\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        destination_workload=~\\\\\\\"$workload\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace), 0.001)\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{ source_workload }}.{{
        source_workload_namespace}}\\\", \\\"refId\\\": \\\"B\\\", \\\"step\\\": 2
        } ], \\\"thresholds\\\": [], \\\"timeFrom\\\": null, \\\"timeRegions\\\":
        [], \\\"timeShift\\\": null, \\\"title\\\": \\\"Bytes Received from Incoming
        TCP Connection\\\", \\\"tooltip\\\": { \\\"shared\\\": true, \\\"sort\\\":
        0, \\\"value_type\\\": \\\"individual\\\" }, \\\"type\\\": \\\"graph\\\",
        \\\"xaxis\\\": { \\\"buckets\\\": null, \\\"mode\\\": \\\"time\\\", \\\"name\\\":
        null, \\\"show\\\": true, \\\"values\\\": [] }, \\\"yaxes\\\": [ { \\\"format\\\":
        \\\"Bps\\\", \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null, \\\"min\\\":
        \\\"0\\\", \\\"show\\\": true }, { \\\"format\\\": \\\"short\\\", \\\"label\\\":
        null, \\\"logBase\\\": 1, \\\"max\\\": null, \\\"min\\\": null, \\\"show\\\":
        true } ], \\\"yaxis\\\": { \\\"align\\\": false, \\\"alignLevel\\\": null
        } }, { \\\"aliasColors\\\": {}, \\\"bars\\\": false, \\\"dashLength\\\": 10,
        \\\"dashes\\\": false, \\\"datasource\\\": \\\"Prometheus\\\", \\\"fieldConfig\\\":
        { \\\"defaults\\\": { \\\"custom\\\": {} }, \\\"overrides\\\": [] }, \\\"fill\\\":
        1, \\\"fillGradient\\\": 0, \\\"gridPos\\\": { \\\"h\\\": 6, \\\"w\\\": 12,
        \\\"x\\\": 12, \\\"y\\\": 28 }, \\\"hiddenSeries\\\": false, \\\"id\\\": 82,
        \\\"legend\\\": { \\\"avg\\\": false, \\\"current\\\": false, \\\"max\\\":
        false, \\\"min\\\": false, \\\"show\\\": true, \\\"total\\\": false, \\\"values\\\":
        false }, \\\"lines\\\": true, \\\"linewidth\\\": 1, \\\"links\\\": [], \\\"nullPointMode\\\":
        \\\"null\\\", \\\"percentage\\\": false, \\\"pluginVersion\\\": \\\"7.1.0\\\",
        \\\"pointradius\\\": 5, \\\"points\\\": false, \\\"renderer\\\": \\\"flot\\\",
        \\\"seriesOverrides\\\": [], \\\"spaceLength\\\": 10, \\\"stack\\\": false,
        \\\"steppedLine\\\": false, \\\"targets\\\": [ { \\\"expr\\\": \\\"round(sum(irate(istio_tcp_sent_bytes_total{connection_security_policy=\\\\\\\"mutual_tls\\\\\\\",
        reporter=\\\\\\\"$qrep\\\\\\\", destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        destination_workload=~\\\\\\\"$workload\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace), 0.001)\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{ source_workload }}.{{
        source_workload_namespace}} (\U0001F510mTLS)\\\", \\\"refId\\\": \\\"A\\\",
        \\\"step\\\": 2 }, { \\\"expr\\\": \\\"round(sum(irate(istio_tcp_sent_bytes_total{connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        reporter=\\\\\\\"$qrep\\\\\\\", destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        destination_workload=~\\\\\\\"$workload\\\\\\\", source_workload=~\\\\\\\"$srcwl\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}[1m])) by (source_workload,
        source_workload_namespace), 0.001)\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{ source_workload }}.{{
        source_workload_namespace}}\\\", \\\"refId\\\": \\\"B\\\", \\\"step\\\": 2
        } ], \\\"thresholds\\\": [], \\\"timeFrom\\\": null, \\\"timeRegions\\\":
        [], \\\"timeShift\\\": null, \\\"title\\\": \\\"Bytes Sent to Incoming TCP
        Connection\\\", \\\"tooltip\\\": { \\\"shared\\\": true, \\\"sort\\\": 0,
        \\\"value_type\\\": \\\"individual\\\" }, \\\"type\\\": \\\"graph\\\", \\\"xaxis\\\":
        { \\\"buckets\\\": null, \\\"mode\\\": \\\"time\\\", \\\"name\\\": null, \\\"show\\\":
        true, \\\"values\\\": [] }, \\\"yaxes\\\": [ { \\\"format\\\": \\\"Bps\\\",
        \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null, \\\"min\\\": \\\"0\\\",
        \\\"show\\\": true }, { \\\"format\\\": \\\"short\\\", \\\"label\\\": null,
        \\\"logBase\\\": 1, \\\"max\\\": null, \\\"min\\\": null, \\\"show\\\": true
        } ], \\\"yaxis\\\": { \\\"align\\\": false, \\\"alignLevel\\\": null } } ],
        \\\"title\\\": \\\"Inbound Workloads\\\", \\\"type\\\": \\\"row\\\" }, { \\\"collapsed\\\":
        true, \\\"gridPos\\\": { \\\"h\\\": 1, \\\"w\\\": 24, \\\"x\\\": 0, \\\"y\\\":
        2 }, \\\"id\\\": 91, \\\"panels\\\": [ { \\\"content\\\": \\\"\\u003cdiv class=\\\\\\\"dashboard-header
        text-center\\\\\\\"\\u003e\\\\n\\u003cspan\\u003eOUTBOUND SERVICES\\u003c/span\\u003e\\\\n\\u003c/div\\u003e\\\",
        \\\"fieldConfig\\\": { \\\"defaults\\\": { \\\"custom\\\": {} }, \\\"overrides\\\":
        [] }, \\\"gridPos\\\": { \\\"h\\\": 3, \\\"w\\\": 24, \\\"x\\\": 0, \\\"y\\\":
        14 }, \\\"id\\\": 69, \\\"links\\\": [], \\\"mode\\\": \\\"html\\\", \\\"options\\\":
        { \\\"content\\\": \\\"\\u003cdiv class=\\\\\\\"dashboard-header text-center\\\\\\\"\\u003e\\\\n\\u003cspan\\u003eOUTBOUND
        SERVICES\\u003c/span\\u003e\\\\n\\u003c/div\\u003e\\\", \\\"mode\\\": \\\"html\\\"
        }, \\\"pluginVersion\\\": \\\"7.1.0\\\", \\\"title\\\": \\\"\\\", \\\"transparent\\\":
        true, \\\"type\\\": \\\"text\\\" }, { \\\"aliasColors\\\": {}, \\\"bars\\\":
        false, \\\"dashLength\\\": 10, \\\"dashes\\\": false, \\\"datasource\\\":
        \\\"Prometheus\\\", \\\"fieldConfig\\\": { \\\"defaults\\\": { \\\"custom\\\":
        {} }, \\\"overrides\\\": [] }, \\\"fill\\\": 0, \\\"fillGradient\\\": 0, \\\"gridPos\\\":
        { \\\"h\\\": 6, \\\"w\\\": 12, \\\"x\\\": 0, \\\"y\\\": 17 }, \\\"hiddenSeries\\\":
        false, \\\"id\\\": 70, \\\"legend\\\": { \\\"avg\\\": false, \\\"current\\\":
        false, \\\"hideEmpty\\\": true, \\\"max\\\": false, \\\"min\\\": false, \\\"show\\\":
        true, \\\"total\\\": false, \\\"values\\\": false }, \\\"lines\\\": true,
        \\\"linewidth\\\": 1, \\\"links\\\": [], \\\"nullPointMode\\\": \\\"null as
        zero\\\", \\\"percentage\\\": false, \\\"pluginVersion\\\": \\\"7.1.0\\\",
        \\\"pointradius\\\": 5, \\\"points\\\": false, \\\"renderer\\\": \\\"flot\\\",
        \\\"seriesOverrides\\\": [], \\\"spaceLength\\\": 10, \\\"stack\\\": false,
        \\\"steppedLine\\\": false, \\\"targets\\\": [ { \\\"expr\\\": \\\"round(sum(irate(istio_requests_total{connection_security_policy=\\\\\\\"mutual_tls\\\\\\\",
        source_workload_namespace=~\\\\\\\"$namespace\\\\\\\", source_workload=~\\\\\\\"$workload\\\\\\\",
        reporter=\\\\\\\"source\\\\\\\", destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[5m]))
        by (destination_service, response_code), 0.001)\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{ destination_service
        }} : {{ response_code }} (\U0001F510mTLS)\\\", \\\"refId\\\": \\\"A\\\", \\\"step\\\":
        2 }, { \\\"expr\\\": \\\"round(sum(irate(istio_requests_total{connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        source_workload_namespace=~\\\\\\\"$namespace\\\\\\\", source_workload=~\\\\\\\"$workload\\\\\\\",
        reporter=\\\\\\\"source\\\\\\\", destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[5m]))
        by (destination_service, response_code), 0.001)\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"hide\\\": false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{
        destination_service }} : {{ response_code }}\\\", \\\"refId\\\": \\\"B\\\",
        \\\"step\\\": 2 } ], \\\"thresholds\\\": [], \\\"timeFrom\\\": null, \\\"timeRegions\\\":
        [], \\\"timeShift\\\": null, \\\"title\\\": \\\"Outgoing Requests By Destination
        And Response Code\\\", \\\"tooltip\\\": { \\\"shared\\\": false, \\\"sort\\\":
        0, \\\"value_type\\\": \\\"individual\\\" }, \\\"type\\\": \\\"graph\\\",
        \\\"xaxis\\\": { \\\"buckets\\\": null, \\\"mode\\\": \\\"time\\\", \\\"name\\\":
        null, \\\"show\\\": true, \\\"values\\\": [ \\\"total\\\" ] }, \\\"yaxes\\\":
        [ { \\\"format\\\": \\\"ops\\\", \\\"label\\\": null, \\\"logBase\\\": 1,
        \\\"max\\\": null, \\\"min\\\": \\\"0\\\", \\\"show\\\": true }, { \\\"format\\\":
        \\\"short\\\", \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null,
        \\\"min\\\": null, \\\"show\\\": false } ], \\\"yaxis\\\": { \\\"align\\\":
        false, \\\"alignLevel\\\": null } }, { \\\"aliasColors\\\": {}, \\\"bars\\\":
        false, \\\"dashLength\\\": 10, \\\"dashes\\\": false, \\\"datasource\\\":
        \\\"Prometheus\\\", \\\"fieldConfig\\\": { \\\"defaults\\\": { \\\"custom\\\":
        {} }, \\\"overrides\\\": [] }, \\\"fill\\\": 1, \\\"fillGradient\\\": 0, \\\"gridPos\\\":
        { \\\"h\\\": 6, \\\"w\\\": 12, \\\"x\\\": 12, \\\"y\\\": 17 }, \\\"hiddenSeries\\\":
        false, \\\"id\\\": 71, \\\"legend\\\": { \\\"avg\\\": false, \\\"current\\\":
        false, \\\"hideEmpty\\\": true, \\\"hideZero\\\": false, \\\"max\\\": false,
        \\\"min\\\": false, \\\"show\\\": true, \\\"total\\\": false, \\\"values\\\":
        false }, \\\"lines\\\": true, \\\"linewidth\\\": 1, \\\"links\\\": [], \\\"nullPointMode\\\":
        \\\"null\\\", \\\"percentage\\\": false, \\\"pluginVersion\\\": \\\"7.1.0\\\",
        \\\"pointradius\\\": 5, \\\"points\\\": false, \\\"renderer\\\": \\\"flot\\\",
        \\\"seriesOverrides\\\": [], \\\"spaceLength\\\": 10, \\\"stack\\\": false,
        \\\"steppedLine\\\": false, \\\"targets\\\": [ { \\\"expr\\\": \\\"sum(irate(istio_requests_total{reporter=\\\\\\\"source\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", source_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        source_workload=~\\\\\\\"$workload\\\\\\\",response_code!~\\\\\\\"5.*\\\\\\\",
        destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[5m])) by (destination_service)
        / sum(irate(istio_requests_total{reporter=\\\\\\\"source\\\\\\\", connection_security_policy=\\\\\\\"mutual_tls\\\\\\\",
        source_workload_namespace=~\\\\\\\"$namespace\\\\\\\", source_workload=~\\\\\\\"$workload\\\\\\\",
        destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[5m])) by (destination_service)\\\",
        \\\"format\\\": \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\":
        1, \\\"legendFormat\\\": \\\"{{ destination_service }} (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"A\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"sum(irate(istio_requests_total{reporter=\\\\\\\"source\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", source_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        source_workload=~\\\\\\\"$workload\\\\\\\",response_code!~\\\\\\\"5.*\\\\\\\",
        destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[5m])) by (destination_service)
        / sum(irate(istio_requests_total{reporter=\\\\\\\"source\\\\\\\", connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        source_workload_namespace=~\\\\\\\"$namespace\\\\\\\", source_workload=~\\\\\\\"$workload\\\\\\\",
        destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[5m])) by (destination_service)\\\",
        \\\"format\\\": \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\":
        1, \\\"legendFormat\\\": \\\"{{ destination_service }}\\\", \\\"refId\\\":
        \\\"B\\\", \\\"step\\\": 2 } ], \\\"thresholds\\\": [], \\\"timeFrom\\\":
        null, \\\"timeRegions\\\": [], \\\"timeShift\\\": null, \\\"title\\\": \\\"Outgoing
        Success Rate (non-5xx responses) By Destination\\\", \\\"tooltip\\\": { \\\"shared\\\":
        true, \\\"sort\\\": 0, \\\"value_type\\\": \\\"individual\\\" }, \\\"type\\\":
        \\\"graph\\\", \\\"xaxis\\\": { \\\"buckets\\\": null, \\\"mode\\\": \\\"time\\\",
        \\\"name\\\": null, \\\"show\\\": true, \\\"values\\\": [] }, \\\"yaxes\\\":
        [ { \\\"format\\\": \\\"percentunit\\\", \\\"label\\\": null, \\\"logBase\\\":
        1, \\\"max\\\": \\\"1.01\\\", \\\"min\\\": \\\"0\\\", \\\"show\\\": true },
        { \\\"format\\\": \\\"short\\\", \\\"label\\\": null, \\\"logBase\\\": 1,
        \\\"max\\\": null, \\\"min\\\": null, \\\"show\\\": false } ], \\\"yaxis\\\":
        { \\\"align\\\": false, \\\"alignLevel\\\": null } }, { \\\"aliasColors\\\":
        {}, \\\"bars\\\": false, \\\"dashLength\\\": 10, \\\"dashes\\\": false, \\\"datasource\\\":
        \\\"Prometheus\\\", \\\"description\\\": \\\"\\\", \\\"fieldConfig\\\": {
        \\\"defaults\\\": { \\\"custom\\\": {} }, \\\"overrides\\\": [] }, \\\"fill\\\":
        1, \\\"fillGradient\\\": 0, \\\"gridPos\\\": { \\\"h\\\": 6, \\\"w\\\": 8,
        \\\"x\\\": 0, \\\"y\\\": 23 }, \\\"hiddenSeries\\\": false, \\\"id\\\": 72,
        \\\"legend\\\": { \\\"alignAsTable\\\": false, \\\"avg\\\": false, \\\"current\\\":
        false, \\\"hideEmpty\\\": true, \\\"hideZero\\\": false, \\\"max\\\": false,
        \\\"min\\\": false, \\\"rightSide\\\": false, \\\"show\\\": true, \\\"total\\\":
        false, \\\"values\\\": false }, \\\"lines\\\": true, \\\"linewidth\\\": 1,
        \\\"links\\\": [], \\\"nullPointMode\\\": \\\"null\\\", \\\"percentage\\\":
        false, \\\"pluginVersion\\\": \\\"7.1.0\\\", \\\"pointradius\\\": 5, \\\"points\\\":
        false, \\\"renderer\\\": \\\"flot\\\", \\\"seriesOverrides\\\": [], \\\"spaceLength\\\":
        10, \\\"stack\\\": false, \\\"steppedLine\\\": false, \\\"targets\\\": [ {
        \\\"expr\\\": \\\"(histogram_quantile(0.50, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"source\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", source_workload=~\\\\\\\"$workload\\\\\\\",
        source_workload_namespace=~\\\\\\\"$namespace\\\\\\\", destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m]))
        by (destination_service, le)) / 1000) or histogram_quantile(0.50, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"source\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", source_workload=~\\\\\\\"$workload\\\\\\\",
        source_workload_namespace=~\\\\\\\"$namespace\\\\\\\", destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m]))
        by (destination_service, le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\":
        false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{ destination_service
        }} P50 (\U0001F510mTLS)\\\", \\\"refId\\\": \\\"A\\\", \\\"step\\\": 2 },
        { \\\"expr\\\": \\\"(histogram_quantile(0.90, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"source\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", source_workload=~\\\\\\\"$workload\\\\\\\",
        source_workload_namespace=~\\\\\\\"$namespace\\\\\\\", destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m]))
        by (destination_service, le)) / 1000) or histogram_quantile(0.90, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"source\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", source_workload=~\\\\\\\"$workload\\\\\\\",
        source_workload_namespace=~\\\\\\\"$namespace\\\\\\\", destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m]))
        by (destination_service, le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\":
        false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{ destination_service
        }} P90 (\U0001F510mTLS)\\\", \\\"refId\\\": \\\"B\\\", \\\"step\\\": 2 },
        { \\\"expr\\\": \\\"(histogram_quantile(0.95, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"source\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", source_workload=~\\\\\\\"$workload\\\\\\\",
        source_workload_namespace=~\\\\\\\"$namespace\\\\\\\", destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m]))
        by (destination_service, le)) / 1000) or histogram_quantile(0.95, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"source\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", source_workload=~\\\\\\\"$workload\\\\\\\",
        source_workload_namespace=~\\\\\\\"$namespace\\\\\\\", destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m]))
        by (destination_service, le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\":
        false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{ destination_service
        }} P95 (\U0001F510mTLS)\\\", \\\"refId\\\": \\\"C\\\", \\\"step\\\": 2 },
        { \\\"expr\\\": \\\"(histogram_quantile(0.99, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"source\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", source_workload=~\\\\\\\"$workload\\\\\\\",
        source_workload_namespace=~\\\\\\\"$namespace\\\\\\\", destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m]))
        by (destination_service, le)) / 1000) or histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"source\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", source_workload=~\\\\\\\"$workload\\\\\\\",
        source_workload_namespace=~\\\\\\\"$namespace\\\\\\\", destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m]))
        by (destination_service, le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\":
        false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{ destination_service
        }} P99 (\U0001F510mTLS)\\\", \\\"refId\\\": \\\"D\\\", \\\"step\\\": 2 },
        { \\\"expr\\\": \\\"(histogram_quantile(0.50, sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"source\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", source_workload=~\\\\\\\"$workload\\\\\\\",
        source_workload_namespace=~\\\\\\\"$namespace\\\\\\\", destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m]))
        by (destination_service, le)) / 1000) or histogram_quantile(0.50, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"source\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", source_workload=~\\\\\\\"$workload\\\\\\\",
        source_workload_namespace=~\\\\\\\"$namespace\\\\\\\", destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m]))
        by (destination_service, le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\":
        false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{ destination_service
        }} P50\\\", \\\"refId\\\": \\\"E\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"(histogram_quantile(0.90,
        sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"source\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", source_workload=~\\\\\\\"$workload\\\\\\\",
        source_workload_namespace=~\\\\\\\"$namespace\\\\\\\", destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m]))
        by (destination_service, le)) / 1000) or histogram_quantile(0.90, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"source\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", source_workload=~\\\\\\\"$workload\\\\\\\",
        source_workload_namespace=~\\\\\\\"$namespace\\\\\\\", destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m]))
        by (destination_service, le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\":
        false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{ destination_service
        }} P90\\\", \\\"refId\\\": \\\"F\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"(histogram_quantile(0.95,
        sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"source\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", source_workload=~\\\\\\\"$workload\\\\\\\",
        source_workload_namespace=~\\\\\\\"$namespace\\\\\\\", destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m]))
        by (destination_service, le)) / 1000) or histogram_quantile(0.95, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"source\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", source_workload=~\\\\\\\"$workload\\\\\\\",
        source_workload_namespace=~\\\\\\\"$namespace\\\\\\\", destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m]))
        by (destination_service, le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\":
        false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{ destination_service
        }} P95\\\", \\\"refId\\\": \\\"G\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"(histogram_quantile(0.99,
        sum(irate(istio_request_duration_milliseconds_bucket{reporter=\\\\\\\"source\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", source_workload=~\\\\\\\"$workload\\\\\\\",
        source_workload_namespace=~\\\\\\\"$namespace\\\\\\\", destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m]))
        by (destination_service, le)) / 1000) or histogram_quantile(0.99, sum(irate(istio_request_duration_seconds_bucket{reporter=\\\\\\\"source\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", source_workload=~\\\\\\\"$workload\\\\\\\",
        source_workload_namespace=~\\\\\\\"$namespace\\\\\\\", destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m]))
        by (destination_service, le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\":
        false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{ destination_service
        }} P99\\\", \\\"refId\\\": \\\"H\\\", \\\"step\\\": 2 } ], \\\"thresholds\\\":
        [], \\\"timeFrom\\\": null, \\\"timeRegions\\\": [], \\\"timeShift\\\": null,
        \\\"title\\\": \\\"Outgoing Request Duration By Destination\\\", \\\"tooltip\\\":
        { \\\"shared\\\": true, \\\"sort\\\": 0, \\\"value_type\\\": \\\"individual\\\"
        }, \\\"type\\\": \\\"graph\\\", \\\"xaxis\\\": { \\\"buckets\\\": null, \\\"mode\\\":
        \\\"time\\\", \\\"name\\\": null, \\\"show\\\": true, \\\"values\\\": [] },
        \\\"yaxes\\\": [ { \\\"format\\\": \\\"s\\\", \\\"label\\\": null, \\\"logBase\\\":
        1, \\\"max\\\": null, \\\"min\\\": \\\"0\\\", \\\"show\\\": true }, { \\\"format\\\":
        \\\"short\\\", \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null,
        \\\"min\\\": null, \\\"show\\\": false } ], \\\"yaxis\\\": { \\\"align\\\":
        false, \\\"alignLevel\\\": null } }, { \\\"aliasColors\\\": {}, \\\"bars\\\":
        false, \\\"dashLength\\\": 10, \\\"dashes\\\": false, \\\"datasource\\\":
        \\\"Prometheus\\\", \\\"fieldConfig\\\": { \\\"defaults\\\": { \\\"custom\\\":
        {} }, \\\"overrides\\\": [] }, \\\"fill\\\": 1, \\\"fillGradient\\\": 0, \\\"gridPos\\\":
        { \\\"h\\\": 6, \\\"w\\\": 8, \\\"x\\\": 8, \\\"y\\\": 23 }, \\\"hiddenSeries\\\":
        false, \\\"id\\\": 73, \\\"legend\\\": { \\\"alignAsTable\\\": false, \\\"avg\\\":
        false, \\\"current\\\": false, \\\"hideEmpty\\\": true, \\\"max\\\": false,
        \\\"min\\\": false, \\\"rightSide\\\": false, \\\"show\\\": true, \\\"total\\\":
        false, \\\"values\\\": false }, \\\"lines\\\": true, \\\"linewidth\\\": 1,
        \\\"links\\\": [], \\\"nullPointMode\\\": \\\"null\\\", \\\"percentage\\\":
        false, \\\"pluginVersion\\\": \\\"7.1.0\\\", \\\"pointradius\\\": 5, \\\"points\\\":
        false, \\\"renderer\\\": \\\"flot\\\", \\\"seriesOverrides\\\": [], \\\"spaceLength\\\":
        10, \\\"stack\\\": false, \\\"steppedLine\\\": false, \\\"targets\\\": [ {
        \\\"expr\\\": \\\"histogram_quantile(0.50, sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"source\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", source_workload=~\\\\\\\"$workload\\\\\\\",
        source_workload_namespace=~\\\\\\\"$namespace\\\\\\\", destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m]))
        by (destination_service, le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\":
        false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{ destination_service
        }} P50 (\U0001F510mTLS)\\\", \\\"refId\\\": \\\"A\\\", \\\"step\\\": 2 },
        { \\\"expr\\\": \\\"histogram_quantile(0.90, sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"source\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", source_workload=~\\\\\\\"$workload\\\\\\\",
        source_workload_namespace=~\\\\\\\"$namespace\\\\\\\", destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m]))
        by (destination_service, le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\":
        false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{ destination_service
        }} P90 (\U0001F510mTLS)\\\", \\\"refId\\\": \\\"B\\\", \\\"step\\\": 2 },
        { \\\"expr\\\": \\\"histogram_quantile(0.95, sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"source\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", source_workload=~\\\\\\\"$workload\\\\\\\",
        source_workload_namespace=~\\\\\\\"$namespace\\\\\\\", destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m]))
        by (destination_service, le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\":
        false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{ destination_service
        }} P95 (\U0001F510mTLS)\\\", \\\"refId\\\": \\\"C\\\", \\\"step\\\": 2 },
        { \\\"expr\\\": \\\"histogram_quantile(0.99, sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"source\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", source_workload=~\\\\\\\"$workload\\\\\\\",
        source_workload_namespace=~\\\\\\\"$namespace\\\\\\\", destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m]))
        by (destination_service, le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\":
        false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{ destination_service
        }} P99 (\U0001F510mTLS)\\\", \\\"refId\\\": \\\"D\\\", \\\"step\\\": 2 },
        { \\\"expr\\\": \\\"histogram_quantile(0.50, sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"source\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", source_workload=~\\\\\\\"$workload\\\\\\\",
        source_workload_namespace=~\\\\\\\"$namespace\\\\\\\", destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m]))
        by (destination_service, le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\":
        false, \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{ destination_service
        }} P50\\\", \\\"refId\\\": \\\"E\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.90,
        sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"source\\\\\\\", connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        source_workload=~\\\\\\\"$workload\\\\\\\", source_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m])) by (destination_service,
        le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\":
        1, \\\"legendFormat\\\": \\\"{{ destination_service }} P90\\\", \\\"refId\\\":
        \\\"F\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.95,
        sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"source\\\\\\\", connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        source_workload=~\\\\\\\"$workload\\\\\\\", source_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m])) by (destination_service,
        le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\":
        1, \\\"legendFormat\\\": \\\"{{ destination_service }} P95\\\", \\\"refId\\\":
        \\\"G\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.99,
        sum(irate(istio_request_bytes_bucket{reporter=\\\\\\\"source\\\\\\\", connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        source_workload=~\\\\\\\"$workload\\\\\\\", source_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m])) by (destination_service,
        le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\":
        1, \\\"legendFormat\\\": \\\"{{ destination_service }} P99\\\", \\\"refId\\\":
        \\\"H\\\", \\\"step\\\": 2 } ], \\\"thresholds\\\": [], \\\"timeFrom\\\":
        null, \\\"timeRegions\\\": [], \\\"timeShift\\\": null, \\\"title\\\": \\\"Outgoing
        Request Size By Destination\\\", \\\"tooltip\\\": { \\\"shared\\\": true,
        \\\"sort\\\": 0, \\\"value_type\\\": \\\"individual\\\" }, \\\"type\\\": \\\"graph\\\",
        \\\"xaxis\\\": { \\\"buckets\\\": null, \\\"mode\\\": \\\"time\\\", \\\"name\\\":
        null, \\\"show\\\": true, \\\"values\\\": [] }, \\\"yaxes\\\": [ { \\\"format\\\":
        \\\"decbytes\\\", \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null,
        \\\"min\\\": \\\"0\\\", \\\"show\\\": true }, { \\\"format\\\": \\\"short\\\",
        \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null, \\\"min\\\": null,
        \\\"show\\\": false } ], \\\"yaxis\\\": { \\\"align\\\": false, \\\"alignLevel\\\":
        null } }, { \\\"aliasColors\\\": {}, \\\"bars\\\": false, \\\"dashLength\\\":
        10, \\\"dashes\\\": false, \\\"datasource\\\": \\\"Prometheus\\\", \\\"fieldConfig\\\":
        { \\\"defaults\\\": { \\\"custom\\\": {} }, \\\"overrides\\\": [] }, \\\"fill\\\":
        1, \\\"fillGradient\\\": 0, \\\"gridPos\\\": { \\\"h\\\": 6, \\\"w\\\": 8,
        \\\"x\\\": 16, \\\"y\\\": 23 }, \\\"hiddenSeries\\\": false, \\\"id\\\": 74,
        \\\"legend\\\": { \\\"alignAsTable\\\": false, \\\"avg\\\": false, \\\"current\\\":
        false, \\\"hideEmpty\\\": true, \\\"max\\\": false, \\\"min\\\": false, \\\"rightSide\\\":
        false, \\\"show\\\": true, \\\"total\\\": false, \\\"values\\\": false },
        \\\"lines\\\": true, \\\"linewidth\\\": 1, \\\"links\\\": [], \\\"nullPointMode\\\":
        \\\"null\\\", \\\"percentage\\\": false, \\\"pluginVersion\\\": \\\"7.1.0\\\",
        \\\"pointradius\\\": 5, \\\"points\\\": false, \\\"renderer\\\": \\\"flot\\\",
        \\\"seriesOverrides\\\": [], \\\"spaceLength\\\": 10, \\\"stack\\\": false,
        \\\"steppedLine\\\": false, \\\"targets\\\": [ { \\\"expr\\\": \\\"histogram_quantile(0.50,
        sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"source\\\\\\\", connection_security_policy=\\\\\\\"mutual_tls\\\\\\\",
        source_workload=~\\\\\\\"$workload\\\\\\\", source_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m])) by (destination_service,
        le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\":
        1, \\\"legendFormat\\\": \\\"{{ destination_service }} P50 (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"A\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.90,
        sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"source\\\\\\\", connection_security_policy=\\\\\\\"mutual_tls\\\\\\\",
        source_workload=~\\\\\\\"$workload\\\\\\\", source_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m])) by (destination_service,
        le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\":
        1, \\\"legendFormat\\\": \\\"{{ destination_service }} P90 (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"B\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.95,
        sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"source\\\\\\\", connection_security_policy=\\\\\\\"mutual_tls\\\\\\\",
        source_workload=~\\\\\\\"$workload\\\\\\\", source_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m])) by (destination_service,
        le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\":
        1, \\\"legendFormat\\\": \\\"{{ destination_service }} P95 (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"C\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.99,
        sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"source\\\\\\\", connection_security_policy=\\\\\\\"mutual_tls\\\\\\\",
        source_workload=~\\\\\\\"$workload\\\\\\\", source_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m])) by (destination_service,
        le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\":
        1, \\\"legendFormat\\\": \\\"{{ destination_service }}  P99 (\U0001F510mTLS)\\\",
        \\\"refId\\\": \\\"D\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.50,
        sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"source\\\\\\\", connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        source_workload=~\\\\\\\"$workload\\\\\\\", source_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m])) by (destination_service,
        le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\":
        1, \\\"legendFormat\\\": \\\"{{ destination_service }} P50\\\", \\\"refId\\\":
        \\\"E\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.90,
        sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"source\\\\\\\", connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        source_workload=~\\\\\\\"$workload\\\\\\\", source_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m])) by (destination_service,
        le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\":
        1, \\\"legendFormat\\\": \\\"{{ destination_service }} P90\\\", \\\"refId\\\":
        \\\"F\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.95,
        sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"source\\\\\\\", connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        source_workload=~\\\\\\\"$workload\\\\\\\", source_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m])) by (destination_service,
        le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\":
        1, \\\"legendFormat\\\": \\\"{{ destination_service }} P95\\\", \\\"refId\\\":
        \\\"G\\\", \\\"step\\\": 2 }, { \\\"expr\\\": \\\"histogram_quantile(0.99,
        sum(irate(istio_response_bytes_bucket{reporter=\\\\\\\"source\\\\\\\", connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        source_workload=~\\\\\\\"$workload\\\\\\\", source_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m])) by (destination_service,
        le))\\\", \\\"format\\\": \\\"time_series\\\", \\\"hide\\\": false, \\\"intervalFactor\\\":
        1, \\\"legendFormat\\\": \\\"{{ destination_service }} P99\\\", \\\"refId\\\":
        \\\"H\\\", \\\"step\\\": 2 } ], \\\"thresholds\\\": [], \\\"timeFrom\\\":
        null, \\\"timeRegions\\\": [], \\\"timeShift\\\": null, \\\"title\\\": \\\"Response
        Size By Destination\\\", \\\"tooltip\\\": { \\\"shared\\\": true, \\\"sort\\\":
        0, \\\"value_type\\\": \\\"individual\\\" }, \\\"type\\\": \\\"graph\\\",
        \\\"xaxis\\\": { \\\"buckets\\\": null, \\\"mode\\\": \\\"time\\\", \\\"name\\\":
        null, \\\"show\\\": true, \\\"values\\\": [] }, \\\"yaxes\\\": [ { \\\"format\\\":
        \\\"decbytes\\\", \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null,
        \\\"min\\\": \\\"0\\\", \\\"show\\\": true }, { \\\"format\\\": \\\"short\\\",
        \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null, \\\"min\\\": null,
        \\\"show\\\": false } ], \\\"yaxis\\\": { \\\"align\\\": false, \\\"alignLevel\\\":
        null } }, { \\\"aliasColors\\\": {}, \\\"bars\\\": false, \\\"dashLength\\\":
        10, \\\"dashes\\\": false, \\\"datasource\\\": \\\"Prometheus\\\", \\\"fieldConfig\\\":
        { \\\"defaults\\\": { \\\"custom\\\": {} }, \\\"overrides\\\": [] }, \\\"fill\\\":
        1, \\\"fillGradient\\\": 0, \\\"gridPos\\\": { \\\"h\\\": 6, \\\"w\\\": 12,
        \\\"x\\\": 0, \\\"y\\\": 29 }, \\\"hiddenSeries\\\": false, \\\"id\\\": 76,
        \\\"legend\\\": { \\\"avg\\\": false, \\\"current\\\": false, \\\"max\\\":
        false, \\\"min\\\": false, \\\"show\\\": true, \\\"total\\\": false, \\\"values\\\":
        false }, \\\"lines\\\": true, \\\"linewidth\\\": 1, \\\"links\\\": [], \\\"nullPointMode\\\":
        \\\"null\\\", \\\"percentage\\\": false, \\\"pluginVersion\\\": \\\"7.1.0\\\",
        \\\"pointradius\\\": 5, \\\"points\\\": false, \\\"renderer\\\": \\\"flot\\\",
        \\\"seriesOverrides\\\": [], \\\"spaceLength\\\": 10, \\\"stack\\\": false,
        \\\"steppedLine\\\": false, \\\"targets\\\": [ { \\\"expr\\\": \\\"round(sum(irate(istio_tcp_sent_bytes_total{connection_security_policy=\\\\\\\"mutual_tls\\\\\\\",
        reporter=\\\\\\\"source\\\\\\\", source_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        source_workload=~\\\\\\\"$workload\\\\\\\", destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m]))
        by (destination_service), 0.001)\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{ destination_service
        }} (\U0001F510mTLS)\\\", \\\"refId\\\": \\\"A\\\", \\\"step\\\": 2 }, { \\\"expr\\\":
        \\\"round(sum(irate(istio_tcp_sent_bytes_total{connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\",
        reporter=\\\\\\\"source\\\\\\\", source_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        source_workload=~\\\\\\\"$workload\\\\\\\", destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m]))
        by (destination_service), 0.001)\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{ destination_service
        }}\\\", \\\"refId\\\": \\\"B\\\", \\\"step\\\": 2 } ], \\\"thresholds\\\":
        [], \\\"timeFrom\\\": null, \\\"timeRegions\\\": [], \\\"timeShift\\\": null,
        \\\"title\\\": \\\"Bytes Sent on Outgoing TCP Connection\\\", \\\"tooltip\\\":
        { \\\"shared\\\": true, \\\"sort\\\": 0, \\\"value_type\\\": \\\"individual\\\"
        }, \\\"type\\\": \\\"graph\\\", \\\"xaxis\\\": { \\\"buckets\\\": null, \\\"mode\\\":
        \\\"time\\\", \\\"name\\\": null, \\\"show\\\": true, \\\"values\\\": [] },
        \\\"yaxes\\\": [ { \\\"format\\\": \\\"Bps\\\", \\\"label\\\": null, \\\"logBase\\\":
        1, \\\"max\\\": null, \\\"min\\\": \\\"0\\\", \\\"show\\\": true }, { \\\"format\\\":
        \\\"short\\\", \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null,
        \\\"min\\\": null, \\\"show\\\": true } ], \\\"yaxis\\\": { \\\"align\\\":
        false, \\\"alignLevel\\\": null } }, { \\\"aliasColors\\\": {}, \\\"bars\\\":
        false, \\\"dashLength\\\": 10, \\\"dashes\\\": false, \\\"datasource\\\":
        \\\"Prometheus\\\", \\\"fieldConfig\\\": { \\\"defaults\\\": { \\\"custom\\\":
        {} }, \\\"overrides\\\": [] }, \\\"fill\\\": 1, \\\"fillGradient\\\": 0, \\\"gridPos\\\":
        { \\\"h\\\": 6, \\\"w\\\": 12, \\\"x\\\": 12, \\\"y\\\": 29 }, \\\"hiddenSeries\\\":
        false, \\\"id\\\": 78, \\\"legend\\\": { \\\"avg\\\": false, \\\"current\\\":
        false, \\\"max\\\": false, \\\"min\\\": false, \\\"show\\\": true, \\\"total\\\":
        false, \\\"values\\\": false }, \\\"lines\\\": true, \\\"linewidth\\\": 1,
        \\\"links\\\": [], \\\"nullPointMode\\\": \\\"null\\\", \\\"percentage\\\":
        false, \\\"pluginVersion\\\": \\\"7.1.0\\\", \\\"pointradius\\\": 5, \\\"points\\\":
        false, \\\"renderer\\\": \\\"flot\\\", \\\"seriesOverrides\\\": [], \\\"spaceLength\\\":
        10, \\\"stack\\\": false, \\\"steppedLine\\\": false, \\\"targets\\\": [ {
        \\\"expr\\\": \\\"round(sum(irate(istio_tcp_received_bytes_total{reporter=\\\\\\\"source\\\\\\\",
        connection_security_policy=\\\\\\\"mutual_tls\\\\\\\", source_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        source_workload=~\\\\\\\"$workload\\\\\\\", destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m]))
        by (destination_service), 0.001)\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{ destination_service
        }} (\U0001F510mTLS)\\\", \\\"refId\\\": \\\"A\\\", \\\"step\\\": 2 }, { \\\"expr\\\":
        \\\"round(sum(irate(istio_tcp_received_bytes_total{reporter=\\\\\\\"source\\\\\\\",
        connection_security_policy!=\\\\\\\"mutual_tls\\\\\\\", source_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        source_workload=~\\\\\\\"$workload\\\\\\\", destination_service=~\\\\\\\"$dstsvc\\\\\\\"}[1m]))
        by (destination_service), 0.001)\\\", \\\"format\\\": \\\"time_series\\\",
        \\\"intervalFactor\\\": 1, \\\"legendFormat\\\": \\\"{{ destination_service
        }}\\\", \\\"refId\\\": \\\"B\\\", \\\"step\\\": 2 } ], \\\"thresholds\\\":
        [], \\\"timeFrom\\\": null, \\\"timeRegions\\\": [], \\\"timeShift\\\": null,
        \\\"title\\\": \\\"Bytes Received from Outgoing TCP Connection\\\", \\\"tooltip\\\":
        { \\\"shared\\\": true, \\\"sort\\\": 0, \\\"value_type\\\": \\\"individual\\\"
        }, \\\"type\\\": \\\"graph\\\", \\\"xaxis\\\": { \\\"buckets\\\": null, \\\"mode\\\":
        \\\"time\\\", \\\"name\\\": null, \\\"show\\\": true, \\\"values\\\": [] },
        \\\"yaxes\\\": [ { \\\"format\\\": \\\"Bps\\\", \\\"label\\\": null, \\\"logBase\\\":
        1, \\\"max\\\": null, \\\"min\\\": \\\"0\\\", \\\"show\\\": true }, { \\\"format\\\":
        \\\"short\\\", \\\"label\\\": null, \\\"logBase\\\": 1, \\\"max\\\": null,
        \\\"min\\\": null, \\\"show\\\": true } ], \\\"yaxis\\\": { \\\"align\\\":
        false, \\\"alignLevel\\\": null } } ], \\\"title\\\": \\\"Outbound Services\\\",
        \\\"type\\\": \\\"row\\\" } ], \\\"refresh\\\": \\\"1m\\\", \\\"schemaVersion\\\":
        26, \\\"style\\\": \\\"dark\\\", \\\"tags\\\": [], \\\"templating\\\": { \\\"list\\\":
        [ { \\\"current\\\": { \\\"selected\\\": true, \\\"text\\\": \\\"default\\\",
        \\\"value\\\": \\\"default\\\" }, \\\"hide\\\": 0, \\\"includeAll\\\": false,
        \\\"label\\\": null, \\\"multi\\\": false, \\\"name\\\": \\\"datasource\\\",
        \\\"options\\\": [], \\\"query\\\": \\\"prometheus\\\", \\\"queryValue\\\":
        \\\"\\\", \\\"refresh\\\": 1, \\\"regex\\\": \\\"\\\", \\\"skipUrlSync\\\":
        false, \\\"type\\\": \\\"datasource\\\" }, { \\\"allValue\\\": null, \\\"current\\\":
        {}, \\\"datasource\\\": \\\"Prometheus\\\", \\\"definition\\\": \\\"\\\",
        \\\"hide\\\": 0, \\\"includeAll\\\": false, \\\"label\\\": \\\"Namespace\\\",
        \\\"multi\\\": false, \\\"name\\\": \\\"namespace\\\", \\\"options\\\": [],
        \\\"query\\\": \\\"query_result(sum(istio_requests_total) by (destination_workload_namespace)
        or sum(istio_tcp_sent_bytes_total) by (destination_workload_namespace))\\\",
        \\\"refresh\\\": 1, \\\"regex\\\": \\\"/.*_namespace=\\\\\\\"([^\\\\\\\"]*).*/\\\",
        \\\"skipUrlSync\\\": false, \\\"sort\\\": 0, \\\"tagValuesQuery\\\": \\\"\\\",
        \\\"tags\\\": [], \\\"tagsQuery\\\": \\\"\\\", \\\"type\\\": \\\"query\\\",
        \\\"useTags\\\": false }, { \\\"allValue\\\": null, \\\"current\\\": {}, \\\"datasource\\\":
        \\\"Prometheus\\\", \\\"definition\\\": \\\"\\\", \\\"hide\\\": 0, \\\"includeAll\\\":
        false, \\\"label\\\": \\\"Workload\\\", \\\"multi\\\": false, \\\"name\\\":
        \\\"workload\\\", \\\"options\\\": [], \\\"query\\\": \\\"query_result((sum(istio_requests_total{destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\"})
        by (destination_workload) or sum(istio_requests_total{source_workload_namespace=~\\\\\\\"$namespace\\\\\\\"})
        by (source_workload)) or (sum(istio_tcp_sent_bytes_total{destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\"})
        by (destination_workload) or sum(istio_tcp_sent_bytes_total{source_workload_namespace=~\\\\\\\"$namespace\\\\\\\"})
        by (source_workload)))\\\", \\\"refresh\\\": 1, \\\"regex\\\": \\\"/.*workload=\\\\\\\"([^\\\\\\\"]*).*/\\\",
        \\\"skipUrlSync\\\": false, \\\"sort\\\": 1, \\\"tagValuesQuery\\\": \\\"\\\",
        \\\"tags\\\": [], \\\"tagsQuery\\\": \\\"\\\", \\\"type\\\": \\\"query\\\",
        \\\"useTags\\\": false }, { \\\"allValue\\\": null, \\\"current\\\": { \\\"selected\\\":
        true, \\\"text\\\": \\\"destination\\\", \\\"value\\\": \\\"destination\\\"
        }, \\\"datasource\\\": \\\"Prometheus\\\", \\\"definition\\\": \\\"\\\", \\\"hide\\\":
        0, \\\"includeAll\\\": false, \\\"label\\\": \\\"Reporter\\\", \\\"multi\\\":
        true, \\\"name\\\": \\\"qrep\\\", \\\"options\\\": [], \\\"query\\\": \\\"label_values(reporter)\\\",
        \\\"refresh\\\": 1, \\\"regex\\\": \\\"\\\", \\\"skipUrlSync\\\": false, \\\"sort\\\":
        2, \\\"tagValuesQuery\\\": \\\"\\\", \\\"tags\\\": [], \\\"tagsQuery\\\":
        \\\"\\\", \\\"type\\\": \\\"query\\\", \\\"useTags\\\": false }, { \\\"allValue\\\":
        null, \\\"current\\\": {}, \\\"datasource\\\": \\\"Prometheus\\\", \\\"definition\\\":
        \\\"\\\", \\\"hide\\\": 0, \\\"includeAll\\\": true, \\\"label\\\": \\\"Inbound
        Workload Namespace\\\", \\\"multi\\\": true, \\\"name\\\": \\\"srcns\\\",
        \\\"options\\\": [], \\\"query\\\": \\\"query_result(sum(istio_requests_total{reporter=\\\\\\\"$qrep\\\\\\\",
        destination_workload=\\\\\\\"$workload\\\\\\\", destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\"})
        by (source_workload_namespace) or sum(istio_tcp_sent_bytes_total{reporter=\\\\\\\"$qrep\\\\\\\",
        destination_workload=\\\\\\\"$workload\\\\\\\", destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\"})
        by (source_workload_namespace))\\\", \\\"refresh\\\": 1, \\\"regex\\\": \\\"/.*namespace=\\\\\\\"([^\\\\\\\"]*).*/\\\",
        \\\"skipUrlSync\\\": false, \\\"sort\\\": 2, \\\"tagValuesQuery\\\": \\\"\\\",
        \\\"tags\\\": [], \\\"tagsQuery\\\": \\\"\\\", \\\"type\\\": \\\"query\\\",
        \\\"useTags\\\": false }, { \\\"allValue\\\": null, \\\"current\\\": {}, \\\"datasource\\\":
        \\\"Prometheus\\\", \\\"definition\\\": \\\"\\\", \\\"hide\\\": 0, \\\"includeAll\\\":
        true, \\\"label\\\": \\\"Inbound Workload\\\", \\\"multi\\\": true, \\\"name\\\":
        \\\"srcwl\\\", \\\"options\\\": [], \\\"query\\\": \\\"query_result(sum(istio_requests_total{reporter=\\\\\\\"$qrep\\\\\\\",
        destination_workload=\\\\\\\"$workload\\\\\\\", destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\",
        source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"}) by (source_workload) or
        sum(istio_tcp_sent_bytes_total{reporter=\\\\\\\"$qrep\\\\\\\", destination_workload=\\\\\\\"$workload\\\\\\\",
        destination_workload_namespace=~\\\\\\\"$namespace\\\\\\\", source_workload_namespace=~\\\\\\\"$srcns\\\\\\\"})
        by (source_workload))\\\", \\\"refresh\\\": 1, \\\"regex\\\": \\\"/.*workload=\\\\\\\"([^\\\\\\\"]*).*/\\\",
        \\\"skipUrlSync\\\": false, \\\"sort\\\": 3, \\\"tagValuesQuery\\\": \\\"\\\",
        \\\"tags\\\": [], \\\"tagsQuery\\\": \\\"\\\", \\\"type\\\": \\\"query\\\",
        \\\"useTags\\\": false }, { \\\"allValue\\\": null, \\\"current\\\": {}, \\\"datasource\\\":
        \\\"Prometheus\\\", \\\"definition\\\": \\\"\\\", \\\"hide\\\": 0, \\\"includeAll\\\":
        true, \\\"label\\\": \\\"Destination Service\\\", \\\"multi\\\": true, \\\"name\\\":
        \\\"dstsvc\\\", \\\"options\\\": [], \\\"query\\\": \\\"query_result(sum(istio_requests_total{reporter=\\\\\\\"source\\\\\\\",
        source_workload=~\\\\\\\"$workload\\\\\\\", source_workload_namespace=~\\\\\\\"$namespace\\\\\\\"})
        by (destination_service) or sum(istio_tcp_sent_bytes_total{reporter=\\\\\\\"source\\\\\\\",
        source_workload=~\\\\\\\"$workload\\\\\\\", source_workload_namespace=~\\\\\\\"$namespace\\\\\\\"})
        by (destination_service))\\\", \\\"refresh\\\": 1, \\\"regex\\\": \\\"/.*destination_service=\\\\\\\"([^\\\\\\\"]*).*/\\\",
        \\\"skipUrlSync\\\": false, \\\"sort\\\": 4, \\\"tagValuesQuery\\\": \\\"\\\",
        \\\"tags\\\": [], \\\"tagsQuery\\\": \\\"\\\", \\\"type\\\": \\\"query\\\",
        \\\"useTags\\\": false } ] }, \\\"time\\\": { \\\"from\\\": \\\"now-5m\\\",
        \\\"to\\\": \\\"now\\\" }, \\\"timepicker\\\": { \\\"refresh_intervals\\\":
        [ \\\"5m\\\", \\\"15m\\\", \\\"30m\\\", \\\"1h\\\", \\\"2h\\\", \\\"1d\\\"
        ], \\\"time_options\\\": [ \\\"5m\\\", \\\"15m\\\", \\\"1h\\\", \\\"6h\\\",
        \\\"12h\\\", \\\"24h\\\", \\\"2d\\\", \\\"7d\\\", \\\"30d\\\" ] }, \\\"timezone\\\":
        \\\"\\\", \\\"title\\\": \\\"Istio Workload Dashboard\\\", \\\"uid\\\": \\\"UbsSZTDik\\\",
        \\\"version\\\": 1 }\"},\"kind\":\"ConfigMap\",\"metadata\":{\"annotations\":{\"maistra.io/mesh-generation\":\"2.3.1-1-2\"},\"labels\":{\"app\":\"grafana\",\"app.kubernetes.io/component\":\"grafana\",\"app.kubernetes.io/instance\":\"istio-system\",\"app.kubernetes.io/managed-by\":\"maistra-istio-operator\",\"app.kubernetes.io/name\":\"grafana\",\"app.kubernetes.io/part-of\":\"istio\",\"app.kubernetes.io/version\":\"2.3.1-1-2\",\"istio\":\"grafana\",\"maistra-version\":\"2.1.6\",\"maistra.io/owner\":\"istio-system\",\"maistra.io/owner-name\":\"basic\",\"release\":\"istio\"},\"name\":\"istio-grafana-configuration-dashboards-istio-workload-dashboard\",\"namespace\":\"istio-system\",\"ownerReferences\":[{\"apiVersion\":\"maistra.io/v2\",\"blockOwnerDeletion\":true,\"controller\":true,\"kind\":\"ServiceMeshControlPlane\",\"name\":\"basic\",\"uid\":\"0c79eb74-854c-4f98-85c6-5955e78fd93e\"}]}}\n"
      maistra.io/mesh-generation: 2.3.1-1-2
    creationTimestamp: "2023-03-03T20:03:21Z"
    labels:
      app: grafana
      app.kubernetes.io/component: grafana
      app.kubernetes.io/instance: istio-system
      app.kubernetes.io/managed-by: maistra-istio-operator
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: istio
      app.kubernetes.io/version: 2.3.1-1-2
      istio: grafana
      maistra-version: 2.1.6
      maistra.io/owner: istio-system
      maistra.io/owner-name: basic
      release: istio
    name: istio-grafana-configuration-dashboards-istio-workload-dashboard
    namespace: istio-system
    ownerReferences:
    - apiVersion: maistra.io/v2
      blockOwnerDeletion: true
      controller: true
      kind: ServiceMeshControlPlane
      name: basic
      uid: 0c79eb74-854c-4f98-85c6-5955e78fd93e
    resourceVersion: "34885"
    uid: 7cdcdfdc-d17d-4cad-8c48-24372cbf9551
- apiVersion: v1
  data:
    pilot-dashboard.json: '{ "annotations": { "list": [ { "builtIn": 1, "datasource":
      "-- Grafana --", "enable": true, "hide": true, "iconColor": "rgba(0, 211, 255,
      1)", "name": "Annotations & Alerts", "type": "dashboard" } ] }, "editable":
      false, "gnetId": null, "graphTooltip": 1, "links": [], "panels": [ { "collapsed":
      false, "gridPos": { "h": 1, "w": 24, "x": 0, "y": 0 }, "id": 60, "panels": [],
      "title": "Deployed Versions", "type": "row" }, { "aliasColors": {}, "bars":
      false, "dashLength": 10, "dashes": false, "datasource": "Prometheus", "fill":
      1, "gridPos": { "h": 5, "w": 24, "x": 0, "y": 1 }, "id": 56, "legend": { "avg":
      false, "current": false, "max": false, "min": false, "show": true, "total":
      false, "values": false }, "lines": true, "linewidth": 1, "links": [], "nullPointMode":
      "null", "percentage": false, "pointradius": 5, "points": false, "renderer":
      "flot", "seriesOverrides": [], "spaceLength": 10, "stack": false, "steppedLine":
      false, "targets": [ { "expr": "sum(istio_build{component=\"pilot\"}) by (tag)",
      "format": "time_series", "intervalFactor": 1, "legendFormat": "{{ tag }}", "refId":
      "A" } ], "thresholds": [], "timeFrom": null, "timeRegions": [], "timeShift":
      null, "title": "Pilot Versions", "tooltip": { "shared": true, "sort": 0, "value_type":
      "individual" }, "type": "graph", "xaxis": { "buckets": null, "mode": "time",
      "name": null, "show": true, "values": [] }, "yaxes": [ { "format": "short",
      "label": null, "logBase": 1, "max": null, "min": null, "show": true }, { "format":
      "short", "label": null, "logBase": 1, "max": null, "min": null, "show": false
      } ], "yaxis": { "align": false, "alignLevel": null } }, { "collapsed": false,
      "gridPos": { "h": 1, "w": 24, "x": 0, "y": 6 }, "id": 62, "panels": [], "title":
      "Resource Usage", "type": "row" }, { "aliasColors": {}, "bars": false, "dashLength":
      10, "dashes": false, "datasource": "Prometheus", "fill": 1, "gridPos": { "h":
      7, "w": 6, "x": 0, "y": 7 }, "id": 5, "legend": { "avg": false, "current": false,
      "max": false, "min": false, "show": true, "total": false, "values": false },
      "lines": true, "linewidth": 1, "links": [], "nullPointMode": "null", "percentage":
      false, "pointradius": 5, "points": false, "renderer": "flot", "seriesOverrides":
      [], "spaceLength": 10, "stack": false, "steppedLine": false, "targets": [ {
      "expr": "process_virtual_memory_bytes{app=\"istiod\"}", "format": "time_series",
      "instant": false, "intervalFactor": 2, "legendFormat": "Virtual Memory", "refId":
      "I", "step": 2 }, { "expr": "process_resident_memory_bytes{app=\"istiod\"}",
      "format": "time_series", "intervalFactor": 2, "legendFormat": "Resident Memory",
      "refId": "H", "step": 2 }, { "expr": "go_memstats_heap_sys_bytes{app=\"istiod\"}",
      "format": "time_series", "hide": true, "intervalFactor": 2, "legendFormat":
      "heap sys", "refId": "A" }, { "expr": "go_memstats_heap_alloc_bytes{app=\"istiod\"}",
      "format": "time_series", "hide": true, "intervalFactor": 2, "legendFormat":
      "heap alloc", "refId": "D" }, { "expr": "go_memstats_alloc_bytes{app=\"istiod\"}",
      "format": "time_series", "intervalFactor": 2, "legendFormat": "Alloc", "refId":
      "F", "step": 2 }, { "expr": "go_memstats_heap_inuse_bytes{app=\"istiod\"}",
      "format": "time_series", "hide": false, "intervalFactor": 2, "legendFormat":
      "Heap in-use", "refId": "E", "step": 2 }, { "expr": "go_memstats_stack_inuse_bytes{app=\"istiod\"}",
      "format": "time_series", "intervalFactor": 2, "legendFormat": "Stack in-use",
      "refId": "G", "step": 2 }, { "expr": "container_memory_working_set_bytes{container=~\"discovery\",
      pod=~\"istiod-.*|istio-pilot-.*\"}", "format": "time_series", "hide": false,
      "intervalFactor": 2, "legendFormat": "Discovery (container)", "refId": "B",
      "step": 2 }, { "expr": "container_memory_working_set_bytes{container=~\"istio-proxy\",
      pod=~\"istiod-.*|istio-pilot-.*\"}", "format": "time_series", "intervalFactor":
      1, "legendFormat": "Sidecar (container)", "refId": "C" } ], "thresholds": [],
      "timeFrom": null, "timeRegions": [], "timeShift": null, "title": "Memory", "tooltip":
      { "shared": true, "sort": 0, "value_type": "individual" }, "type": "graph",
      "xaxis": { "buckets": null, "mode": "time", "name": null, "show": true, "values":
      [] }, "yaxes": [ { "format": "bytes", "label": null, "logBase": 1, "max": null,
      "min": null, "show": true }, { "format": "short", "label": null, "logBase":
      1, "max": null, "min": null, "show": false } ], "yaxis": { "align": false, "alignLevel":
      null } }, { "aliasColors": {}, "bars": false, "dashLength": 10, "dashes": false,
      "datasource": "Prometheus", "fill": 1, "gridPos": { "h": 7, "w": 6, "x": 6,
      "y": 7 }, "id": 6, "legend": { "avg": false, "current": false, "max": false,
      "min": false, "show": true, "total": false, "values": false }, "lines": true,
      "linewidth": 1, "links": [], "nullPointMode": "null", "percentage": false, "pointradius":
      5, "points": false, "renderer": "flot", "seriesOverrides": [], "spaceLength":
      10, "stack": false, "steppedLine": false, "targets": [ { "expr": "sum(irate(container_cpu_usage_seconds_total{container=\"discovery\",
      pod=~\"istiod-.*|istio-pilot-.*\"}[1m]))", "format": "time_series", "intervalFactor":
      1, "legendFormat": "Discovery (container)", "refId": "A" }, { "expr": "irate(process_cpu_seconds_total{app=\"istiod\"}[1m])",
      "format": "time_series", "hide": false, "intervalFactor": 2, "legendFormat":
      "Discovery (process)", "refId": "C", "step": 2 }, { "expr": "sum(irate(container_cpu_usage_seconds_total{container=\"istio-proxy\",
      pod=~\"istiod-.*|istio-pilot-.*\"}[1m]))", "format": "time_series", "hide":
      false, "intervalFactor": 2, "legendFormat": "Sidecar (container)", "refId":
      "B", "step": 2 } ], "thresholds": [], "timeFrom": null, "timeRegions": [], "timeShift":
      null, "title": "CPU", "tooltip": { "shared": true, "sort": 0, "value_type":
      "individual" }, "type": "graph", "xaxis": { "buckets": null, "mode": "time",
      "name": null, "show": true, "values": [] }, "yaxes": [ { "format": "short",
      "label": null, "logBase": 1, "max": null, "min": null, "show": true }, { "format":
      "short", "label": null, "logBase": 1, "max": null, "min": null, "show": true
      } ], "yaxis": { "align": false, "alignLevel": null } }, { "aliasColors": {},
      "bars": false, "dashLength": 10, "dashes": false, "datasource": "Prometheus",
      "fill": 1, "gridPos": { "h": 7, "w": 6, "x": 12, "y": 7 }, "id": 7, "legend":
      { "avg": false, "current": false, "max": false, "min": false, "show": true,
      "total": false, "values": false }, "lines": true, "linewidth": 1, "links": [],
      "nullPointMode": "null", "percentage": false, "pointradius": 5, "points": false,
      "renderer": "flot", "seriesOverrides": [], "spaceLength": 10, "stack": false,
      "steppedLine": false, "targets": [ { "expr": "container_fs_usage_bytes{container=\"discovery\",
      pod=~\"istiod-.*|istio-pilot-.*\"}", "format": "time_series", "intervalFactor":
      2, "legendFormat": "Discovery", "refId": "B", "step": 2 }, { "expr": "container_fs_usage_bytes{container=\"istio-proxy\",
      pod=~\"istiod-.*|istio-pilot-.*\"}", "format": "time_series", "intervalFactor":
      1, "legendFormat": "Sidecar", "refId": "A" } ], "thresholds": [], "timeFrom":
      null, "timeRegions": [], "timeShift": null, "title": "Disk", "tooltip": { "shared":
      true, "sort": 0, "value_type": "individual" }, "type": "graph", "xaxis": { "buckets":
      null, "mode": "time", "name": null, "show": true, "values": [] }, "yaxes": [
      { "format": "bytes", "label": "", "logBase": 1, "max": null, "min": null, "show":
      true }, { "decimals": null, "format": "none", "label": "", "logBase": 1024,
      "max": null, "min": null, "show": false } ], "yaxis": { "align": false, "alignLevel":
      null } }, { "aliasColors": {}, "bars": false, "dashLength": 10, "dashes": false,
      "datasource": "Prometheus", "fill": 1, "gridPos": { "h": 7, "w": 6, "x": 18,
      "y": 7 }, "id": 4, "legend": { "avg": false, "current": false, "max": false,
      "min": false, "show": false, "total": false, "values": false }, "lines": true,
      "linewidth": 1, "links": [], "nullPointMode": "null", "percentage": false, "pointradius":
      5, "points": false, "renderer": "flot", "seriesOverrides": [], "spaceLength":
      10, "stack": false, "steppedLine": false, "targets": [ { "expr": "go_goroutines{app=\"istiod\"}",
      "format": "time_series", "intervalFactor": 2, "legendFormat": "Number of Goroutines",
      "refId": "A", "step": 2 } ], "thresholds": [], "timeFrom": null, "timeRegions":
      [], "timeShift": null, "title": "Goroutines", "tooltip": { "shared": true, "sort":
      0, "value_type": "individual" }, "type": "graph", "xaxis": { "buckets": null,
      "mode": "time", "name": null, "show": true, "values": [] }, "yaxes": [ { "format":
      "short", "label": "", "logBase": 1, "max": null, "min": null, "show": true },
      { "format": "short", "label": null, "logBase": 1, "max": null, "min": null,
      "show": true } ], "yaxis": { "align": false, "alignLevel": null } }, { "collapsed":
      false, "gridPos": { "h": 1, "w": 24, "x": 0, "y": 14 }, "id": 58, "panels":
      [], "title": "Pilot Push Information", "type": "row" }, { "aliasColors": {},
      "bars": true, "dashLength": 10, "dashes": false, "datasource": "Prometheus",
      "description": "Shows the rate of pilot pushes", "fill": 1, "gridPos": { "h":
      8, "w": 8, "x": 0, "y": 15 }, "id": 622, "legend": { "avg": false, "current":
      false, "max": false, "min": false, "show": true, "total": false, "values": false
      }, "lines": false, "linewidth": 1, "links": [], "nullPointMode": "null as zero",
      "paceLength": 10, "percentage": false, "pointradius": 5, "points": false, "renderer":
      "flot", "seriesOverrides": [], "spaceLength": 10, "stack": true, "steppedLine":
      false, "targets": [ { "expr": "sum(irate(pilot_xds_pushes{type=\"cds\"}[1m]))",
      "format": "time_series", "intervalFactor": 1, "legendFormat": "Cluster", "refId":
      "C" }, { "expr": "sum(irate(pilot_xds_pushes{type=\"eds\"}[1m]))", "format":
      "time_series", "intervalFactor": 1, "legendFormat": "Endpoints", "refId": "D"
      }, { "expr": "sum(irate(pilot_xds_pushes{type=\"lds\"}[1m]))", "format": "time_series",
      "intervalFactor": 1, "legendFormat": "Listeners", "refId": "A" }, { "expr":
      "sum(irate(pilot_xds_pushes{type=\"rds\"}[1m]))", "format": "time_series", "intervalFactor":
      1, "legendFormat": "Routes", "refId": "E" }, { "expr": "sum(irate(pilot_xds_pushes{type=\"sds\"}[1m]))",
      "interval": "", "legendFormat": "Secrets", "refId": "B" }, { "expr": "sum(irate(pilot_xds_pushes{type=\"nds\"}[1m]))",
      "interval": "", "legendFormat": "Nametables", "refId": "F" } ], "thresholds":
      [], "timeFrom": null, "timeRegions": [], "timeShift": null, "title": "Pilot
      Pushes", "tooltip": { "shared": false, "sort": 0, "value_type": "individual"
      }, "type": "graph", "xaxis": { "buckets": null, "mode": "time", "name": null,
      "show": true, "values": [ "total" ] }, "yaxes": [ { "format": "ops", "label":
      null, "logBase": 1, "max": null, "min": "0", "show": true }, { "format": "short",
      "label": null, "logBase": 1, "max": null, "min": null, "show": false } ], "yaxis":
      { "align": false, "alignLevel": null } }, { "aliasColors": {}, "bars": false,
      "dashLength": 10, "dashes": false, "datasource": "Prometheus", "description":
      "Captures a variety of pilot errors", "fill": 1, "gridPos": { "h": 8, "w": 8,
      "x": 8, "y": 15 }, "id": 67, "legend": { "avg": false, "current": false, "hideEmpty":
      true, "hideZero": true, "max": false, "min": false, "show": true, "total": false,
      "values": false }, "lines": true, "linewidth": 1, "links": [], "nullPointMode":
      "null", "percentage": false, "pointradius": 5, "points": false, "renderer":
      "flot", "seriesOverrides": [], "spaceLength": 10, "stack": false, "steppedLine":
      false, "targets": [ { "expr": "sum(pilot_xds_cds_reject{app=\"istiod\"}) or
      (absent(pilot_xds_cds_reject{app=\"istiod\"}) - 1)", "format": "time_series",
      "hide": false, "intervalFactor": 1, "legendFormat": "Rejected CDS Configs",
      "refId": "C" }, { "expr": "sum(pilot_xds_eds_reject{app=\"istiod\"}) or (absent(pilot_xds_eds_reject{app=\"istiod\"})
      - 1)", "format": "time_series", "hide": false, "intervalFactor": 1, "legendFormat":
      "Rejected EDS Configs", "refId": "D" }, { "expr": "sum(pilot_xds_rds_reject{app=\"istiod\"})
      or (absent(pilot_xds_rds_reject{app=\"istiod\"}) - 1)", "format": "time_series",
      "hide": false, "intervalFactor": 1, "legendFormat": "Rejected RDS Configs",
      "refId": "A" }, { "expr": "sum(pilot_xds_lds_reject{app=\"istiod\"}) or (absent(pilot_xds_lds_reject{app=\"istiod\"})
      - 1)", "format": "time_series", "hide": false, "intervalFactor": 1, "legendFormat":
      "Rejected LDS Configs", "refId": "B" }, { "expr": "sum(rate(pilot_xds_write_timeout{app=\"istiod\"}[1m]))",
      "format": "time_series", "intervalFactor": 1, "legendFormat": "Write Timeouts",
      "refId": "F" }, { "expr": "sum(rate(pilot_total_xds_internal_errors{app=\"istiod\"}[1m]))",
      "format": "time_series", "hide": false, "intervalFactor": 1, "legendFormat":
      "Internal Errors", "refId": "H" }, { "expr": "sum(rate(pilot_total_xds_rejects{app=\"istiod\"}[1m]))",
      "format": "time_series", "hide": false, "intervalFactor": 1, "legendFormat":
      "Config Rejection Rate", "refId": "E" }, { "expr": "sum(rate(pilot_xds_push_context_errors{app=\"istiod\"}[1m]))",
      "format": "time_series", "hide": false, "intervalFactor": 1, "legendFormat":
      "Push Context Errors", "refId": "K" }, { "expr": "sum(rate(pilot_xds_write_timeout{app=\"istiod\"}[1m]))",
      "format": "time_series", "intervalFactor": 1, "legendFormat": "Push Timeouts",
      "refId": "G" } ], "thresholds": [], "timeFrom": null, "timeRegions": [], "timeShift":
      null, "title": "Pilot Errors", "tooltip": { "shared": true, "sort": 0, "value_type":
      "individual" }, "type": "graph", "xaxis": { "buckets": null, "mode": "time",
      "name": null, "show": true, "values": [] }, "yaxes": [ { "format": "short",
      "label": null, "logBase": 1, "max": null, "min": null, "show": true }, { "format":
      "short", "label": null, "logBase": 1, "max": null, "min": null, "show": true
      } ], "yaxis": { "align": false, "alignLevel": null } }, { "aliasColors": {},
      "bars": false, "dashLength": 10, "dashes": false, "datasource": "Prometheus",
      "description": "Shows the total time it takes to push a config update to a proxy",
      "fill": 1, "gridPos": { "h": 8, "w": 8, "x": 16, "y": 15 }, "id": 624, "legend":
      { "avg": false, "current": false, "max": false, "min": false, "show": true,
      "total": false, "values": false }, "lines": true, "linewidth": 1, "links": [],
      "nullPointMode": "null", "percentage": false, "pointradius": 2, "points": false,
      "renderer": "flot", "seriesOverrides": [], "spaceLength": 10, "stack": false,
      "steppedLine": false, "targets": [ { "expr": "histogram_quantile(0.5, sum(rate(pilot_proxy_convergence_time_bucket[1m]))
      by (le))", "format": "time_series", "intervalFactor": 1, "legendFormat": "p50
      ", "refId": "A" }, { "expr": "histogram_quantile(0.9, sum(rate(pilot_proxy_convergence_time_bucket[1m]))
      by (le))", "format": "time_series", "intervalFactor": 1, "legendFormat": "p90",
      "refId": "B" }, { "expr": "histogram_quantile(0.99, sum(rate(pilot_proxy_convergence_time_bucket[1m]))
      by (le))", "format": "time_series", "intervalFactor": 1, "legendFormat": "p99",
      "refId": "C" }, { "expr": "histogram_quantile(0.999, sum(rate(pilot_proxy_convergence_time_bucket[1m]))
      by (le))", "format": "time_series", "intervalFactor": 1, "legendFormat": "p99.9",
      "refId": "D" } ], "thresholds": [], "timeFrom": null, "timeRegions": [], "timeShift":
      null, "title": "Proxy Push Time", "tooltip": { "shared": true, "sort": 0, "value_type":
      "individual" }, "type": "graph", "xaxis": { "buckets": null, "mode": "time",
      "name": null, "show": true, "values": [] }, "yaxes": [ { "format": "s", "label":
      null, "logBase": 1, "max": null, "min": null, "show": true }, { "format": "short",
      "label": null, "logBase": 1, "max": null, "min": null, "show": true } ], "yaxis":
      { "align": false, "alignLevel": null } }, { "aliasColors": {}, "bars": false,
      "dashLength": 10, "dashes": false, "datasource": "Prometheus", "fill": 1, "gridPos":
      { "h": 8, "w": 12, "x": 0, "y": 23 }, "id": 45, "legend": { "avg": false, "current":
      false, "hideEmpty": true, "hideZero": true, "max": false, "min": false, "show":
      true, "total": false, "values": false }, "lines": true, "linewidth": 1, "links":
      [], "nullPointMode": "null as zero", "percentage": false, "pointradius": 5,
      "points": false, "renderer": "flot", "seriesOverrides": [], "spaceLength": 10,
      "stack": false, "steppedLine": false, "targets": [ { "expr": "pilot_conflict_inbound_listener{app=\"istiod\"}",
      "format": "time_series", "hide": false, "intervalFactor": 1, "legendFormat":
      "Inbound Listeners", "refId": "B" }, { "expr": "pilot_conflict_outbound_listener_http_over_current_tcp{app=\"istiod\"}",
      "format": "time_series", "hide": false, "intervalFactor": 1, "legendFormat":
      "Outbound Listeners (http over current tcp)", "refId": "A" }, { "expr": "pilot_conflict_outbound_listener_tcp_over_current_tcp{app=\"istiod\"}",
      "format": "time_series", "hide": false, "intervalFactor": 1, "legendFormat":
      "Outbound Listeners (tcp over current tcp)", "refId": "C" }, { "expr": "pilot_conflict_outbound_listener_tcp_over_current_http{app=\"istiod\"}",
      "format": "time_series", "hide": false, "intervalFactor": 1, "legendFormat":
      "Outbound Listeners (tcp over current http)", "refId": "D" } ], "thresholds":
      [], "timeFrom": null, "timeRegions": [], "timeShift": null, "title": "Conflicts",
      "tooltip": { "shared": true, "sort": 0, "value_type": "individual" }, "type":
      "graph", "xaxis": { "buckets": null, "mode": "time", "name": null, "show": true,
      "values": [] }, "yaxes": [ { "format": "short", "label": null, "logBase": 1,
      "max": null, "min": null, "show": true }, { "format": "short", "label": null,
      "logBase": 1, "max": null, "min": null, "show": false } ], "yaxis": { "align":
      false, "alignLevel": null } }, { "aliasColors": {}, "bars": false, "dashLength":
      10, "dashes": false, "datasource": "Prometheus", "fill": 1, "gridPos": { "h":
      8, "w": 12, "x": 12, "y": 23 }, "id": 47, "legend": { "avg": false, "current":
      false, "max": false, "min": false, "show": true, "total": false, "values": false
      }, "lines": true, "linewidth": 1, "links": [], "nullPointMode": "null", "percentage":
      false, "pointradius": 5, "points": false, "renderer": "flot", "seriesOverrides":
      [], "spaceLength": 10, "stack": false, "steppedLine": false, "targets": [ {
      "expr": "avg(pilot_virt_services{app=\"istiod\"})", "format": "time_series",
      "intervalFactor": 1, "legendFormat": "Virtual Services", "refId": "A" }, { "expr":
      "avg(pilot_services{app=\"istiod\"})", "format": "time_series", "intervalFactor":
      1, "legendFormat": "Services", "refId": "B" }, { "expr": "sum(pilot_xds{app=\"istiod\"})
      by (pod)", "format": "time_series", "intervalFactor": 1, "legendFormat": "Connected
      Endpoints {{pod}}", "refId": "E" } ], "thresholds": [], "timeFrom": null, "timeRegions":
      [], "timeShift": null, "title": "ADS Monitoring", "tooltip": { "shared": true,
      "sort": 0, "value_type": "individual" }, "type": "graph", "xaxis": { "buckets":
      null, "mode": "time", "name": null, "show": true, "values": [] }, "yaxes": [
      { "format": "short", "label": null, "logBase": 1, "max": null, "min": null,
      "show": true }, { "format": "short", "label": null, "logBase": 1, "max": null,
      "min": null, "show": true } ], "yaxis": { "align": false, "alignLevel": null
      } }, { "collapsed": false, "gridPos": { "h": 1, "w": 24, "x": 0, "y": 31 },
      "id": 64, "panels": [], "title": "Envoy Information", "type": "row" }, { "aliasColors":
      {}, "bars": false, "dashLength": 10, "dashes": false, "datasource": "Prometheus",
      "description": "Shows details about Envoy proxies in the mesh", "fill": 1, "gridPos":
      { "h": 8, "w": 8, "x": 0, "y": 32 }, "id": 40, "legend": { "avg": false, "current":
      false, "max": false, "min": false, "show": true, "total": false, "values": false
      }, "lines": true, "linewidth": 1, "links": [], "nullPointMode": "null", "percentage":
      false, "pointradius": 5, "points": false, "renderer": "flot", "seriesOverrides":
      [], "spaceLength": 10, "stack": false, "steppedLine": false, "targets": [ {
      "expr": "sum(irate(envoy_cluster_upstream_cx_total{cluster_name=\"xds-grpc\"}[1m]))",
      "format": "time_series", "hide": false, "intervalFactor": 1, "legendFormat":
      "XDS Connections", "refId": "C" }, { "expr": "sum(irate(envoy_cluster_upstream_cx_connect_fail{cluster_name=\"xds-grpc\"}[1m]))",
      "format": "time_series", "hide": false, "intervalFactor": 1, "legendFormat":
      "XDS Connection Failures", "refId": "A" }, { "expr": "sum(increase(envoy_server_hot_restart_epoch[1m]))",
      "format": "time_series", "intervalFactor": 1, "legendFormat": "Envoy Restarts",
      "refId": "B" } ], "thresholds": [], "timeFrom": null, "timeRegions": [], "timeShift":
      null, "title": "Envoy Details", "tooltip": { "shared": true, "sort": 0, "value_type":
      "individual" }, "type": "graph", "xaxis": { "buckets": null, "mode": "time",
      "name": null, "show": true, "values": [] }, "yaxes": [ { "format": "ops", "label":
      null, "logBase": 1, "max": null, "min": null, "show": true }, { "format": "ops",
      "label": null, "logBase": 1, "max": null, "min": null, "show": false } ], "yaxis":
      { "align": false, "alignLevel": null } }, { "aliasColors": {}, "bars": false,
      "dashLength": 10, "dashes": false, "datasource": "Prometheus", "fill": 1, "gridPos":
      { "h": 8, "w": 8, "x": 8, "y": 32 }, "id": 41, "legend": { "avg": false, "current":
      false, "max": false, "min": false, "show": true, "total": false, "values": false
      }, "lines": true, "linewidth": 1, "links": [], "nullPointMode": "null", "percentage":
      false, "pointradius": 5, "points": false, "renderer": "flot", "seriesOverrides":
      [], "spaceLength": 10, "stack": false, "steppedLine": false, "targets": [ {
      "expr": "sum(envoy_cluster_upstream_cx_active{cluster_name=\"xds-grpc\"})",
      "format": "time_series", "intervalFactor": 2, "legendFormat": "XDS Active Connections",
      "refId": "C", "step": 2 } ], "thresholds": [], "timeFrom": null, "timeRegions":
      [], "timeShift": null, "title": "XDS Active Connections", "tooltip": { "shared":
      true, "sort": 0, "value_type": "individual" }, "type": "graph", "xaxis": { "buckets":
      null, "mode": "time", "name": null, "show": true, "values": [] }, "yaxes": [
      { "format": "short", "label": null, "logBase": 1, "max": null, "min": null,
      "show": true }, { "format": "short", "label": null, "logBase": 1, "max": null,
      "min": null, "show": true } ], "yaxis": { "align": false, "alignLevel": null
      } }, { "aliasColors": {}, "bars": false, "dashLength": 10, "dashes": false,
      "datasource": "Prometheus", "description": "Shows the size of XDS requests and
      responses", "fill": 1, "gridPos": { "h": 8, "w": 8, "x": 16, "y": 32 }, "id":
      42, "legend": { "avg": false, "current": false, "hideEmpty": false, "hideZero":
      false, "max": false, "min": false, "show": true, "total": false, "values": false
      }, "lines": true, "linewidth": 1, "links": [], "nullPointMode": "null", "percentage":
      false, "pointradius": 5, "points": false, "renderer": "flot", "seriesOverrides":
      [], "spaceLength": 10, "stack": false, "steppedLine": false, "targets": [ {
      "expr": "max(rate(envoy_cluster_upstream_cx_rx_bytes_total{cluster_name=\"xds-grpc\"}[1m]))",
      "format": "time_series", "hide": false, "intervalFactor": 1, "legendFormat":
      "XDS Response Bytes Max", "refId": "D" }, { "expr": "quantile(0.5, rate(envoy_cluster_upstream_cx_rx_bytes_total{cluster_name=\"xds-grpc\"}[1m]))",
      "format": "time_series", "hide": false, "intervalFactor": 1, "legendFormat":
      "XDS Response Bytes Average", "refId": "B" }, { "expr": "max(rate(envoy_cluster_upstream_cx_tx_bytes_total{cluster_name=\"xds-grpc\"}[1m]))",
      "format": "time_series", "intervalFactor": 1, "legendFormat": "XDS Request Bytes
      Max", "refId": "A" }, { "expr": "quantile(.5, rate(envoy_cluster_upstream_cx_tx_bytes_total{cluster_name=\"xds-grpc\"}[1m]))",
      "format": "time_series", "intervalFactor": 1, "legendFormat": "XDS Request Bytes
      Average", "refId": "C" } ], "thresholds": [], "timeFrom": null, "timeRegions":
      [], "timeShift": null, "title": "XDS Requests Size", "tooltip": { "shared":
      true, "sort": 0, "value_type": "individual" }, "type": "graph", "xaxis": { "buckets":
      null, "mode": "time", "name": null, "show": true, "values": [] }, "yaxes": [
      { "format": "Bps", "label": null, "logBase": 1, "max": null, "min": null, "show":
      true }, { "format": "ops", "label": null, "logBase": 1, "max": null, "min":
      null, "show": false } ], "yaxis": { "align": false, "alignLevel": null } },
      { "collapsed": false, "datasource": null, "gridPos": { "h": 1, "w": 24, "x":
      0, "y": 40 }, "id": 626, "panels": [], "title": "Webhooks", "type": "row" },
      { "aliasColors": {}, "bars": false, "dashLength": 10, "dashes": false, "datasource":
      null, "fill": 1, "fillGradient": 0, "gridPos": { "h": 8, "w": 12, "x": 0, "y":
      41 }, "hiddenSeries": false, "id": 629, "legend": { "avg": false, "current":
      false, "hideEmpty": false, "hideZero": false, "max": false, "min": false, "show":
      true, "total": false, "values": false }, "lines": true, "linewidth": 1, "nullPointMode":
      "null", "options": { "dataLinks": [] }, "percentage": false, "pointradius":
      2, "points": false, "renderer": "flot", "seriesOverrides": [], "spaceLength":
      10, "stack": false, "steppedLine": false, "targets": [ { "expr": "sum(rate(galley_validation_passed[1m]))",
      "interval": "", "legendFormat": "Validations (Success)", "refId": "A" }, { "expr":
      "sum(rate(galley_validation_failed[1m]))", "interval": "", "legendFormat": "Validation
      (Failure)", "refId": "B" } ], "thresholds": [], "timeFrom": null, "timeRegions":
      [], "timeShift": null, "title": "Configuration Validation", "tooltip": { "shared":
      true, "sort": 0, "value_type": "individual" }, "type": "graph", "xaxis": { "buckets":
      null, "mode": "time", "name": null, "show": true, "values": [] }, "yaxes": [
      { "format": "short", "label": null, "logBase": 1, "max": null, "min": null,
      "show": true }, { "format": "short", "label": null, "logBase": 1, "max": null,
      "min": null, "show": true } ], "yaxis": { "align": false, "alignLevel": null
      } }, { "aliasColors": {}, "bars": false, "dashLength": 10, "dashes": false,
      "datasource": null, "description": "", "fill": 1, "fillGradient": 0, "gridPos":
      { "h": 8, "w": 12, "x": 12, "y": 41 }, "hiddenSeries": false, "id": 630, "legend":
      { "avg": false, "current": false, "hideZero": false, "max": false, "min": false,
      "show": true, "total": false, "values": false }, "lines": true, "linewidth":
      1, "nullPointMode": "null", "options": { "dataLinks": [] }, "percentage": false,
      "pointradius": 2, "points": false, "renderer": "flot", "seriesOverrides": [],
      "spaceLength": 10, "stack": false, "steppedLine": false, "targets": [ { "expr":
      "sum(rate(sidecar_injection_success_total[1m]))", "interval": "", "legendFormat":
      "Injections (Success)", "refId": "A" }, { "expr": "sum(rate(sidecar_injection_failure_total[1m]))",
      "interval": "", "legendFormat": "Injections (Failure)", "refId": "B" } ], "thresholds":
      [], "timeFrom": null, "timeRegions": [], "timeShift": null, "title": "Sidecar
      Injection", "tooltip": { "shared": true, "sort": 0, "value_type": "individual"
      }, "type": "graph", "xaxis": { "buckets": null, "mode": "time", "name": null,
      "show": true, "values": [] }, "yaxes": [ { "format": "short", "label": null,
      "logBase": 1, "max": null, "min": null, "show": true }, { "format": "short",
      "label": null, "logBase": 1, "max": null, "min": null, "show": true } ], "yaxis":
      { "align": false, "alignLevel": null } } ], "refresh": "5s", "schemaVersion":
      18, "style": "dark", "tags": [], "templating": { "list": [ { "current": { "selected":
      true, "text": "default", "value": "default" }, "hide": 0, "includeAll": false,
      "label": null, "multi": false, "name": "datasource", "options": [], "query":
      "prometheus", "queryValue": "", "refresh": 1, "regex": "", "skipUrlSync": false,
      "type": "datasource" } ] }, "time": { "from": "now-5m", "to": "now" }, "timepicker":
      { "refresh_intervals": [ "5s", "10s", "30s", "1m", "5m", "15m", "30m", "1h",
      "2h", "1d" ], "time_options": [ "5m", "15m", "1h", "6h", "12h", "24h", "2d",
      "7d", "30d" ] }, "timezone": "browser", "title": "Istio Control Plane Dashboard",
      "uid": "3--MLVZZk", "version": 11 } '
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"pilot-dashboard.json":"{ \"annotations\": { \"list\": [ { \"builtIn\": 1, \"datasource\": \"-- Grafana --\", \"enable\": true, \"hide\": true, \"iconColor\": \"rgba(0, 211, 255, 1)\", \"name\": \"Annotations \u0026 Alerts\", \"type\": \"dashboard\" } ] }, \"editable\": false, \"gnetId\": null, \"graphTooltip\": 1, \"links\": [], \"panels\": [ { \"collapsed\": false, \"gridPos\": { \"h\": 1, \"w\": 24, \"x\": 0, \"y\": 0 }, \"id\": 60, \"panels\": [], \"title\": \"Deployed Versions\", \"type\": \"row\" }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fill\": 1, \"gridPos\": { \"h\": 5, \"w\": 24, \"x\": 0, \"y\": 1 }, \"id\": 56, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"sum(istio_build{component=\\\"pilot\\\"}) by (tag)\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"{{ tag }}\", \"refId\": \"A\" } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Pilot Versions\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": false } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"collapsed\": false, \"gridPos\": { \"h\": 1, \"w\": 24, \"x\": 0, \"y\": 6 }, \"id\": 62, \"panels\": [], \"title\": \"Resource Usage\", \"type\": \"row\" }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fill\": 1, \"gridPos\": { \"h\": 7, \"w\": 6, \"x\": 0, \"y\": 7 }, \"id\": 5, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"process_virtual_memory_bytes{app=\\\"istiod\\\"}\", \"format\": \"time_series\", \"instant\": false, \"intervalFactor\": 2, \"legendFormat\": \"Virtual Memory\", \"refId\": \"I\", \"step\": 2 }, { \"expr\": \"process_resident_memory_bytes{app=\\\"istiod\\\"}\", \"format\": \"time_series\", \"intervalFactor\": 2, \"legendFormat\": \"Resident Memory\", \"refId\": \"H\", \"step\": 2 }, { \"expr\": \"go_memstats_heap_sys_bytes{app=\\\"istiod\\\"}\", \"format\": \"time_series\", \"hide\": true, \"intervalFactor\": 2, \"legendFormat\": \"heap sys\", \"refId\": \"A\" }, { \"expr\": \"go_memstats_heap_alloc_bytes{app=\\\"istiod\\\"}\", \"format\": \"time_series\", \"hide\": true, \"intervalFactor\": 2, \"legendFormat\": \"heap alloc\", \"refId\": \"D\" }, { \"expr\": \"go_memstats_alloc_bytes{app=\\\"istiod\\\"}\", \"format\": \"time_series\", \"intervalFactor\": 2, \"legendFormat\": \"Alloc\", \"refId\": \"F\", \"step\": 2 }, { \"expr\": \"go_memstats_heap_inuse_bytes{app=\\\"istiod\\\"}\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 2, \"legendFormat\": \"Heap in-use\", \"refId\": \"E\", \"step\": 2 }, { \"expr\": \"go_memstats_stack_inuse_bytes{app=\\\"istiod\\\"}\", \"format\": \"time_series\", \"intervalFactor\": 2, \"legendFormat\": \"Stack in-use\", \"refId\": \"G\", \"step\": 2 }, { \"expr\": \"container_memory_working_set_bytes{container=~\\\"discovery\\\", pod=~\\\"istiod-.*|istio-pilot-.*\\\"}\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 2, \"legendFormat\": \"Discovery (container)\", \"refId\": \"B\", \"step\": 2 }, { \"expr\": \"container_memory_working_set_bytes{container=~\\\"istio-proxy\\\", pod=~\\\"istiod-.*|istio-pilot-.*\\\"}\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"Sidecar (container)\", \"refId\": \"C\" } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Memory\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"bytes\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": false } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fill\": 1, \"gridPos\": { \"h\": 7, \"w\": 6, \"x\": 6, \"y\": 7 }, \"id\": 6, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"sum(irate(container_cpu_usage_seconds_total{container=\\\"discovery\\\", pod=~\\\"istiod-.*|istio-pilot-.*\\\"}[1m]))\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"Discovery (container)\", \"refId\": \"A\" }, { \"expr\": \"irate(process_cpu_seconds_total{app=\\\"istiod\\\"}[1m])\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 2, \"legendFormat\": \"Discovery (process)\", \"refId\": \"C\", \"step\": 2 }, { \"expr\": \"sum(irate(container_cpu_usage_seconds_total{container=\\\"istio-proxy\\\", pod=~\\\"istiod-.*|istio-pilot-.*\\\"}[1m]))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 2, \"legendFormat\": \"Sidecar (container)\", \"refId\": \"B\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"CPU\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fill\": 1, \"gridPos\": { \"h\": 7, \"w\": 6, \"x\": 12, \"y\": 7 }, \"id\": 7, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"container_fs_usage_bytes{container=\\\"discovery\\\", pod=~\\\"istiod-.*|istio-pilot-.*\\\"}\", \"format\": \"time_series\", \"intervalFactor\": 2, \"legendFormat\": \"Discovery\", \"refId\": \"B\", \"step\": 2 }, { \"expr\": \"container_fs_usage_bytes{container=\\\"istio-proxy\\\", pod=~\\\"istiod-.*|istio-pilot-.*\\\"}\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"Sidecar\", \"refId\": \"A\" } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Disk\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"bytes\", \"label\": \"\", \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"decimals\": null, \"format\": \"none\", \"label\": \"\", \"logBase\": 1024, \"max\": null, \"min\": null, \"show\": false } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fill\": 1, \"gridPos\": { \"h\": 7, \"w\": 6, \"x\": 18, \"y\": 7 }, \"id\": 4, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"show\": false, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"go_goroutines{app=\\\"istiod\\\"}\", \"format\": \"time_series\", \"intervalFactor\": 2, \"legendFormat\": \"Number of Goroutines\", \"refId\": \"A\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Goroutines\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"short\", \"label\": \"\", \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"collapsed\": false, \"gridPos\": { \"h\": 1, \"w\": 24, \"x\": 0, \"y\": 14 }, \"id\": 58, \"panels\": [], \"title\": \"Pilot Push Information\", \"type\": \"row\" }, { \"aliasColors\": {}, \"bars\": true, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"description\": \"Shows the rate of pilot pushes\", \"fill\": 1, \"gridPos\": { \"h\": 8, \"w\": 8, \"x\": 0, \"y\": 15 }, \"id\": 622, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": false, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null as zero\", \"paceLength\": 10, \"percentage\": false, \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": true, \"steppedLine\": false, \"targets\": [ { \"expr\": \"sum(irate(pilot_xds_pushes{type=\\\"cds\\\"}[1m]))\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"Cluster\", \"refId\": \"C\" }, { \"expr\": \"sum(irate(pilot_xds_pushes{type=\\\"eds\\\"}[1m]))\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"Endpoints\", \"refId\": \"D\" }, { \"expr\": \"sum(irate(pilot_xds_pushes{type=\\\"lds\\\"}[1m]))\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"Listeners\", \"refId\": \"A\" }, { \"expr\": \"sum(irate(pilot_xds_pushes{type=\\\"rds\\\"}[1m]))\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"Routes\", \"refId\": \"E\" }, { \"expr\": \"sum(irate(pilot_xds_pushes{type=\\\"sds\\\"}[1m]))\", \"interval\": \"\", \"legendFormat\": \"Secrets\", \"refId\": \"B\" }, { \"expr\": \"sum(irate(pilot_xds_pushes{type=\\\"nds\\\"}[1m]))\", \"interval\": \"\", \"legendFormat\": \"Nametables\", \"refId\": \"F\" } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Pilot Pushes\", \"tooltip\": { \"shared\": false, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [ \"total\" ] }, \"yaxes\": [ { \"format\": \"ops\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": \"0\", \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": false } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"description\": \"Captures a variety of pilot errors\", \"fill\": 1, \"gridPos\": { \"h\": 8, \"w\": 8, \"x\": 8, \"y\": 15 }, \"id\": 67, \"legend\": { \"avg\": false, \"current\": false, \"hideEmpty\": true, \"hideZero\": true, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"sum(pilot_xds_cds_reject{app=\\\"istiod\\\"}) or (absent(pilot_xds_cds_reject{app=\\\"istiod\\\"}) - 1)\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"Rejected CDS Configs\", \"refId\": \"C\" }, { \"expr\": \"sum(pilot_xds_eds_reject{app=\\\"istiod\\\"}) or (absent(pilot_xds_eds_reject{app=\\\"istiod\\\"}) - 1)\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"Rejected EDS Configs\", \"refId\": \"D\" }, { \"expr\": \"sum(pilot_xds_rds_reject{app=\\\"istiod\\\"}) or (absent(pilot_xds_rds_reject{app=\\\"istiod\\\"}) - 1)\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"Rejected RDS Configs\", \"refId\": \"A\" }, { \"expr\": \"sum(pilot_xds_lds_reject{app=\\\"istiod\\\"}) or (absent(pilot_xds_lds_reject{app=\\\"istiod\\\"}) - 1)\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"Rejected LDS Configs\", \"refId\": \"B\" }, { \"expr\": \"sum(rate(pilot_xds_write_timeout{app=\\\"istiod\\\"}[1m]))\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"Write Timeouts\", \"refId\": \"F\" }, { \"expr\": \"sum(rate(pilot_total_xds_internal_errors{app=\\\"istiod\\\"}[1m]))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"Internal Errors\", \"refId\": \"H\" }, { \"expr\": \"sum(rate(pilot_total_xds_rejects{app=\\\"istiod\\\"}[1m]))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"Config Rejection Rate\", \"refId\": \"E\" }, { \"expr\": \"sum(rate(pilot_xds_push_context_errors{app=\\\"istiod\\\"}[1m]))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"Push Context Errors\", \"refId\": \"K\" }, { \"expr\": \"sum(rate(pilot_xds_write_timeout{app=\\\"istiod\\\"}[1m]))\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"Push Timeouts\", \"refId\": \"G\" } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Pilot Errors\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"description\": \"Shows the total time it takes to push a config update to a proxy\", \"fill\": 1, \"gridPos\": { \"h\": 8, \"w\": 8, \"x\": 16, \"y\": 15 }, \"id\": 624, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pointradius\": 2, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"histogram_quantile(0.5, sum(rate(pilot_proxy_convergence_time_bucket[1m])) by (le))\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"p50 \", \"refId\": \"A\" }, { \"expr\": \"histogram_quantile(0.9, sum(rate(pilot_proxy_convergence_time_bucket[1m])) by (le))\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"p90\", \"refId\": \"B\" }, { \"expr\": \"histogram_quantile(0.99, sum(rate(pilot_proxy_convergence_time_bucket[1m])) by (le))\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"p99\", \"refId\": \"C\" }, { \"expr\": \"histogram_quantile(0.999, sum(rate(pilot_proxy_convergence_time_bucket[1m])) by (le))\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"p99.9\", \"refId\": \"D\" } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Proxy Push Time\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"s\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fill\": 1, \"gridPos\": { \"h\": 8, \"w\": 12, \"x\": 0, \"y\": 23 }, \"id\": 45, \"legend\": { \"avg\": false, \"current\": false, \"hideEmpty\": true, \"hideZero\": true, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null as zero\", \"percentage\": false, \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"pilot_conflict_inbound_listener{app=\\\"istiod\\\"}\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"Inbound Listeners\", \"refId\": \"B\" }, { \"expr\": \"pilot_conflict_outbound_listener_http_over_current_tcp{app=\\\"istiod\\\"}\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"Outbound Listeners (http over current tcp)\", \"refId\": \"A\" }, { \"expr\": \"pilot_conflict_outbound_listener_tcp_over_current_tcp{app=\\\"istiod\\\"}\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"Outbound Listeners (tcp over current tcp)\", \"refId\": \"C\" }, { \"expr\": \"pilot_conflict_outbound_listener_tcp_over_current_http{app=\\\"istiod\\\"}\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"Outbound Listeners (tcp over current http)\", \"refId\": \"D\" } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Conflicts\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": false } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fill\": 1, \"gridPos\": { \"h\": 8, \"w\": 12, \"x\": 12, \"y\": 23 }, \"id\": 47, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"avg(pilot_virt_services{app=\\\"istiod\\\"})\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"Virtual Services\", \"refId\": \"A\" }, { \"expr\": \"avg(pilot_services{app=\\\"istiod\\\"})\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"Services\", \"refId\": \"B\" }, { \"expr\": \"sum(pilot_xds{app=\\\"istiod\\\"}) by (pod)\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"Connected Endpoints {{pod}}\", \"refId\": \"E\" } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"ADS Monitoring\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"collapsed\": false, \"gridPos\": { \"h\": 1, \"w\": 24, \"x\": 0, \"y\": 31 }, \"id\": 64, \"panels\": [], \"title\": \"Envoy Information\", \"type\": \"row\" }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"description\": \"Shows details about Envoy proxies in the mesh\", \"fill\": 1, \"gridPos\": { \"h\": 8, \"w\": 8, \"x\": 0, \"y\": 32 }, \"id\": 40, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"sum(irate(envoy_cluster_upstream_cx_total{cluster_name=\\\"xds-grpc\\\"}[1m]))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"XDS Connections\", \"refId\": \"C\" }, { \"expr\": \"sum(irate(envoy_cluster_upstream_cx_connect_fail{cluster_name=\\\"xds-grpc\\\"}[1m]))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"XDS Connection Failures\", \"refId\": \"A\" }, { \"expr\": \"sum(increase(envoy_server_hot_restart_epoch[1m]))\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"Envoy Restarts\", \"refId\": \"B\" } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Envoy Details\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"ops\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"format\": \"ops\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": false } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"fill\": 1, \"gridPos\": { \"h\": 8, \"w\": 8, \"x\": 8, \"y\": 32 }, \"id\": 41, \"legend\": { \"avg\": false, \"current\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"sum(envoy_cluster_upstream_cx_active{cluster_name=\\\"xds-grpc\\\"})\", \"format\": \"time_series\", \"intervalFactor\": 2, \"legendFormat\": \"XDS Active Connections\", \"refId\": \"C\", \"step\": 2 } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"XDS Active Connections\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": \"Prometheus\", \"description\": \"Shows the size of XDS requests and responses\", \"fill\": 1, \"gridPos\": { \"h\": 8, \"w\": 8, \"x\": 16, \"y\": 32 }, \"id\": 42, \"legend\": { \"avg\": false, \"current\": false, \"hideEmpty\": false, \"hideZero\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"links\": [], \"nullPointMode\": \"null\", \"percentage\": false, \"pointradius\": 5, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"max(rate(envoy_cluster_upstream_cx_rx_bytes_total{cluster_name=\\\"xds-grpc\\\"}[1m]))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"XDS Response Bytes Max\", \"refId\": \"D\" }, { \"expr\": \"quantile(0.5, rate(envoy_cluster_upstream_cx_rx_bytes_total{cluster_name=\\\"xds-grpc\\\"}[1m]))\", \"format\": \"time_series\", \"hide\": false, \"intervalFactor\": 1, \"legendFormat\": \"XDS Response Bytes Average\", \"refId\": \"B\" }, { \"expr\": \"max(rate(envoy_cluster_upstream_cx_tx_bytes_total{cluster_name=\\\"xds-grpc\\\"}[1m]))\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"XDS Request Bytes Max\", \"refId\": \"A\" }, { \"expr\": \"quantile(.5, rate(envoy_cluster_upstream_cx_tx_bytes_total{cluster_name=\\\"xds-grpc\\\"}[1m]))\", \"format\": \"time_series\", \"intervalFactor\": 1, \"legendFormat\": \"XDS Request Bytes Average\", \"refId\": \"C\" } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"XDS Requests Size\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"Bps\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"format\": \"ops\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": false } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"collapsed\": false, \"datasource\": null, \"gridPos\": { \"h\": 1, \"w\": 24, \"x\": 0, \"y\": 40 }, \"id\": 626, \"panels\": [], \"title\": \"Webhooks\", \"type\": \"row\" }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": null, \"fill\": 1, \"fillGradient\": 0, \"gridPos\": { \"h\": 8, \"w\": 12, \"x\": 0, \"y\": 41 }, \"hiddenSeries\": false, \"id\": 629, \"legend\": { \"avg\": false, \"current\": false, \"hideEmpty\": false, \"hideZero\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"nullPointMode\": \"null\", \"options\": { \"dataLinks\": [] }, \"percentage\": false, \"pointradius\": 2, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"sum(rate(galley_validation_passed[1m]))\", \"interval\": \"\", \"legendFormat\": \"Validations (Success)\", \"refId\": \"A\" }, { \"expr\": \"sum(rate(galley_validation_failed[1m]))\", \"interval\": \"\", \"legendFormat\": \"Validation (Failure)\", \"refId\": \"B\" } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Configuration Validation\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } }, { \"aliasColors\": {}, \"bars\": false, \"dashLength\": 10, \"dashes\": false, \"datasource\": null, \"description\": \"\", \"fill\": 1, \"fillGradient\": 0, \"gridPos\": { \"h\": 8, \"w\": 12, \"x\": 12, \"y\": 41 }, \"hiddenSeries\": false, \"id\": 630, \"legend\": { \"avg\": false, \"current\": false, \"hideZero\": false, \"max\": false, \"min\": false, \"show\": true, \"total\": false, \"values\": false }, \"lines\": true, \"linewidth\": 1, \"nullPointMode\": \"null\", \"options\": { \"dataLinks\": [] }, \"percentage\": false, \"pointradius\": 2, \"points\": false, \"renderer\": \"flot\", \"seriesOverrides\": [], \"spaceLength\": 10, \"stack\": false, \"steppedLine\": false, \"targets\": [ { \"expr\": \"sum(rate(sidecar_injection_success_total[1m]))\", \"interval\": \"\", \"legendFormat\": \"Injections (Success)\", \"refId\": \"A\" }, { \"expr\": \"sum(rate(sidecar_injection_failure_total[1m]))\", \"interval\": \"\", \"legendFormat\": \"Injections (Failure)\", \"refId\": \"B\" } ], \"thresholds\": [], \"timeFrom\": null, \"timeRegions\": [], \"timeShift\": null, \"title\": \"Sidecar Injection\", \"tooltip\": { \"shared\": true, \"sort\": 0, \"value_type\": \"individual\" }, \"type\": \"graph\", \"xaxis\": { \"buckets\": null, \"mode\": \"time\", \"name\": null, \"show\": true, \"values\": [] }, \"yaxes\": [ { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true }, { \"format\": \"short\", \"label\": null, \"logBase\": 1, \"max\": null, \"min\": null, \"show\": true } ], \"yaxis\": { \"align\": false, \"alignLevel\": null } } ], \"refresh\": \"5s\", \"schemaVersion\": 18, \"style\": \"dark\", \"tags\": [], \"templating\": { \"list\": [ { \"current\": { \"selected\": true, \"text\": \"default\", \"value\": \"default\" }, \"hide\": 0, \"includeAll\": false, \"label\": null, \"multi\": false, \"name\": \"datasource\", \"options\": [], \"query\": \"prometheus\", \"queryValue\": \"\", \"refresh\": 1, \"regex\": \"\", \"skipUrlSync\": false, \"type\": \"datasource\" } ] }, \"time\": { \"from\": \"now-5m\", \"to\": \"now\" }, \"timepicker\": { \"refresh_intervals\": [ \"5s\", \"10s\", \"30s\", \"1m\", \"5m\", \"15m\", \"30m\", \"1h\", \"2h\", \"1d\" ], \"time_options\": [ \"5m\", \"15m\", \"1h\", \"6h\", \"12h\", \"24h\", \"2d\", \"7d\", \"30d\" ] }, \"timezone\": \"browser\", \"title\": \"Istio Control Plane Dashboard\", \"uid\": \"3--MLVZZk\", \"version\": 11 } "},"kind":"ConfigMap","metadata":{"annotations":{"maistra.io/mesh-generation":"2.3.1-1-2"},"labels":{"app":"grafana","app.kubernetes.io/component":"grafana","app.kubernetes.io/instance":"istio-system","app.kubernetes.io/managed-by":"maistra-istio-operator","app.kubernetes.io/name":"grafana","app.kubernetes.io/part-of":"istio","app.kubernetes.io/version":"2.3.1-1-2","istio":"grafana","maistra-version":"2.1.6","maistra.io/owner":"istio-system","maistra.io/owner-name":"basic","release":"istio"},"name":"istio-grafana-configuration-dashboards-pilot-dashboard","namespace":"istio-system","ownerReferences":[{"apiVersion":"maistra.io/v2","blockOwnerDeletion":true,"controller":true,"kind":"ServiceMeshControlPlane","name":"basic","uid":"0c79eb74-854c-4f98-85c6-5955e78fd93e"}]}}
      maistra.io/mesh-generation: 2.3.1-1-2
    creationTimestamp: "2023-03-03T20:03:21Z"
    labels:
      app: grafana
      app.kubernetes.io/component: grafana
      app.kubernetes.io/instance: istio-system
      app.kubernetes.io/managed-by: maistra-istio-operator
      app.kubernetes.io/name: grafana
      app.kubernetes.io/part-of: istio
      app.kubernetes.io/version: 2.3.1-1-2
      istio: grafana
      maistra-version: 2.1.6
      maistra.io/owner: istio-system
      maistra.io/owner-name: basic
      release: istio
    name: istio-grafana-configuration-dashboards-pilot-dashboard
    namespace: istio-system
    ownerReferences:
    - apiVersion: maistra.io/v2
      blockOwnerDeletion: true
      controller: true
      kind: ServiceMeshControlPlane
      name: basic
      uid: 0c79eb74-854c-4f98-85c6-5955e78fd93e
    resourceVersion: "34886"
    uid: 70a5cfee-bba7-4a71-accd-8a0b81c1ae80
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      control-plane.alpha.kubernetes.io/leader: '{"holderIdentity":"istiod-basic-544d455f65-7qpmd","leaseDurationSeconds":30,"acquireTime":"2023-03-03T20:03:10Z","renewTime":"2023-03-03T20:42:15Z","leaderTransitions":0}'
    creationTimestamp: "2023-03-03T20:03:10Z"
    name: istio-namespace-controller-election
    namespace: istio-system
    resourceVersion: "61016"
    uid: 7e25023c-4cb1-4cc0-9449-e75ad1118072
- apiVersion: v1
  data:
    config: |-
      # defaultTemplates defines the default template to use for pods that do not explicitly specify a template
      defaultTemplates: [sidecar]
      policy: disabled
      alwaysInjectSelector:
        []
      neverInjectSelector:
        []
      injectedAnnotations:
      template: "{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation }}"
      templates:
        sidecar: |
          {{- $containers := list }}
          {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
          metadata:
            labels:
              maistra-version: "2.1.6"
              security.istio.io/tlsMode: {{ index .ObjectMeta.Labels `security.istio.io/tlsMode` | default "istio"  | quote }}
              service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
              service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
              istio.io/rev: {{ .Revision | default "default" | quote }}
            annotations: {
              {{- if eq (len $containers) 1 }}
              kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
              {{ end }}
          {{- if .Values.istio_cni.enabled }}
              {{- if not .Values.istio_cni.chained }}
              k8s.v1.cni.cncf.io/networks: '{{ appendMultusNetwork (index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`) .Values.istio_cni.istio_cni_network }}',
              {{- end }}
              sidecar.istio.io/interceptionMode: "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}",
              {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges: "{{.}}",{{ end }}
              {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges: "{{.}}",{{ end }}
              traffic.sidecar.istio.io/includeInboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` `*` }}",
              traffic.sidecar.istio.io/excludeInboundPorts: "15090,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}",
              {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts "") "") }}
              traffic.sidecar.istio.io/includeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}",
              {{- end }}
              {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts "") }}
              traffic.sidecar.istio.io/excludeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}",
              {{- end }}
              {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}traffic.sidecar.istio.io/kubevirtInterfaces: "{{.}}",{{ end }}
          {{- end }}
            }
          spec:
            {{- $holdProxy := or .ProxyConfig.HoldApplicationUntilProxyStarts.GetValue .Values.global.proxy.holdApplicationUntilProxyStarts }}
            containers:
            - name: istio-proxy
            {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
              image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
            {{- else }}
              image: "{{ .Values.global.hub }}/{{ .Values.global.proxy.image }}:{{ .Values.global.tag }}"
            {{- end }}
              ports:
              - containerPort: 15090
                protocol: TCP
                name: http-envoy-prom
              args:
              - proxy
              - sidecar
              - --domain
              - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
              - --serviceCluster
              {{ if ne "" (index .ObjectMeta.Labels "app") -}}
              - "{{ index .ObjectMeta.Labels `app` }}.$(POD_NAMESPACE)"
              {{ else -}}
              - "{{ valueOrDefault .DeploymentMeta.Name `istio-proxy` }}.{{ valueOrDefault .DeploymentMeta.Namespace `default` }}"
              {{ end -}}
              - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
              - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
              - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
            {{- if .Values.global.sts.servicePort }}
              - --stsPort={{ .Values.global.sts.servicePort }}
            {{- end }}
            {{- if .Values.global.logAsJson }}
              - --log_as_json
            {{- end }}
            {{- if gt .ProxyConfig.Concurrency.GetValue 0 }}
              - --concurrency
              - "{{ .ProxyConfig.Concurrency.GetValue }}"
            {{- end -}}
            {{- if .Values.global.proxy.lifecycle }}
              lifecycle:
                {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
            {{- else if $holdProxy }}
              lifecycle:
                postStart:
                  exec:
                    command:
                    - pilot-agent
                    - wait
            {{- end }}
              env:
              - name: JWT_POLICY
                value: {{ .Values.global.jwtPolicy }}
              - name: PILOT_CERT_PROVIDER
                value: {{ .Values.global.pilotCertProvider }}
              - name: CA_ADDR
              {{- if .Values.global.caAddress }}
                value: {{ .Values.global.caAddress }}
              {{- else }}
                value: istiod-{{ valueOrDefault .Values.revision "default" }}.{{ .Values.global.istioNamespace }}.svc:15012
              {{- end }}
              - name: POD_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              - name: POD_NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
              - name: INSTANCE_IP
                valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
              - name: SERVICE_ACCOUNT
                valueFrom:
                  fieldRef:
                    fieldPath: spec.serviceAccountName
              - name: HOST_IP
                valueFrom:
                  fieldRef:
                    fieldPath: status.hostIP
              - name: CANONICAL_SERVICE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.labels['service.istio.io/canonical-name']
              - name: CANONICAL_REVISION
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.labels['service.istio.io/canonical-revision']
              - name: PROXY_CONFIG
                value: |
                       {{ protoToJSON .ProxyConfig }}
              - name: ISTIO_META_POD_PORTS
                value: |-
                  [
                  {{- $first := true }}
                  {{- range $index1, $c := .Spec.Containers }}
                    {{- range $index2, $p := $c.Ports }}
                      {{- if (structToJSON $p) }}
                      {{if not $first}},{{end}}{{ structToJSON $p }}
                      {{- $first = false }}
                      {{- end }}
                    {{- end}}
                  {{- end}}
                  ]
              - name: ISTIO_META_APP_CONTAINERS
                value: "{{ $containers | join "," }}"
              - name: ISTIO_META_CLUSTER_ID
                value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
              - name: ISTIO_META_INTERCEPTION_MODE
                value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
              {{- if .Values.global.network }}
              - name: ISTIO_META_NETWORK
                value: "{{ .Values.global.network }}"
              {{- end }}
              {{ if .ObjectMeta.Annotations }}
              - name: ISTIO_METAJSON_ANNOTATIONS
                value: |
                       {{ toJSON .ObjectMeta.Annotations }}
              {{ end }}
              {{- if .DeploymentMeta.Name }}
              - name: ISTIO_META_WORKLOAD_NAME
                value: "{{ .DeploymentMeta.Name }}"
              {{ end }}
              {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
              - name: ISTIO_META_OWNER
                value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
              {{- end}}
              {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
              - name: ISTIO_BOOTSTRAP_OVERRIDE
                value: "/etc/istio/custom-bootstrap/custom_bootstrap.json"
              {{- end }}
              {{- if .Values.global.meshID }}
              - name: ISTIO_META_MESH_ID
                value: "{{ .Values.global.meshID }}"
              {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
              - name: ISTIO_META_MESH_ID
                value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
              {{- end }}
              {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
              - name: TRUST_DOMAIN
                value: "{{ . }}"
              {{- end }}
              {{- if and (eq .Values.global.proxy.tracer "datadog") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
              {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
              - name: {{ $key }}
                value: "{{ $value }}"
              {{- end }}
              {{- end }}
              {{- if isset .ObjectMeta.Annotations `sidecar.maistra.io/proxyEnv` }}
              {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.maistra.io/proxyEnv`) }}
              - name: {{ $key }}
                value: "{{ $value }}"
              {{- end }}
              {{- end }}
              {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
              - name: {{ $key }}
                value: "{{ $value }}"
              {{- end }}
              imagePullPolicy: "{{ valueOrDefault .Values.global.imagePullPolicy `Always` }}"
              {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
              readinessProbe:
                httpGet:
                  path: /healthz/ready
                  port: 15021
                initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
                periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
                timeoutSeconds: 3
                failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
              {{ end -}}
              securityContext:
                allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
                capabilities:
                  {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
                  add:
                  {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}
                  - NET_ADMIN
                  {{- end }}
                  {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}
                  - NET_BIND_SERVICE
                  {{- end }}
                  {{- end }}
                  drop:
                  - ALL
                  - KILL
                  - MKNOD
                  - SETGID
                  - SETUID
                privileged: {{ .Values.global.proxy.privileged }}
                readOnlyRootFilesystem: {{ not .Values.global.proxy.enableCoreDump }}
                runAsGroup: {{ .ProxyUID }}
                fsGroup: {{ .ProxyGID }}
                {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
                runAsNonRoot: false
                runAsUser: 0
                {{- else -}}
                runAsNonRoot: true
                runAsUser: {{ .ProxyUID }}
                {{- end }}
              resources:
            {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
              {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}
                requests:
                  {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
                  cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
                  {{ end }}
                  {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
                  memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
                  {{ end }}
              {{- end }}
              {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}
                limits:
                  {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}
                  cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}"
                  {{ end }}
                  {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}
                  memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}"
                  {{ end }}
              {{- end }}
            {{- else }}
              {{- if .Values.global.proxy.resources }}
                {{ toYaml .Values.global.proxy.resources | indent 6 }}
              {{- end }}
            {{- end }}
              volumeMounts:
              {{- if eq .Values.global.pilotCertProvider "istiod" }}
              - mountPath: /var/run/secrets/istio
                name: istiod-ca-cert
              {{- end }}
              - mountPath: /var/lib/istio/data
                name: istio-data
              {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
              - mountPath: /etc/istio/custom-bootstrap
                name: custom-bootstrap-volume
              {{- end }}
              # SDS channel between istioagent and Envoy
              - mountPath: /etc/istio/proxy
                name: istio-envoy
              {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
              - mountPath: /var/run/secrets/tokens
                name: istio-token
              {{- end }}
              {{- if .Values.global.mountMtlsCerts }}
              # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
              - mountPath: /etc/certs/
                name: istio-certs
                readOnly: true
              {{- end }}
              - name: istio-podinfo
                mountPath: /etc/istio/pod
               {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
              - mountPath: {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}
                name: lightstep-certs
                readOnly: true
              {{- end }}
                {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
                {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
              - name: "{{  $index }}"
                {{ toYaml $value | indent 6 }}
                {{ end }}
                {{- end }}
            volumes:
            {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
            - name: custom-bootstrap-volume
              configMap:
                name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` "" }}
            {{- end }}
            # SDS channel between istioagent and Envoy
            - emptyDir:
                medium: Memory
              name: istio-envoy
            - name: istio-data
              emptyDir: {}
            - name: istio-podinfo
              downwardAPI:
                items:
                  - path: "labels"
                    fieldRef:
                      fieldPath: metadata.labels
                  - path: "annotations"
                    fieldRef:
                      fieldPath: metadata.annotations
                  - path: "cpu-limit"
                    resourceFieldRef:
                      containerName: istio-proxy
                      resource: limits.cpu
                      divisor: 1m
                  - path: "cpu-request"
                    resourceFieldRef:
                      containerName: istio-proxy
                      resource: requests.cpu
                      divisor: 1m
            {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
            - name: istio-token
              projected:
                sources:
                - serviceAccountToken:
                    path: istio-token
                    expirationSeconds: 43200
                    audience: {{ .Values.global.sds.token.aud }}
            {{- end }}
            {{- if eq .Values.global.pilotCertProvider "istiod" }}
            - name: istiod-ca-cert
              configMap:
                name: istio-ca-root-cert
            {{- end }}
            {{- if .Values.global.mountMtlsCerts }}
            # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
            - name: istio-certs
              secret:
                optional: true
                {{ if eq .Spec.ServiceAccountName "" }}
                secretName: istio.default
                {{ else -}}
                secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
                {{  end -}}
            {{- end }}
              {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
              {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
            - name: "{{ $index }}"
              {{ toYaml $value | indent 4 }}
              {{ end }}
              {{ end }}
            {{- if and (eq .Values.global.proxy.tracer "lightstep") .ProxyConfig.GetTracing.GetTlsSettings }}
            - name: lightstep-certs
              secret:
                optional: true
                secretName: lightstep.cacert
            {{- end }}
            {{- if .Values.global.imagePullSecrets }}
            imagePullSecrets:
              {{- range .Values.global.imagePullSecrets }}
              - name: {{ . }}
              {{- end }}
            {{- end }}
            {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
            securityContext:
              fsGroup: {{ .ProxyGID }}
            {{- end }}
        gateway: |
          {{- $containers := list }}
          {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name "istio-proxy") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}
          metadata:
            labels:
              maistra-version: "2.1.6"
              service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}
              service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default "latest"  | quote }}
              istio.io/rev: {{ .Revision | default "default" | quote }}
            annotations: {
              {{- if eq (len $containers) 1 }}
              kubectl.kubernetes.io/default-logs-container: "{{ index $containers 0 }}",
              {{ end }}
            }
          spec:
            containers:
            - name: istio-proxy
            {{- if contains "/" .Values.global.proxy.image }}
              image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
            {{- else }}
              image: "{{ .Values.global.hub }}/{{ .Values.global.proxy.image }}:{{ .Values.global.tag }}"
            {{- end }}
              ports:
              - containerPort: 15090
                protocol: TCP
                name: http-envoy-prom
              args:
              - proxy
              - router
              - --domain
              - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
              - --serviceCluster
              {{ if ne "" (index .ObjectMeta.Labels "app") -}}
              - "{{ index .ObjectMeta.Labels `app` }}.$(POD_NAMESPACE)"
              {{ else -}}
              - "{{ valueOrDefault .DeploymentMeta.Name `istio-proxy` }}.{{ valueOrDefault .DeploymentMeta.Namespace `default` }}"
              {{ end -}}
              - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}
              - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}
              - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}
            {{- if .Values.global.sts.servicePort }}
              - --stsPort={{ .Values.global.sts.servicePort }}
            {{- end }}
            {{- if .Values.global.logAsJson }}
              - --log_as_json
            {{- end }}
            {{- if .Values.global.proxy.lifecycle }}
              lifecycle:
                {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}
            {{- end }}
              env:
              - name: JWT_POLICY
                value: {{ .Values.global.jwtPolicy }}
              - name: PILOT_CERT_PROVIDER
                value: {{ .Values.global.pilotCertProvider }}
              - name: CA_ADDR
              {{- if .Values.global.caAddress }}
                value: {{ .Values.global.caAddress }}
              {{- else }}
                value: istiod-{{ .Values.revision | default "default" }}.{{ .Release.Namespace }}.svc:15012
              {{- end }}
              - name: POD_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              - name: POD_NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
              - name: INSTANCE_IP
                valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
              - name: SERVICE_ACCOUNT
                valueFrom:
                  fieldRef:
                    fieldPath: spec.serviceAccountName
              - name: HOST_IP
                valueFrom:
                  fieldRef:
                    fieldPath: status.hostIP
              - name: CANONICAL_SERVICE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.labels['service.istio.io/canonical-name']
              - name: CANONICAL_REVISION
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.labels['service.istio.io/canonical-revision']
              - name: PROXY_CONFIG
                value: |
                       {{ protoToJSON .ProxyConfig }}
              - name: ISTIO_META_POD_PORTS
                value: |-
                  [
                  {{- $first := true }}
                  {{- range $index1, $c := .Spec.Containers }}
                    {{- range $index2, $p := $c.Ports }}
                      {{- if (structToJSON $p) }}
                      {{if not $first}},{{end}}{{ structToJSON $p }}
                      {{- $first = false }}
                      {{- end }}
                    {{- end}}
                  {{- end}}
                  ]
              - name: ISTIO_META_APP_CONTAINERS
                value: "{{ $containers | join "," }}"
              - name: ISTIO_META_CLUSTER_ID
                value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
              - name: ISTIO_META_INTERCEPTION_MODE
                value: "{{ .ProxyConfig.InterceptionMode.String }}"
              {{- if .Values.global.network }}
              - name: ISTIO_META_NETWORK
                value: "{{ .Values.global.network }}"
              {{- end }}
              {{ if .ObjectMeta.Annotations }}
              - name: ISTIO_METAJSON_ANNOTATIONS
                value: |
                       {{ toJSON .ObjectMeta.Annotations }}
              {{ end }}
              {{- if .DeploymentMeta.Name }}
              - name: ISTIO_META_WORKLOAD_NAME
                value: "{{ .DeploymentMeta.Name }}"
              {{ end }}
              {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
              - name: ISTIO_META_OWNER
                value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
              {{- end}}
              {{- if .Values.global.meshID }}
              - name: ISTIO_META_MESH_ID
                value: "{{ .Values.global.meshID }}"
              {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}
              - name: ISTIO_META_MESH_ID
                value: "{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}"
              {{- end }}
              {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}
              - name: TRUST_DOMAIN
                value: "{{ . }}"
              {{- end }}
              {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
              - name: {{ $key }}
                value: "{{ $value }}"
              {{- end }}
              {{with .Values.global.imagePullPolicy }}imagePullPolicy: "{{.}}"{{end}}
              readinessProbe:
                httpGet:
                  path: /healthz/ready
                  port: 15021
                initialDelaySeconds: {{.Values.global.proxy.readinessInitialDelaySeconds }}
                periodSeconds: {{ .Values.global.proxy.readinessPeriodSeconds }}
                timeoutSeconds: 3
                failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold }}
              volumeMounts:
              {{- if eq .Values.global.pilotCertProvider "istiod" }}
              - mountPath: /var/run/secrets/istio
                name: istiod-ca-cert
              {{- end }}
              - mountPath: /var/lib/istio/data
                name: istio-data
              # SDS channel between istioagent and Envoy
              - mountPath: /etc/istio/proxy
                name: istio-envoy
              {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
              - mountPath: /var/run/secrets/tokens
                name: istio-token
              {{- end }}
              {{- if .Values.global.mountMtlsCerts }}
              # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
              - mountPath: /etc/certs/
                name: istio-certs
                readOnly: true
              {{- end }}
              - name: istio-podinfo
                mountPath: /etc/istio/pod
            volumes:
            # SDS channel between istioagent and Envoy
            - emptyDir:
                medium: Memory
              name: istio-envoy
            - name: istio-data
              emptyDir: {}
            - name: istio-podinfo
              downwardAPI:
                items:
                  - path: "labels"
                    fieldRef:
                      fieldPath: metadata.labels
                  - path: "annotations"
                    fieldRef:
                      fieldPath: metadata.annotations
                  - path: "cpu-limit"
                    resourceFieldRef:
                      containerName: istio-proxy
                      resource: limits.cpu
                      divisor: 1m
                  - path: "cpu-request"
                    resourceFieldRef:
                      containerName: istio-proxy
                      resource: requests.cpu
                      divisor: 1m
            {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
            - name: istio-token
              projected:
                sources:
                - serviceAccountToken:
                    path: istio-token
                    expirationSeconds: 43200
                    audience: {{ .Values.global.sds.token.aud }}
            {{- end }}
            {{- if eq .Values.global.pilotCertProvider "istiod" }}
            - name: istiod-ca-cert
              configMap:
                name: istio-ca-root-cert
            {{- end }}
            {{- if .Values.global.mountMtlsCerts }}
            # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.
            - name: istio-certs
              secret:
                optional: true
                {{ if eq .Spec.ServiceAccountName "" }}
                secretName: istio.default
                {{ else -}}
                secretName: {{  printf "istio.%s" .Spec.ServiceAccountName }}
                {{  end -}}
            {{- end }}
            {{- if .Values.global.imagePullSecrets }}
            imagePullSecrets:
              {{- range .Values.global.imagePullSecrets }}
              - name: {{ . }}
              {{- end }}
            {{- end }}
            {{- if eq (env "ENABLE_LEGACY_FSGROUP_INJECTION" "true") "true" }}
            securityContext:
              fsGroup: 1337
            {{- end }}
    values: |-
      {
        "global": {
          "arch": {
            "amd64": 2,
            "ppc64le": 2,
            "s390x": 2
          },
          "caAddress": "",
          "centralIstiod": false,
          "configNamespace": "istio-system",
          "configRootNamespace": "istio-system",
          "configValidation": true,
          "defaultConfigVisibilitySettings": [],
          "defaultNodeSelector": {},
          "defaultPodDisruptionBudget": {
            "enabled": false
          },
          "defaultResources": {
            "requests": {
              "cpu": "10m",
              "memory": "128Mi"
            }
          },
          "defaultTolerations": [],
          "enableTracing": true,
          "externalIstiod": false,
          "hub": "registry.redhat.io/openshift-service-mesh",
          "imagePullPolicy": "",
          "imagePullSecrets": [],
          "istioNamespace": "istio-system",
          "istiod": {
            "enableAnalysis": false
          },
          "jwtPolicy": "first-party-jwt",
          "k8sIngress": {
            "enableHttps": false,
            "enabled": false,
            "gatewayName": "ingressgateway"
          },
          "logAsJson": false,
          "logging": {
            "level": "default:warn"
          },
          "manageNetworkPolicy": true,
          "meshExpansion": {
            "enabled": false,
            "useILB": false
          },
          "meshID": "",
          "meshNetworks": {},
          "mountMtlsCerts": false,
          "mtls": {
            "auto": true,
            "enabled": false
          },
          "multiCluster": {
            "clusterName": "",
            "enabled": false,
            "globalDomainSuffix": "global",
            "includeEnvoyFilter": true,
            "multiClusterOverrides": {
              "expansionEnabled": null,
              "multiClusterEnabled": null
            }
          },
          "network": "",
          "oauthproxy": {
            "hub": "registry.redhat.io/openshift4",
            "image": "quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ce1de860b639d4831bb74b0271aed6882b45febb37f60bcf8a31157b87ce0495",
            "imagePullPolicy": "IfNotPresent",
            "tag": "v4.4"
          },
          "omitSidecarInjectorConfigMap": false,
          "oneNamespace": false,
          "operatorManageWebhooks": false,
          "pilotCertProvider": "istiod",
          "priorityClassName": "",
          "prometheusNamespace": "istio-system",
          "proxy": {
            "accessLogFile": "/dev/stdout",
            "accessLogFormat": "{ \"authority\": \"%REQ(:AUTHORITY)%\", \"bytes_received\": %BYTES_RECEIVED%, \"bytes_sent\": %BYTES_SENT%, \"downstream_local_address\": \"%DOWNSTREAM_LOCAL_ADDRESS%\", \"downstream_peer_cert_v_end\": \"%DOWNSTREAM_PEER_CERT_V_END%\", \"downstream_peer_cert_v_start\": \"%DOWNSTREAM_PEER_CERT_V_START%\", \"downstream_remote_address\": \"%DOWNSTREAM_REMOTE_ADDRESS%\", \"downstream_tls_cipher\": \"%DOWNSTREAM_TLS_CIPHER%\", \"downstream_tls_version\": \"%DOWNSTREAM_TLS_VERSION%\", \"duration\": %DURATION%, \"hostname\": \"%HOSTNAME%\", \"istio_policy_status\": \"%DYNAMIC_METADATA(istio.mixer:status)%\", \"method\": \"%REQ(:METHOD)%\", \"path\": \"%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%\", \"protocol\": \"%PROTOCOL%\", \"request_duration\": %REQUEST_DURATION%, \"request_id\": \"%REQ(X-REQUEST-ID)%\", \"requested_server_name\": \"%REQUESTED_SERVER_NAME%\", \"response_code\": \"%RESPONSE_CODE%\", \"response_duration\": %RESPONSE_DURATION%, \"response_tx_duration\": %RESPONSE_TX_DURATION%, \"response_flags\": \"%RESPONSE_FLAGS%\", \"route_name\": \"%ROUTE_NAME%\", \"start_time\": \"%START_TIME%\", \"upstream_cluster\": \"%UPSTREAM_CLUSTER%\", \"upstream_host\": \"%UPSTREAM_HOST%\", \"upstream_local_address\": \"%UPSTREAM_LOCAL_ADDRESS%\", \"upstream_service_time\": %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%, \"upstream_transport_failure_reason\": \"%UPSTREAM_TRANSPORT_FAILURE_REASON%\", \"user_agent\": \"%REQ(USER-AGENT)%\", \"x_forwarded_for\": \"%REQ(X-FORWARDED-FOR)%\" } \n",
            "autoInject": "disabled",
            "clusterDomain": "cluster.local",
            "componentLogLevel": "misc:error",
            "dnsRefreshRate": "300s",
            "enableCoreDump": false,
            "excludeIPRanges": "",
            "excludeInboundPorts": "8444",
            "excludeOutboundPorts": "",
            "holdApplicationUntilProxyStarts": false,
            "image": "registry.redhat.io/openshift-service-mesh/proxyv2-rhel8@sha256:e7acaa5d4a7f265cba1ad4f53859833390c5da1af31bb8546a5ae19f064a7dde",
            "includeIPRanges": "*",
            "includeInboundPorts": "*",
            "logLevel": "warning",
            "privileged": false,
            "readinessFailureThreshold": 30,
            "readinessInitialDelaySeconds": 1,
            "readinessPeriodSeconds": 2,
            "resources": {
              "limits": {
                "cpu": "2000m",
                "memory": "1024Mi"
              },
              "requests": {
                "cpu": "10m",
                "memory": "128Mi"
              }
            },
            "statusPort": 15021,
            "tracer": "zipkin"
          },
          "proxy_init": {
            "image": "",
            "resources": {
              "limits": {
                "cpu": "2000m",
                "memory": "1024Mi"
              },
              "requests": {
                "cpu": "10m",
                "memory": "10Mi"
              }
            }
          },
          "remotePilotAddress": "",
          "sds": {
            "token": {
              "aud": "istio-ca"
            }
          },
          "sts": {
            "servicePort": 0
          },
          "tag": "2.1.6",
          "tls": {
            "cipherSuites": [],
            "ecdhCurves": [],
            "maxProtocolVersion": "",
            "minProtocolVersion": ""
          },
          "tracer": {
            "datadog": {
              "address": "$(HOST_IP):8126"
            },
            "lightstep": {
              "accessToken": "",
              "address": ""
            },
            "stackdriver": {
              "debug": false,
              "maxNumberOfAnnotations": 200,
              "maxNumberOfAttributes": 200,
              "maxNumberOfMessageEvents": 200
            },
            "zipkin": {
              "address": ""
            }
          },
          "trustDomain": "",
          "useMCP": false
        },
        "istio_cni": {
          "enabled": true,
          "istio_cni_network": "v2-1-istio-cni"
        },
        "revision": "basic",
        "sidecarInjectorWebhook": {
          "alwaysInjectSelector": [],
          "enableNamespacesByDefault": false,
          "injectedAnnotations": {},
          "neverInjectSelector": [],
          "objectSelector": {
            "autoInject": true,
            "enabled": false
          },
          "rewriteAppHTTPProbe": true,
          "templates": {},
          "useLegacySelectors": true
        }
      }
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"config":"# defaultTemplates defines the default template to use for pods that do not explicitly specify a template\ndefaultTemplates: [sidecar]\npolicy: disabled\nalwaysInjectSelector:\n  []\nneverInjectSelector:\n  []\ninjectedAnnotations:\ntemplate: \"{{ Template_Version_And_Istio_Version_Mismatched_Check_Installation }}\"\ntemplates:\n  sidecar: |\n    {{- $containers := list }}\n    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name \"istio-proxy\") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}\n    metadata:\n      labels:\n        maistra-version: \"2.1.6\"\n        security.istio.io/tlsMode: {{ index .ObjectMeta.Labels `security.istio.io/tlsMode` | default \"istio\"  | quote }}\n        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}\n        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default \"latest\"  | quote }}\n        istio.io/rev: {{ .Revision | default \"default\" | quote }}\n      annotations: {\n        {{- if eq (len $containers) 1 }}\n        kubectl.kubernetes.io/default-logs-container: \"{{ index $containers 0 }}\",\n        {{ end }}\n    {{- if .Values.istio_cni.enabled }}\n        {{- if not .Values.istio_cni.chained }}\n        k8s.v1.cni.cncf.io/networks: '{{ appendMultusNetwork (index .ObjectMeta.Annotations `k8s.v1.cni.cncf.io/networks`) .Values.istio_cni.istio_cni_network }}',\n        {{- end }}\n        sidecar.istio.io/interceptionMode: \"{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}\",\n        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}traffic.sidecar.istio.io/includeOutboundIPRanges: \"{{.}}\",{{ end }}\n        {{ with annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}traffic.sidecar.istio.io/excludeOutboundIPRanges: \"{{.}}\",{{ end }}\n        traffic.sidecar.istio.io/includeInboundPorts: \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` `*` }}\",\n        traffic.sidecar.istio.io/excludeInboundPorts: \"15090,{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}\",\n        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/includeOutboundPorts`) (ne (valueOrDefault .Values.global.proxy.includeOutboundPorts \"\") \"\") }}\n        traffic.sidecar.istio.io/includeOutboundPorts: \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundPorts` .Values.global.proxy.includeOutboundPorts }}\",\n        {{- end }}\n        {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts \"\") }}\n        traffic.sidecar.istio.io/excludeOutboundPorts: \"{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}\",\n        {{- end }}\n        {{ with index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}traffic.sidecar.istio.io/kubevirtInterfaces: \"{{.}}\",{{ end }}\n    {{- end }}\n      }\n    spec:\n      {{- $holdProxy := or .ProxyConfig.HoldApplicationUntilProxyStarts.GetValue .Values.global.proxy.holdApplicationUntilProxyStarts }}\n      containers:\n      - name: istio-proxy\n      {{- if contains \"/\" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}\n        image: \"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}\"\n      {{- else }}\n        image: \"{{ .Values.global.hub }}/{{ .Values.global.proxy.image }}:{{ .Values.global.tag }}\"\n      {{- end }}\n        ports:\n        - containerPort: 15090\n          protocol: TCP\n          name: http-envoy-prom\n        args:\n        - proxy\n        - sidecar\n        - --domain\n        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}\n        - --serviceCluster\n        {{ if ne \"\" (index .ObjectMeta.Labels \"app\") -}}\n        - \"{{ index .ObjectMeta.Labels `app` }}.$(POD_NAMESPACE)\"\n        {{ else -}}\n        - \"{{ valueOrDefault .DeploymentMeta.Name `istio-proxy` }}.{{ valueOrDefault .DeploymentMeta.Namespace `default` }}\"\n        {{ end -}}\n        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}\n        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}\n        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}\n      {{- if .Values.global.sts.servicePort }}\n        - --stsPort={{ .Values.global.sts.servicePort }}\n      {{- end }}\n      {{- if .Values.global.logAsJson }}\n        - --log_as_json\n      {{- end }}\n      {{- if gt .ProxyConfig.Concurrency.GetValue 0 }}\n        - --concurrency\n        - \"{{ .ProxyConfig.Concurrency.GetValue }}\"\n      {{- end -}}\n      {{- if .Values.global.proxy.lifecycle }}\n        lifecycle:\n          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}\n      {{- else if $holdProxy }}\n        lifecycle:\n          postStart:\n            exec:\n              command:\n              - pilot-agent\n              - wait\n      {{- end }}\n        env:\n        - name: JWT_POLICY\n          value: {{ .Values.global.jwtPolicy }}\n        - name: PILOT_CERT_PROVIDER\n          value: {{ .Values.global.pilotCertProvider }}\n        - name: CA_ADDR\n        {{- if .Values.global.caAddress }}\n          value: {{ .Values.global.caAddress }}\n        {{- else }}\n          value: istiod-{{ valueOrDefault .Values.revision \"default\" }}.{{ .Values.global.istioNamespace }}.svc:15012\n        {{- end }}\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: INSTANCE_IP\n          valueFrom:\n            fieldRef:\n              fieldPath: status.podIP\n        - name: SERVICE_ACCOUNT\n          valueFrom:\n            fieldRef:\n              fieldPath: spec.serviceAccountName\n        - name: HOST_IP\n          valueFrom:\n            fieldRef:\n              fieldPath: status.hostIP\n        - name: CANONICAL_SERVICE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.labels['service.istio.io/canonical-name']\n        - name: CANONICAL_REVISION\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.labels['service.istio.io/canonical-revision']\n        - name: PROXY_CONFIG\n          value: |\n                 {{ protoToJSON .ProxyConfig }}\n        - name: ISTIO_META_POD_PORTS\n          value: |-\n            [\n            {{- $first := true }}\n            {{- range $index1, $c := .Spec.Containers }}\n              {{- range $index2, $p := $c.Ports }}\n                {{- if (structToJSON $p) }}\n                {{if not $first}},{{end}}{{ structToJSON $p }}\n                {{- $first = false }}\n                {{- end }}\n              {{- end}}\n            {{- end}}\n            ]\n        - name: ISTIO_META_APP_CONTAINERS\n          value: \"{{ $containers | join \",\" }}\"\n        - name: ISTIO_META_CLUSTER_ID\n          value: \"{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}\"\n        - name: ISTIO_META_INTERCEPTION_MODE\n          value: \"{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}\"\n        {{- if .Values.global.network }}\n        - name: ISTIO_META_NETWORK\n          value: \"{{ .Values.global.network }}\"\n        {{- end }}\n        {{ if .ObjectMeta.Annotations }}\n        - name: ISTIO_METAJSON_ANNOTATIONS\n          value: |\n                 {{ toJSON .ObjectMeta.Annotations }}\n        {{ end }}\n        {{- if .DeploymentMeta.Name }}\n        - name: ISTIO_META_WORKLOAD_NAME\n          value: \"{{ .DeploymentMeta.Name }}\"\n        {{ end }}\n        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}\n        - name: ISTIO_META_OWNER\n          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}\n        {{- end}}\n        {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}\n        - name: ISTIO_BOOTSTRAP_OVERRIDE\n          value: \"/etc/istio/custom-bootstrap/custom_bootstrap.json\"\n        {{- end }}\n        {{- if .Values.global.meshID }}\n        - name: ISTIO_META_MESH_ID\n          value: \"{{ .Values.global.meshID }}\"\n        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}\n        - name: ISTIO_META_MESH_ID\n          value: \"{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}\"\n        {{- end }}\n        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}\n        - name: TRUST_DOMAIN\n          value: \"{{ . }}\"\n        {{- end }}\n        {{- if and (eq .Values.global.proxy.tracer \"datadog\") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}\n        {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}\n        - name: {{ $key }}\n          value: \"{{ $value }}\"\n        {{- end }}\n        {{- end }}\n        {{- if isset .ObjectMeta.Annotations `sidecar.maistra.io/proxyEnv` }}\n        {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.maistra.io/proxyEnv`) }}\n        - name: {{ $key }}\n          value: \"{{ $value }}\"\n        {{- end }}\n        {{- end }}\n        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}\n        - name: {{ $key }}\n          value: \"{{ $value }}\"\n        {{- end }}\n        imagePullPolicy: \"{{ valueOrDefault .Values.global.imagePullPolicy `Always` }}\"\n        {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}\n        readinessProbe:\n          httpGet:\n            path: /healthz/ready\n            port: 15021\n          initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}\n          periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}\n          timeoutSeconds: 3\n          failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}\n        {{ end -}}\n        securityContext:\n          allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}\n          capabilities:\n            {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}\n            add:\n            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}\n            - NET_ADMIN\n            {{- end }}\n            {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}\n            - NET_BIND_SERVICE\n            {{- end }}\n            {{- end }}\n            drop:\n            - ALL\n            - KILL\n            - MKNOD\n            - SETGID\n            - SETUID\n          privileged: {{ .Values.global.proxy.privileged }}\n          readOnlyRootFilesystem: {{ not .Values.global.proxy.enableCoreDump }}\n          runAsGroup: {{ .ProxyUID }}\n          fsGroup: {{ .ProxyGID }}\n          {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}\n          runAsNonRoot: false\n          runAsUser: 0\n          {{- else -}}\n          runAsNonRoot: true\n          runAsUser: {{ .ProxyUID }}\n          {{- end }}\n        resources:\n      {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}\n        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) }}\n          requests:\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}\n            cpu: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}\"\n            {{ end }}\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}\n            memory: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}\"\n            {{ end }}\n        {{- end }}\n        {{- if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) }}\n          limits:\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit`) -}}\n            cpu: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPULimit` }}\"\n            {{ end }}\n            {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit`) -}}\n            memory: \"{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemoryLimit` }}\"\n            {{ end }}\n        {{- end }}\n      {{- else }}\n        {{- if .Values.global.proxy.resources }}\n          {{ toYaml .Values.global.proxy.resources | indent 6 }}\n        {{- end }}\n      {{- end }}\n        volumeMounts:\n        {{- if eq .Values.global.pilotCertProvider \"istiod\" }}\n        - mountPath: /var/run/secrets/istio\n          name: istiod-ca-cert\n        {{- end }}\n        - mountPath: /var/lib/istio/data\n          name: istio-data\n        {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}\n        - mountPath: /etc/istio/custom-bootstrap\n          name: custom-bootstrap-volume\n        {{- end }}\n        # SDS channel between istioagent and Envoy\n        - mountPath: /etc/istio/proxy\n          name: istio-envoy\n        {{- if eq .Values.global.jwtPolicy \"third-party-jwt\" }}\n        - mountPath: /var/run/secrets/tokens\n          name: istio-token\n        {{- end }}\n        {{- if .Values.global.mountMtlsCerts }}\n        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.\n        - mountPath: /etc/certs/\n          name: istio-certs\n          readOnly: true\n        {{- end }}\n        - name: istio-podinfo\n          mountPath: /etc/istio/pod\n         {{- if and (eq .Values.global.proxy.tracer \"lightstep\") .ProxyConfig.GetTracing.GetTlsSettings }}\n        - mountPath: {{ directory .ProxyConfig.GetTracing.GetTlsSettings.GetCaCertificates }}\n          name: lightstep-certs\n          readOnly: true\n        {{- end }}\n          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}\n          {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}\n        - name: \"{{  $index }}\"\n          {{ toYaml $value | indent 6 }}\n          {{ end }}\n          {{- end }}\n      volumes:\n      {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}\n      - name: custom-bootstrap-volume\n        configMap:\n          name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` \"\" }}\n      {{- end }}\n      # SDS channel between istioagent and Envoy\n      - emptyDir:\n          medium: Memory\n        name: istio-envoy\n      - name: istio-data\n        emptyDir: {}\n      - name: istio-podinfo\n        downwardAPI:\n          items:\n            - path: \"labels\"\n              fieldRef:\n                fieldPath: metadata.labels\n            - path: \"annotations\"\n              fieldRef:\n                fieldPath: metadata.annotations\n            - path: \"cpu-limit\"\n              resourceFieldRef:\n                containerName: istio-proxy\n                resource: limits.cpu\n                divisor: 1m\n            - path: \"cpu-request\"\n              resourceFieldRef:\n                containerName: istio-proxy\n                resource: requests.cpu\n                divisor: 1m\n      {{- if eq .Values.global.jwtPolicy \"third-party-jwt\" }}\n      - name: istio-token\n        projected:\n          sources:\n          - serviceAccountToken:\n              path: istio-token\n              expirationSeconds: 43200\n              audience: {{ .Values.global.sds.token.aud }}\n      {{- end }}\n      {{- if eq .Values.global.pilotCertProvider \"istiod\" }}\n      - name: istiod-ca-cert\n        configMap:\n          name: istio-ca-root-cert\n      {{- end }}\n      {{- if .Values.global.mountMtlsCerts }}\n      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.\n      - name: istio-certs\n        secret:\n          optional: true\n          {{ if eq .Spec.ServiceAccountName \"\" }}\n          secretName: istio.default\n          {{ else -}}\n          secretName: {{  printf \"istio.%s\" .Spec.ServiceAccountName }}\n          {{  end -}}\n      {{- end }}\n        {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}\n        {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}\n      - name: \"{{ $index }}\"\n        {{ toYaml $value | indent 4 }}\n        {{ end }}\n        {{ end }}\n      {{- if and (eq .Values.global.proxy.tracer \"lightstep\") .ProxyConfig.GetTracing.GetTlsSettings }}\n      - name: lightstep-certs\n        secret:\n          optional: true\n          secretName: lightstep.cacert\n      {{- end }}\n      {{- if .Values.global.imagePullSecrets }}\n      imagePullSecrets:\n        {{- range .Values.global.imagePullSecrets }}\n        - name: {{ . }}\n        {{- end }}\n      {{- end }}\n      {{- if eq (env \"ENABLE_LEGACY_FSGROUP_INJECTION\" \"true\") \"true\" }}\n      securityContext:\n        fsGroup: {{ .ProxyGID }}\n      {{- end }}\n  gateway: |\n    {{- $containers := list }}\n    {{- range $index, $container := .Spec.Containers }}{{ if not (eq $container.Name \"istio-proxy\") }}{{ $containers = append $containers $container.Name }}{{end}}{{- end}}\n    metadata:\n      labels:\n        maistra-version: \"2.1.6\"\n        service.istio.io/canonical-name: {{ index .ObjectMeta.Labels `service.istio.io/canonical-name` | default (index .ObjectMeta.Labels `app.kubernetes.io/name`) | default (index .ObjectMeta.Labels `app`) | default .DeploymentMeta.Name  | quote }}\n        service.istio.io/canonical-revision: {{ index .ObjectMeta.Labels `service.istio.io/canonical-revision` | default (index .ObjectMeta.Labels `app.kubernetes.io/version`) | default (index .ObjectMeta.Labels `version`) | default \"latest\"  | quote }}\n        istio.io/rev: {{ .Revision | default \"default\" | quote }}\n      annotations: {\n        {{- if eq (len $containers) 1 }}\n        kubectl.kubernetes.io/default-logs-container: \"{{ index $containers 0 }}\",\n        {{ end }}\n      }\n    spec:\n      containers:\n      - name: istio-proxy\n      {{- if contains \"/\" .Values.global.proxy.image }}\n        image: \"{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}\"\n      {{- else }}\n        image: \"{{ .Values.global.hub }}/{{ .Values.global.proxy.image }}:{{ .Values.global.tag }}\"\n      {{- end }}\n        ports:\n        - containerPort: 15090\n          protocol: TCP\n          name: http-envoy-prom\n        args:\n        - proxy\n        - router\n        - --domain\n        - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}\n        - --serviceCluster\n        {{ if ne \"\" (index .ObjectMeta.Labels \"app\") -}}\n        - \"{{ index .ObjectMeta.Labels `app` }}.$(POD_NAMESPACE)\"\n        {{ else -}}\n        - \"{{ valueOrDefault .DeploymentMeta.Name `istio-proxy` }}.{{ valueOrDefault .DeploymentMeta.Namespace `default` }}\"\n        {{ end -}}\n        - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel }}\n        - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel }}\n        - --log_output_level={{ annotation .ObjectMeta `sidecar.istio.io/agentLogLevel` .Values.global.logging.level }}\n      {{- if .Values.global.sts.servicePort }}\n        - --stsPort={{ .Values.global.sts.servicePort }}\n      {{- end }}\n      {{- if .Values.global.logAsJson }}\n        - --log_as_json\n      {{- end }}\n      {{- if .Values.global.proxy.lifecycle }}\n        lifecycle:\n          {{ toYaml .Values.global.proxy.lifecycle | indent 6 }}\n      {{- end }}\n        env:\n        - name: JWT_POLICY\n          value: {{ .Values.global.jwtPolicy }}\n        - name: PILOT_CERT_PROVIDER\n          value: {{ .Values.global.pilotCertProvider }}\n        - name: CA_ADDR\n        {{- if .Values.global.caAddress }}\n          value: {{ .Values.global.caAddress }}\n        {{- else }}\n          value: istiod-{{ .Values.revision | default \"default\" }}.{{ .Release.Namespace }}.svc:15012\n        {{- end }}\n        - name: POD_NAME\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.name\n        - name: POD_NAMESPACE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.namespace\n        - name: INSTANCE_IP\n          valueFrom:\n            fieldRef:\n              fieldPath: status.podIP\n        - name: SERVICE_ACCOUNT\n          valueFrom:\n            fieldRef:\n              fieldPath: spec.serviceAccountName\n        - name: HOST_IP\n          valueFrom:\n            fieldRef:\n              fieldPath: status.hostIP\n        - name: CANONICAL_SERVICE\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.labels['service.istio.io/canonical-name']\n        - name: CANONICAL_REVISION\n          valueFrom:\n            fieldRef:\n              fieldPath: metadata.labels['service.istio.io/canonical-revision']\n        - name: PROXY_CONFIG\n          value: |\n                 {{ protoToJSON .ProxyConfig }}\n        - name: ISTIO_META_POD_PORTS\n          value: |-\n            [\n            {{- $first := true }}\n            {{- range $index1, $c := .Spec.Containers }}\n              {{- range $index2, $p := $c.Ports }}\n                {{- if (structToJSON $p) }}\n                {{if not $first}},{{end}}{{ structToJSON $p }}\n                {{- $first = false }}\n                {{- end }}\n              {{- end}}\n            {{- end}}\n            ]\n        - name: ISTIO_META_APP_CONTAINERS\n          value: \"{{ $containers | join \",\" }}\"\n        - name: ISTIO_META_CLUSTER_ID\n          value: \"{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}\"\n        - name: ISTIO_META_INTERCEPTION_MODE\n          value: \"{{ .ProxyConfig.InterceptionMode.String }}\"\n        {{- if .Values.global.network }}\n        - name: ISTIO_META_NETWORK\n          value: \"{{ .Values.global.network }}\"\n        {{- end }}\n        {{ if .ObjectMeta.Annotations }}\n        - name: ISTIO_METAJSON_ANNOTATIONS\n          value: |\n                 {{ toJSON .ObjectMeta.Annotations }}\n        {{ end }}\n        {{- if .DeploymentMeta.Name }}\n        - name: ISTIO_META_WORKLOAD_NAME\n          value: \"{{ .DeploymentMeta.Name }}\"\n        {{ end }}\n        {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}\n        - name: ISTIO_META_OWNER\n          value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}\n        {{- end}}\n        {{- if .Values.global.meshID }}\n        - name: ISTIO_META_MESH_ID\n          value: \"{{ .Values.global.meshID }}\"\n        {{- else if (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}\n        - name: ISTIO_META_MESH_ID\n          value: \"{{ (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain) }}\"\n        {{- end }}\n        {{- with (valueOrDefault .MeshConfig.TrustDomain .Values.global.trustDomain)  }}\n        - name: TRUST_DOMAIN\n          value: \"{{ . }}\"\n        {{- end }}\n        {{- range $key, $value := .ProxyConfig.ProxyMetadata }}\n        - name: {{ $key }}\n          value: \"{{ $value }}\"\n        {{- end }}\n        {{with .Values.global.imagePullPolicy }}imagePullPolicy: \"{{.}}\"{{end}}\n        readinessProbe:\n          httpGet:\n            path: /healthz/ready\n            port: 15021\n          initialDelaySeconds: {{.Values.global.proxy.readinessInitialDelaySeconds }}\n          periodSeconds: {{ .Values.global.proxy.readinessPeriodSeconds }}\n          timeoutSeconds: 3\n          failureThreshold: {{ .Values.global.proxy.readinessFailureThreshold }}\n        volumeMounts:\n        {{- if eq .Values.global.pilotCertProvider \"istiod\" }}\n        - mountPath: /var/run/secrets/istio\n          name: istiod-ca-cert\n        {{- end }}\n        - mountPath: /var/lib/istio/data\n          name: istio-data\n        # SDS channel between istioagent and Envoy\n        - mountPath: /etc/istio/proxy\n          name: istio-envoy\n        {{- if eq .Values.global.jwtPolicy \"third-party-jwt\" }}\n        - mountPath: /var/run/secrets/tokens\n          name: istio-token\n        {{- end }}\n        {{- if .Values.global.mountMtlsCerts }}\n        # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.\n        - mountPath: /etc/certs/\n          name: istio-certs\n          readOnly: true\n        {{- end }}\n        - name: istio-podinfo\n          mountPath: /etc/istio/pod\n      volumes:\n      # SDS channel between istioagent and Envoy\n      - emptyDir:\n          medium: Memory\n        name: istio-envoy\n      - name: istio-data\n        emptyDir: {}\n      - name: istio-podinfo\n        downwardAPI:\n          items:\n            - path: \"labels\"\n              fieldRef:\n                fieldPath: metadata.labels\n            - path: \"annotations\"\n              fieldRef:\n                fieldPath: metadata.annotations\n            - path: \"cpu-limit\"\n              resourceFieldRef:\n                containerName: istio-proxy\n                resource: limits.cpu\n                divisor: 1m\n            - path: \"cpu-request\"\n              resourceFieldRef:\n                containerName: istio-proxy\n                resource: requests.cpu\n                divisor: 1m\n      {{- if eq .Values.global.jwtPolicy \"third-party-jwt\" }}\n      - name: istio-token\n        projected:\n          sources:\n          - serviceAccountToken:\n              path: istio-token\n              expirationSeconds: 43200\n              audience: {{ .Values.global.sds.token.aud }}\n      {{- end }}\n      {{- if eq .Values.global.pilotCertProvider \"istiod\" }}\n      - name: istiod-ca-cert\n        configMap:\n          name: istio-ca-root-cert\n      {{- end }}\n      {{- if .Values.global.mountMtlsCerts }}\n      # Use the key and cert mounted to /etc/certs/ for the in-cluster mTLS communications.\n      - name: istio-certs\n        secret:\n          optional: true\n          {{ if eq .Spec.ServiceAccountName \"\" }}\n          secretName: istio.default\n          {{ else -}}\n          secretName: {{  printf \"istio.%s\" .Spec.ServiceAccountName }}\n          {{  end -}}\n      {{- end }}\n      {{- if .Values.global.imagePullSecrets }}\n      imagePullSecrets:\n        {{- range .Values.global.imagePullSecrets }}\n        - name: {{ . }}\n        {{- end }}\n      {{- end }}\n      {{- if eq (env \"ENABLE_LEGACY_FSGROUP_INJECTION\" \"true\") \"true\" }}\n      securityContext:\n        fsGroup: 1337\n      {{- end }}","values":"{\n  \"global\": {\n    \"arch\": {\n      \"amd64\": 2,\n      \"ppc64le\": 2,\n      \"s390x\": 2\n    },\n    \"caAddress\": \"\",\n    \"centralIstiod\": false,\n    \"configNamespace\": \"istio-system\",\n    \"configRootNamespace\": \"istio-system\",\n    \"configValidation\": true,\n    \"defaultConfigVisibilitySettings\": [],\n    \"defaultNodeSelector\": {},\n    \"defaultPodDisruptionBudget\": {\n      \"enabled\": false\n    },\n    \"defaultResources\": {\n      \"requests\": {\n        \"cpu\": \"10m\",\n        \"memory\": \"128Mi\"\n      }\n    },\n    \"defaultTolerations\": [],\n    \"enableTracing\": true,\n    \"externalIstiod\": false,\n    \"hub\": \"registry.redhat.io/openshift-service-mesh\",\n    \"imagePullPolicy\": \"\",\n    \"imagePullSecrets\": [],\n    \"istioNamespace\": \"istio-system\",\n    \"istiod\": {\n      \"enableAnalysis\": false\n    },\n    \"jwtPolicy\": \"first-party-jwt\",\n    \"k8sIngress\": {\n      \"enableHttps\": false,\n      \"enabled\": false,\n      \"gatewayName\": \"ingressgateway\"\n    },\n    \"logAsJson\": false,\n    \"logging\": {\n      \"level\": \"default:warn\"\n    },\n    \"manageNetworkPolicy\": true,\n    \"meshExpansion\": {\n      \"enabled\": false,\n      \"useILB\": false\n    },\n    \"meshID\": \"\",\n    \"meshNetworks\": {},\n    \"mountMtlsCerts\": false,\n    \"mtls\": {\n      \"auto\": true,\n      \"enabled\": false\n    },\n    \"multiCluster\": {\n      \"clusterName\": \"\",\n      \"enabled\": false,\n      \"globalDomainSuffix\": \"global\",\n      \"includeEnvoyFilter\": true,\n      \"multiClusterOverrides\": {\n        \"expansionEnabled\": null,\n        \"multiClusterEnabled\": null\n      }\n    },\n    \"network\": \"\",\n    \"oauthproxy\": {\n      \"hub\": \"registry.redhat.io/openshift4\",\n      \"image\": \"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ce1de860b639d4831bb74b0271aed6882b45febb37f60bcf8a31157b87ce0495\",\n      \"imagePullPolicy\": \"IfNotPresent\",\n      \"tag\": \"v4.4\"\n    },\n    \"omitSidecarInjectorConfigMap\": false,\n    \"oneNamespace\": false,\n    \"operatorManageWebhooks\": false,\n    \"pilotCertProvider\": \"istiod\",\n    \"priorityClassName\": \"\",\n    \"prometheusNamespace\": \"istio-system\",\n    \"proxy\": {\n      \"accessLogFile\": \"/dev/stdout\",\n      \"accessLogFormat\": \"{ \\\"authority\\\": \\\"%REQ(:AUTHORITY)%\\\", \\\"bytes_received\\\": %BYTES_RECEIVED%, \\\"bytes_sent\\\": %BYTES_SENT%, \\\"downstream_local_address\\\": \\\"%DOWNSTREAM_LOCAL_ADDRESS%\\\", \\\"downstream_peer_cert_v_end\\\": \\\"%DOWNSTREAM_PEER_CERT_V_END%\\\", \\\"downstream_peer_cert_v_start\\\": \\\"%DOWNSTREAM_PEER_CERT_V_START%\\\", \\\"downstream_remote_address\\\": \\\"%DOWNSTREAM_REMOTE_ADDRESS%\\\", \\\"downstream_tls_cipher\\\": \\\"%DOWNSTREAM_TLS_CIPHER%\\\", \\\"downstream_tls_version\\\": \\\"%DOWNSTREAM_TLS_VERSION%\\\", \\\"duration\\\": %DURATION%, \\\"hostname\\\": \\\"%HOSTNAME%\\\", \\\"istio_policy_status\\\": \\\"%DYNAMIC_METADATA(istio.mixer:status)%\\\", \\\"method\\\": \\\"%REQ(:METHOD)%\\\", \\\"path\\\": \\\"%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%\\\", \\\"protocol\\\": \\\"%PROTOCOL%\\\", \\\"request_duration\\\": %REQUEST_DURATION%, \\\"request_id\\\": \\\"%REQ(X-REQUEST-ID)%\\\", \\\"requested_server_name\\\": \\\"%REQUESTED_SERVER_NAME%\\\", \\\"response_code\\\": \\\"%RESPONSE_CODE%\\\", \\\"response_duration\\\": %RESPONSE_DURATION%, \\\"response_tx_duration\\\": %RESPONSE_TX_DURATION%, \\\"response_flags\\\": \\\"%RESPONSE_FLAGS%\\\", \\\"route_name\\\": \\\"%ROUTE_NAME%\\\", \\\"start_time\\\": \\\"%START_TIME%\\\", \\\"upstream_cluster\\\": \\\"%UPSTREAM_CLUSTER%\\\", \\\"upstream_host\\\": \\\"%UPSTREAM_HOST%\\\", \\\"upstream_local_address\\\": \\\"%UPSTREAM_LOCAL_ADDRESS%\\\", \\\"upstream_service_time\\\": %RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%, \\\"upstream_transport_failure_reason\\\": \\\"%UPSTREAM_TRANSPORT_FAILURE_REASON%\\\", \\\"user_agent\\\": \\\"%REQ(USER-AGENT)%\\\", \\\"x_forwarded_for\\\": \\\"%REQ(X-FORWARDED-FOR)%\\\" } \\n\",\n      \"autoInject\": \"disabled\",\n      \"clusterDomain\": \"cluster.local\",\n      \"componentLogLevel\": \"misc:error\",\n      \"dnsRefreshRate\": \"300s\",\n      \"enableCoreDump\": false,\n      \"excludeIPRanges\": \"\",\n      \"excludeInboundPorts\": \"8444\",\n      \"excludeOutboundPorts\": \"\",\n      \"holdApplicationUntilProxyStarts\": false,\n      \"image\": \"registry.redhat.io/openshift-service-mesh/proxyv2-rhel8@sha256:e7acaa5d4a7f265cba1ad4f53859833390c5da1af31bb8546a5ae19f064a7dde\",\n      \"includeIPRanges\": \"*\",\n      \"includeInboundPorts\": \"*\",\n      \"logLevel\": \"warning\",\n      \"privileged\": false,\n      \"readinessFailureThreshold\": 30,\n      \"readinessInitialDelaySeconds\": 1,\n      \"readinessPeriodSeconds\": 2,\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"2000m\",\n          \"memory\": \"1024Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"10m\",\n          \"memory\": \"128Mi\"\n        }\n      },\n      \"statusPort\": 15021,\n      \"tracer\": \"zipkin\"\n    },\n    \"proxy_init\": {\n      \"image\": \"\",\n      \"resources\": {\n        \"limits\": {\n          \"cpu\": \"2000m\",\n          \"memory\": \"1024Mi\"\n        },\n        \"requests\": {\n          \"cpu\": \"10m\",\n          \"memory\": \"10Mi\"\n        }\n      }\n    },\n    \"remotePilotAddress\": \"\",\n    \"sds\": {\n      \"token\": {\n        \"aud\": \"istio-ca\"\n      }\n    },\n    \"sts\": {\n      \"servicePort\": 0\n    },\n    \"tag\": \"2.1.6\",\n    \"tls\": {\n      \"cipherSuites\": [],\n      \"ecdhCurves\": [],\n      \"maxProtocolVersion\": \"\",\n      \"minProtocolVersion\": \"\"\n    },\n    \"tracer\": {\n      \"datadog\": {\n        \"address\": \"$(HOST_IP):8126\"\n      },\n      \"lightstep\": {\n        \"accessToken\": \"\",\n        \"address\": \"\"\n      },\n      \"stackdriver\": {\n        \"debug\": false,\n        \"maxNumberOfAnnotations\": 200,\n        \"maxNumberOfAttributes\": 200,\n        \"maxNumberOfMessageEvents\": 200\n      },\n      \"zipkin\": {\n        \"address\": \"\"\n      }\n    },\n    \"trustDomain\": \"\",\n    \"useMCP\": false\n  },\n  \"istio_cni\": {\n    \"enabled\": true,\n    \"istio_cni_network\": \"v2-1-istio-cni\"\n  },\n  \"revision\": \"basic\",\n  \"sidecarInjectorWebhook\": {\n    \"alwaysInjectSelector\": [],\n    \"enableNamespacesByDefault\": false,\n    \"injectedAnnotations\": {},\n    \"neverInjectSelector\": [],\n    \"objectSelector\": {\n      \"autoInject\": true,\n      \"enabled\": false\n    },\n    \"rewriteAppHTTPProbe\": true,\n    \"templates\": {},\n    \"useLegacySelectors\": true\n  }\n}"},"kind":"ConfigMap","metadata":{"annotations":{"maistra.io/mesh-generation":"2.3.1-1-2"},"labels":{"app.kubernetes.io/component":"istio-discovery","app.kubernetes.io/instance":"istio-system","app.kubernetes.io/managed-by":"maistra-istio-operator","app.kubernetes.io/name":"istio-discovery","app.kubernetes.io/part-of":"istio","app.kubernetes.io/version":"2.3.1-1-2","istio.io/rev":"basic","maistra-version":"2.1.6","maistra.io/owner":"istio-system","maistra.io/owner-name":"basic","release":"istio"},"name":"istio-sidecar-injector-basic","namespace":"istio-system","ownerReferences":[{"apiVersion":"maistra.io/v2","blockOwnerDeletion":true,"controller":true,"kind":"ServiceMeshControlPlane","name":"basic","uid":"0c79eb74-854c-4f98-85c6-5955e78fd93e"}]}}
      maistra.io/mesh-generation: 2.3.1-1-2
    creationTimestamp: "2023-03-03T20:02:56Z"
    labels:
      app.kubernetes.io/component: istio-discovery
      app.kubernetes.io/instance: istio-system
      app.kubernetes.io/managed-by: maistra-istio-operator
      app.kubernetes.io/name: istio-discovery
      app.kubernetes.io/part-of: istio
      app.kubernetes.io/version: 2.3.1-1-2
      istio.io/rev: basic
      maistra-version: 2.1.6
      maistra.io/owner: istio-system
      maistra.io/owner-name: basic
      release: istio
    name: istio-sidecar-injector-basic
    namespace: istio-system
    ownerReferences:
    - apiVersion: maistra.io/v2
      blockOwnerDeletion: true
      controller: true
      kind: ServiceMeshControlPlane
      name: basic
      uid: 0c79eb74-854c-4f98-85c6-5955e78fd93e
    resourceVersion: "34421"
    uid: 5ebdedc9-4773-446b-8b12-c142ace621e3
- apiVersion: v1
  data:
    sampling: '{"default_strategy":{"param":1,"type":"probabilistic"}}'
  kind: ConfigMap
  metadata:
    creationTimestamp: "2023-03-03T20:03:23Z"
    labels:
      app: jaeger
      app.kubernetes.io/component: sampling-configuration
      app.kubernetes.io/instance: jaeger
      app.kubernetes.io/managed-by: jaeger-operator
      app.kubernetes.io/name: jaeger-sampling-configuration
      app.kubernetes.io/part-of: jaeger
    name: jaeger-sampling-configuration
    namespace: istio-system
    ownerReferences:
    - apiVersion: jaegertracing.io/v1
      controller: true
      kind: Jaeger
      name: jaeger
      uid: 2e9a1b7a-585c-4524-8ba7-534195634a88
    resourceVersion: "34953"
    uid: da700740-14c3-4b77-b92c-c439ad2cb56f
- apiVersion: v1
  data:
    service-ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDUTCCAjmgAwIBAgIIIqPvxmVyEpIwDQYJKoZIhvcNAQELBQAwNjE0MDIGA1UE
      Awwrb3BlbnNoaWZ0LXNlcnZpY2Utc2VydmluZy1zaWduZXJAMTY3Nzg3MjE5ODAe
      Fw0yMzAzMDMxOTM2MzhaFw0yNTA1MDExOTM2MzlaMDYxNDAyBgNVBAMMK29wZW5z
      aGlmdC1zZXJ2aWNlLXNlcnZpbmctc2lnbmVyQDE2Nzc4NzIxOTgwggEiMA0GCSqG
      SIb3DQEBAQUAA4IBDwAwggEKAoIBAQC3qqtNZUQNBty1ZV4PbUqtng46IDGJ0K/v
      u9tIb3yqN3RrEh2fUCJm2Vg/kRn4bvDd5ddwVr26ZSUA/tGiB+M6/HNTkGZDFKkf
      kerbTvJHo+zZvN4oYNU/eyNkbbaCqz1i9qgxWA7vYObqNB8gbmwgsoeXcR477HYv
      eHns0bGwttngG7lgiek6O3iyh0G/U3h6CivvrjJ0YAdXVgFJ9B72rI7IgPJL9DYe
      jUyDUAylhy8P4LztbWAbc/i/DjLSLJiqPBQaiInvP4nL4AU07J+U4e8nnE2cwX+t
      47qD5m3RwgZDsr4QACfJNeUhQj7k1UvwBipi59uueI42H3uq8N0DAgMBAAGjYzBh
      MA4GA1UdDwEB/wQEAwICpDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQwu7Y8
      RFQ9I551FnlazJfIOZm9MTAfBgNVHSMEGDAWgBQwu7Y8RFQ9I551FnlazJfIOZm9
      MTANBgkqhkiG9w0BAQsFAAOCAQEAPXjY1utGBQL66kqDzpFOVG7FI9R5y2PB7P8F
      wTKD/FbIPDmswiV5tAdMdh17pYOwKZAgHWtNQGwvAr0SX+ZiVPjv6jwUKg8yp5mI
      6JT+25Z+hLscCUDk5P7ysjXm/gPG3zkXu/ZlXs9Fd90MEP/egLLdXUhHBf7kBtKH
      0X1dFSMq0lEFTssbywKROE0TF8cd+/cNMlEYrRiEU6p/zAOhY0p66gnIsJKPTbnt
      +UxSN+AUfnUUYYedw3ct8v5ruIF1KVBfSoV8YQ5zexKDWbCDkkzu+qmw8fbkUHgC
      fToxbhkNhF+62rXnwzQXE8x3ywTCjneo4VBFfBuNwdH2P/vf2A==
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      service.beta.openshift.io/inject-cabundle: "true"
    creationTimestamp: "2023-03-03T20:03:23Z"
    labels:
      app: jaeger
      app.kubernetes.io/component: service-ca-configmap
      app.kubernetes.io/instance: jaeger
      app.kubernetes.io/managed-by: jaeger-operator
      app.kubernetes.io/name: jaeger-service-ca
      app.kubernetes.io/part-of: jaeger
    name: jaeger-service-ca
    namespace: istio-system
    resourceVersion: "35023"
    uid: 2fdb035e-1ee7-4afa-98e6-9f60b86d5f17
- apiVersion: v1
  data:
    ui: '{"menu":[{"items":[{"label":"Documentation","url":"https://access.redhat.com/documentation/en-us/openshift_container_platform/4.9/html/distributed_tracing/index"}],"label":"About"},{"anchorTarget":"_self","label":"Log
      Out","url":"/oauth/sign_in"}]}'
  kind: ConfigMap
  metadata:
    creationTimestamp: "2023-03-03T20:03:23Z"
    labels:
      app: jaeger
      app.kubernetes.io/component: ui-configuration
      app.kubernetes.io/instance: jaeger
      app.kubernetes.io/managed-by: jaeger-operator
      app.kubernetes.io/name: jaeger-ui-configuration
      app.kubernetes.io/part-of: jaeger
    name: jaeger-ui-configuration
    namespace: istio-system
    ownerReferences:
    - apiVersion: jaegertracing.io/v1
      controller: true
      kind: Jaeger
      name: jaeger
      uid: 2e9a1b7a-585c-4524-8ba7-534195634a88
    resourceVersion: "34951"
    uid: bb31bbbb-87c0-4f79-ac2c-55f2804911d3
- apiVersion: v1
  data:
    config.yaml: |
      additional_display_details:
      - annotation: kiali.io/api-spec
        icon_annotation: kiali.io/api-type
        title: API Documentation
      api:
        namespaces:
          exclude: []
          label_selector: kiali.io/member-of=istio-system
      auth:
        openid:
          additional_request_params: {}
          api_proxy: ''
          api_proxy_ca_data: ''
          api_token: id_token
          authentication_timeout: 300
          authorization_endpoint: ''
          client_id: ''
          disable_rbac: false
          http_proxy: ''
          https_proxy: ''
          insecure_skip_verify_tls: false
          issuer_uri: ''
          scopes:
          - openid
          - profile
          - email
          username_claim: sub
        openshift:
          client_id_prefix: kiali
        strategy: openshift
      custom_dashboards: []
      deployment:
        accessible_namespaces:
        - istio-system
        - knative-serving
        - user-ns
        affinity:
          node: {}
          pod: {}
          pod_anti: {}
        hpa:
          api_version: autoscaling/v2beta2
          spec: {}
        image_name: registry.redhat.io/openshift-service-mesh/kiali-rhel8@sha256
        image_pull_policy: ''
        image_pull_secrets: []
        image_version: 13442c85948c6ef194b3c0a5547f6deb44e6318b2326a563cd324b50ca75d9dd
        ingress:
          additional_labels: {}
        ingress_enabled: true
        instance_name: kiali
        logger:
          log_format: text
          log_level: info
          sampler_rate: '1'
          time_field_format: 2006-01-02T15:04:05Z07:00
        namespace: istio-system
        node_selector: {}
        pod_annotations: {}
        pod_labels: {}
        priority_class_name: ''
        replicas: 1
        resources:
          limits:
            memory: 1Gi
          requests:
            cpu: 10m
            memory: 64Mi
        secret_name: kiali
        service_annotations: {}
        tolerations: []
        version_label: 13442c85948c6ef194b3c0a5547f6deb44e6318b2326a563cd324b50ca75XXX
        view_only_mode: false
      extensions:
        iter_8:
          enabled: false
      external_services:
        custom_dashboards:
          discovery_auto_threshold: 10
          discovery_enabled: auto
          enabled: true
          is_core: false
          namespace_label: ''
          prometheus:
            auth:
              ca_file: ''
              insecure_skip_verify: false
              password: ''
              token: ''
              type: none
              use_kiali_token: false
              username: ''
            health_check_url: ''
            url: ''
        grafana:
          auth:
            ca_file: /kiali-cabundle/service-ca.crt
            insecure_skip_verify: false
            password: CbVF92ighKYpdDj40iadfLN6isf57ym+5mID2gHeFcaGKMwM4Tk9wAohaWtg66scPYiBzuV01poB3BSw54SdRuryK8wrWKd70CGhcviGZzzWdvHqDcLKmgA1XYoEz6Si55pQQCpC3Opsp7hH8H9O31wdhg3LG2xQwCiukw7XUSZRxlTiWirpMprPkg4WgNB+02HIF+Y8+cYdeRdGsZvd0FV9/lwC0eEH3jzK22yad0d1Mf2HvjxnLM/UEKVxi/or60VI0H9nGWN+3Esv44/7bkDcjYNM8dYJiaJ+4DTYsGp7lniIEzAw1ii4CxnZCgWcJ+K1oOJ4z/MFyJ4liVvm
            token: ''
            type: basic
            use_kiali_token: false
            username: internal
          dashboards:
          - name: Istio Service Dashboard
            variables:
              namespace: var-namespace
              service: var-service
          - name: Istio Workload Dashboard
            variables:
              namespace: var-namespace
              workload: var-workload
          - name: Istio Mesh Dashboard
          - name: Istio Control Plane Dashboard
          - name: Istio Performance Dashboard
          - name: Istio Wasm Extension Dashboard
          enabled: true
          health_check_url: ''
          in_cluster_url: https://grafana.istio-system.svc:3000
          is_core: false
          url: https://grafana-istio-system.apps.ci-ln-4zhdf4b-72292.origin-ci-int-gce.dev.rhcloud.com
        istio:
          component_status:
            components:
            - app_label: istiod
              is_core: true
              is_proxy: false
              namespace: ''
            - app_label: istio-ingressgateway
              is_core: true
              is_proxy: true
              namespace: ''
            - app_label: istio-egressgateway
              is_core: false
              is_proxy: true
              namespace: ''
            enabled: true
          config_map_name: istio-basic
          envoy_admin_local_port: 15000
          istio_identity_domain: svc.cluster.local
          istio_injection_annotation: sidecar.istio.io/inject
          istio_sidecar_annotation: sidecar.istio.io/status
          istio_sidecar_injector_config_map_name: istio-sidecar-injector-basic
          istiod_deployment_name: istiod-basic
          url_service_version: http://istiod-basic.istio-system:15014/version
        prometheus:
          auth:
            ca_file: /kiali-cabundle/service-ca.crt
            insecure_skip_verify: false
            password: CbVF92ighKYpdDj40iadfLN6isf57ym+5mID2gHeFcaGKMwM4Tk9wAohaWtg66scPYiBzuV01poB3BSw54SdRuryK8wrWKd70CGhcviGZzzWdvHqDcLKmgA1XYoEz6Si55pQQCpC3Opsp7hH8H9O31wdhg3LG2xQwCiukw7XUSZRxlTiWirpMprPkg4WgNB+02HIF+Y8+cYdeRdGsZvd0FV9/lwC0eEH3jzK22yad0d1Mf2HvjxnLM/UEKVxi/or60VI0H9nGWN+3Esv44/7bkDcjYNM8dYJiaJ+4DTYsGp7lniIEzAw1ii4CxnZCgWcJ+K1oOJ4z/MFyJ4liVvm
            token: ''
            type: basic
            use_kiali_token: false
            username: internal
          cache_duration: 7
          cache_enabled: true
          cache_expiration: 300
          health_check_url: ''
          is_core: true
          url: https://prometheus.istio-system.svc:9090
        tracing:
          auth:
            ca_file: /kiali-cabundle/service-ca.crt
            insecure_skip_verify: false
            password: CbVF92ighKYpdDj40iadfLN6isf57ym+5mID2gHeFcaGKMwM4Tk9wAohaWtg66scPYiBzuV01poB3BSw54SdRuryK8wrWKd70CGhcviGZzzWdvHqDcLKmgA1XYoEz6Si55pQQCpC3Opsp7hH8H9O31wdhg3LG2xQwCiukw7XUSZRxlTiWirpMprPkg4WgNB+02HIF+Y8+cYdeRdGsZvd0FV9/lwC0eEH3jzK22yad0d1Mf2HvjxnLM/UEKVxi/or60VI0H9nGWN+3Esv44/7bkDcjYNM8dYJiaJ+4DTYsGp7lniIEzAw1ii4CxnZCgWcJ+K1oOJ4z/MFyJ4liVvm
            token: ''
            type: basic
            use_kiali_token: false
            username: internal
          enabled: true
          health_check_url: ''
          in_cluster_url: https://jaeger-query.istio-system.svc
          is_core: false
          namespace: istio-system
          namespace_selector: true
          service: ''
          url: https://jaeger-istio-system.apps.ci-ln-4zhdf4b-72292.origin-ci-int-gce.dev.rhcloud.com
          use_grpc: false
          whitelist_istio_system:
          - jaeger-query
          - istio-ingressgateway
      health_config:
        rate: []
      identity:
        cert_file: /kiali-cert/tls.crt
        private_key_file: /kiali-cert/tls.key
      installation_tag: Kiali [istio-system]
      istio_labels:
        app_label_name: app
        injection_label_name: istio-injection
        version_label_name: version
      istio_namespace: istio-system
      kiali_feature_flags:
        istio_injection_action: true
        ui_defaults:
          graph:
            find_options:
            - description: 'Find: slow edges (> 1s)'
              expression: rt > 1000
            - description: 'Find: unhealthy nodes'
              expression: '! healthy'
            - description: 'Find: unknown nodes'
              expression: name = unknown
            hide_options:
            - description: 'Hide: healthy nodes'
              expression: healthy
            - description: 'Hide: unknown nodes'
              expression: name = unknown
          metrics_per_refresh: 1m
          namespaces: []
          refresh_interval: 15s
      kubernetes_config:
        burst: 200
        cache_duration: 300
        cache_enabled: true
        cache_istio_types:
        - AuthorizationPolicy
        - DestinationRule
        - EnvoyFilter
        - Gateway
        - PeerAuthentication
        - RequestAuthentication
        - ServiceEntry
        - Sidecar
        - VirtualService
        - WorkloadEntry
        - WorkloadGroup
        cache_namespaces:
        - .*
        cache_token_namespace_duration: 10
        excluded_workloads:
        - CronJob
        - DeploymentConfig
        - Job
        - ReplicationController
        qps: 175
      login_token:
        expiration_seconds: 86400
        signing_key: secret:kiali-signing-key:key
      server:
        address: ''
        audit_log: true
        cors_allow_all: false
        gzip_enabled: true
        metrics_enabled: true
        metrics_port: 9090
        port: 20001
        web_fqdn: ''
        web_history_mode: ''
        web_port: ''
        web_root: /
        web_schema: ''
      version: v1.36
  kind: ConfigMap
  metadata:
    creationTimestamp: "2023-03-03T20:04:22Z"
    labels:
      app: kiali
      app.kubernetes.io/instance: kiali
      app.kubernetes.io/name: kiali
      app.kubernetes.io/part-of: kiali
      app.kubernetes.io/version: 13442c85948c6ef194b3c0a5547f6deb44e6318b2326a563cd324b50ca75XXX
      version: 13442c85948c6ef194b3c0a5547f6deb44e6318b2326a563cd324b50ca75XXX
    name: kiali
    namespace: istio-system
    ownerReferences:
    - apiVersion: kiali.io/v1alpha1
      kind: Kiali
      name: kiali
      uid: 6d4caa5f-fa28-4919-aedf-25634891cb1c
    resourceVersion: "36147"
    uid: f1fc1061-4c07-4268-8502-bd16e094f4a4
- apiVersion: v1
  data:
    service-ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDUTCCAjmgAwIBAgIIIqPvxmVyEpIwDQYJKoZIhvcNAQELBQAwNjE0MDIGA1UE
      Awwrb3BlbnNoaWZ0LXNlcnZpY2Utc2VydmluZy1zaWduZXJAMTY3Nzg3MjE5ODAe
      Fw0yMzAzMDMxOTM2MzhaFw0yNTA1MDExOTM2MzlaMDYxNDAyBgNVBAMMK29wZW5z
      aGlmdC1zZXJ2aWNlLXNlcnZpbmctc2lnbmVyQDE2Nzc4NzIxOTgwggEiMA0GCSqG
      SIb3DQEBAQUAA4IBDwAwggEKAoIBAQC3qqtNZUQNBty1ZV4PbUqtng46IDGJ0K/v
      u9tIb3yqN3RrEh2fUCJm2Vg/kRn4bvDd5ddwVr26ZSUA/tGiB+M6/HNTkGZDFKkf
      kerbTvJHo+zZvN4oYNU/eyNkbbaCqz1i9qgxWA7vYObqNB8gbmwgsoeXcR477HYv
      eHns0bGwttngG7lgiek6O3iyh0G/U3h6CivvrjJ0YAdXVgFJ9B72rI7IgPJL9DYe
      jUyDUAylhy8P4LztbWAbc/i/DjLSLJiqPBQaiInvP4nL4AU07J+U4e8nnE2cwX+t
      47qD5m3RwgZDsr4QACfJNeUhQj7k1UvwBipi59uueI42H3uq8N0DAgMBAAGjYzBh
      MA4GA1UdDwEB/wQEAwICpDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQwu7Y8
      RFQ9I551FnlazJfIOZm9MTAfBgNVHSMEGDAWgBQwu7Y8RFQ9I551FnlazJfIOZm9
      MTANBgkqhkiG9w0BAQsFAAOCAQEAPXjY1utGBQL66kqDzpFOVG7FI9R5y2PB7P8F
      wTKD/FbIPDmswiV5tAdMdh17pYOwKZAgHWtNQGwvAr0SX+ZiVPjv6jwUKg8yp5mI
      6JT+25Z+hLscCUDk5P7ysjXm/gPG3zkXu/ZlXs9Fd90MEP/egLLdXUhHBf7kBtKH
      0X1dFSMq0lEFTssbywKROE0TF8cd+/cNMlEYrRiEU6p/zAOhY0p66gnIsJKPTbnt
      +UxSN+AUfnUUYYedw3ct8v5ruIF1KVBfSoV8YQ5zexKDWbCDkkzu+qmw8fbkUHgC
      fToxbhkNhF+62rXnwzQXE8x3ywTCjneo4VBFfBuNwdH2P/vf2A==
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      service.beta.openshift.io/inject-cabundle: "true"
    creationTimestamp: "2023-03-03T20:04:23Z"
    labels:
      app: kiali
      app.kubernetes.io/instance: kiali
      app.kubernetes.io/name: kiali
      app.kubernetes.io/part-of: kiali
      app.kubernetes.io/version: 13442c85948c6ef194b3c0a5547f6deb44e6318b2326a563cd324b50ca75XXX
      version: 13442c85948c6ef194b3c0a5547f6deb44e6318b2326a563cd324b50ca75XXX
    name: kiali-cabundle
    namespace: istio-system
    ownerReferences:
    - apiVersion: kiali.io/v1alpha1
      kind: Kiali
      name: kiali
      uid: 6d4caa5f-fa28-4919-aedf-25634891cb1c
    resourceVersion: "35765"
    uid: 5194dc9c-5b0e-4c47-b97c-c1e99237a541
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDMjCCAhqgAwIBAgIIS5Qba16bZvUwDQYJKoZIhvcNAQELBQAwNzESMBAGA1UE
      CxMJb3BlbnNoaWZ0MSEwHwYDVQQDExhrdWJlLWFwaXNlcnZlci1sYi1zaWduZXIw
      HhcNMjMwMzAzMTkyMjQ5WhcNMzMwMjI4MTkyMjQ5WjA3MRIwEAYDVQQLEwlvcGVu
      c2hpZnQxITAfBgNVBAMTGGt1YmUtYXBpc2VydmVyLWxiLXNpZ25lcjCCASIwDQYJ
      KoZIhvcNAQEBBQADggEPADCCAQoCggEBANI3hbyr57WnhgllfRO+/bBdWnRkWVMw
      E7NSLQPQpkvfG7V7B72b8bgSgSI73jC0WIkvEDIwbqhgIX7Z4j5a6KF4UQq8uxQh
      Z5nvLiRgB5HdWtbPfcETLkZPTGCRSDCkWyK990+V6j9abi0qLRq90gAWoNNBPPbM
      dmQ9hsDPkh1Pd3HNke82vWD5fjHu7iHO4NQi7GhhlM82Qc7E9wL2D2UtLhe2WHKI
      UCrMvprtwGR9bzrVQ6rzQESo9NDkawTTaKL7Tz/JDdCKZJn/v0RUTWL9HpXXST5n
      bnWZaC1k32wC2rZ7OcqF8wwSWk+lA/bDT4JsGYJWQKg3pD5m6THCfxECAwEAAaNC
      MEAwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFGP4
      K7bJV8g7EIQaRMsVq/jf9OA8MA0GCSqGSIb3DQEBCwUAA4IBAQC9nBVlIjHVmhf6
      N5UVq6giwP3yIxKORmUfxZijNV+67qFg12bKTIhOqkmLCwsqj3K4qsuviSKTjXMd
      ypcqP39xTgHfsljGjICPDJx7WrUMfkUbqCJ8Xp/LCbjyn7G4M7QPlz7EnsjdGi8J
      m76aDQBHDSRPKjpo/9mHdw7KuGnQIyhMr1FKtixEW/x2HTGe5yIeqoPMraq0XWH8
      8w+EKL+FtECqHCyjMl2SWcaLbjdDWIrpZLmBp8PEkamxNCtcRKXwbksTl1haC1id
      D6bXwJiqUJaleARqjEQ6NbBZP0hV3NXpjp3QY8KtSmXXU0EDhADAEL1oD8/DliGW
      kSp36pkI
      -----END CERTIFICATE-----
      -----BEGIN CERTIFICATE-----
      MIIDQDCCAiigAwIBAgIIM5KWNucqkfkwDQYJKoZIhvcNAQELBQAwPjESMBAGA1UE
      CxMJb3BlbnNoaWZ0MSgwJgYDVQQDEx9rdWJlLWFwaXNlcnZlci1sb2NhbGhvc3Qt
      c2lnbmVyMB4XDTIzMDMwMzE5MjI0OVoXDTMzMDIyODE5MjI0OVowPjESMBAGA1UE
      CxMJb3BlbnNoaWZ0MSgwJgYDVQQDEx9rdWJlLWFwaXNlcnZlci1sb2NhbGhvc3Qt
      c2lnbmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxKFEtsXItPyd
      slxiYpxayCDPH8wSfqHMNrPXrwtwpqxoEmVtjxYg9MOcX1mi+jJk3z4OR+VHRfT1
      z+GajMsqoawxzqnwiho8+RWyKjp1taxDyQ7r3o9WXe54EWflFbCwsBAzqNpWeBb4
      izLYI3JpsIMIzUpl06EJkieXPhEYOGPrumIvNFgwOrQTSjGX6qvK5mtwdQD2jBgH
      +uOrUe63udDtb+ZqGVej5qWsLzEsF2Bs8viNYutFuYwdfqBpcrOnoYo4PUZJDEAh
      PLrisD7MPk5Syvnw3EdPhOneaNmaIKfKq7D4IlZKujaEJpo6ByAhBF+/fDDYHIAK
      w0alPIg7/QIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAqQwDwYDVR0TAQH/BAUwAwEB
      /zAdBgNVHQ4EFgQUXFWIZlIKWNGpJ7n4sGlpOdGu4NIwDQYJKoZIhvcNAQELBQAD
      ggEBAKysi0+y4WGiLu2crJ0mEbbsziTsjSb4KoqeV5pKNxfuima3sUWvhyiuvXRZ
      hQfEC18oEcEMu1FM2Vm7EOw4F/7RUM7KZCb52pUw6/9BzAMnwcH1Fk2eY6gLmN0A
      Sh3yep6bPl7Ao3+epxH4ch8Jcqy2HC3wsRjYA2Q5W9pbZo+eWcwEbZNF+H13Yysi
      D9HIENUJ2Zou7hvX+Qy//WqX+RbB00t1JVevbHMzSU2xE4x+rYzhlKZXMbAezZvd
      AZ9tVJ7HhO/x89/OAIkZupT0j9Ul1uZ5rg21OWRSQxvB9nzzaAi2h5T57D8Y7rOB
      PE7e2vSU/CSepEf09JLSc60OIpg=
      -----END CERTIFICATE-----
      -----BEGIN CERTIFICATE-----
      MIIDTDCCAjSgAwIBAgIIY1QUvEs9t0MwDQYJKoZIhvcNAQELBQAwRDESMBAGA1UE
      CxMJb3BlbnNoaWZ0MS4wLAYDVQQDEyVrdWJlLWFwaXNlcnZlci1zZXJ2aWNlLW5l
      dHdvcmstc2lnbmVyMB4XDTIzMDMwMzE5MjI0OVoXDTMzMDIyODE5MjI0OVowRDES
      MBAGA1UECxMJb3BlbnNoaWZ0MS4wLAYDVQQDEyVrdWJlLWFwaXNlcnZlci1zZXJ2
      aWNlLW5ldHdvcmstc2lnbmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC
      AQEAvh2Yl2fNbgSevOuIySld2bid36Bx4WNGU3zLHeytDG/MXehRw5CYN7Rygvti
      PYFgln5RheUU2TebB3QfrvU7UNRbpy2gEkL1N1bH0dyeM0qldk0/GOT5k1eK4ve/
      zaepnKvlc8hUAC8iWiAWQx04GBL1nNTiE8Fb1I8gADqE7CjGzPdtlt35+O4kbpya
      A2zw7IZV/qDE3Cv4KQZn2e2/a7s+M2rzscB8lsXN3dxbpOHwK+TM1gapzRtXfvJG
      h5vOBv/1/kz3RYgDry4FOkwnABwmQSdFMjA3UxKGiKsRzY6s4wowBiBH37Z/YLf5
      uHQPNO9lKyM4HmxOcW9JTNcfdQIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAqQwDwYD
      VR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUEaW3MB+JQAbfp62M88FsDLWG2DkwDQYJ
      KoZIhvcNAQELBQADggEBAE06MEmT7XSYxu6IXevwJ7r3D5MZUy60NhOEwyZ4s3GR
      si0fZpGeeqxLu4dm6n2Rjmvif4Z3YTZ/ZEUQWrXB3+1OKZ+an51zn2VkYD/9Xi+d
      2S79EJBFEGPP3fxaYs/McMQNWXzjzq4vIEUG8N6tZ49Pvlen8Ujk+AnZiMHUE4wu
      PT3XMDQBai5JeeAXYUmSrr3G4TANbN1m1RNUe1F+I3vlIUYMS0JRDEfIz1209jue
      NDmYL8RFXvJFPWVHaOoCr/xDYV0Pea8zLKA4/CLrIyXBgjujEEAeOQscfhHxdSzj
      mdZrMXvb31oGuBmR9OkfFQMJknHMD044gcF9J/gOYm4=
      -----END CERTIFICATE-----
      -----BEGIN CERTIFICATE-----
      MIIDlzCCAn+gAwIBAgIIaYCHkNWAzQwwDQYJKoZIhvcNAQELBQAwWTFXMFUGA1UE
      AwxOb3BlbnNoaWZ0LWt1YmUtYXBpc2VydmVyLW9wZXJhdG9yX2xvY2FsaG9zdC1y
      ZWNvdmVyeS1zZXJ2aW5nLXNpZ25lckAxNjc3ODcyMTk4MB4XDTIzMDMwMzE5MzYz
      N1oXDTMzMDIyODE5MzYzOFowWTFXMFUGA1UEAwxOb3BlbnNoaWZ0LWt1YmUtYXBp
      c2VydmVyLW9wZXJhdG9yX2xvY2FsaG9zdC1yZWNvdmVyeS1zZXJ2aW5nLXNpZ25l
      ckAxNjc3ODcyMTk4MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtVOS
      NLJSk+K4vFdJty58/zEILiLDJArIWCPXojD8B8pZDGp13HTDsh4J2nrkkAKdEVq9
      GZNgRwQd/LUkWorzh4WEHaoOrXO1c78LLRSmUDZ5wrDyJiY0Fc9dDFyd6kNL1S91
      55rgln3NV6k/NJ04a/bDnYNFW5t9QRatxfNTHmbHektiWvW3Bi4TiQuctkCJohLM
      mbo2WfXChV0wKjnVarG1uMUMFVnp7l80XrnAF7N+Ov+2md9HEFpTQpR+7s3tYLC6
      LI5R0YVDtrl1viATdiWlslYTW9v7OMNklm4U9pNhzYdS2av4kfv7kyi5KyIOpGl9
      zhHZBz3E7PLRd67MTwIDAQABo2MwYTAOBgNVHQ8BAf8EBAMCAqQwDwYDVR0TAQH/
      BAUwAwEB/zAdBgNVHQ4EFgQUK6c6XVeechE9tRPUJT1UwzlSZigwHwYDVR0jBBgw
      FoAUK6c6XVeechE9tRPUJT1UwzlSZigwDQYJKoZIhvcNAQELBQADggEBADlxHdjv
      2RejtcZDEmSfMgoCe1A3KPTqAIcpOAUaJWoD0jUDXIQJi/l2GW5X9T5JRtcMRuGT
      biq6hXwaLB8cgSoi0eg7qQ7D+UeyOH/458ogF4ZxVahsirJOuumFeGps+qA1VukB
      IWGGw+fojs+SLMhnI9P1T1JLxeEZ3zYiHmqwwTqgqMrsLJXsJj4y72kkft8BWx20
      sNU0lHXeOWV1+UKKMHesx7eHk5AExSBs6wPFqWXbIjao4E0JYrhcFS+9kTbhTxTh
      rnGd7lWcVZAKtDFk98CPZ4nfhiZDgntij/J0HDSdImtf+lijhgeC+Wucc3SKHd34
      q9hg1fmkL0iVczE=
      -----END CERTIFICATE-----
      -----BEGIN CERTIFICATE-----
      MIIDrzCCApegAwIBAgIIchVY6OtLf5wwDQYJKoZIhvcNAQELBQAwJjEkMCIGA1UE
      AwwbaW5ncmVzcy1vcGVyYXRvckAxNjc3ODcyMjgwMB4XDTIzMDMwMzE5MzgwMFoX
      DTI1MDMwMjE5MzgwMVowRzFFMEMGA1UEAww8Ki5hcHBzLmNpLWxuLTR6aGRmNGIt
      NzIyOTIub3JpZ2luLWNpLWludC1nY2UuZGV2LnJoY2xvdWQuY29tMIIBIjANBgkq
      hkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnHeImZxTwQJnh58R9bMIkXjBAUrcMDaK
      9YtzoDPGhunDuTg+/HYQXh8F+VwmoicHQ3iqrzFcIXS8Sd40wzJnUPTMO/X+KGUB
      LNSfmka//NE4nLLB5fVU6NH9a6Z8+gH+GhTX6yUuHvYMBrapH/8VI+LEpfdHyKxm
      6YcxILclcks1zFL8DEwsFUdIvHmCkfH30jMZhAc4bv/cSYuoNoqdmP7RF7dySLNL
      n2HquGmQ+2EEJijLGRq9si+BvnsgdoKeQ4Q+pray9PrQ+5jWrwX9pW1Z+XE9Ov9M
      9t7/xibNEc1eEw7xysqXAPi7W2GyJpqrDNtNfmLfItH1T6vAKQukuwIDAQABo4G/
      MIG8MA4GA1UdDwEB/wQEAwIFoDATBgNVHSUEDDAKBggrBgEFBQcDATAMBgNVHRMB
      Af8EAjAAMB0GA1UdDgQWBBRuhOhrCA2oOanSnQvfJjGCjwKzSDAfBgNVHSMEGDAW
      gBQm/YxPkX94QrscaRNKATeqf6K1UTBHBgNVHREEQDA+gjwqLmFwcHMuY2ktbG4t
      NHpoZGY0Yi03MjI5Mi5vcmlnaW4tY2ktaW50LWdjZS5kZXYucmhjbG91ZC5jb20w
      DQYJKoZIhvcNAQELBQADggEBAA1t0FDge9NtAH7GL0fGtCHPRQlYrFWKuOrnqJm8
      PTkOPgoHEyxQkEg+PaVftxLPSkP1B9ovQX1llQs5diewfdaFF18X7b9WBC0FMxW3
      D76jtuL0bzUZ7PTK47mh3xgRyj3bqvAGaMLAQ2PCu3bvQeOI2ta1Bwum1yrTohVQ
      LjF8DhaGf105GtTY2JHTHd78Ckcz+ArCYb+4rmWHlFlg7x1SzjSnLjLlI6ywPzil
      3H72JEF47p4N7Vk6PbzDh2LAH2LSbYSa9+Qfgk0uGiGTWHmmuUNPXGSkNVGoDPrP
      YR1YzhH2Y/F+yE2xnc76B5sjzrzS0Orx6b0Z2HdHhfbSLfE=
      -----END CERTIFICATE-----
      -----BEGIN CERTIFICATE-----
      MIIDDDCCAfSgAwIBAgIBATANBgkqhkiG9w0BAQsFADAmMSQwIgYDVQQDDBtpbmdy
      ZXNzLW9wZXJhdG9yQDE2Nzc4NzIyODAwHhcNMjMwMzAzMTkzNzU5WhcNMjUwMzAy
      MTkzODAwWjAmMSQwIgYDVQQDDBtpbmdyZXNzLW9wZXJhdG9yQDE2Nzc4NzIyODAw
      ggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDWdlUuKudtxv5fEO3Hoo0I
      2FyVKaMeyutzteSkH3imaXaO6EmMw3h7Rz40ViY0MZEo/QCy9yfla4+0+eiyg/00
      6bJ7y/mkvYVxXq3wTb6F30TggrZAg9pnDHGEb4k464oJ3zlbTdz4qF25/sBhKwtj
      e4CLtyotiEsqfA40UJQAnMYW4LZIFdyP7Ha14AzQKY3gitJjZvi7v1BYmE2eWqNt
      iB1EA0ow0MXzQv7HUD2bynN+vCpAbCnV4rRR1Cq0iPdQkvYfCymoZ8JyEgjXXHg5
      yFxcSSqdYLMAFVN1oRM9eX9JzXAmjJlC1I/snFkHFQQWoyKeRPt8MMh2034yY3o3
      AgMBAAGjRTBDMA4GA1UdDwEB/wQEAwICpDASBgNVHRMBAf8ECDAGAQH/AgEAMB0G
      A1UdDgQWBBQm/YxPkX94QrscaRNKATeqf6K1UTANBgkqhkiG9w0BAQsFAAOCAQEA
      BhNWHkuSZipEpZ5dF551IBJPlRQ8+ccaoiWkUxO2dZ7BlqJ8z1aGMgcH0CpMIa9I
      +QusJxRDy1QjmDmsHpByD+CukSmuIDVNCfpqP02h/4VS9kXxlAkQ7vDL7f67a8Yt
      dmML6os2mwsgFFQKV8KhxbbYGQZO4qk7X4T0QJRL/utEUPpvb7qGOOwLD2VIGu3+
      vRlyxHNRiylsenRaLxbLoQ84FP06EovF2/JXyf08q8sUdE2LN/SAGmQxG5rrRKAr
      TtblSWo+sxKgMTdA7cwNEYIN6hmXeoMA/+5tbY388cLubd07KDrOk/6GBi/pYcO4
      7XzJPGwg3UEeoIqpmJkU2g==
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2023-03-03T20:02:04Z"
    name: kube-root-ca.crt
    namespace: istio-system
    resourceVersion: "33291"
    uid: a08ca996-61bc-4a61-b963-60f47ed23398
- apiVersion: v1
  data:
    service-ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDUTCCAjmgAwIBAgIIIqPvxmVyEpIwDQYJKoZIhvcNAQELBQAwNjE0MDIGA1UE
      Awwrb3BlbnNoaWZ0LXNlcnZpY2Utc2VydmluZy1zaWduZXJAMTY3Nzg3MjE5ODAe
      Fw0yMzAzMDMxOTM2MzhaFw0yNTA1MDExOTM2MzlaMDYxNDAyBgNVBAMMK29wZW5z
      aGlmdC1zZXJ2aWNlLXNlcnZpbmctc2lnbmVyQDE2Nzc4NzIxOTgwggEiMA0GCSqG
      SIb3DQEBAQUAA4IBDwAwggEKAoIBAQC3qqtNZUQNBty1ZV4PbUqtng46IDGJ0K/v
      u9tIb3yqN3RrEh2fUCJm2Vg/kRn4bvDd5ddwVr26ZSUA/tGiB+M6/HNTkGZDFKkf
      kerbTvJHo+zZvN4oYNU/eyNkbbaCqz1i9qgxWA7vYObqNB8gbmwgsoeXcR477HYv
      eHns0bGwttngG7lgiek6O3iyh0G/U3h6CivvrjJ0YAdXVgFJ9B72rI7IgPJL9DYe
      jUyDUAylhy8P4LztbWAbc/i/DjLSLJiqPBQaiInvP4nL4AU07J+U4e8nnE2cwX+t
      47qD5m3RwgZDsr4QACfJNeUhQj7k1UvwBipi59uueI42H3uq8N0DAgMBAAGjYzBh
      MA4GA1UdDwEB/wQEAwICpDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQwu7Y8
      RFQ9I551FnlazJfIOZm9MTAfBgNVHSMEGDAWgBQwu7Y8RFQ9I551FnlazJfIOZm9
      MTANBgkqhkiG9w0BAQsFAAOCAQEAPXjY1utGBQL66kqDzpFOVG7FI9R5y2PB7P8F
      wTKD/FbIPDmswiV5tAdMdh17pYOwKZAgHWtNQGwvAr0SX+ZiVPjv6jwUKg8yp5mI
      6JT+25Z+hLscCUDk5P7ysjXm/gPG3zkXu/ZlXs9Fd90MEP/egLLdXUhHBf7kBtKH
      0X1dFSMq0lEFTssbywKROE0TF8cd+/cNMlEYrRiEU6p/zAOhY0p66gnIsJKPTbnt
      +UxSN+AUfnUUYYedw3ct8v5ruIF1KVBfSoV8YQ5zexKDWbCDkkzu+qmw8fbkUHgC
      fToxbhkNhF+62rXnwzQXE8x3ywTCjneo4VBFfBuNwdH2P/vf2A==
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      service.beta.openshift.io/inject-cabundle: "true"
    creationTimestamp: "2023-03-03T20:02:05Z"
    name: openshift-service-ca.crt
    namespace: istio-system
    resourceVersion: "33299"
    uid: a1d826c1-3595-47f2-94d2-026858d8f15d
- apiVersion: v1
  data:
    prometheus.yml: |-
      global:
        evaluation_interval: 1m
        scrape_interval: 15s
        scrape_timeout: 10s
      rule_files:
      - /etc/config/recording_rules.yml
      - /etc/config/alerting_rules.yml
      - /etc/config/rules
      - /etc/config/alerts
      scrape_configs:
      - job_name: prometheus
        static_configs:
        - targets:
          - localhost:9090

      # scrape config for API servers
      # config removed
      # scrape config for nodes (kubelet)
      # config removed
      # Scrape config for Kubelet cAdvisor.
      #
      # This is required for Kubernetes 1.7.3 and later, where cAdvisor metrics
      # (those whose names begin with 'container_') have been removed from the
      # Kubelet metrics endpoint.  This job scrapes the cAdvisor endpoint to
      # retrieve those metrics.
      #
      # In Kubernetes 1.7.0-1.7.2, these metrics are only exposed on the cAdvisor
      # HTTP endpoint; use "replacement: /api/v1/nodes/${1}:4194/proxy/metrics"
      # in that case (and ensure cAdvisor's HTTP server hasn't been disabled with
      # the --cadvisor-port=0 Kubelet flag).
      #
      # This job is not necessary and should be removed in Kubernetes 1.6 and
      # earlier versions, or it will cause the metrics to be scraped twice.
      # config removed

      # scrape config for service endpoints.
      - job_name: kubernetes-service-endpoints
        kubernetes_sd_configs:
        - role: endpoints
        relabel_configs:
        - action: keep
          regex: true
          source_labels:
          - __meta_kubernetes_service_annotation_prometheus_io_scrape
        - action: replace
          regex: (https?)
          source_labels:
          - __meta_kubernetes_service_annotation_prometheus_io_scheme
          target_label: __scheme__
        - action: replace
          regex: (.+)
          source_labels:
          - __meta_kubernetes_service_annotation_prometheus_io_path
          target_label: __metrics_path__
        - action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          source_labels:
          - __address__
          - __meta_kubernetes_service_annotation_prometheus_io_port
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: kubernetes_namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_service_name
          target_label: kubernetes_name
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_node_name
          target_label: kubernetes_node
        # MAISTRA-748: Exclude scraping of prometheus itself on the oauth port
        - action: drop
          source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_pod_container_port_number]
          regex: prometheus;3001

      - job_name: kubernetes-service-endpoints-slow
        kubernetes_sd_configs:
        - role: endpoints
        relabel_configs:
        - action: keep
          regex: true
          source_labels:
          - __meta_kubernetes_service_annotation_prometheus_io_scrape_slow
        - action: replace
          regex: (https?)
          source_labels:
          - __meta_kubernetes_service_annotation_prometheus_io_scheme
          target_label: __scheme__
        - action: replace
          regex: (.+)
          source_labels:
          - __meta_kubernetes_service_annotation_prometheus_io_path
          target_label: __metrics_path__
        - action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          source_labels:
          - __address__
          - __meta_kubernetes_service_annotation_prometheus_io_port
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: kubernetes_namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_service_name
          target_label: kubernetes_name
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_node_name
          target_label: kubernetes_node
        # MAISTRA-748: Exclude scraping of prometheus itself on the oauth port
        - action: drop
          source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_pod_container_port_number]
          regex: prometheus;3001
        scrape_interval: 5m
        scrape_timeout: 30s

      - honor_labels: true
        job_name: prometheus-pushgateway
        kubernetes_sd_configs:
        - role: service
        relabel_configs:
        - action: keep
          regex: pushgateway
          source_labels:
          - __meta_kubernetes_service_annotation_prometheus_io_probe

      - job_name: kubernetes-services
        kubernetes_sd_configs:
        - role: service
        metrics_path: /probe
        params:
          module:
          - http_2xx
        relabel_configs:
        - action: keep
          regex: true
          source_labels:
          - __meta_kubernetes_service_annotation_prometheus_io_probe
        - source_labels:
          - __address__
          target_label: __param_target
        - replacement: blackbox
          target_label: __address__
        - source_labels:
          - __param_target
          target_label: instance
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels:
          - __meta_kubernetes_namespace
          target_label: kubernetes_namespace
        - source_labels:
          - __meta_kubernetes_service_name
          target_label: kubernetes_name

      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:  # If first two labels are present, pod should be scraped  by the istio-secure job.
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name
        - action: drop
          regex: Pending|Succeeded|Failed
          source_labels:
          - __meta_kubernetes_pod_phase

      - job_name: kubernetes-pods-slow
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - action: keep
          regex: true
          source_labels:
          - __meta_kubernetes_pod_annotation_prometheus_io_scrape_slow
        - action: replace
          regex: (.+)
          source_labels:
          - __meta_kubernetes_pod_annotation_prometheus_io_path
          target_label: __metrics_path__
        - action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          source_labels:
          - __address__
          - __meta_kubernetes_pod_annotation_prometheus_io_port
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - action: replace
          source_labels:
          - __meta_kubernetes_namespace
          target_label: kubernetes_namespace
        - action: replace
          source_labels:
          - __meta_kubernetes_pod_name
          target_label: kubernetes_pod_name
        - action: drop
          regex: Pending|Succeeded|Failed
          source_labels:
          - __meta_kubernetes_pod_phase
        scrape_interval: 5m
        scrape_timeout: 30s
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","data":{"prometheus.yml":"global:\n  evaluation_interval: 1m\n  scrape_interval: 15s\n  scrape_timeout: 10s\nrule_files:\n- /etc/config/recording_rules.yml\n- /etc/config/alerting_rules.yml\n- /etc/config/rules\n- /etc/config/alerts\nscrape_configs:\n- job_name: prometheus\n  static_configs:\n  - targets:\n    - localhost:9090\n\n# scrape config for API servers\n# config removed\n# scrape config for nodes (kubelet)\n# config removed\n# Scrape config for Kubelet cAdvisor.\n#\n# This is required for Kubernetes 1.7.3 and later, where cAdvisor metrics\n# (those whose names begin with 'container_') have been removed from the\n# Kubelet metrics endpoint.  This job scrapes the cAdvisor endpoint to\n# retrieve those metrics.\n#\n# In Kubernetes 1.7.0-1.7.2, these metrics are only exposed on the cAdvisor\n# HTTP endpoint; use \"replacement: /api/v1/nodes/${1}:4194/proxy/metrics\"\n# in that case (and ensure cAdvisor's HTTP server hasn't been disabled with\n# the --cadvisor-port=0 Kubelet flag).\n#\n# This job is not necessary and should be removed in Kubernetes 1.6 and\n# earlier versions, or it will cause the metrics to be scraped twice.\n# config removed\n\n# scrape config for service endpoints.\n- job_name: kubernetes-service-endpoints\n  kubernetes_sd_configs:\n  - role: endpoints\n  relabel_configs:\n  - action: keep\n    regex: true\n    source_labels:\n    - __meta_kubernetes_service_annotation_prometheus_io_scrape\n  - action: replace\n    regex: (https?)\n    source_labels:\n    - __meta_kubernetes_service_annotation_prometheus_io_scheme\n    target_label: __scheme__\n  - action: replace\n    regex: (.+)\n    source_labels:\n    - __meta_kubernetes_service_annotation_prometheus_io_path\n    target_label: __metrics_path__\n  - action: replace\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n    replacement: $1:$2\n    source_labels:\n    - __address__\n    - __meta_kubernetes_service_annotation_prometheus_io_port\n    target_label: __address__\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n  - action: replace\n    source_labels:\n    - __meta_kubernetes_namespace\n    target_label: kubernetes_namespace\n  - action: replace\n    source_labels:\n    - __meta_kubernetes_service_name\n    target_label: kubernetes_name\n  - action: replace\n    source_labels:\n    - __meta_kubernetes_pod_node_name\n    target_label: kubernetes_node\n  # MAISTRA-748: Exclude scraping of prometheus itself on the oauth port\n  - action: drop\n    source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_pod_container_port_number]\n    regex: prometheus;3001\n\n- job_name: kubernetes-service-endpoints-slow\n  kubernetes_sd_configs:\n  - role: endpoints\n  relabel_configs:\n  - action: keep\n    regex: true\n    source_labels:\n    - __meta_kubernetes_service_annotation_prometheus_io_scrape_slow\n  - action: replace\n    regex: (https?)\n    source_labels:\n    - __meta_kubernetes_service_annotation_prometheus_io_scheme\n    target_label: __scheme__\n  - action: replace\n    regex: (.+)\n    source_labels:\n    - __meta_kubernetes_service_annotation_prometheus_io_path\n    target_label: __metrics_path__\n  - action: replace\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n    replacement: $1:$2\n    source_labels:\n    - __address__\n    - __meta_kubernetes_service_annotation_prometheus_io_port\n    target_label: __address__\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n  - action: replace\n    source_labels:\n    - __meta_kubernetes_namespace\n    target_label: kubernetes_namespace\n  - action: replace\n    source_labels:\n    - __meta_kubernetes_service_name\n    target_label: kubernetes_name\n  - action: replace\n    source_labels:\n    - __meta_kubernetes_pod_node_name\n    target_label: kubernetes_node\n  # MAISTRA-748: Exclude scraping of prometheus itself on the oauth port\n  - action: drop\n    source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_pod_container_port_number]\n    regex: prometheus;3001\n  scrape_interval: 5m\n  scrape_timeout: 30s\n\n- honor_labels: true\n  job_name: prometheus-pushgateway\n  kubernetes_sd_configs:\n  - role: service\n  relabel_configs:\n  - action: keep\n    regex: pushgateway\n    source_labels:\n    - __meta_kubernetes_service_annotation_prometheus_io_probe\n\n- job_name: kubernetes-services\n  kubernetes_sd_configs:\n  - role: service\n  metrics_path: /probe\n  params:\n    module:\n    - http_2xx\n  relabel_configs:\n  - action: keep\n    regex: true\n    source_labels:\n    - __meta_kubernetes_service_annotation_prometheus_io_probe\n  - source_labels:\n    - __address__\n    target_label: __param_target\n  - replacement: blackbox\n    target_label: __address__\n  - source_labels:\n    - __param_target\n    target_label: instance\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n  - source_labels:\n    - __meta_kubernetes_namespace\n    target_label: kubernetes_namespace\n  - source_labels:\n    - __meta_kubernetes_service_name\n    target_label: kubernetes_name\n\n- job_name: 'kubernetes-pods'\n  kubernetes_sd_configs:\n  - role: pod\n  relabel_configs:  # If first two labels are present, pod should be scraped  by the istio-secure job.\n  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n    action: keep\n    regex: true\n  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\n    action: replace\n    target_label: __metrics_path__\n    regex: (.+)\n  - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n    action: replace\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n    replacement: $1:$2\n    target_label: __address__\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_(.+)\n  - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n    target_label: kubernetes_namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n    action: replace\n    target_label: kubernetes_pod_name\n  - action: drop\n    regex: Pending|Succeeded|Failed\n    source_labels:\n    - __meta_kubernetes_pod_phase\n\n- job_name: kubernetes-pods-slow\n  kubernetes_sd_configs:\n  - role: pod\n  relabel_configs:\n  - action: keep\n    regex: true\n    source_labels:\n    - __meta_kubernetes_pod_annotation_prometheus_io_scrape_slow\n  - action: replace\n    regex: (.+)\n    source_labels:\n    - __meta_kubernetes_pod_annotation_prometheus_io_path\n    target_label: __metrics_path__\n  - action: replace\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n    replacement: $1:$2\n    source_labels:\n    - __address__\n    - __meta_kubernetes_pod_annotation_prometheus_io_port\n    target_label: __address__\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_(.+)\n  - action: replace\n    source_labels:\n    - __meta_kubernetes_namespace\n    target_label: kubernetes_namespace\n  - action: replace\n    source_labels:\n    - __meta_kubernetes_pod_name\n    target_label: kubernetes_pod_name\n  - action: drop\n    regex: Pending|Succeeded|Failed\n    source_labels:\n    - __meta_kubernetes_pod_phase\n  scrape_interval: 5m\n  scrape_timeout: 30s"},"kind":"ConfigMap","metadata":{"annotations":{"maistra.io/mesh-generation":"2.3.1-1-2"},"labels":{"app":"prometheus","app.kubernetes.io/component":"prometheus","app.kubernetes.io/instance":"istio-system","app.kubernetes.io/managed-by":"maistra-istio-operator","app.kubernetes.io/name":"prometheus","app.kubernetes.io/part-of":"istio","app.kubernetes.io/version":"2.3.1-1-2","maistra-version":"2.1.6","maistra.io/owner":"istio-system","maistra.io/owner-name":"basic","release":"istio"},"name":"prometheus","namespace":"istio-system","ownerReferences":[{"apiVersion":"maistra.io/v2","blockOwnerDeletion":true,"controller":true,"kind":"ServiceMeshControlPlane","name":"basic","uid":"0c79eb74-854c-4f98-85c6-5955e78fd93e"}]}}
      maistra.io/mesh-generation: 2.3.1-1-2
    creationTimestamp: "2023-03-03T20:03:12Z"
    labels:
      app: prometheus
      app.kubernetes.io/component: prometheus
      app.kubernetes.io/instance: istio-system
      app.kubernetes.io/managed-by: maistra-istio-operator
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: istio
      app.kubernetes.io/version: 2.3.1-1-2
      maistra-version: 2.1.6
      maistra.io/owner: istio-system
      maistra.io/owner-name: basic
      release: istio
    name: prometheus
    namespace: istio-system
    ownerReferences:
    - apiVersion: maistra.io/v2
      blockOwnerDeletion: true
      controller: true
      kind: ServiceMeshControlPlane
      name: basic
      uid: 0c79eb74-854c-4f98-85c6-5955e78fd93e
    resourceVersion: "34644"
    uid: 4db4f33f-2728-4276-8606-3ec2d38ff2af
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      control-plane.alpha.kubernetes.io/leader: '{"holderIdentity":"istiod-basic-544d455f65-7qpmd","leaseDurationSeconds":30,"acquireTime":"2023-03-03T20:03:10Z","renewTime":"2023-03-03T20:42:15Z","leaderTransitions":0}'
    creationTimestamp: "2023-03-03T20:03:10Z"
    name: servicemesh-federation
    namespace: istio-system
    resourceVersion: "61015"
    uid: db0ee28a-dda8-4b05-87c5-7cf9f5d7a7fb
- apiVersion: v1
  data:
    ca-bundle.crt: |
      # ACCVRAIZ1
      -----BEGIN CERTIFICATE-----
      MIIH0zCCBbugAwIBAgIIXsO3pkN/pOAwDQYJKoZIhvcNAQEFBQAwQjESMBAGA1UE
      AwwJQUNDVlJBSVoxMRAwDgYDVQQLDAdQS0lBQ0NWMQ0wCwYDVQQKDARBQ0NWMQsw
      CQYDVQQGEwJFUzAeFw0xMTA1MDUwOTM3MzdaFw0zMDEyMzEwOTM3MzdaMEIxEjAQ
      BgNVBAMMCUFDQ1ZSQUlaMTEQMA4GA1UECwwHUEtJQUNDVjENMAsGA1UECgwEQUND
      VjELMAkGA1UEBhMCRVMwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCb
      qau/YUqXry+XZpp0X9DZlv3P4uRm7x8fRzPCRKPfmt4ftVTdFXxpNRFvu8gMjmoY
      HtiP2Ra8EEg2XPBjs5BaXCQ316PWywlxufEBcoSwfdtNgM3802/J+Nq2DoLSRYWo
      G2ioPej0RGy9ocLLA76MPhMAhN9KSMDjIgro6TenGEyxCQ0jVn8ETdkXhBilyNpA
      lHPrzg5XPAOBOp0KoVdDaaxXbXmQeOW1tDvYvEyNKKGno6e6Ak4l0Squ7a4DIrhr
      IA8wKFSVf+DuzgpmndFALW4ir50awQUZ0m/A8p/4e7MCQvtQqR0tkw8jq8bBD5L/
      0KIV9VMJcRz/RROE5iZe+OCIHAr8Fraocwa48GOEAqDGWuzndN9wrqODJerWx5eH
      k6fGioozl2A3ED6XPm4pFdahD9GILBKfb6qkxkLrQaLjlUPTAYVtjrs78yM2x/47
      4KElB0iryYl0/wiPgL/AlmXz7uxLaL2diMMxs0Dx6M/2OLuc5NF/1OVYm3z61PMO
      m3WR5LpSLhl+0fXNWhn8ugb2+1KoS5kE3fj5tItQo05iifCHJPqDQsGH+tUtKSpa
      cXpkatcnYGMN285J9Y0fkIkyF/hzQ7jSWpOGYdbhdQrqeWZ2iE9x6wQl1gpaepPl
      uUsXQA+xtrn13k/c4LOsOxFwYIRKQ26ZIMApcQrAZQIDAQABo4ICyzCCAscwfQYI
      KwYBBQUHAQEEcTBvMEwGCCsGAQUFBzAChkBodHRwOi8vd3d3LmFjY3YuZXMvZmls
      ZWFkbWluL0FyY2hpdm9zL2NlcnRpZmljYWRvcy9yYWl6YWNjdjEuY3J0MB8GCCsG
      AQUFBzABhhNodHRwOi8vb2NzcC5hY2N2LmVzMB0GA1UdDgQWBBTSh7Tj3zcnk1X2
      VuqB5TbMjB4/vTAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFNKHtOPfNyeT
      VfZW6oHlNsyMHj+9MIIBcwYDVR0gBIIBajCCAWYwggFiBgRVHSAAMIIBWDCCASIG
      CCsGAQUFBwICMIIBFB6CARAAQQB1AHQAbwByAGkAZABhAGQAIABkAGUAIABDAGUA
      cgB0AGkAZgBpAGMAYQBjAGkA8wBuACAAUgBhAO0AegAgAGQAZQAgAGwAYQAgAEEA
      QwBDAFYAIAAoAEEAZwBlAG4AYwBpAGEAIABkAGUAIABUAGUAYwBuAG8AbABvAGcA
      7QBhACAAeQAgAEMAZQByAHQAaQBmAGkAYwBhAGMAaQDzAG4AIABFAGwAZQBjAHQA
      cgDzAG4AaQBjAGEALAAgAEMASQBGACAAUQA0ADYAMAAxADEANQA2AEUAKQAuACAA
      QwBQAFMAIABlAG4AIABoAHQAdABwADoALwAvAHcAdwB3AC4AYQBjAGMAdgAuAGUA
      czAwBggrBgEFBQcCARYkaHR0cDovL3d3dy5hY2N2LmVzL2xlZ2lzbGFjaW9uX2Mu
      aHRtMFUGA1UdHwROMEwwSqBIoEaGRGh0dHA6Ly93d3cuYWNjdi5lcy9maWxlYWRt
      aW4vQXJjaGl2b3MvY2VydGlmaWNhZG9zL3JhaXphY2N2MV9kZXIuY3JsMA4GA1Ud
      DwEB/wQEAwIBBjAXBgNVHREEEDAOgQxhY2N2QGFjY3YuZXMwDQYJKoZIhvcNAQEF
      BQADggIBAJcxAp/n/UNnSEQU5CmH7UwoZtCPNdpNYbdKl02125DgBS4OxnnQ8pdp
      D70ER9m+27Up2pvZrqmZ1dM8MJP1jaGo/AaNRPTKFpV8M9xii6g3+CfYCS0b78gU
      JyCpZET/LtZ1qmxNYEAZSUNUY9rizLpm5U9EelvZaoErQNV/+QEnWCzI7UiRfD+m
      AM/EKXMRNt6GGT6d7hmKG9Ww7Y49nCrADdg9ZuM8Db3VlFzi4qc1GwQA9j9ajepD
      vV+JHanBsMyZ4k0ACtrJJ1vnE5Bc5PUzolVt3OAJTS+xJlsndQAJxGJ3KQhfnlms
      tn6tn1QwIgPBHnFk/vk4CpYY3QIUrCPLBhwepH2NDd4nQeit2hW3sCPdK6jT2iWH
      7ehVRE2I9DZ+hJp4rPcOVkkO1jMl1oRQQmwgEh0q1b688nCBpHBgvgW1m54ERL5h
      I6zppSSMEYCUWqKiuUnSwdzRp+0xESyeGabu4VXhwOrPDYTkF7eifKXeVSUG7szA
      h1xA2syVP1XgNce4hL60Xc16gwFy7ofmXx2utYXGJt/mwZrpHgJHnyqobalbz+xF
      d3+YJ5oyXSrjhO7FmGYvliAd3djDJ9ew+f7Zfc3Qn48LFFhRny+Lwzgt3uiP1o2H
      pPVWQxaZLPSkVrQ0uGE3ycJYgBugl6H8WY3pEfbRD0tVNEYqi4Y7
      -----END CERTIFICATE-----

      # AC RAIZ FNMT-RCM
      -----BEGIN CERTIFICATE-----
      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
      uu8wd+RU4riEmViAqhOLUTpPSPaLtrM=
      -----END CERTIFICATE-----

      # AC RAIZ FNMT-RCM SERVIDORES SEGUROS
      -----BEGIN CERTIFICATE-----
      MIICbjCCAfOgAwIBAgIQYvYybOXE42hcG2LdnC6dlTAKBggqhkjOPQQDAzB4MQsw
      CQYDVQQGEwJFUzERMA8GA1UECgwIRk5NVC1SQ00xDjAMBgNVBAsMBUNlcmVzMRgw
      FgYDVQRhDA9WQVRFUy1RMjgyNjAwNEoxLDAqBgNVBAMMI0FDIFJBSVogRk5NVC1S
      Q00gU0VSVklET1JFUyBTRUdVUk9TMB4XDTE4MTIyMDA5MzczM1oXDTQzMTIyMDA5
      MzczM1oweDELMAkGA1UEBhMCRVMxETAPBgNVBAoMCEZOTVQtUkNNMQ4wDAYDVQQL
      DAVDZXJlczEYMBYGA1UEYQwPVkFURVMtUTI4MjYwMDRKMSwwKgYDVQQDDCNBQyBS
      QUlaIEZOTVQtUkNNIFNFUlZJRE9SRVMgU0VHVVJPUzB2MBAGByqGSM49AgEGBSuB
      BAAiA2IABPa6V1PIyqvfNkpSIeSX0oNnnvBlUdBeh8dHsVnyV0ebAAKTRBdp20LH
      sbI6GA60XYyzZl2hNPk2LEnb80b8s0RpRBNm/dfF/a82Tc4DTQdxz69qBdKiQ1oK
      Um8BA06Oi6NCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYD
      VR0OBBYEFAG5L++/EYZg8k/QQW6rcx/n0m5JMAoGCCqGSM49BAMDA2kAMGYCMQCu
      SuMrQMN0EfKVrRYj3k4MGuZdpSRea0R7/DjiT8ucRRcRTBQnJlU5dUoDzBOQn5IC
      MQD6SmxgiHPz7riYYqnOK8LZiqZwMR2vsJRM60/G49HzYqc8/5MuB1xJAWdpEgJy
      v+c=
      -----END CERTIFICATE-----

      # ANF Secure Server Root CA
      -----BEGIN CERTIFICATE-----
      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
      -----END CERTIFICATE-----

      # Actalis Authentication Root CA
      -----BEGIN CERTIFICATE-----
      MIIFuzCCA6OgAwIBAgIIVwoRl0LE48wwDQYJKoZIhvcNAQELBQAwazELMAkGA1UE
      BhMCSVQxDjAMBgNVBAcMBU1pbGFuMSMwIQYDVQQKDBpBY3RhbGlzIFMucC5BLi8w
      MzM1ODUyMDk2NzEnMCUGA1UEAwweQWN0YWxpcyBBdXRoZW50aWNhdGlvbiBSb290
      IENBMB4XDTExMDkyMjExMjIwMloXDTMwMDkyMjExMjIwMlowazELMAkGA1UEBhMC
      SVQxDjAMBgNVBAcMBU1pbGFuMSMwIQYDVQQKDBpBY3RhbGlzIFMucC5BLi8wMzM1
      ODUyMDk2NzEnMCUGA1UEAwweQWN0YWxpcyBBdXRoZW50aWNhdGlvbiBSb290IENB
      MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAp8bEpSmkLO/lGMWwUKNv
      UTufClrJwkg4CsIcoBh/kbWHuUA/3R1oHwiD1S0eiKD4j1aPbZkCkpAW1V8IbInX
      4ay8IMKx4INRimlNAJZaby/ARH6jDuSRzVju3PvHHkVH3Se5CAGfpiEd9UEtL0z9
      KK3giq0itFZljoZUj5NDKd45RnijMCO6zfB9E1fAXdKDa0hMxKufgFpbOr3JpyI/
      gCczWw63igxdBzcIy2zSekciRDXFzMwujt0q7bd9Zg1fYVEiVRvjRuPjPdA1Yprb
      rxTIW6HMiRvhMCb8oJsfgadHHwTrozmSBp+Z07/T6k9QnBn+locePGX2oxgkg4YQ
      51Q+qDp2JE+BIcXjDwL4k5RHILv+1A7TaLndxHqEguNTVHnd25zS8gebLra8Pu2F
      be8lEfKXGkJh90qX6IuxEAf6ZYGyojnP9zz/GPvG8VqLWeICrHuS0E4UT1lF9gxe
      KF+w6D9Fz8+vm2/7hNN3WpVvrJSEnu68wEqPSpP4RCHiMUVhUE4Q2OM1fEwZtN4F
      v6MGn8i1zeQf1xcGDXqVdFUNaBr8EBtiZJ1t4JWgw5QHVw0U5r0F+7if5t+L4sbn
      fpb2U8WANFAoWPASUHEXMLrmeGO89LKtmyuy/uE5jF66CyCU3nuDuP/jVo23Eek7
      jPKxwV2dpAtMK9myGPW1n0sCAwEAAaNjMGEwHQYDVR0OBBYEFFLYiDrIn3hm7Ynz
      ezhwlMkCAjbQMA8GA1UdEwEB/wQFMAMBAf8wHwYDVR0jBBgwFoAUUtiIOsifeGbt
      ifN7OHCUyQICNtAwDgYDVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBCwUAA4ICAQAL
      e3KHwGCmSUyIWOYdiPcUZEim2FgKDk8TNd81HdTtBjHIgT5q1d07GjLukD0R0i70
      jsNjLiNmsGe+b7bAEzlgqqI0JZN1Ut6nna0Oh4lScWoWPBkdg/iaKWW+9D+a2fDz
      WochcYBNy+A4mz+7+uAwTc+G02UQGRjRlwKxK3JCaKygvU5a2hi/a5iB0P2avl4V
      SM0RFbnAKVy06Ij3Pjaut2L9HmLecHgQHEhb2rykOLpn7VU+Xlff1ANATIGk0k9j
      pwlCCRT8AKnCgHNPLsBA2RF7SOp6AsDT6ygBJlh0wcBzIm2Tlf05fbsq4/aC4yyX
      X04fkZT6/iyj2HYauE2yOE+b+h1IYHkm4vP9qdCa6HCPSXrW5b0KDtst842/6+Ok
      fcvHlXHo2qN8xcL4dJIEG4aspCJTQLas/kx2z/uUMsA1n3Y/buWQbqCmJqK4LL7R
      K4X9p2jIugErsWx0Hbhzlefut8cl8ABMALJ+tguLHPPAUJ4lueAI3jZm/zel0btU
      ZCzJJ7VLkn5l/9Mt4blOvH+kQSGQQXemOR/qnuOf0GZvBeyqdn6/axag67XH/JJU
      LysRJyU3eExRarDzzFhdFPFqSBX/wge2sY0PjlxQRrM9vwGYT7JZVEc+NHt4bVaT
      LnPqZih4zR0Uv6CPLy64Lo7yFIrM6bV8+2ydDKXhlg==
      -----END CERTIFICATE-----

      # AffirmTrust Commercial
      -----BEGIN CERTIFICATE-----
      MIIDTDCCAjSgAwIBAgIId3cGJyapsXwwDQYJKoZIhvcNAQELBQAwRDELMAkGA1UE
      BhMCVVMxFDASBgNVBAoMC0FmZmlybVRydXN0MR8wHQYDVQQDDBZBZmZpcm1UcnVz
      dCBDb21tZXJjaWFsMB4XDTEwMDEyOTE0MDYwNloXDTMwMTIzMTE0MDYwNlowRDEL
      MAkGA1UEBhMCVVMxFDASBgNVBAoMC0FmZmlybVRydXN0MR8wHQYDVQQDDBZBZmZp
      cm1UcnVzdCBDb21tZXJjaWFsMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC
      AQEA9htPZwcroRX1BiLLHwGy43NFBkRJLLtJJRTWzsO3qyxPxkEylFf6EqdbDuKP
      Hx6GGaeqtS25Xw2Kwq+FNXkyLbscYjfysVtKPcrNcV/pQr6U6Mje+SJIZMblq8Yr
      ba0F8PrVC8+a5fBQpIs7R6UjW3p6+DM/uO+Zl+MgwdYoic+U+7lF7eNAFxHUdPAL
      MeIrJmqbTFeurCA+ukV6BfO9m2kVrn1OIGPENXY6BwLJN/3HR+7o8XYdcxXyl6S1
      yHp52UKqK39c/s4mT6NmgTWvRLpUHhwwMmWd5jyTXlBOeuM61G7MGvv50jeuJCqr
      VwMiKA1JdX+3KNp1v47j3A55MQIDAQABo0IwQDAdBgNVHQ4EFgQUnZPGU4teyq8/
      nx4P5ZmVvCT2lI8wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwDQYJ
      KoZIhvcNAQELBQADggEBAFis9AQOzcAN/wr91LoWXym9e2iZWEnStB03TX8nfUYG
      XUPGhi4+c7ImfU+TqbbEKpqrIZcUsd6M06uJFdhrJNTxFq7YpFzUf1GO7RgBsZNj
      vbz4YYCanrHOQnDiqX0GJX0nof5v7LMeJNrjS1UaADs1tDvZ110w/YETifLCBivt
      Z8SOyUOyXGsViQK8YvxO8rUzqrJv0wqiUOP2O+guRMLbZjipM1ZI8W0bM40NjD9g
      N53Tym1+NH4Nn3J2ixufcv1SNUFFApYvHLKac0khsUlHRUe072o0EclNmsxZt9YC
      nlpOZbWUrhvfKbAW8b8Angc6F2S1BLUjIZkKlTuXfO8=
      -----END CERTIFICATE-----

      # AffirmTrust Networking
      -----BEGIN CERTIFICATE-----
      MIIDTDCCAjSgAwIBAgIIfE8EORzUmS0wDQYJKoZIhvcNAQEFBQAwRDELMAkGA1UE
      BhMCVVMxFDASBgNVBAoMC0FmZmlybVRydXN0MR8wHQYDVQQDDBZBZmZpcm1UcnVz
      dCBOZXR3b3JraW5nMB4XDTEwMDEyOTE0MDgyNFoXDTMwMTIzMTE0MDgyNFowRDEL
      MAkGA1UEBhMCVVMxFDASBgNVBAoMC0FmZmlybVRydXN0MR8wHQYDVQQDDBZBZmZp
      cm1UcnVzdCBOZXR3b3JraW5nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC
      AQEAtITMMxcua5Rsa2FSoOujz3mUTOWUgJnLVWREZY9nZOIG41w3SfYvm4SEHi3y
      YJ0wTsyEheIszx6e/jarM3c1RNg1lho9Nuh6DtjVR6FqaYvZ/Ls6rnla1fTWcbua
      kCNrmreIdIcMHl+5ni36q1Mr3Lt2PpNMCAiMHqIjHNRqrSK6mQEubWXLviRmVSRL
      QESxG9fhwoXA3hA/Pe24/PHxI1Pcv2WXb9n5QHGNfb2V1M6+oF4nI979ptAmDgAp
      6zxG8D1gvz9Q0twmQVGeFDdCBKNwV6gbh+0t+nvujArjqWaJGctB+d1ENmHP4ndG
      yH329JKBNv3bNPFyfvMMFr20FQIDAQABo0IwQDAdBgNVHQ4EFgQUBx/S55zawm6i
      QLSwelAQUHTEyL0wDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwDQYJ
      KoZIhvcNAQEFBQADggEBAIlXshZ6qML91tmbmzTCnLQyFE2npN/svqe++EPbkTfO
      tDIuUFUaNU52Q3Eg75N3ThVwLofDwR1t3Mu1J9QsVtFSUzpE0nPIxBsFZVpikpzu
      QY0x2+c06lkh1QF612S4ZDnNye2v7UsDSKegmQGA3GWjNq5lWUhPgkvIZfFXHeVZ
      Lgo/bNjR9eUJtGxUAArgFU2HdW23WJZa3W3SAKD0m0i+wzekujbgfIeFlxoVot4u
      olu9rxj5kFDNcFn4J2dHy8egBzp90SxdbBk6ZrV9/ZFvgrG+CJPbFEfxojfHRZ48
      x3evZKiT3/Zpg4Jg8klCNO1aAFSFHBY2kgxc+qatv9s=
      -----END CERTIFICATE-----

      # AffirmTrust Premium
      -----BEGIN CERTIFICATE-----
      MIIFRjCCAy6gAwIBAgIIbYwURrGmCu4wDQYJKoZIhvcNAQEMBQAwQTELMAkGA1UE
      BhMCVVMxFDASBgNVBAoMC0FmZmlybVRydXN0MRwwGgYDVQQDDBNBZmZpcm1UcnVz
      dCBQcmVtaXVtMB4XDTEwMDEyOTE0MTAzNloXDTQwMTIzMTE0MTAzNlowQTELMAkG
      A1UEBhMCVVMxFDASBgNVBAoMC0FmZmlybVRydXN0MRwwGgYDVQQDDBNBZmZpcm1U
      cnVzdCBQcmVtaXVtMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAxBLf
      qV/+Qd3d9Z+K4/as4Tx4mrzY8H96oDMq3I0gW64tb+eT2TZwamjPjlGjhVtnBKAQ
      JG9dKILBl1fYSCkTtuG+kU3fhQxTGJoeJKJPj/CihQvL9Cl/0qRY7iZNyaqoe5rZ
      +jjeRFcV5fiMyNlI4g0WJx0eyIOFJbe6qlVBzAMiSy2RjYvmia9mx+n/K+k8rNrS
      s8PhaJyJ+HoAVt70VZVs+7pk3WKL3wt3MutizCaam7uqYoNMtAZ6MMgpv+0GTZe5
      HMQxK9VfvFMSF5yZVylmd2EhMQcuJUmdGPLu8ytxjLW6OQdJd/zvLpKQBY0tL3d7
      70O/Nbua2Plzpyzy0FfuKE4mX4+QaAkvuPjcBukumj5Rp9EixAqnOEhss/n/fauG
      V+O61oV4d7pD6kh/9ti+I20ev9E2bFhc8e6kGVQa9QPSdubhjL08s9NIS+LI+H+S
      qHZGnEJlPqQewQcDWkYtuJfzt9WyVSHvutxMAJf7FJUnM7/oQ0dG0giZFmA7mn7S
      5u046uwBHjxIVkkJx0w3AJ6IDsBz4W9m6XJHMD4Q5QsDyZpCAGzFlH5hxIrff4Ia
      C1nEWTJ3s7xgaVY5/bQGeyzWZDbZvUjthB9+pSKPKrhC9IK31FOQeE4tGv2Bb0TX
      OwF0lkLgAOIua+rF7nKsu7/+6qqo+Nz2snmKtmcCAwEAAaNCMEAwHQYDVR0OBBYE
      FJ3AZ6YMItkm9UWrpmVSESfYRaxjMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/
      BAQDAgEGMA0GCSqGSIb3DQEBDAUAA4ICAQCzV00QYk465KzquByvMiPIs0laUZx2
      KI15qldGF9X1Uva3ROgIRL8YhNILgM3FEv0AVQVhh0HctSSePMTYyPtwni94loMg
      Nt58D2kTiKV1NpgIpsbfrM7jWNa3Pt668+s0QNiigfV4Py/VpfzZotReBA4Xrf5B
      8OWycvpEgjNC6C1Y91aMYj+6QrCcDFx+LmUmXFNPALJ4fqENmS2NuB2OosSw/WDQ
      MKSOyARiqcTtNd56l+0OOF6SL5Nwpamcb6d9Ex1+xghIsV5n61EIJenmJWtSKZGc
      0jlzCFfemQa0W50QBuHCAKi4HEoCChTQwUHK+4w1IX2COPKpVJEZNZOUbWo6xbLQ
      u4mGk+ibyQ86p3q4ofB4Rvr8Ny/lioTz3/4E2aFooC8k4gmVBtWVyuEklut89pMF
      u+1z6S3RdTnX5yTb2E5fQ4+e0BQ5v1VwSJlXMbSc7kqYA5YwH2AG7hsj/oFgIxpH
      YoWlzBk0gG+zrBrjn/B7SK3VAdlntqlyk+otZrWyuOQ9PLLvTIzq6we/qzWaVYa8
      GKa1qF60g2xraUDTn9zxw2lrueFtCfTxqlB2Cnp9ehehVZZCmTEJ3WARjQUwfuaO
      RtGdFNrHF+QFlozEJLUbzxQHskD4o55BhrwE0GuWyCqANP2/7waj3VjFhT0+j/6e
      KeC2uAloGRwYQw==
      -----END CERTIFICATE-----

      # AffirmTrust Premium ECC
      -----BEGIN CERTIFICATE-----
      MIIB/jCCAYWgAwIBAgIIdJclisc/elQwCgYIKoZIzj0EAwMwRTELMAkGA1UEBhMC
      VVMxFDASBgNVBAoMC0FmZmlybVRydXN0MSAwHgYDVQQDDBdBZmZpcm1UcnVzdCBQ
      cmVtaXVtIEVDQzAeFw0xMDAxMjkxNDIwMjRaFw00MDEyMzExNDIwMjRaMEUxCzAJ
      BgNVBAYTAlVTMRQwEgYDVQQKDAtBZmZpcm1UcnVzdDEgMB4GA1UEAwwXQWZmaXJt
      VHJ1c3QgUHJlbWl1bSBFQ0MwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAQNMF4bFZ0D
      0KF5Nbc6PJJ6yhUczWLznCZcBz3lVPqj1swS6vQUX+iOGasvLkjmrBhDeKzQN8O9
      ss0s5kfiGuZjuD0uL3jET9v0D6RoTFVya5UdThhClXjMNzyR4ptlKymjQjBAMB0G
      A1UdDgQWBBSaryl6wBE1NSZRMADDav5A1a7WPDAPBgNVHRMBAf8EBTADAQH/MA4G
      A1UdDwEB/wQEAwIBBjAKBggqhkjOPQQDAwNnADBkAjAXCfOHiFBar8jAQr9HX/Vs
      aobgxCd05DhT1wV/GzTjxi+zygk8N53X57hG8f2h4nECMEJZh0PUUd+60wkyWs6I
      flc9nF9Ca/UHLbXwgpP5WW+uZPpY5Yse42O+tYHNbwKMeQ==
      -----END CERTIFICATE-----

      # Amazon Root CA 1
      -----BEGIN CERTIFICATE-----
      MIIDQTCCAimgAwIBAgITBmyfz5m/jAo54vB4ikPmljZbyjANBgkqhkiG9w0BAQsF
      ADA5MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6
      b24gUm9vdCBDQSAxMB4XDTE1MDUyNjAwMDAwMFoXDTM4MDExNzAwMDAwMFowOTEL
      MAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJv
      b3QgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALJ4gHHKeNXj
      ca9HgFB0fW7Y14h29Jlo91ghYPl0hAEvrAIthtOgQ3pOsqTQNroBvo3bSMgHFzZM
      9O6II8c+6zf1tRn4SWiw3te5djgdYZ6k/oI2peVKVuRF4fn9tBb6dNqcmzU5L/qw
      IFAGbHrQgLKm+a/sRxmPUDgH3KKHOVj4utWp+UhnMJbulHheb4mjUcAwhmahRWa6
      VOujw5H5SNz/0egwLX0tdHA114gk957EWW67c4cX8jJGKLhD+rcdqsq08p8kDi1L
      93FcXmn/6pUCyziKrlA4b9v7LWIbxcceVOF34GfID5yHI9Y/QCB/IIDEgEw+OyQm
      jgSubJrIqg0CAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMC
      AYYwHQYDVR0OBBYEFIQYzIU07LwMlJQuCFmcx7IQTgoIMA0GCSqGSIb3DQEBCwUA
      A4IBAQCY8jdaQZChGsV2USggNiMOruYou6r4lK5IpDB/G/wkjUu0yKGX9rbxenDI
      U5PMCCjjmCXPI6T53iHTfIUJrU6adTrCC2qJeHZERxhlbI1Bjjt/msv0tadQ1wUs
      N+gDS63pYaACbvXy8MWy7Vu33PqUXHeeE6V/Uq2V8viTO96LXFvKWlJbYK8U90vv
      o/ufQJVtMVT8QtPHRh8jrdkPSHCa2XV4cdFyQzR1bldZwgJcJmApzyMZFo6IQ6XU
      5MsI+yMRQ+hDKXJioaldXgjUkK642M4UwtBV8ob2xJNDd2ZhwLnoQdeXeGADbkpy
      rqXRfboQnoZsG4q5WTP468SQvvG5
      -----END CERTIFICATE-----

      # Amazon Root CA 2
      -----BEGIN CERTIFICATE-----
      MIIFQTCCAymgAwIBAgITBmyf0pY1hp8KD+WGePhbJruKNzANBgkqhkiG9w0BAQwF
      ADA5MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6
      b24gUm9vdCBDQSAyMB4XDTE1MDUyNjAwMDAwMFoXDTQwMDUyNjAwMDAwMFowOTEL
      MAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJv
      b3QgQ0EgMjCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAK2Wny2cSkxK
      gXlRmeyKy2tgURO8TW0G/LAIjd0ZEGrHJgw12MBvIITplLGbhQPDW9tK6Mj4kHbZ
      W0/jTOgGNk3Mmqw9DJArktQGGWCsN0R5hYGCrVo34A3MnaZMUnbqQ523BNFQ9lXg
      1dKmSYXpN+nKfq5clU1Imj+uIFptiJXZNLhSGkOQsL9sBbm2eLfq0OQ6PBJTYv9K
      8nu+NQWpEjTj82R0Yiw9AElaKP4yRLuH3WUnAnE72kr3H9rN9yFVkE8P7K6C4Z9r
      2UXTu/Bfh+08LDmG2j/e7HJV63mjrdvdfLC6HM783k81ds8P+HgfajZRRidhW+me
      z/CiVX18JYpvL7TFz4QuK/0NURBs+18bvBt+xa47mAExkv8LV/SasrlX6avvDXbR
      8O70zoan4G7ptGmh32n2M8ZpLpcTnqWHsFcQgTfJU7O7f/aS0ZzQGPSSbtqDT6Zj
      mUyl+17vIWR6IF9sZIUVyzfpYgwLKhbcAS4y2j5L9Z469hdAlO+ekQiG+r5jqFoz
      7Mt0Q5X5bGlSNscpb/xVA1wf+5+9R+vnSUeVC06JIglJ4PVhHvG/LopyboBZ/1c6
      +XUyo05f7O0oYtlNc/LMgRdg7c3r3NunysV+Ar3yVAhU/bQtCSwXVEqY0VThUWcI
      0u1ufm8/0i2BWSlmy5A5lREedCf+3euvAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMB
      Af8wDgYDVR0PAQH/BAQDAgGGMB0GA1UdDgQWBBSwDPBMMPQFWAJI/TPlUq9LhONm
      UjANBgkqhkiG9w0BAQwFAAOCAgEAqqiAjw54o+Ci1M3m9Zh6O+oAA7CXDpO8Wqj2
      LIxyh6mx/H9z/WNxeKWHWc8w4Q0QshNabYL1auaAn6AFC2jkR2vHat+2/XcycuUY
      +gn0oJMsXdKMdYV2ZZAMA3m3MSNjrXiDCYZohMr/+c8mmpJ5581LxedhpxfL86kS
      k5Nrp+gvU5LEYFiwzAJRGFuFjWJZY7attN6a+yb3ACfAXVU3dJnJUH/jWS5E4ywl
      7uxMMne0nxrpS10gxdr9HIcWxkPo1LsmmkVwXqkLN1PiRnsn/eBG8om3zEK2yygm
      btmlyTrIQRNg91CMFa6ybRoVGld45pIq2WWQgj9sAq+uEjonljYE1x2igGOpm/Hl
      urR8FLBOybEfdF849lHqm/osohHUqS0nGkWxr7JOcQ3AWEbWaQbLU8uz/mtBzUF+
      fUwPfHJ5elnNXkoOrJupmHN5fLT0zLm4BwyydFy4x2+IoZCn9Kr5v2c69BoVYh63
      n749sSmvZ6ES8lgQGVMDMBu4Gon2nL2XA46jCfMdiyHxtN/kHNGfZQIG6lzWE7OE
      76KlXIx3KadowGuuQNKotOrN8I1LOJwZmhsoVLiJkO/KdYE+HvJkJMcYr07/R54H
      9jVlpNMKVv/1F2Rs76giJUmTtt8AF9pYfl3uxRuw0dFfIRDH+fO6AgonB8Xx1sfT
      4PsJYGw=
      -----END CERTIFICATE-----

      # Amazon Root CA 3
      -----BEGIN CERTIFICATE-----
      MIIBtjCCAVugAwIBAgITBmyf1XSXNmY/Owua2eiedgPySjAKBggqhkjOPQQDAjA5
      MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6b24g
      Um9vdCBDQSAzMB4XDTE1MDUyNjAwMDAwMFoXDTQwMDUyNjAwMDAwMFowOTELMAkG
      A1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJvb3Qg
      Q0EgMzBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABCmXp8ZBf8ANm+gBG1bG8lKl
      ui2yEujSLtf6ycXYqm0fc4E7O5hrOXwzpcVOho6AF2hiRVd9RFgdszflZwjrZt6j
      QjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgGGMB0GA1UdDgQWBBSr
      ttvXBp43rDCGB5Fwx5zEGbF4wDAKBggqhkjOPQQDAgNJADBGAiEA4IWSoxe3jfkr
      BqWTrBqYaGFy+uGh0PsceGCmQ5nFuMQCIQCcAu/xlJyzlvnrxir4tiz+OpAUFteM
      YyRIHN8wfdVoOw==
      -----END CERTIFICATE-----

      # Amazon Root CA 4
      -----BEGIN CERTIFICATE-----
      MIIB8jCCAXigAwIBAgITBmyf18G7EEwpQ+Vxe3ssyBrBDjAKBggqhkjOPQQDAzA5
      MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6b24g
      Um9vdCBDQSA0MB4XDTE1MDUyNjAwMDAwMFoXDTQwMDUyNjAwMDAwMFowOTELMAkG
      A1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJvb3Qg
      Q0EgNDB2MBAGByqGSM49AgEGBSuBBAAiA2IABNKrijdPo1MN/sGKe0uoe0ZLY7Bi
      9i0b2whxIdIA6GO9mif78DluXeo9pcmBqqNbIJhFXRbb/egQbeOc4OO9X4Ri83Bk
      M6DLJC9wuoihKqB1+IGuYgbEgds5bimwHvouXKNCMEAwDwYDVR0TAQH/BAUwAwEB
      /zAOBgNVHQ8BAf8EBAMCAYYwHQYDVR0OBBYEFNPsxzplbszh2naaVvuc84ZtV+WB
      MAoGCCqGSM49BAMDA2gAMGUCMDqLIfG9fhGt0O9Yli/W651+kI0rz2ZVwyzjKKlw
      CkcO8DdZEv8tmZQoTipPNU0zWgIxAOp1AE47xDqUEpHJWEadIRNyp4iciuRMStuW
      1KyLa2tJElMzrdfkviT8tQp21KW8EA==
      -----END CERTIFICATE-----

      # Atos TrustedRoot 2011
      -----BEGIN CERTIFICATE-----
      MIIDdzCCAl+gAwIBAgIIXDPLYixfszIwDQYJKoZIhvcNAQELBQAwPDEeMBwGA1UE
      AwwVQXRvcyBUcnVzdGVkUm9vdCAyMDExMQ0wCwYDVQQKDARBdG9zMQswCQYDVQQG
      EwJERTAeFw0xMTA3MDcxNDU4MzBaFw0zMDEyMzEyMzU5NTlaMDwxHjAcBgNVBAMM
      FUF0b3MgVHJ1c3RlZFJvb3QgMjAxMTENMAsGA1UECgwEQXRvczELMAkGA1UEBhMC
      REUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCVhTuXbyo7LjvPpvMp
      Nb7PGKw+qtn4TaA+Gke5vJrf8v7MPkfoepbCJI419KkM/IL9bcFyYie96mvr54rM
      VD6QUM+A1JX76LWC1BTFtqlVJVfbsVD2sGBkWXppzwO3bw2+yj5vdHLqqjAqc2K+
      SZFhyBH+DgMq92og3AIVDV4VavzjgsG1xZ1kCWyjWZgHJ8cblithdHFsQ/H3NYkQ
      4J7sVaE3IqKHBAUsR320HLliKWYoyrfhk/WklAOZuXCFteZI6o1Q/NnezG8HDt0L
      cp2AMBYHlT8oDv3FdU9T1nSatCQujgKRz3bFmx5VdJx4IbHwLfELn8LVlhgf8FQi
      eowHAgMBAAGjfTB7MB0GA1UdDgQWBBSnpQaxLKYJYO7Rl+lwrrw7GWzbITAPBgNV
      HRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFKelBrEspglg7tGX6XCuvDsZbNshMBgG
      A1UdIAQRMA8wDQYLKwYBBAGwLQMEAQEwDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3
      DQEBCwUAA4IBAQAmdzTblEiGKkGdLD4GkGDEjKwLVLgfuXvTBznk+j57sj1O7Z8j
      vZfza1zv7v1Apt+hk6EKhqzvINB5Ab149xnYJDE0BAGmuhWawyfc2E8PzBhj/5kP
      DpFrdRbhIfzYJsdHt6bPWHJxfrrhTZVHO8mvbaG0weyJ9rQPOLXiZNwlz6bb65pc
      maHFCN795trV1lpFDMS3wrUU77QR/w4VtfX128a961qn8FYiqTxlVMYVqL2Gns2D
      lmh6cYGJ4Qvh6hEbaAjMaZ7snkGeRDImeuKHCnE96+RapNLbxc3G3mB/ufNPRJLv
      KrcYPqcZ2Qt9sTdBQrC6YB3y/gkRsPCHe6ed
      -----END CERTIFICATE-----

      # Autoridad de Certificacion Firmaprofesional CIF A62634068
      -----BEGIN CERTIFICATE-----
      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
      jLMi6Et8Vcad+qMUu2WFbm5PEn4KPJ2V
      -----END CERTIFICATE-----

      # Autoridad de Certificacion Firmaprofesional CIF A62634068 1
      -----BEGIN CERTIFICATE-----
      MIIGFDCCA/ygAwIBAgIIG3Dp0v+ubHEwDQYJKoZIhvcNAQELBQAwUTELMAkGA1UE
      BhMCRVMxQjBABgNVBAMMOUF1dG9yaWRhZCBkZSBDZXJ0aWZpY2FjaW9uIEZpcm1h
      cHJvZmVzaW9uYWwgQ0lGIEE2MjYzNDA2ODAeFw0xNDA5MjMxNTIyMDdaFw0zNjA1
      MDUxNTIyMDdaMFExCzAJBgNVBAYTAkVTMUIwQAYDVQQDDDlBdXRvcmlkYWQgZGUg
      Q2VydGlmaWNhY2lvbiBGaXJtYXByb2Zlc2lvbmFsIENJRiBBNjI2MzQwNjgwggIi
      MA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDKlmuO6vj78aI14H9M2uDDUtd9
      thDIAl6zQyrET2qyyhxdKJp4ERppWVevtSBC5IsP5t9bpgOSL/UR5GLXMnE42QQM
      cas9UX4PB99jBVzpv5RvwSmCwLTaUbDBPLutN0pcyvFLNg4kq7/DhHf9qFD0sefG
      L9ItWY16Ck6WaVICqjaY7Pz6FIMMNx/Jkjd/14Et5cS54D40/mf0PmbR0/RAz15i
      NA9wBj4gGFrO93IbJWyTdBSTo3OxDqqHECNZXyAFGUftaI6SEspd/NYrspI8IM/h
      X68gvqB2f3bl7BqGYTM+53u0P6APjqK5am+5hyZvQWyIplD9amML9ZMWGxmPsu2b
      m8mQ9QEM3xk9Dz44I8kvjwzRAv4bVdZO0I08r0+k8/6vKtMFnXkIoctXMbScyJCy
      Z/QYFpM6/EfY0XiWMR+6KwxfXZmtY4laJCB22N/9q06mIqqdXuYnin1oKaPnirja
      EbsXLZmdEyRG98Xi2J+Of8ePdG1asuhy9azuJBCtLxTa/y2aRnFHvkLfuwHb9H/T
      KI8xWVvTyQKmtFLKbpf7Q8UIJm+K9Lv9nyiqDdVF8xM6HdjAeI9BZzwelGSuewvF
      6NkBiDkal4ZkQdU7hwxu+g/GvUgUvzlN1J5Bto+WHWOWk9mVBngxaJ43BjuAiUVh
      OSPHG0SjFeUc+JIwuwIDAQABo4HvMIHsMB0GA1UdDgQWBBRlzeurNR4APn7VdMAc
      tHNHDhpkLzASBgNVHRMBAf8ECDAGAQH/AgEBMIGmBgNVHSAEgZ4wgZswgZgGBFUd
      IAAwgY8wLwYIKwYBBQUHAgEWI2h0dHA6Ly93d3cuZmlybWFwcm9mZXNpb25hbC5j
      b20vY3BzMFwGCCsGAQUFBwICMFAeTgBQAGEAcwBlAG8AIABkAGUAIABsAGEAIABC
      AG8AbgBhAG4AbwB2AGEAIAA0ADcAIABCAGEAcgBjAGUAbABvAG4AYQAgADAAOAAw
      ADEANzAOBgNVHQ8BAf8EBAMCAQYwDQYJKoZIhvcNAQELBQADggIBAHSHKAIrdx9m
      iWTtj3QuRhy7qPj4Cx2Dtjqn6EWKB7fgPiDL4QjbEwj4KKE1soCzC1HA01aajTNF
      Sa9J8OA9B3pFE1r/yJfY0xgsfZb43aJlQ3CTkBW6kN/oGbDbLIpgD7dvlAceHabJ
      hfa9NPhAeGIQcDq+fUs5gakQ1JZBu/hfHAsdCPKxsIl68veg4MSPi3i1O1ilI45P
      Vf42O+AMt8oqMEEgtIDNrvx2ZnOorm7hfNoD6JQg5iKj0B+QXSBTFCZX2lSX3xZE
      EAEeiGaPcjiT3SC3NL7X8e5jjkd5KAb881lFJWAiMxujX6i6KtoaPc1A6ozuBRWV
      1aUsIC+nmCjuRfzxuIgALI9C2lHVnOUTaHFFQ4ueCyE8S1wF3BqfmI7avSKecs2t
      CsvMo2ebKHTEm9caPARYpoKdrcd7b/+Alun4jWq9GJAd/0kakFI3ky88Al2CdgtR
      5xbHV/g4+afNmyJU72OwFW1TZQNKXkqgsqeOSQBZONXH9IBk9W6VULgRfhVwOEqw
      f9DEMnDAGf/JOC0ULGb0QkTmVXYbgBVX/8Cnp6o5qtjTcNAuuuuUavpfNIbnYrX9
      ivAwhZTJryQCL2/W3Wf+47BVTwSYT6RBVuKT0Gro1vP7ZeDOdcQxWQzugsgMYDNK
      GbqEZycPvEJdvSRUDewdcAZfpLz6IHxV
      -----END CERTIFICATE-----

      # Baltimore CyberTrust Root
      -----BEGIN CERTIFICATE-----
      MIIDdzCCAl+gAwIBAgIEAgAAuTANBgkqhkiG9w0BAQUFADBaMQswCQYDVQQGEwJJ
      RTESMBAGA1UEChMJQmFsdGltb3JlMRMwEQYDVQQLEwpDeWJlclRydXN0MSIwIAYD
      VQQDExlCYWx0aW1vcmUgQ3liZXJUcnVzdCBSb290MB4XDTAwMDUxMjE4NDYwMFoX
      DTI1MDUxMjIzNTkwMFowWjELMAkGA1UEBhMCSUUxEjAQBgNVBAoTCUJhbHRpbW9y
      ZTETMBEGA1UECxMKQ3liZXJUcnVzdDEiMCAGA1UEAxMZQmFsdGltb3JlIEN5YmVy
      VHJ1c3QgUm9vdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKMEuyKr
      mD1X6CZymrV51Cni4eiVgLGw41uOKymaZN+hXe2wCQVt2yguzmKiYv60iNoS6zjr
      IZ3AQSsBUnuId9Mcj8e6uYi1agnnc+gRQKfRzMpijS3ljwumUNKoUMMo6vWrJYeK
      mpYcqWe4PwzV9/lSEy/CG9VwcPCPwBLKBsua4dnKM3p31vjsufFoREJIE9LAwqSu
      XmD+tqYF/LTdB1kC1FkYmGP1pWPgkAx9XbIGevOF6uvUA65ehD5f/xXtabz5OTZy
      dc93Uk3zyZAsuT3lySNTPx8kmCFcB5kpvcY67Oduhjprl3RjM71oGDHweI12v/ye
      jl0qhqdNkNwnGjkCAwEAAaNFMEMwHQYDVR0OBBYEFOWdWTCCR1jMrPoIVDaGezq1
      BE3wMBIGA1UdEwEB/wQIMAYBAf8CAQMwDgYDVR0PAQH/BAQDAgEGMA0GCSqGSIb3
      DQEBBQUAA4IBAQCFDF2O5G9RaEIFoN27TyclhAO992T9Ldcw46QQF+vaKSm2eT92
      9hkTI7gQCvlYpNRhcL0EYWoSihfVCr3FvDB81ukMJY2GQE/szKN+OMY3EU/t3Wgx
      jkzSswF07r51XgdIGn9w/xZchMB5hbgF/X++ZRGjD8ACtPhSNzkE1akxehi/oCr0
      Epn3o0WC4zxe9Z2etciefC7IpJ5OCBRLbf1wbWsaY71k5h+3zvDyny67G7fyUIhz
      ksLi4xaNmjICq44Y3ekQEe5+NauQrz4wlHrQMz2nZQ/1/I6eYs9HRCwBXbsdtTLS
      R9I4LtD+gdwyah617jzV/OeBHRnDJELqYzmp
      -----END CERTIFICATE-----

      # Buypass Class 2 Root CA
      -----BEGIN CERTIFICATE-----
      MIIFWTCCA0GgAwIBAgIBAjANBgkqhkiG9w0BAQsFADBOMQswCQYDVQQGEwJOTzEd
      MBsGA1UECgwUQnV5cGFzcyBBUy05ODMxNjMzMjcxIDAeBgNVBAMMF0J1eXBhc3Mg
      Q2xhc3MgMiBSb290IENBMB4XDTEwMTAyNjA4MzgwM1oXDTQwMTAyNjA4MzgwM1ow
      TjELMAkGA1UEBhMCTk8xHTAbBgNVBAoMFEJ1eXBhc3MgQVMtOTgzMTYzMzI3MSAw
      HgYDVQQDDBdCdXlwYXNzIENsYXNzIDIgUm9vdCBDQTCCAiIwDQYJKoZIhvcNAQEB
      BQADggIPADCCAgoCggIBANfHXvfBB9R3+0Mh9PT1aeTuMgHbo4Yf5FkNuud1g1Lr
      6hxhFUi7HQfKjK6w3Jad6sNgkoaCKHOcVgb/S2TwDCo3SbXlzwx87vFKu3MwZfPV
      L4O2fuPn9Z6rYPnT8Z2SdIrkHJasW4DptfQxh6NR/Md+oW+OU3fUl8FVM5I+GC91
      1K2GScuVr1QGbNgGE41b/+EmGVnAJLqBcXmQRFBoJJRfuLMR8SlBYaNByyM21cHx
      MlAQTn/0hpPshNOOvEu/XAFOBz3cFIqUCqTqc/sLUegTBxj6DvEr0VQVfTzh97QZ
      QmdiXnfgolXsttlpF9U6r0TtSsWe5HonfOV116rLJeffawrbD02TTqigzXsu8lkB
      arcNuAeBfos4GzjmCleZPe4h6KP1DBbdi+w0jpwqHAAVF41og9JwnxgIzRFo1clr
      Us3ERo/ctfPYV3Me6ZQ5BL/T3jjetFPsaRyifsSP5BtwrfKi+fv3FmRmaZ9JUaLi
      FRhnBkp/1Wy1TbMz4GHrXb7pmA8y1x1LPC5aAVKRCfLf6o3YBkBjqhHk/sM3nhRS
      P/TizPJhk9H9Z2vXUq6/aKtAQ6BXNVN48FP4YUIHZMbXb5tMOA1jrGKvNouicwoN
      9SG9dKpN6nIDSdvHXx1iY8f93ZHsM+71bbRuMGjeyNYmsHVee7QHIJihdjK4TWxP
      AgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFMmAd+BikoL1Rpzz
      uvdMw964o605MA4GA1UdDwEB/wQEAwIBBjANBgkqhkiG9w0BAQsFAAOCAgEAU18h
      9bqwOlI5LJKwbADJ784g7wbylp7ppHR/ehb8t/W2+xUbP6umwHJdELFx7rxP462s
      A20ucS6vxOOto70MEae0/0qyexAQH6dXQbLArvQsWdZHEIjzIVEpMMpghq9Gqx3t
      OluwlN5E40EIosHsHdb9T7bWR9AUC8rmyrV7d35BH16Dx7aMOZawP5aBQW9gkOLo
      +fsicdl9sz1Gv7SEr5AcD48Saq/v7h56rgJKihcrdv6sVIkkLE8/trKnToyokZf7
      KcZ7XC25y2a2t6hbElGFtQl+Ynhw/qlqYLYdDnkM/crqJIByw5c/8nerQyIKx+u2
      DISCLIBrQYoIwOula9+ZEsuK1V6ADJHgJgg2SMX6OBE1/yWDLfJ6v9r9jv6ly0Us
      H8SIU653DtmadsWOLB2jutXsMq7Aqqz30XpN69QH4kj3Io6wpJ9qzo6ysmD0oyLQ
      I+uUWnpp3Q+/QFesa1lQ2aOZ4W7+jQF5JyMV3pKdewlNWudLSDBaGOYKbeaP4NK7
      5t98biGCwWg5TbSYWGZizEqQXsP6JwSxeRV0mcy+rSDeJmAc61ZRpqPq5KM/p/9h
      3PFaTWwyI0PurKju7koSCTxdccK+efrCh2gdC/1cacwG0Jp9VJkqyTkaGa9LKkPz
      Y11aWOIv4x3kqdbQCtCev9eBCfHJxyYNrJgWVqA=
      -----END CERTIFICATE-----

      # Buypass Class 3 Root CA
      -----BEGIN CERTIFICATE-----
      MIIFWTCCA0GgAwIBAgIBAjANBgkqhkiG9w0BAQsFADBOMQswCQYDVQQGEwJOTzEd
      MBsGA1UECgwUQnV5cGFzcyBBUy05ODMxNjMzMjcxIDAeBgNVBAMMF0J1eXBhc3Mg
      Q2xhc3MgMyBSb290IENBMB4XDTEwMTAyNjA4Mjg1OFoXDTQwMTAyNjA4Mjg1OFow
      TjELMAkGA1UEBhMCTk8xHTAbBgNVBAoMFEJ1eXBhc3MgQVMtOTgzMTYzMzI3MSAw
      HgYDVQQDDBdCdXlwYXNzIENsYXNzIDMgUm9vdCBDQTCCAiIwDQYJKoZIhvcNAQEB
      BQADggIPADCCAgoCggIBAKXaCpUWUOOV8l6ddjEGMnqb8RB2uACatVI2zSRHsJ8Y
      ZLya9vrVediQYkwiL944PdbgqOkcLNt4EemOaFEVcsfzM4fkoF0LXOBXByow9c3E
      N3coTRiR5r/VUv1xLXA+58bEiuPwKAv0dpihi4dVsjoT/Lc+JzeOIuOoTyrvYLs9
      tznDDgFHmV0ST9tD+leh7fmdvhFHJlsTmKtdFoqwNxxXnUX/iJY2v7vKB3tvh2PX
      0DJq1l1sDPGzbjniazEuOQAnFN44wOwZZoYS6J1yFhNkUsepNxz9gjDthBgd9K5c
      /3ATAOux9TN6S9ZV+AWNS2mw9bMoNlwUxFFzTWsL8TQH2xc519woe2v1n/MuwU8X
      KhDzzMro6/1rqy6any2CbgTUUgGTLT2G/H783+9CHaZr77kgxve9oKeV/afmiSTY
      zIw0bOIjL9kSGiG5VZFvC5F5GQytQIgLcOJ60g7YaEi7ghM5EFjp2CoHxhLbWNvS
      O1UQRwUVZ2J+GGOmRj8JDlQyXr8NYnon74Do29lLBlo3WiXQCBJ31G8JUJc9yB3D
      34xFMFbG02SrZvPAXpacw8Tvw3xrizp5f7NJzz3iiZ+gMEuFuZyUJHmPfWupRWgP
      K9Dx2hzLabjKSWJtyNBjYt1gD1iqj6G8BaVmos8bdrKEZLFMOVLAMLrwjEsCsLa3
      AgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFEe4zf/lb+74suwv
      Tg75JbCOPGvDMA4GA1UdDwEB/wQEAwIBBjANBgkqhkiG9w0BAQsFAAOCAgEAACAj
      QTUEkMJAYmDv4jVM1z+s4jSQuKFvdvoWFqRINyzpkMLyPPgKn9iB5btb2iUspKdV
      cSQy9sgL8rxq+JOssgfCX5/bzMiKqr5qb+FJEMwx14C7u8jYog5kV+qi9cKpMRXS
      IGrs/CIBKM+GuIAeqcwRpTzyFrNHnfzSgCHEy9BHcEGhyoMZCCxt8l13nIoUE9Q2
      HJLw5QY33KbmkJs4j1xrG0aGQ0JfPgEHU1RdZX33inOhmlRaHylDFCfChQ+1iHsa
      O5S3HWCntZznKWlXWpuTekMwGwPXYshApqr8ZORK15FTAaggiG6cX0S5y2CBNOxv
      033aSF/rtJC8LakcC6wc1aJoIIAE1vyxjy+7SjENSoYc6+I2KSb12tjE8nVhz36u
      dmNKekBlk4f4HoCMhuWG1o8O/FMsYOgWYRqiPkN7zTlgVGr18okmAWiDSKIz6MkE
      kbIRNBE+6tBDGR8Dk5AM/1E9V/RBbuHLoL7ryWPNbczk+DaqaJ3tvV2XcEQNtg41
      3OEMXbugUZTLfhbrES+jkkXITHHZvMmZUldGL1DPvTVp9D0VzgalLA8+9oG6lLvD
      u79leNKGef9JOxqDDPDeeOzI8k1MGt6CKfjBWtrt7uYnXuhF0J0cUahoq0Tj0Itq
      4/g7u9xN12TyUb7mqqta6THuBrxzvxNiCp/HuZc=
      -----END CERTIFICATE-----

      # CA Disig Root R2
      -----BEGIN CERTIFICATE-----
      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
      -----END CERTIFICATE-----

      # CFCA EV ROOT
      -----BEGIN CERTIFICATE-----
      MIIFjTCCA3WgAwIBAgIEGErM1jANBgkqhkiG9w0BAQsFADBWMQswCQYDVQQGEwJD
      TjEwMC4GA1UECgwnQ2hpbmEgRmluYW5jaWFsIENlcnRpZmljYXRpb24gQXV0aG9y
      aXR5MRUwEwYDVQQDDAxDRkNBIEVWIFJPT1QwHhcNMTIwODA4MDMwNzAxWhcNMjkx
      MjMxMDMwNzAxWjBWMQswCQYDVQQGEwJDTjEwMC4GA1UECgwnQ2hpbmEgRmluYW5j
      aWFsIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MRUwEwYDVQQDDAxDRkNBIEVWIFJP
      T1QwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDXXWvNED8fBVnVBU03
      sQ7smCuOFR36k0sXgiFxEFLXUWRwFsJVaU2OFW2fvwwbwuCjZ9YMrM8irq93VCpL
      TIpTUnrD7i7es3ElweldPe6hL6P3KjzJIx1qqx2hp/Hz7KDVRM8Vz3IvHWOX6Jn5
      /ZOkVIBMUtRSqy5J35DNuF++P96hyk0g1CXohClTt7GIH//62pCfCqktQT+x8Rgp
      7hZZLDRJGqgG16iI0gNyejLi6mhNbiyWZXvKWfry4t3uMCz7zEasxGPrb382KzRz
      EpR/38wmnvFyXVBlWY9ps4deMm/DGIq1lY+wejfeWkU7xzbh72fROdOXW3NiGUgt
      hxwG+3SYIElz8AXSG7Ggo7cbcNOIabla1jj0Ytwli3i/+Oh+uFzJlU9fpy25IGvP
      a931DfSCt/SyZi4QKPaXWnuWFo8BGS1sbn85WAZkgwGDg8NNkt0yxoekN+kWzqot
      aK8KgWU6cMGbrU1tVMoqLUuFG7OA5nBFDWteNfB/O7ic5ARwiRIlk9oKmSJgamNg
      TnYGmE69g60dWIolhdLHZR4tjsbftsbhf4oEIRUpdPA+nJCdDC7xij5aqgwJHsfV
      PKPtl8MeNPo4+QgO48BdK4PRVmrJtqhUUy54Mmc9gn900PvhtgVguXDbjgv5E1hv
      cWAQUhC5wUEJ73IfZzF4/5YFjQIDAQABo2MwYTAfBgNVHSMEGDAWgBTj/i39KNAL
      tbq2osS/BqoFjJP7LzAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAd
      BgNVHQ4EFgQU4/4t/SjQC7W6tqLEvwaqBYyT+y8wDQYJKoZIhvcNAQELBQADggIB
      ACXGumvrh8vegjmWPfBEp2uEcwPenStPuiB/vHiyz5ewG5zz13ku9Ui20vsXiObT
      ej/tUxPQ4i9qecsAIyjmHjdXNYmEwnZPNDatZ8POQQaIxffu2Bq41gt/UP+TqhdL
      jOztUmCypAbqTuv0axn96/Ua4CUqmtzHQTb3yHQFhDmVOdYLO6Qn+gjYXB74BGBS
      ESgoA//vU2YApUo0FmZ8/Qmkrp5nGm9BC2sGE5uPhnEFtC+NiWYzKXZUmhH4J/qy
      P5Hgzg0b8zAarb8iXRvTvyUFTeGSGn+ZnzxEk8rUQElsgIfXBDrDMlI1Dlb4pd19
      xIsNER9Tyx6yF7Zod1rg1MvIB671Oi6ON7fQAUtDKXeMOZePglr4UeWJoBjnaH9d
      Ci77o0cOPaYjesYBx4/IXr9tgFa+iiS6M+qf4TIRnvHST4D2G0CvOJ4RUHlzEhLN
      5mydLIhyPDCBBpEi6lmt2hkuIsKNuYyH4Ga8cyNfIWRjgEj1oDwYPZTISEEdQLpe
      /v5WOaHIz16eGWRGENoXkbcFgKyLmZJ956LYBws2J+dIeWCKw9cTXPhyQN9Ky8+Z
      AAoACxGV2lZFA4gKn2fQ1XmxqI1AbQ3CekD6819kR5LLU7m7Wc5P/dAVUwHY3+vZ
      5nbv0CO7O6l5s9UCKc2Jo5YPSjXnTkLAdc0Hz+Ys63su
      -----END CERTIFICATE-----

      # COMODO Certification Authority
      -----BEGIN CERTIFICATE-----
      MIIEHTCCAwWgAwIBAgIQToEtioJl4AsC7j41AkblPTANBgkqhkiG9w0BAQUFADCB
      gTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G
      A1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxJzAlBgNV
      BAMTHkNPTU9ETyBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0wNjEyMDEwMDAw
      MDBaFw0yOTEyMzEyMzU5NTlaMIGBMQswCQYDVQQGEwJHQjEbMBkGA1UECBMSR3Jl
      YXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHEwdTYWxmb3JkMRowGAYDVQQKExFDT01P
      RE8gQ0EgTGltaXRlZDEnMCUGA1UEAxMeQ09NT0RPIENlcnRpZmljYXRpb24gQXV0
      aG9yaXR5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0ECLi3LjkRv3
      UcEbVASY06m/weaKXTuH+7uIzg3jLz8GlvCiKVCZrts7oVewdFFxze1CkU1B/qnI
      2GqGd0S7WWaXUF601CxwRM/aN5VCaTwwxHGzUvAhTaHYujl8HJ6jJJ3ygxaYqhZ8
      Q5sVW7euNJH+1GImGEaaP+vB+fGQV+useg2L23IwambV4EajcNxo2f8ESIl33rXp
      +2dtQem8Ob0y2WIC8bGoPW43nOIv4tOiJovGuFVDiOEjPqXSJDlqR6sA1KGzqSX+
      DT+nHbrTUcELpNqsOO9VUCQFZUaTNE8tja3G1CEZ0o7KBWFxB3NH5YoZEr0ETc5O
      nKVIrLsm9wIDAQABo4GOMIGLMB0GA1UdDgQWBBQLWOWLxkwVN6RAqTCpIb5HNlpW
      /zAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zBJBgNVHR8EQjBAMD6g
      PKA6hjhodHRwOi8vY3JsLmNvbW9kb2NhLmNvbS9DT01PRE9DZXJ0aWZpY2F0aW9u
      QXV0aG9yaXR5LmNybDANBgkqhkiG9w0BAQUFAAOCAQEAPpiem/Yb6dc5t3iuHXIY
      SdOH5EOC6z/JqvWote9VfCFSZfnVDeFs9D6Mk3ORLgLETgdxb8CPOGEIqB6BCsAv
      IC9Bi5HcSEW88cbeunZrM8gALTFGTO3nnc+IlP8zwFboJIYmuNg4ON8qa90SzMc/
      RxdMosIGlgnW2/4/PEZB31jiVg88O8EckzXZOFKs7sjsLjBOlDW0JB9LeGna8gI4
      zJVSk/BwJVmcIGfE7vmLV2H0knZ9P4SNVbfo5azV8fUZVqZa+5Acr5Pr5RzUZ5dd
      BA6+C4OmF4O5MBKgxTMVBbkN+8cFduPYSo38NBejxiEovjBFMR7HeL5YYTisO+IB
      ZQ==
      -----END CERTIFICATE-----

      # COMODO ECC Certification Authority
      -----BEGIN CERTIFICATE-----
      MIICiTCCAg+gAwIBAgIQH0evqmIAcFBUTAGem2OZKjAKBggqhkjOPQQDAzCBhTEL
      MAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UE
      BxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxKzApBgNVBAMT
      IkNPTU9ETyBFQ0MgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMDgwMzA2MDAw
      MDAwWhcNMzgwMTE4MjM1OTU5WjCBhTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdy
      ZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09N
      T0RPIENBIExpbWl0ZWQxKzApBgNVBAMTIkNPTU9ETyBFQ0MgQ2VydGlmaWNhdGlv
      biBBdXRob3JpdHkwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAQDR3svdcmCFYX7deSR
      FtSrYpn1PlILBs5BAH+X4QokPB0BBO490o0JlwzgdeT6+3eKKvUDYEs2ixYjFq0J
      cfRK9ChQtP6IHG4/bC8vCVlbpVsLM5niwz2J+Wos77LTBumjQjBAMB0GA1UdDgQW
      BBR1cacZSBm8nZ3qQUfflMRId5nTeTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/
      BAUwAwEB/zAKBggqhkjOPQQDAwNoADBlAjEA7wNbeqy3eApyt4jf/7VGFAkK+qDm
      fQjGGoe9GKhzvSbKYAydzpmfz1wPMOG+FDHqAjAU9JM8SaczepBGR7NjfRObTrdv
      GDeAU/7dIOA1mjbRxwG55tzd8/8dLDoWV9mSOdY=
      -----END CERTIFICATE-----

      # COMODO RSA Certification Authority
      -----BEGIN CERTIFICATE-----
      MIIF2DCCA8CgAwIBAgIQTKr5yttjb+Af907YWwOGnTANBgkqhkiG9w0BAQwFADCB
      hTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G
      A1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxKzApBgNV
      BAMTIkNPTU9ETyBSU0EgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTAwMTE5
      MDAwMDAwWhcNMzgwMTE4MjM1OTU5WjCBhTELMAkGA1UEBhMCR0IxGzAZBgNVBAgT
      EkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEaMBgGA1UEChMR
      Q09NT0RPIENBIExpbWl0ZWQxKzApBgNVBAMTIkNPTU9ETyBSU0EgQ2VydGlmaWNh
      dGlvbiBBdXRob3JpdHkwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCR
      6FSS0gpWsawNJN3Fz0RndJkrN6N9I3AAcbxT38T6KhKPS38QVr2fcHK3YX/JSw8X
      pz3jsARh7v8Rl8f0hj4K+j5c+ZPmNHrZFGvnnLOFoIJ6dq9xkNfs/Q36nGz637CC
      9BR++b7Epi9Pf5l/tfxnQ3K9DADWietrLNPtj5gcFKt+5eNu/Nio5JIk2kNrYrhV
      /erBvGy2i/MOjZrkm2xpmfh4SDBF1a3hDTxFYPwyllEnvGfDyi62a+pGx8cgoLEf
      Zd5ICLqkTqnyg0Y3hOvozIFIQ2dOciqbXL1MGyiKXCJ7tKuY2e7gUYPDCUZObT6Z
      +pUX2nwzV0E8jVHtC7ZcryxjGt9XyD+86V3Em69FmeKjWiS0uqlWPc9vqv9JWL7w
      qP/0uK3pN/u6uPQLOvnoQ0IeidiEyxPx2bvhiWC4jChWrBQdnArncevPDt09qZah
      SL0896+1DSJMwBGB7FY79tOi4lu3sgQiUpWAk2nojkxl8ZEDLXB0AuqLZxUpaVIC
      u9ffUGpVRr+goyhhf3DQw6KqLCGqR84onAZFdr+CGCe01a60y1Dma/RMhnEw6abf
      Fobg2P9A3fvQQoh/ozM6LlweQRGBY84YcWsr7KaKtzFcOmpH4MN5WdYgGq/yapiq
      crxXStJLnbsQ/LBMQeXtHT1eKJ2czL+zUdqnR+WEUwIDAQABo0IwQDAdBgNVHQ4E
      FgQUu69+Aj36pvE8hI6t7jiY7NkyMtQwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB
      /wQFMAMBAf8wDQYJKoZIhvcNAQEMBQADggIBAArx1UaEt65Ru2yyTUEUAJNMnMvl
      wFTPoCWOAvn9sKIN9SCYPBMtrFaisNZ+EZLpLrqeLppysb0ZRGxhNaKatBYSaVqM
      4dc+pBroLwP0rmEdEBsqpIt6xf4FpuHA1sj+nq6PK7o9mfjYcwlYRm6mnPTXJ9OV
      2jeDchzTc+CiR5kDOF3VSXkAKRzH7JsgHAckaVd4sjn8OoSgtZx8jb8uk2Intzna
      FxiuvTwJaP+EmzzV1gsD41eeFPfR60/IvYcjt7ZJQ3mFXLrrkguhxuhoqEwWsRqZ
      CuhTLJK7oQkYdQxlqHvLI7cawiiFwxv/0Cti76R7CZGYZ4wUAc1oBmpjIXUDgIiK
      boHGhfKppC3n9KUkEEeDys30jXlYsQab5xoq2Z0B15R97QNKyvDb6KkBPvVWmcke
      jkk9u+UJueBPSZI9FoJAzMxZxuY67RIuaTxslbH9qh17f4a+Hg4yRvv7E491f0yL
      S0Zj/gA0QHDBw7mh3aZw4gSzQbzpgJHqZJx64SIDqZxubw5lT2yHh17zbqD5daWb
      QOhTsiedSrnAdyGN/4fy3ryM7xfft0kL0fJuMAsaDk527RH89elWsn2/x20Kk4yl
      0MC2Hb46TpSi125sC8KKfPog88Tk5c0NqMuRkrF8hey1FGlmDoLnzc7ILaZRfyHB
      NVOFBkpdn627G190
      -----END CERTIFICATE-----

      # Certigna
      -----BEGIN CERTIFICATE-----
      MIIDqDCCApCgAwIBAgIJAP7c4wEPyUj/MA0GCSqGSIb3DQEBBQUAMDQxCzAJBgNV
      BAYTAkZSMRIwEAYDVQQKDAlEaGlteW90aXMxETAPBgNVBAMMCENlcnRpZ25hMB4X
      DTA3MDYyOTE1MTMwNVoXDTI3MDYyOTE1MTMwNVowNDELMAkGA1UEBhMCRlIxEjAQ
      BgNVBAoMCURoaW15b3RpczERMA8GA1UEAwwIQ2VydGlnbmEwggEiMA0GCSqGSIb3
      DQEBAQUAA4IBDwAwggEKAoIBAQDIaPHJ1tazNHUmgh7stL7qXOEm7RFHYeGifBZ4
      QCHkYJ5ayGPhxLGWkv8YbWkj4Sti993iNi+RB7lIzw7sebYs5zRLcAglozyHGxny
      gQcPOJAZ0xH+hrTy0V4eHpbNgGzOOzGTtvKg0KmVEn2lmsxryIRWijOp5yIVUxbw
      zBfsV1/pogqYCd7jX5xv3EjjhQsVWqa6n6xI4wmy9/Qy3l40vhx4XUJbzg4ij02Q
      130yGLMLLGq/jj8UEYkgDncUtT2UCIf3JR7VsmAA7G8qKCVuKj4YYxclPz5EIBb2
      JsglrgVKtOdjLPOMFlN+XPsRGgjBRmKfIrjxwo1p3Po6WAbfAgMBAAGjgbwwgbkw
      DwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUGu3+QTmQtCRZvgHyUtVF9lo53BEw
      ZAYDVR0jBF0wW4AUGu3+QTmQtCRZvgHyUtVF9lo53BGhOKQ2MDQxCzAJBgNVBAYT
      AkZSMRIwEAYDVQQKDAlEaGlteW90aXMxETAPBgNVBAMMCENlcnRpZ25hggkA/tzj
      AQ/JSP8wDgYDVR0PAQH/BAQDAgEGMBEGCWCGSAGG+EIBAQQEAwIABzANBgkqhkiG
      9w0BAQUFAAOCAQEAhQMeknH2Qq/ho2Ge6/PAD/Kl1NqV5ta+aDY9fm4fTIrv0Q8h
      bV6lUmPOEvjvKtpv6zf+EwLHyzs+ImvaYS5/1HI93TDhHkxAGYwP15zRgzB7mFnc
      fca5DClMoTOi62c6ZYTTluLtdkVwj7Ur3vkj1kluPBS1xp81HlDQwY9qcEQCYsuu
      HWhBp6pX6FOqB9IG9tUUBguRA3UsbHK1YZWaDYu5Def131TN3ubY1gkIl2PlwS6w
      t0QmwCbAr1UwnjvVNioZBPRcHv/PLLf/0P2HQBHVESO7SMAhqaQoLf0V+LBOK/Qw
      WyH8EZE0vkHve52Xdf+XlcCWWC/qu0bXu+TZLg==
      -----END CERTIFICATE-----

      # Certigna Root CA
      -----BEGIN CERTIFICATE-----
      MIIGWzCCBEOgAwIBAgIRAMrpG4nxVQMNo+ZBbcTjpuEwDQYJKoZIhvcNAQELBQAw
      WjELMAkGA1UEBhMCRlIxEjAQBgNVBAoMCURoaW15b3RpczEcMBoGA1UECwwTMDAw
      MiA0ODE0NjMwODEwMDAzNjEZMBcGA1UEAwwQQ2VydGlnbmEgUm9vdCBDQTAeFw0x
      MzEwMDEwODMyMjdaFw0zMzEwMDEwODMyMjdaMFoxCzAJBgNVBAYTAkZSMRIwEAYD
      VQQKDAlEaGlteW90aXMxHDAaBgNVBAsMEzAwMDIgNDgxNDYzMDgxMDAwMzYxGTAX
      BgNVBAMMEENlcnRpZ25hIFJvb3QgQ0EwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAw
      ggIKAoICAQDNGDllGlmx6mQWDoyUJJV8g9PFOSbcDO8WV43X2KyjQn+Cyu3NW9sO
      ty3tRQgXstmzy9YXUnIo245Onoq2C/mehJpNdt4iKVzSs9IGPjA5qXSjklYcoW9M
      CiBtnyN6tMbaLOQdLNyzKNAT8kxOAkmhVECe5uUFoC2EyP+YbNDrihqECB63aCPu
      I9Vwzm1RaRDuoXrC0SIxwoKF0vJVdlB8JXrJhFwLrN1CTivngqIkicuQstDuI7pm
      TLtipPlTWmR7fJj6o0ieD5Wupxj0auwuA0Wv8HT4Ks16XdG+RCYyKfHx9WzMfgIh
      C59vpD++nVPiz32pLHxYGpfhPTc3GGYo0kDFUYqMwy3OU4gkWGQwFsWq4NYKpkDf
      ePb1BHxpE4S80dGnBs8B92jAqFe7OmGtBIyT46388NtEbVncSVmurJqZNjBBe3Yz
      IoejwpKGbvlw7q6Hh5UbxHq9MfPU0uWZ/75I7HX1eBYdpnDBfzwboZL7z8g81sWT
      Co/1VTp2lc5ZmIoJlXcymoO6LAQ6l73UL77XbJuiyn1tJslV1c/DeVIICZkHJC1k
      JWumIWmbat10TWuXekG9qxf5kBdIjzb5LdXF2+6qhUVB+s06RbFo5jZMm5BX7CO5
      hwjCxAnxl4YqKE3idMDaxIzb3+KhF1nOJFl0Mdp//TBt2dzhauH8XwIDAQABo4IB
      GjCCARYwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYE
      FBiHVuBud+4kNTxOc5of1uHieX4rMB8GA1UdIwQYMBaAFBiHVuBud+4kNTxOc5of
      1uHieX4rMEQGA1UdIAQ9MDswOQYEVR0gADAxMC8GCCsGAQUFBwIBFiNodHRwczov
      L3d3d3cuY2VydGlnbmEuZnIvYXV0b3JpdGVzLzBtBgNVHR8EZjBkMC+gLaArhilo
      dHRwOi8vY3JsLmNlcnRpZ25hLmZyL2NlcnRpZ25hcm9vdGNhLmNybDAxoC+gLYYr
      aHR0cDovL2NybC5kaGlteW90aXMuY29tL2NlcnRpZ25hcm9vdGNhLmNybDANBgkq
      hkiG9w0BAQsFAAOCAgEAlLieT/DjlQgi581oQfccVdV8AOItOoldaDgvUSILSo3L
      6btdPrtcPbEo/uRTVRPPoZAbAh1fZkYJMyjhDSSXcNMQH+pkV5a7XdrnxIxPTGRG
      HVyH41neQtGbqH6mid2PHMkwgu07nM3A6RngatgCdTer9zQoKJHyBApPNeNgJgH6
      0BGM+RFq7q89w1DTj18zeTyGqHNFkIwgtnJzFyO+B2XleJINugHA64wcZr+shncB
      lA2c5uk5jR+mUYyZDDl34bSb+hxnV29qao6pK0xXeXpXIs/NX2NGjVxZOob4Mkdi
      o2cNGJHc+6Zr9UhhcyNZjgKnvETq9Emd8VRY+WCv2hikLyhF3HqgiIZd8zvn/yk1
      gPxkQ5Tm4xxvvq0OKmOZK8l+hfZx6AYDlf7ej0gcWtSS6Cvu5zHbugRqh5jnxV/v
      faci9wHYTfmJ0A6aBVmknpjZbyvKcL5kwlWj9Omvw5Ip3IgWJJk8jSaYtlu3zM63
      Nwf9JtmYhST/WSMDmu2dnajkXjjO11INb9I/bbEFa0nOipFGc/T2L/Coc3cOZayh
      jWZSaX5LaAzHHjcng6WMxwLkFM1JAbBzs/3GkDpv0mztO+7skb6iQ12LAEpmJURw
      3kAP+HwV96LOPNdeE4yBFxgX0b3xdxA61GU5wSesVywlVP+i2k+KYTlerj1KjL0=
      -----END CERTIFICATE-----

      # Certum EC-384 CA
      -----BEGIN CERTIFICATE-----
      MIICZTCCAeugAwIBAgIQeI8nXIESUiClBNAt3bpz9DAKBggqhkjOPQQDAzB0MQsw
      CQYDVQQGEwJQTDEhMB8GA1UEChMYQXNzZWNvIERhdGEgU3lzdGVtcyBTLkEuMScw
      JQYDVQQLEx5DZXJ0dW0gQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxGTAXBgNVBAMT
      EENlcnR1bSBFQy0zODQgQ0EwHhcNMTgwMzI2MDcyNDU0WhcNNDMwMzI2MDcyNDU0
      WjB0MQswCQYDVQQGEwJQTDEhMB8GA1UEChMYQXNzZWNvIERhdGEgU3lzdGVtcyBT
      LkEuMScwJQYDVQQLEx5DZXJ0dW0gQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxGTAX
      BgNVBAMTEENlcnR1bSBFQy0zODQgQ0EwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAATE
      KI6rGFtqvm5kN2PkzeyrOvfMobgOgknXhimfoZTy42B4mIF4Bk3y7JoOV2CDn7Tm
      Fy8as10CW4kjPMIRBSqniBMY81CE1700LCeJVf/OTOffph8oxPBUw7l8t1Ot68Kj
      QjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFI0GZnQkdjrzife81r1HfS+8
      EF9LMA4GA1UdDwEB/wQEAwIBBjAKBggqhkjOPQQDAwNoADBlAjADVS2m5hjEfO/J
      UG7BJw+ch69u1RsIGL2SKcHvlJF40jocVYli5RsJHrpka/F2tNQCMQC0QoSZ/6vn
      nvuRlydd3LBbMHHOXjgaatkl5+r3YZJW+OraNsKHZZYuciUvf9/DE8k=
      -----END CERTIFICATE-----

      # Certum Trusted Network CA
      -----BEGIN CERTIFICATE-----
      MIIDuzCCAqOgAwIBAgIDBETAMA0GCSqGSIb3DQEBBQUAMH4xCzAJBgNVBAYTAlBM
      MSIwIAYDVQQKExlVbml6ZXRvIFRlY2hub2xvZ2llcyBTLkEuMScwJQYDVQQLEx5D
      ZXJ0dW0gQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkxIjAgBgNVBAMTGUNlcnR1bSBU
      cnVzdGVkIE5ldHdvcmsgQ0EwHhcNMDgxMDIyMTIwNzM3WhcNMjkxMjMxMTIwNzM3
      WjB+MQswCQYDVQQGEwJQTDEiMCAGA1UEChMZVW5pemV0byBUZWNobm9sb2dpZXMg
      Uy5BLjEnMCUGA1UECxMeQ2VydHVtIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MSIw
      IAYDVQQDExlDZXJ0dW0gVHJ1c3RlZCBOZXR3b3JrIENBMIIBIjANBgkqhkiG9w0B
      AQEFAAOCAQ8AMIIBCgKCAQEA4/t9o3K6wvDJFIf1awFO4W5AB7ptJ11/91sts1rH
      UV+rpDKmYYe2bg+G0jACl/jXaVehGDldamR5xgFZrDwxSjh80gTSSyjoIF87B6LM
      TXPb865Px1bVWqeWifrzq2jUI4ZZJ88JJ7ysbnKDHDBy3+Ci6dLhdHUZvSqeexVU
      BBvXQzmtVSjF4hq79MDkrjhJM8x2hZ85RdKknvISjFH4fOQtf/WsX+sWn7Et0brM
      kUJ3TCXJkDhv2/DM+44el1k+1WBO5gUo7Ul5E0u6SNsv+XLTOcr+H9g0cvW0QM8x
      AcPs3hEtF10fuFDRXhmnad4HMyjKUJX5p1TLVIZQRan5SQIDAQABo0IwQDAPBgNV
      HRMBAf8EBTADAQH/MB0GA1UdDgQWBBQIds3LB/8k9sXN7buQvOKEN0Z19zAOBgNV
      HQ8BAf8EBAMCAQYwDQYJKoZIhvcNAQEFBQADggEBAKaorSLOAT2mo/9i0Eidi15y
      sHhE49wcrwn9I0j6vSrEuVUEtRCjjSfeC4Jj0O7eDDd5QVsisrCaQVymcODU0HfL
      I9MA4GxWL+FpDQ3Zqr8hgVDZBqWo/5U30Kr+4rP1mS1FhIrlQgnXdAIv94nYmem8
      J9RHjboNRhx3zxSkHLmkMcScKHQDNP8zGSal6Q10tz6XxnboJ5ajZt3hrvJBW8qY
      VoNzcOSGGtIxQbovvi0TWnZvTuhOgQ4/WwMioBK+ZlgRSssDxLQqKi2WF+A5VLxI
      03YnnZotBqbJ7DnSq9ufmgsnAjUpsUCV5/nonFWIGUbWtzT1fs45mtk48VH3Tyw=
      -----END CERTIFICATE-----

      # Certum Trusted Network CA 2
      -----BEGIN CERTIFICATE-----
      MIIF0jCCA7qgAwIBAgIQIdbQSk8lD8kyN/yqXhKN6TANBgkqhkiG9w0BAQ0FADCB
      gDELMAkGA1UEBhMCUEwxIjAgBgNVBAoTGVVuaXpldG8gVGVjaG5vbG9naWVzIFMu
      QS4xJzAlBgNVBAsTHkNlcnR1bSBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTEkMCIG
      A1UEAxMbQ2VydHVtIFRydXN0ZWQgTmV0d29yayBDQSAyMCIYDzIwMTExMDA2MDgz
      OTU2WhgPMjA0NjEwMDYwODM5NTZaMIGAMQswCQYDVQQGEwJQTDEiMCAGA1UEChMZ
      VW5pemV0byBUZWNobm9sb2dpZXMgUy5BLjEnMCUGA1UECxMeQ2VydHVtIENlcnRp
      ZmljYXRpb24gQXV0aG9yaXR5MSQwIgYDVQQDExtDZXJ0dW0gVHJ1c3RlZCBOZXR3
      b3JrIENBIDIwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQC9+Xj45tWA
      DGSdhhuWZGc/IjoedQF97/tcZ4zJzFxrqZHmuULlIEub2pt7uZld2ZuAS9eEQCsn
      0+i6MLs+CRqnSZXvK0AkwpfHp+6bJe+oCgCXhVqqndwpyeI1B+twTUrWwbNWuKFB
      OJvR+zF/j+Bf4bE/D44WSWDXBo0Y+aomEKsq09DRZ40bRr5HMNUuctHFY9rnY3lE
      fktjJImGLjQ/KUxSiyqnwOKRKIm5wFv5HdnnJ63/mgKXwcZQkpsCLL2puTRZCr+E
      Sv/f/rOf69me4Jgj7KZrdxYq28ytOxykh9xGc14ZYmhFV+SQgkK7QtbwYeDBoz1m
      o130GO6IyY0XRSmZMnUCMe4pJshrAua1YkV/NxVaI2iJ1D7eTiew8EAMvE0Xy02i
      sx7QBlrd9pPPV3WZ9fqGGmd4s7+W/jTcvedSVuWz5XV710GRBdxdaeOVDUO5/IOW
      OZV7bIBaTxNyxtd9KXpEulKkKtVBRgkg/iKgtlswjbyJDNXXcPiHUv3a76xRLgez
      Tv7QCdpw75j6VuZt27VXS9zlLCUVyJ4ueE742pyehizKV/Ma5ciSixqClnrDvFAS
      adgOWkaLOusm+iPJtrCBvkIApPjW/jAux9JG9uWOdf3yzLnQh1vMBhBgu4M1t15n
      3kfsmUjxpKEV/q2MYo45VU85FrmxY53/twIDAQABo0IwQDAPBgNVHRMBAf8EBTAD
      AQH/MB0GA1UdDgQWBBS2oVQ5AsOgP46KvPrU+Bym0ToO/TAOBgNVHQ8BAf8EBAMC
      AQYwDQYJKoZIhvcNAQENBQADggIBAHGlDs7k6b8/ONWJWsQCYftMxRQXLYtPU2sQ
      F/xlhMcQSZDe28cmk4gmb3DWAl45oPePq5a1pRNcgRRtDoGCERuKTsZPpd1iHkTf
      CVn0W3cLN+mLIMb4Ck4uWBzrM9DPhmDJ2vuAL55MYIR4PSFk1vtBHxgP58l1cb29
      XN40hz5BsA72udY/CROWFC/emh1auVbONTqwX3BNXuMp8SMoclm2q8KMZiYcdywm
      djWLKKdpoPk79SPdhRB0yZADVpHnr7pH1BKXESLjokmUbOe3lEu6LaTaM4tMpkT/
      WjzGHWTYtTHkpjx6qFcL2+1hGsvxznN3Y6SHb0xRONbkX8eftoEq5IVIeVheO/jb
      AoJnwTnbw3RLPTYe+SmTiGhbqEQZIfCn6IENLOiTNrQ3ssqwGyZ6miUfmpqAnksq
      P/ujmv5zMnHCnsZy4YpoJ/HkD7TETKVhk/iXEAcqMCWpuchxuO9ozC1+9eB+D4Ko
      b7a6bINDd82Kkhehnlt4Fj1F4jNy3eFmypnTycUm/Q1oBEauttmbjL4ZvrHG8hnj
      XALKLNhvSgfZyTXaQHXyxKcZb55CEJh15pWLYLztxRLXis7VmFxWlgPF7ncGNf/P
      5O4/E2Hu29othfDNrp2yGAlFw5Khchf8R7agCyzxxN5DaAhqXzvwdmP7zAYspsbi
      DrW5viSP
      -----END CERTIFICATE-----

      # Certum Trusted Root CA
      -----BEGIN CERTIFICATE-----
      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
      -----END CERTIFICATE-----

      # Comodo AAA Services root
      -----BEGIN CERTIFICATE-----
      MIIEMjCCAxqgAwIBAgIBATANBgkqhkiG9w0BAQUFADB7MQswCQYDVQQGEwJHQjEb
      MBkGA1UECAwSR3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHDAdTYWxmb3JkMRow
      GAYDVQQKDBFDb21vZG8gQ0EgTGltaXRlZDEhMB8GA1UEAwwYQUFBIENlcnRpZmlj
      YXRlIFNlcnZpY2VzMB4XDTA0MDEwMTAwMDAwMFoXDTI4MTIzMTIzNTk1OVowezEL
      MAkGA1UEBhMCR0IxGzAZBgNVBAgMEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UE
      BwwHU2FsZm9yZDEaMBgGA1UECgwRQ29tb2RvIENBIExpbWl0ZWQxITAfBgNVBAMM
      GEFBQSBDZXJ0aWZpY2F0ZSBTZXJ2aWNlczCCASIwDQYJKoZIhvcNAQEBBQADggEP
      ADCCAQoCggEBAL5AnfRu4ep2hxxNRUSOvkbIgwadwSr+GB+O5AL686tdUIoWMQua
      BtDFcCLNSS1UY8y2bmhGC1Pqy0wkwLxyTurxFa70VJoSCsN6sjNg4tqJVfMiWPPe
      3M/vg4aijJRPn2jymJBGhCfHdr/jzDUsi14HZGWCwEiwqJH5YZ92IFCokcdmtet4
      YgNW8IoaE+oxox6gmf049vYnMlhvB/VruPsUK6+3qszWY19zjNoFmag4qMsXeDZR
      rOme9Hg6jc8P2ULimAyrL58OAd7vn5lJ8S3frHRNG5i1R8XlKdH5kBjHYpy+g8cm
      ez6KJcfA3Z3mNWgQIJ2P2N7Sw4ScDV7oL8kCAwEAAaOBwDCBvTAdBgNVHQ4EFgQU
      oBEKIz6W8Qfs4q8p74Klf9AwpLQwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQF
      MAMBAf8wewYDVR0fBHQwcjA4oDagNIYyaHR0cDovL2NybC5jb21vZG9jYS5jb20v
      QUFBQ2VydGlmaWNhdGVTZXJ2aWNlcy5jcmwwNqA0oDKGMGh0dHA6Ly9jcmwuY29t
      b2RvLm5ldC9BQUFDZXJ0aWZpY2F0ZVNlcnZpY2VzLmNybDANBgkqhkiG9w0BAQUF
      AAOCAQEACFb8AvCb6P+k+tZ7xkSAzk/ExfYAWMymtrwUSWgEdujm7l3sAg9g1o1Q
      GE8mTgHj5rCl7r+8dFRBv/38ErjHT1r0iWAFf2C3BUrz9vHCv8S5dIa2LX1rzNLz
      Rt0vxuBqw8M0Ayx9lt1awg6nCpnBBYurDC/zXDrPbDdVCYfeU0BsWO/8tqtlbgT2
      G9w84FoVxp7Z8VlIMCFlA2zs6SFz7JsDoeA3raAVGI/6ugLOpyypEBMs1OUIJqsi
      l2D4kF501KKaU73yqWjgom7C12yxow+ev+to51byrvLjKzg6CYG1a4XXvi3tPxq3
      smPi9WIsgtRqAEFQ8TmDn5XpNpaYbg==
      -----END CERTIFICATE-----

      # D-TRUST BR Root CA 1 2020
      -----BEGIN CERTIFICATE-----
      MIIC2zCCAmCgAwIBAgIQfMmPK4TX3+oPyWWa00tNljAKBggqhkjOPQQDAzBIMQsw
      CQYDVQQGEwJERTEVMBMGA1UEChMMRC1UcnVzdCBHbWJIMSIwIAYDVQQDExlELVRS
      VVNUIEJSIFJvb3QgQ0EgMSAyMDIwMB4XDTIwMDIxMTA5NDUwMFoXDTM1MDIxMTA5
      NDQ1OVowSDELMAkGA1UEBhMCREUxFTATBgNVBAoTDEQtVHJ1c3QgR21iSDEiMCAG
      A1UEAxMZRC1UUlVTVCBCUiBSb290IENBIDEgMjAyMDB2MBAGByqGSM49AgEGBSuB
      BAAiA2IABMbLxyjR+4T1mu9CFCDhQ2tuda38KwOE1HaTJddZO0Flax7mNCq7dPYS
      zuht56vkPE4/RAiLzRZxy7+SmfSk1zxQVFKQhYN4lGdnoxwJGT11NIXe7WB9xwy0
      QVK5buXuQqOCAQ0wggEJMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFHOREKv/
      VbNafAkl1bK6CKBrqx9tMA4GA1UdDwEB/wQEAwIBBjCBxgYDVR0fBIG+MIG7MD6g
      PKA6hjhodHRwOi8vY3JsLmQtdHJ1c3QubmV0L2NybC9kLXRydXN0X2JyX3Jvb3Rf
      Y2FfMV8yMDIwLmNybDB5oHegdYZzbGRhcDovL2RpcmVjdG9yeS5kLXRydXN0Lm5l
      dC9DTj1ELVRSVVNUJTIwQlIlMjBSb290JTIwQ0ElMjAxJTIwMjAyMCxPPUQtVHJ1
      c3QlMjBHbWJILEM9REU/Y2VydGlmaWNhdGVyZXZvY2F0aW9ubGlzdDAKBggqhkjO
      PQQDAwNpADBmAjEAlJAtE/rhY/hhY+ithXhUkZy4kzg+GkHaQBZTQgjKL47xPoFW
      wKrY7RjEsK70PvomAjEA8yjixtsrmfu3Ubgko6SUeho/5jbiA1czijDLgsfWFBHV
      dWNbFJWcHwHP2NVypw87
      -----END CERTIFICATE-----

      # D-TRUST EV Root CA 1 2020
      -----BEGIN CERTIFICATE-----
      MIIC2zCCAmCgAwIBAgIQXwJB13qHfEwDo6yWjfv/0DAKBggqhkjOPQQDAzBIMQsw
      CQYDVQQGEwJERTEVMBMGA1UEChMMRC1UcnVzdCBHbWJIMSIwIAYDVQQDExlELVRS
      VVNUIEVWIFJvb3QgQ0EgMSAyMDIwMB4XDTIwMDIxMTEwMDAwMFoXDTM1MDIxMTA5
      NTk1OVowSDELMAkGA1UEBhMCREUxFTATBgNVBAoTDEQtVHJ1c3QgR21iSDEiMCAG
      A1UEAxMZRC1UUlVTVCBFViBSb290IENBIDEgMjAyMDB2MBAGByqGSM49AgEGBSuB
      BAAiA2IABPEL3YZDIBnfl4XoIkqbz52Yv7QFJsnL46bSj8WeeHsxiamJrSc8ZRCC
      /N/DnU7wMyPE0jL1HLDfMxddxfCxivnvubcUyilKwg+pf3VlSSowZ/Rk99Yad9rD
      wpdhQntJraOCAQ0wggEJMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFH8QARY3
      OqQo5FD4pPfsazK2/umLMA4GA1UdDwEB/wQEAwIBBjCBxgYDVR0fBIG+MIG7MD6g
      PKA6hjhodHRwOi8vY3JsLmQtdHJ1c3QubmV0L2NybC9kLXRydXN0X2V2X3Jvb3Rf
      Y2FfMV8yMDIwLmNybDB5oHegdYZzbGRhcDovL2RpcmVjdG9yeS5kLXRydXN0Lm5l
      dC9DTj1ELVRSVVNUJTIwRVYlMjBSb290JTIwQ0ElMjAxJTIwMjAyMCxPPUQtVHJ1
      c3QlMjBHbWJILEM9REU/Y2VydGlmaWNhdGVyZXZvY2F0aW9ubGlzdDAKBggqhkjO
      PQQDAwNpADBmAjEAyjzGKnXCXnViOTYAYFqLwZOZzNnbQTs7h5kXO9XMT8oi96CA
      y/m0sRtW9XLS/BnRAjEAkfcwkz8QRitxpNA7RJvAKQIFskF3UfN5Wp6OFKBOQtJb
      gfM0agPnIjhQW+0ZT0MW
      -----END CERTIFICATE-----

      # D-TRUST Root Class 3 CA 2 2009
      -----BEGIN CERTIFICATE-----
      MIIEMzCCAxugAwIBAgIDCYPzMA0GCSqGSIb3DQEBCwUAME0xCzAJBgNVBAYTAkRF
      MRUwEwYDVQQKDAxELVRydXN0IEdtYkgxJzAlBgNVBAMMHkQtVFJVU1QgUm9vdCBD
      bGFzcyAzIENBIDIgMjAwOTAeFw0wOTExMDUwODM1NThaFw0yOTExMDUwODM1NTha
      ME0xCzAJBgNVBAYTAkRFMRUwEwYDVQQKDAxELVRydXN0IEdtYkgxJzAlBgNVBAMM
      HkQtVFJVU1QgUm9vdCBDbGFzcyAzIENBIDIgMjAwOTCCASIwDQYJKoZIhvcNAQEB
      BQADggEPADCCAQoCggEBANOySs96R+91myP6Oi/WUEWJNTrGa9v+2wBoqOADER03
      UAifTUpolDWzU9GUY6cgVq/eUXjsKj3zSEhQPgrfRlWLJ23DEE0NkVJD2IfgXU42
      tSHKXzlABF9bfsyjxiupQB7ZNoTWSPOSHjRGICTBpFGOShrvUD9pXRl/RcPHAY9R
      ySPocq60vFYJfxLLHLGvKZAKyVXMD9O0Gu1HNVpK7ZxzBCHQqr0ME7UAyiZsxGsM
      lFqVlNpQmvH/pStmMaTJOKDfHR+4CS7zp+hnUquVH+BGPtikw8paxTGA6Eian5Rp
      /hnd2HN8gcqW3o7tszIFZYQ05ub9VxC1X3a/L7AQDcUCAwEAAaOCARowggEWMA8G
      A1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFP3aFMSfMN4hvR5COfyrYyNJ4PGEMA4G
      A1UdDwEB/wQEAwIBBjCB0wYDVR0fBIHLMIHIMIGAoH6gfIZ6bGRhcDovL2RpcmVj
      dG9yeS5kLXRydXN0Lm5ldC9DTj1ELVRSVVNUJTIwUm9vdCUyMENsYXNzJTIwMyUy
      MENBJTIwMiUyMDIwMDksTz1ELVRydXN0JTIwR21iSCxDPURFP2NlcnRpZmljYXRl
      cmV2b2NhdGlvbmxpc3QwQ6BBoD+GPWh0dHA6Ly93d3cuZC10cnVzdC5uZXQvY3Js
      L2QtdHJ1c3Rfcm9vdF9jbGFzc18zX2NhXzJfMjAwOS5jcmwwDQYJKoZIhvcNAQEL
      BQADggEBAH+X2zDI36ScfSF6gHDOFBJpiBSVYEQBrLLpME+bUMJm2H6NMLVwMeni
      acfzcNsgFYbQDfC+rAF1hM5+n02/t2A7nPPKHeJeaNijnZflQGDSNiH+0LS4F9p0
      o3/U37CYAqxva2ssJSRyoWXuJVrl5jLn8t+rSfrzkGkj2wTZ51xY/GXUl77M/C4K
      zCUqNQT4YJEVdT1B/yMfGchs64JTBKbkTCJNjYy6zltz7GRUUG3RnFX7acM2w4y8
      PIWmawomDeCTmGCufsYkl4phX5GOZpIJhzbNi5stPvZR1FDUWSi9g/LMKHtThm3Y
      Johw1+qRzT65ysCQblrGXnRl11z+o+I=
      -----END CERTIFICATE-----

      # D-TRUST Root Class 3 CA 2 EV 2009
      -----BEGIN CERTIFICATE-----
      MIIEQzCCAyugAwIBAgIDCYP0MA0GCSqGSIb3DQEBCwUAMFAxCzAJBgNVBAYTAkRF
      MRUwEwYDVQQKDAxELVRydXN0IEdtYkgxKjAoBgNVBAMMIUQtVFJVU1QgUm9vdCBD
      bGFzcyAzIENBIDIgRVYgMjAwOTAeFw0wOTExMDUwODUwNDZaFw0yOTExMDUwODUw
      NDZaMFAxCzAJBgNVBAYTAkRFMRUwEwYDVQQKDAxELVRydXN0IEdtYkgxKjAoBgNV
      BAMMIUQtVFJVU1QgUm9vdCBDbGFzcyAzIENBIDIgRVYgMjAwOTCCASIwDQYJKoZI
      hvcNAQEBBQADggEPADCCAQoCggEBAJnxhDRwui+3MKCOvXwEz75ivJn9gpfSegpn
      ljgJ9hBOlSJzmY3aFS3nBfwZcyK3jpgAvDw9rKFs+9Z5JUut8Mxk2og+KbgPCdM0
      3TP1YtHhzRnp7hhPTFiu4h7WDFsVWtg6uMQYZB7jM7K1iXdODL/ZlGsTl28So/6Z
      qQTMFexgaDbtCHu39b+T7WYxg4zGcTSHThfqr4uRjRxWQa4iN1438h3Z0S0NL2lR
      p75mpoo6Kr3HGrHhFPC+Oh25z1uxav60sUYgovseO3Dvk5h9jHOW8sXvhXCtKSb8
      HgQ+HKDYD8tSg2J87otTlZCpV6LqYQXY+U3EJ/pure3511H3a6UCAwEAAaOCASQw
      ggEgMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFNOUikxiEyoZLsyvcop9Ntea
      HNxnMA4GA1UdDwEB/wQEAwIBBjCB3QYDVR0fBIHVMIHSMIGHoIGEoIGBhn9sZGFw
      Oi8vZGlyZWN0b3J5LmQtdHJ1c3QubmV0L0NOPUQtVFJVU1QlMjBSb290JTIwQ2xh
      c3MlMjAzJTIwQ0ElMjAyJTIwRVYlMjAyMDA5LE89RC1UcnVzdCUyMEdtYkgsQz1E
      RT9jZXJ0aWZpY2F0ZXJldm9jYXRpb25saXN0MEagRKBChkBodHRwOi8vd3d3LmQt
      dHJ1c3QubmV0L2NybC9kLXRydXN0X3Jvb3RfY2xhc3NfM19jYV8yX2V2XzIwMDku
      Y3JsMA0GCSqGSIb3DQEBCwUAA4IBAQA07XtaPKSUiO8aEXUHL7P+PPoeUSbrh/Yp
      3uDx1MYkCenBz1UbtDDZzhr+BlGmFaQt77JLvyAoJUnRpjZ3NOhk31KxEcdzes05
      nsKtjHEh8lprr988TlWvsoRlFIm5d8sqMb7Po23Pb0iUMkZv53GMoKaEGTcH8gNF
      CSuGdXzfX2lXANtu2KZyIktQ1HWYVt+3GP9DQ1CuekR78HlR10M9p9OB0/DJT7na
      xpeG0ILD5EJt/rDiZE4OJudANCa1CInXCGNjOCd1HjPqbqjdn5lPdE2BiYBL3ZqX
      KVwvvoFBuYz/6n1gBp7N1z3TLqMVvKjmJuVvw9y4AyHqnxbxLFS1
      -----END CERTIFICATE-----

      # DigiCert Assured ID Root CA
      -----BEGIN CERTIFICATE-----
      MIIDtzCCAp+gAwIBAgIQDOfg5RfYRv6P5WD8G/AwOTANBgkqhkiG9w0BAQUFADBl
      MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3
      d3cuZGlnaWNlcnQuY29tMSQwIgYDVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJv
      b3QgQ0EwHhcNMDYxMTEwMDAwMDAwWhcNMzExMTEwMDAwMDAwWjBlMQswCQYDVQQG
      EwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNl
      cnQuY29tMSQwIgYDVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJvb3QgQ0EwggEi
      MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCtDhXO5EOAXLGH87dg+XESpa7c
      JpSIqvTO9SA5KFhgDPiA2qkVlTJhPLWxKISKityfCgyDF3qPkKyK53lTXDGEKvYP
      mDI2dsze3Tyoou9q+yHyUmHfnyDXH+Kx2f4YZNISW1/5WBg1vEfNoTb5a3/UsDg+
      wRvDjDPZ2C8Y/igPs6eD1sNuRMBhNZYW/lmci3Zt1/GiSw0r/wty2p5g0I6QNcZ4
      VYcgoc/lbQrISXwxmDNsIumH0DJaoroTghHtORedmTpyoeb6pNnVFzF1roV9Iq4/
      AUaG9ih5yLHa5FcXxH4cDrC0kqZWs72yl+2qp/C3xag/lRbQ/6GW6whfGHdPAgMB
      AAGjYzBhMA4GA1UdDwEB/wQEAwIBhjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBRF66Kv9JLLgjEtUYunpyGd823IDzAfBgNVHSMEGDAWgBRF66Kv9JLLgjEtUYun
      pyGd823IDzANBgkqhkiG9w0BAQUFAAOCAQEAog683+Lt8ONyc3pklL/3cmbYMuRC
      dWKuh+vy1dneVrOfzM4UKLkNl2BcEkxY5NM9g0lFWJc1aRqoR+pWxnmrEthngYTf
      fwk8lOa4JiwgvT2zKIn3X/8i4peEH+ll74fg38FnSbNd67IJKusm7Xi+fT8r87cm
      NW1fiQG2SVufAQWbqz0lwcy2f8Lxb4bG+mRo64EtlOtCt/qMHt1i8b5QZ7dsvfPx
      H2sMNgcWfzd8qVttevESRmCD1ycEvkvOl77DZypoEd+A5wwzZr8TDRRu838fYxAe
      +o0bJW1sj6W3YQGx0qMmoRBxna3iw/nDmVG3KwcIzi7mULKn+gpFL6Lw8g==
      -----END CERTIFICATE-----

      # DigiCert Assured ID Root G2
      -----BEGIN CERTIFICATE-----
      MIIDljCCAn6gAwIBAgIQC5McOtY5Z+pnI7/Dr5r0SzANBgkqhkiG9w0BAQsFADBl
      MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3
      d3cuZGlnaWNlcnQuY29tMSQwIgYDVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJv
      b3QgRzIwHhcNMTMwODAxMTIwMDAwWhcNMzgwMTE1MTIwMDAwWjBlMQswCQYDVQQG
      EwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNl
      cnQuY29tMSQwIgYDVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJvb3QgRzIwggEi
      MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDZ5ygvUj82ckmIkzTz+GoeMVSA
      n61UQbVH35ao1K+ALbkKz3X9iaV9JPrjIgwrvJUXCzO/GU1BBpAAvQxNEP4Htecc
      biJVMWWXvdMX0h5i89vqbFCMP4QMls+3ywPgym2hFEwbid3tALBSfK+RbLE4E9Hp
      EgjAALAcKxHad3A2m67OeYfcgnDmCXRwVWmvo2ifv922ebPynXApVfSr/5Vh88lA
      bx3RvpO704gqu52/clpWcTs/1PPRCv4o76Pu2ZmvA9OPYLfykqGxvYmJHzDNw6Yu
      YjOuFgJ3RFrngQo8p0Quebg/BLxcoIfhG69Rjs3sLPr4/m3wOnyqi+RnlTGNAgMB
      AAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgGGMB0GA1UdDgQW
      BBTOw0q5mVXyuNtgv6l+vVa1lzan1jANBgkqhkiG9w0BAQsFAAOCAQEAyqVVjOPI
      QW5pJ6d1Ee88hjZv0p3GeDgdaZaikmkuOGybfQTUiaWxMTeKySHMq2zNixya1r9I
      0jJmwYrA8y8678Dj1JGG0VDjA9tzd29KOVPt3ibHtX2vK0LRdWLjSisCx1BL4Gni
      lmwORGYQRI+tBev4eaymG+g3NJ1TyWGqolKvSnAWhsI6yLETcDbYz+70CjTVW0z9
      B5yiutkBclzzTcHdDrEcDcRjvq30FPuJ7KJBDkzMyFdA0G4Dqs0MjomZmWzwPDCv
      ON9vvKO+KSAnq3T/EyJ43pdSVR6DtVQgA+6uwE9W3jfMw3+qBCe703e4YtsXfJwo
      IhNzbM8m9Yop5w==
      -----END CERTIFICATE-----

      # DigiCert Assured ID Root G3
      -----BEGIN CERTIFICATE-----
      MIICRjCCAc2gAwIBAgIQC6Fa+h3foLVJRK/NJKBs7DAKBggqhkjOPQQDAzBlMQsw
      CQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cu
      ZGlnaWNlcnQuY29tMSQwIgYDVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJvb3Qg
      RzMwHhcNMTMwODAxMTIwMDAwWhcNMzgwMTE1MTIwMDAwWjBlMQswCQYDVQQGEwJV
      UzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQu
      Y29tMSQwIgYDVQQDExtEaWdpQ2VydCBBc3N1cmVkIElEIFJvb3QgRzMwdjAQBgcq
      hkjOPQIBBgUrgQQAIgNiAAQZ57ysRGXtzbg/WPuNsVepRC0FFfLvC/8QdJ+1YlJf
      Zn4f5dwbRXkLzMZTCp2NXQLZqVneAlr2lSoOjThKiknGvMYDOAdfVdp+CW7if17Q
      RSAPWXYQ1qAk8C3eNvJsKTmjQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/
      BAQDAgGGMB0GA1UdDgQWBBTL0L2p4ZgFUaFNN6KDec6NHSrkhDAKBggqhkjOPQQD
      AwNnADBkAjAlpIFFAmsSS3V0T8gj43DydXLefInwz5FyYZ5eEJJZVrmDxxDnOOlY
      JjZ91eQ0hjkCMHw2U/Aw5WJjOpnitqM7mzT6HtoQknFekROn3aRukswy1vUhZscv
      6pZjamVFkpUBtA==
      -----END CERTIFICATE-----

      # DigiCert Global Root CA
      -----BEGIN CERTIFICATE-----
      MIIDrzCCApegAwIBAgIQCDvgVpBCRrGhdWrJWZHHSjANBgkqhkiG9w0BAQUFADBh
      MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3
      d3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBD
      QTAeFw0wNjExMTAwMDAwMDBaFw0zMTExMTAwMDAwMDBaMGExCzAJBgNVBAYTAlVT
      MRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5j
      b20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290IENBMIIBIjANBgkqhkiG
      9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4jvhEXLeqKTTo1eqUKKPC3eQyaKl7hLOllsB
      CSDMAZOnTjC3U/dDxGkAV53ijSLdhwZAAIEJzs4bg7/fzTtxRuLWZscFs3YnFo97
      nh6Vfe63SKMI2tavegw5BmV/Sl0fvBf4q77uKNd0f3p4mVmFaG5cIzJLv07A6Fpt
      43C/dxC//AH2hdmoRBBYMql1GNXRor5H4idq9Joz+EkIYIvUX7Q6hL+hqkpMfT7P
      T19sdl6gSzeRntwi5m3OFBqOasv+zbMUZBfHWymeMr/y7vrTC0LUq7dBMtoM1O/4
      gdW7jVg/tRvoSSiicNoxBN33shbyTApOB6jtSj1etX+jkMOvJwIDAQABo2MwYTAO
      BgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUA95QNVbR
      TLtm8KPiGxvDl7I90VUwHwYDVR0jBBgwFoAUA95QNVbRTLtm8KPiGxvDl7I90VUw
      DQYJKoZIhvcNAQEFBQADggEBAMucN6pIExIK+t1EnE9SsPTfrgT1eXkIoyQY/Esr
      hMAtudXH/vTBH1jLuG2cenTnmCmrEbXjcKChzUyImZOMkXDiqw8cvpOp/2PV5Adg
      06O/nVsJ8dWO41P0jmP6P6fbtGbfYmbW0W5BjfIttep3Sp+dWOIrWcBAI+0tKIJF
      PnlUkiaY4IBIqDfv8NZ5YBberOgOzW6sRBc4L0na4UU+Krk2U886UAb3LujEV0ls
      YSEY1QSteDwsOoBrp+uvFRTp2InBuThs4pFsiv9kuXclVzDAGySj4dzp30d8tbQk
      CAUw7C29C79Fv1C5qfPrmAESrciIxpg0X40KPMbp1ZWVbd4=
      -----END CERTIFICATE-----

      # DigiCert Global Root G2
      -----BEGIN CERTIFICATE-----
      MIIDjjCCAnagAwIBAgIQAzrx5qcRqaC7KGSxHQn65TANBgkqhkiG9w0BAQsFADBh
      MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3
      d3cuZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBH
      MjAeFw0xMzA4MDExMjAwMDBaFw0zODAxMTUxMjAwMDBaMGExCzAJBgNVBAYTAlVT
      MRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5j
      b20xIDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290IEcyMIIBIjANBgkqhkiG
      9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuzfNNNx7a8myaJCtSnX/RrohCgiN9RlUyfuI
      2/Ou8jqJkTx65qsGGmvPrC3oXgkkRLpimn7Wo6h+4FR1IAWsULecYxpsMNzaHxmx
      1x7e/dfgy5SDN67sH0NO3Xss0r0upS/kqbitOtSZpLYl6ZtrAGCSYP9PIUkY92eQ
      q2EGnI/yuum06ZIya7XzV+hdG82MHauVBJVJ8zUtluNJbd134/tJS7SsVQepj5Wz
      tCO7TG1F8PapspUwtP1MVYwnSlcUfIKdzXOS0xZKBgyMUNGPHgm+F6HmIcr9g+UQ
      vIOlCsRnKPZzFBQ9RnbDhxSJITRNrw9FDKZJobq7nMWxM4MphQIDAQABo0IwQDAP
      BgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBhjAdBgNVHQ4EFgQUTiJUIBiV
      5uNu5g/6+rkS7QYXjzkwDQYJKoZIhvcNAQELBQADggEBAGBnKJRvDkhj6zHd6mcY
      1Yl9PMWLSn/pvtsrF9+wX3N3KjITOYFnQoQj8kVnNeyIv/iPsGEMNKSuIEyExtv4
      NeF22d+mQrvHRAiGfzZ0JFrabA0UWTW98kndth/Jsw1HKj2ZL7tcu7XUIOGZX1NG
      Fdtom/DzMNU+MeKNhJ7jitralj41E6Vf8PlwUHBHQRFXGU7Aj64GxJUTFy8bJZ91
      8rGOmaFvE7FBcf6IKshPECBV1/MUReXgRPTqh5Uykw7+U0b6LJ3/iyK5S9kJRaTe
      pLiaWN0bfVKfjllDiIGknibVb63dDcY3fe0Dkhvld1927jyNxF1WW6LZZm6zNTfl
      MrY=
      -----END CERTIFICATE-----

      # DigiCert Global Root G3
      -----BEGIN CERTIFICATE-----
      MIICPzCCAcWgAwIBAgIQBVVWvPJepDU1w6QP1atFcjAKBggqhkjOPQQDAzBhMQsw
      CQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cu
      ZGlnaWNlcnQuY29tMSAwHgYDVQQDExdEaWdpQ2VydCBHbG9iYWwgUm9vdCBHMzAe
      Fw0xMzA4MDExMjAwMDBaFw0zODAxMTUxMjAwMDBaMGExCzAJBgNVBAYTAlVTMRUw
      EwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdpY2VydC5jb20x
      IDAeBgNVBAMTF0RpZ2lDZXJ0IEdsb2JhbCBSb290IEczMHYwEAYHKoZIzj0CAQYF
      K4EEACIDYgAE3afZu4q4C/sLfyHS8L6+c/MzXRq8NOrexpu80JX28MzQC7phW1FG
      fp4tn+6OYwwX7Adw9c+ELkCDnOg/QW07rdOkFFk2eJ0DQ+4QE2xy3q6Ip6FrtUPO
      Z9wj/wMco+I+o0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBhjAd
      BgNVHQ4EFgQUs9tIpPmhxdiuNkHMEWNpYim8S8YwCgYIKoZIzj0EAwMDaAAwZQIx
      AK288mw/EkrRLTnDCgmXc/SINoyIJ7vmiI1Qhadj+Z4y3maTD/HMsQmP3Wyr+mt/
      oAIwOWZbwmSNuJ5Q3KjVSaLtx9zRSX8XAbjIho9OjIgrqJqpisXRAL34VOKa5Vt8
      sycX
      -----END CERTIFICATE-----

      # DigiCert High Assurance EV Root CA
      -----BEGIN CERTIFICATE-----
      MIIDxTCCAq2gAwIBAgIQAqxcJmoLQJuPC3nyrkYldzANBgkqhkiG9w0BAQUFADBs
      MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3
      d3cuZGlnaWNlcnQuY29tMSswKQYDVQQDEyJEaWdpQ2VydCBIaWdoIEFzc3VyYW5j
      ZSBFViBSb290IENBMB4XDTA2MTExMDAwMDAwMFoXDTMxMTExMDAwMDAwMFowbDEL
      MAkGA1UEBhMCVVMxFTATBgNVBAoTDERpZ2lDZXJ0IEluYzEZMBcGA1UECxMQd3d3
      LmRpZ2ljZXJ0LmNvbTErMCkGA1UEAxMiRGlnaUNlcnQgSGlnaCBBc3N1cmFuY2Ug
      RVYgUm9vdCBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMbM5XPm
      +9S75S0tMqbf5YE/yc0lSbZxKsPVlDRnogocsF9ppkCxxLeyj9CYpKlBWTrT3JTW
      PNt0OKRKzE0lgvdKpVMSOO7zSW1xkX5jtqumX8OkhPhPYlG++MXs2ziS4wblCJEM
      xChBVfvLWokVfnHoNb9Ncgk9vjo4UFt3MRuNs8ckRZqnrG0AFFoEt7oT61EKmEFB
      Ik5lYYeBQVCmeVyJ3hlKV9Uu5l0cUyx+mM0aBhakaHPQNAQTXKFx01p8VdteZOE3
      hzBWBOURtCmAEvF5OYiiAhF8J2a3iLd48soKqDirCmTCv2ZdlYTBoSUeh10aUAsg
      EsxBu24LUTi4S8sCAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgGGMA8GA1UdEwEB/wQF
      MAMBAf8wHQYDVR0OBBYEFLE+w2kD+L9HAdSYJhoIAu9jZCvDMB8GA1UdIwQYMBaA
      FLE+w2kD+L9HAdSYJhoIAu9jZCvDMA0GCSqGSIb3DQEBBQUAA4IBAQAcGgaX3Nec
      nzyIZgYIVyHbIUf4KmeqvxgydkAQV8GK83rZEWWONfqe/EW1ntlMMUu4kehDLI6z
      eM7b41N5cdblIZQB2lWHmiRk9opmzN6cN82oNLFpmyPInngiK3BD41VHMWEZ71jF
      hS9OMPagMRYjyOfiZRYzy78aG6A9+MpeizGLYAiJLQwGXFK3xPkKmNEVX58Svnw2
      Yzi9RKR/5CYrCsSXaQ3pjOLAEFe4yHYSkVXySGnYvCoCWw9E1CAx2/S6cCZdkGCe
      vEsXCS+0yx5DaMkHJ8HSXPfqIbloEpw8nL+e/IBcm2PN7EeqJSdnoDfzAIJ9VNep
      +OkuE6N36B9K
      -----END CERTIFICATE-----

      # DigiCert Trusted Root G4
      -----BEGIN CERTIFICATE-----
      MIIFkDCCA3igAwIBAgIQBZsbV56OITLiOQe9p3d1XDANBgkqhkiG9w0BAQwFADBi
      MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3
      d3cuZGlnaWNlcnQuY29tMSEwHwYDVQQDExhEaWdpQ2VydCBUcnVzdGVkIFJvb3Qg
      RzQwHhcNMTMwODAxMTIwMDAwWhcNMzgwMTE1MTIwMDAwWjBiMQswCQYDVQQGEwJV
      UzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3d3cuZGlnaWNlcnQu
      Y29tMSEwHwYDVQQDExhEaWdpQ2VydCBUcnVzdGVkIFJvb3QgRzQwggIiMA0GCSqG
      SIb3DQEBAQUAA4ICDwAwggIKAoICAQC/5pBzaN675F1KPDAiMGkz7MKnJS7JIT3y
      ithZwuEppz1Yq3aaza57G4QNxDAf8xukOBbrVsaXbR2rsnnyyhHS5F/WBTxSD1If
      xp4VpX6+n6lXFllVcq9ok3DCsrp1mWpzMpTREEQQLt+C8weE5nQ7bXHiLQwb7iDV
      ySAdYyktzuxeTsiT+CFhmzTrBcZe7FsavOvJz82sNEBfsXpm7nfISKhmV1efVFiO
      DCu3T6cw2Vbuyntd463JT17lNecxy9qTXtyOj4DatpGYQJB5w3jHtrHEtWoYOAMQ
      jdjUN6QuBX2I9YI+EJFwq1WCQTLX2wRzKm6RAXwhTNS8rhsDdV14Ztk6MUSaM0C/
      CNdaSaTC5qmgZ92kJ7yhTzm1EVgX9yRcRo9k98FpiHaYdj1ZXUJ2h4mXaXpI8OCi
      EhtmmnTK3kse5w5jrubU75KSOp493ADkRSWJtppEGSt+wJS00mFt6zPZxd9LBADM
      fRyVw4/3IbKyEbe7f/LVjHAsQWCqsWMYRJUadmJ+9oCw++hkpjPRiQfhvbfmQ6QY
      uKZ3AeEPlAwhHbJUKSWJbOUOUlFHdL4mrLZBdd56rF+NP8m800ERElvlEFDrMcXK
      chYiCd98THU/Y+whX8QgUWtvsauGi0/C1kVfnSD8oR7FwI+isX4KJpn15GkvmB0t
      9dmpsh3lGwIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIB
      hjAdBgNVHQ4EFgQU7NfjgtJxXWRM3y5nP+e6mK4cD08wDQYJKoZIhvcNAQEMBQAD
      ggIBALth2X2pbL4XxJEbw6GiAI3jZGgPVs93rnD5/ZpKmbnJeFwMDF/k5hQpVgs2
      SV1EY+CtnJYYZhsjDT156W1r1lT40jzBQ0CuHVD1UvyQO7uYmWlrx8GnqGikJ9yd
      +SeuMIW59mdNOj6PWTkiU0TryF0Dyu1Qen1iIQqAyHNm0aAFYF/opbSnr6j3bTWc
      fFqK1qI4mfN4i/RN0iAL3gTujJtHgXINwBQy7zBZLq7gcfJW5GqXb5JQbZaNaHqa
      sjYUegbyJLkJEVDXCLG4iXqEI2FCKeWjzaIgQdfRnGTZ6iahixTXTBmyUEFxPT9N
      cCOGDErcgdLMMpSEDQgJlxxPwO5rIHQw0uA5NBCFIRUBCOhVMt5xSdkoF1BN5r5N
      0XWs0Mr7QbhDparTwwVETyw2m+L64kW4I1NsBm9nVX9GtUw/bihaeSbSpKhil9Ie
      4u1Ki7wb/UdKDd9nZn6yW0HQO+T0O/QEY+nvwlQAUaCKKsnOeMzV6ocEGLPOr0mI
      r/OSmbaz5mEP0oUA51Aa5BuVnRmhuZyxm7EAHu/QD09CbMkKvO5D+jpxpchNJqU1
      /YldvIViHTLSoCtU7ZpXwdv6EM8Zt4tKG48BtieVU+i2iW1bvGjUI+iLUaJW+fCm
      gKDWHrO8Dw9TdSmq6hN35N6MgSGtBxBHEa2HPQfRdbzP82Z+
      -----END CERTIFICATE-----

      # E-Tugra Certification Authority
      -----BEGIN CERTIFICATE-----
      MIIGSzCCBDOgAwIBAgIIamg+nFGby1MwDQYJKoZIhvcNAQELBQAwgbIxCzAJBgNV
      BAYTAlRSMQ8wDQYDVQQHDAZBbmthcmExQDA+BgNVBAoMN0UtVHXEn3JhIEVCRyBC
      aWxpxZ9pbSBUZWtub2xvamlsZXJpIHZlIEhpem1ldGxlcmkgQS7Fni4xJjAkBgNV
      BAsMHUUtVHVncmEgU2VydGlmaWthc3lvbiBNZXJrZXppMSgwJgYDVQQDDB9FLVR1
      Z3JhIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTEzMDMwNTEyMDk0OFoXDTIz
      MDMwMzEyMDk0OFowgbIxCzAJBgNVBAYTAlRSMQ8wDQYDVQQHDAZBbmthcmExQDA+
      BgNVBAoMN0UtVHXEn3JhIEVCRyBCaWxpxZ9pbSBUZWtub2xvamlsZXJpIHZlIEhp
      em1ldGxlcmkgQS7Fni4xJjAkBgNVBAsMHUUtVHVncmEgU2VydGlmaWthc3lvbiBN
      ZXJrZXppMSgwJgYDVQQDDB9FLVR1Z3JhIENlcnRpZmljYXRpb24gQXV0aG9yaXR5
      MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA4vU/kwVRHoViVF56C/UY
      B4Oufq9899SKa6VjQzm5S/fDxmSJPZQuVIBSOTkHS0vdhQd2h8y/L5VMzH2nPbxH
      D5hw+IyFHnSOkm0bQNGZDbt1bsipa5rAhDGvykPL6ys06I+XawGb1Q5KCKpbknSF
      Q9OArqGIW66z6l7LFpp3RMih9lRozt6Plyu6W0ACDGQXwLWTzeHxE2bODHnv0ZEo
      q1+gElIwcxmOj+GMB6LDu0rw6h8VqO4lzKRG+Bsi77MOQ7osJLjFLFzUHPhdZL3D
      k14opz8n8Y4e0ypQBaNV2cvnOVPAmJ6MVGKLJrD3fY185MaeZkJVgkfnsliNZvcH
      fC425lAcP9tDJMW/hkd5s3kc91r0E+xs+D/iWR+V7kI+ua2oMoVJl0b+SzGPWsut
      dEcf6ZG33ygEIqDUD13ieU/qbIWGvaimzuT6w+Gzrt48Ue7LE3wBf4QOXVGUnhMM
      ti6lTPk5cDZvlsouDERVxcr6XQKj39ZkjFqzAQqptQpHF//vkUAqjqFGOjGY5RH8
      zLtJVor8udBhmm9lbObDyz51Sf6Pp+KJxWfXnUYTTjF2OySznhFlhqt/7x3U+Lzn
      rFpct1pHXFXOVbQicVtbC/DP3KBhZOqp12gKY6fgDT+gr9Oq0n7vUaDmUStVkhUX
      U8u3Zg5mTPj5dUyQ5xJwx0UCAwEAAaNjMGEwHQYDVR0OBBYEFC7j27JJ0JxUeVz6
      Jyr+zE7S6E5UMA8GA1UdEwEB/wQFMAMBAf8wHwYDVR0jBBgwFoAULuPbsknQnFR5
      XPonKv7MTtLoTlQwDgYDVR0PAQH/BAQDAgEGMA0GCSqGSIb3DQEBCwUAA4ICAQAF
      Nzr0TbdF4kV1JI+2d1LoHNgQk2Xz8lkGpD4eKexd0dCrfOAKkEh47U6YA5n+KGCR
      HTAduGN8qOY1tfrTYXbm1gdLymmasoR6d5NFFxWfJNCYExL/u6Au/U5Mh/jOXKqY
      GwXgAEZKgoClM4so3O0409/lPun++1ndYYRP0lSWE2ETPo+Aab6TR7U1Q9Jauz1c
      77NCR807VRMGsAnb/WP2OogKmW9+4c4bU2pEZiNRCHu8W1Ki/QY3OEBhj0qWuJA3
      +GbHeJAAFS6LrVE1Uweoa2iu+U48BybNCAVwzDk/dr2l02cmAYamU9JgO3xDf1WK
      vJUawSg5TB9D0pH0clmKuVb8P7Sd2nCcdlqMQ1DujjByTd//SffGqWfZbawCEeI6
      FiWnWAjLb1NBnEg4R2gz0dfHj9R0IdTDBZB6/86WiLEVKV0jq9BgoRJP3vQXzTLl
      yb/IQ639Lo7xr+L0mPoSHyDYwKcMhcWQ9DstliaxLL5Mq+ux0orJ23gTDx4JnW2P
      AJ8C2sH6H3p6CcRK5ogql5+Ji/03X186zjhZhkuvcQu02PJwT58yE+Owp1fl2tpD
      y4Q08ijE6m30Ku/Ba3ba+367hTzSU8JNvnHhRdH9I2cNE3X7z2VnIp2usAnRCf8d
      NL/+I5c30jn6PQ0GC7TbO6Orb1wdtn7os4I07QZcJA==
      -----END CERTIFICATE-----

      # EC-ACC
      -----BEGIN CERTIFICATE-----
      MIIFVjCCBD6gAwIBAgIQ7is969Qh3hSoYqwE893EATANBgkqhkiG9w0BAQUFADCB
      8zELMAkGA1UEBhMCRVMxOzA5BgNVBAoTMkFnZW5jaWEgQ2F0YWxhbmEgZGUgQ2Vy
      dGlmaWNhY2lvIChOSUYgUS0wODAxMTc2LUkpMSgwJgYDVQQLEx9TZXJ2ZWlzIFB1
      YmxpY3MgZGUgQ2VydGlmaWNhY2lvMTUwMwYDVQQLEyxWZWdldSBodHRwczovL3d3
      dy5jYXRjZXJ0Lm5ldC92ZXJhcnJlbCAoYykwMzE1MDMGA1UECxMsSmVyYXJxdWlh
      IEVudGl0YXRzIGRlIENlcnRpZmljYWNpbyBDYXRhbGFuZXMxDzANBgNVBAMTBkVD
      LUFDQzAeFw0wMzAxMDcyMzAwMDBaFw0zMTAxMDcyMjU5NTlaMIHzMQswCQYDVQQG
      EwJFUzE7MDkGA1UEChMyQWdlbmNpYSBDYXRhbGFuYSBkZSBDZXJ0aWZpY2FjaW8g
      KE5JRiBRLTA4MDExNzYtSSkxKDAmBgNVBAsTH1NlcnZlaXMgUHVibGljcyBkZSBD
      ZXJ0aWZpY2FjaW8xNTAzBgNVBAsTLFZlZ2V1IGh0dHBzOi8vd3d3LmNhdGNlcnQu
      bmV0L3ZlcmFycmVsIChjKTAzMTUwMwYDVQQLEyxKZXJhcnF1aWEgRW50aXRhdHMg
      ZGUgQ2VydGlmaWNhY2lvIENhdGFsYW5lczEPMA0GA1UEAxMGRUMtQUNDMIIBIjAN
      BgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsyLHT+KXQpWIR4NA9h0X84NzJB5R
      85iKw5K4/0CQBXCHYMkAqbWUZRkiFRfCQ2xmRJoNBD45b6VLeqpjt4pEndljkYRm
      4CgPukLjbo73FCeTae6RDqNfDrHrZqJyTxIThmV6PttPB/SnCWDaOkKZx7J/sxaV
      HMf5NLWUhdWZXqBIoH7nF2W4onW4HvPlQn2v7fOKSGRdghST2MDk/7NQcvJ29rNd
      QlB50JQ+awwAvthrDk4q7D7SzIKiGGUzE3eeml0aE9jD2z3Il3rucO2n5nzbcc8t
      lGLfbdb1OL4/pYUKGbio2Al1QnDE6u/LDsg0qBIimAy4E5S2S+zw0JDnJwIDAQAB
      o4HjMIHgMB0GA1UdEQQWMBSBEmVjX2FjY0BjYXRjZXJ0Lm5ldDAPBgNVHRMBAf8E
      BTADAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUoMOLRKo3pUW/l4Ba0fF4
      opvpXY0wfwYDVR0gBHgwdjB0BgsrBgEEAfV4AQMBCjBlMCwGCCsGAQUFBwIBFiBo
      dHRwczovL3d3dy5jYXRjZXJ0Lm5ldC92ZXJhcnJlbDA1BggrBgEFBQcCAjApGidW
      ZWdldSBodHRwczovL3d3dy5jYXRjZXJ0Lm5ldC92ZXJhcnJlbCAwDQYJKoZIhvcN
      AQEFBQADggEBAKBIW4IB9k1IuDlVNZyAelOZ1Vr/sXE7zDkJlF7W2u++AVtd0x7Y
      /X1PzaBB4DSTv8vihpw3kpBWHNzrKQXlxJ7HNd+KDM3FIUPpqojlNcAZQmNaAl6k
      SBg6hW/cnbw/nZzBh7h6YQjpdwt/cKt63dmXLGQehb+8dJahw3oS7AwaboMMPOhy
      Rp/7SNVel+axofjk70YllJyJ22k4vuxcDlbHZVHlUIiIv0LVKz3l+bqeLrPK9HOS
      Agu+TGbrIP65y7WZf+a2E/rKS03Z7lNGBjvGTq2TWoF+bCpLagVFjPIhpDGQh2xl
      nJ2lYJU6Un/10asIbvPuW/mIPX64b24D5EI=
      -----END CERTIFICATE-----

      # Entrust.net Premium 2048 Secure Server CA
      -----BEGIN CERTIFICATE-----
      MIIEKjCCAxKgAwIBAgIEOGPe+DANBgkqhkiG9w0BAQUFADCBtDEUMBIGA1UEChML
      RW50cnVzdC5uZXQxQDA+BgNVBAsUN3d3dy5lbnRydXN0Lm5ldC9DUFNfMjA0OCBp
      bmNvcnAuIGJ5IHJlZi4gKGxpbWl0cyBsaWFiLikxJTAjBgNVBAsTHChjKSAxOTk5
      IEVudHJ1c3QubmV0IExpbWl0ZWQxMzAxBgNVBAMTKkVudHJ1c3QubmV0IENlcnRp
      ZmljYXRpb24gQXV0aG9yaXR5ICgyMDQ4KTAeFw05OTEyMjQxNzUwNTFaFw0yOTA3
      MjQxNDE1MTJaMIG0MRQwEgYDVQQKEwtFbnRydXN0Lm5ldDFAMD4GA1UECxQ3d3d3
      LmVudHJ1c3QubmV0L0NQU18yMDQ4IGluY29ycC4gYnkgcmVmLiAobGltaXRzIGxp
      YWIuKTElMCMGA1UECxMcKGMpIDE5OTkgRW50cnVzdC5uZXQgTGltaXRlZDEzMDEG
      A1UEAxMqRW50cnVzdC5uZXQgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgKDIwNDgp
      MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArU1LqRKGsuqjIAcVFmQq
      K0vRvwtKTY7tgHalZ7d4QMBzQshowNtTK91euHaYNZOLGp18EzoOH1u3Hs/lJBQe
      sYGpjX24zGtLA/ECDNyrpUAkAH90lKGdCCmziAv1h3edVc3kw37XamSrhRSGlVuX
      MlBvPci6Zgzj/L24ScF2iUkZ/cCovYmjZy/Gn7xxGWC4LeksyZB2ZnuU4q941mVT
      XTzWnLLPKQP5L6RQstRIzgUyVYr9smRMDuSYB3Xbf9+5CFVghTAp+XtIpGmG4zU/
      HoZdenoVve8AjhUiVBcAkCaTvA5JaJG/+EfTnZVCwQ5N328mz8MYIWJmQ3DW1cAH
      4QIDAQABo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNV
      HQ4EFgQUVeSB0RGAvtiJuQijMfmhJAkWuXAwDQYJKoZIhvcNAQEFBQADggEBADub
      j1abMOdTmXx6eadNl9cZlZD7Bh/KM3xGY4+WZiT6QBshJ8rmcnPyT/4xmf3IDExo
      U8aAghOY+rat2l098c5u9hURlIIM7j+VrxGrD9cv3h8Dj1csHsm7mhpElesYT6Yf
      zX1XEC+bBAlahLVu2B064dae0Wx5XnkcFMXj0EyTO2U87d89vqbllRrDtRnDvV5b
      u/8j72gZyxKTJ1wDLW8w0B62GqzeWvfRqqgnpv55gcR5mTNXuhKwqeBCbJPKVt7+
      bYQLCIt+jerXmCHG8+c8eS9enNFMFY3h7CI3zJpDC5fcgJCNs2ebb0gIFVbPv/Er
      fF6adulZkMV8gzURZVE=
      -----END CERTIFICATE-----

      # Entrust Root Certification Authority
      -----BEGIN CERTIFICATE-----
      MIIEkTCCA3mgAwIBAgIERWtQVDANBgkqhkiG9w0BAQUFADCBsDELMAkGA1UEBhMC
      VVMxFjAUBgNVBAoTDUVudHJ1c3QsIEluYy4xOTA3BgNVBAsTMHd3dy5lbnRydXN0
      Lm5ldC9DUFMgaXMgaW5jb3Jwb3JhdGVkIGJ5IHJlZmVyZW5jZTEfMB0GA1UECxMW
      KGMpIDIwMDYgRW50cnVzdCwgSW5jLjEtMCsGA1UEAxMkRW50cnVzdCBSb290IENl
      cnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTA2MTEyNzIwMjM0MloXDTI2MTEyNzIw
      NTM0MlowgbAxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1FbnRydXN0LCBJbmMuMTkw
      NwYDVQQLEzB3d3cuZW50cnVzdC5uZXQvQ1BTIGlzIGluY29ycG9yYXRlZCBieSBy
      ZWZlcmVuY2UxHzAdBgNVBAsTFihjKSAyMDA2IEVudHJ1c3QsIEluYy4xLTArBgNV
      BAMTJEVudHJ1c3QgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCCASIwDQYJ
      KoZIhvcNAQEBBQADggEPADCCAQoCggEBALaVtkNC+sZtKm9I35RMOVcF7sN5EUFo
      Nu3s/poBj6E4KPz3EEZmLk0eGrEaTsbRwJWIsMn/MYszA9u3g3s+IIRe7bJWKKf4
      4LlAcTfFy0cOlypowCKVYhXbR9n10Cv/gkvJrT7eTNuQgFA/CYqEAOwwCj0Yzfv9
      KlmaI5UXLEWeH25DeW0MXJj+SKfFI0dcXv1u5x609mhF0YaDW6KKjbHjKYD+JXGI
      rb68j6xSlkuqUY3kEzEZ6E5Nn9uss2rVvDlUccp6en+Q3X0dgNmBu1kmwhH+5pPi
      94DkZfs0Nw4pgHBNrziGLp5/V6+eF67rHMsoIV+2HNjnogQi+dPa2MsCAwEAAaOB
      sDCBrTAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zArBgNVHRAEJDAi
      gA8yMDA2MTEyNzIwMjM0MlqBDzIwMjYxMTI3MjA1MzQyWjAfBgNVHSMEGDAWgBRo
      kORnpKZTgMeGZqTx90tD+4S9bTAdBgNVHQ4EFgQUaJDkZ6SmU4DHhmak8fdLQ/uE
      vW0wHQYJKoZIhvZ9B0EABBAwDhsIVjcuMTo0LjADAgSQMA0GCSqGSIb3DQEBBQUA
      A4IBAQCT1DCw1wMgKtD5Y+iRDAUgqV8ZyntyTtSx29CW+1RaGSwMCPeyvIWonX9t
      O1KzKtvn1ISMY/YPyyYBkVBs9F8U4pN0wBOeMDpQ47RgxRzwIkSNcUesyBrJ6Zua
      AGAT/3B+XxFNSRuzFVJ7yVTav52Vr2ua2J7p8eRDjeIRRDq/r72DQnNSi6q7pynP
      9WQcCk3RvKqsnyrQ/39/2n3qse0wJcGE2jTSW3iDVuycNsMm4hH2Z0kdkquM++v/
      eu6FSqdQgPCnXEqULl8FmTxSQeDNtGPPAUO6nIPcj2A781q0tHuu2guQOHXvgR1m
      0vdXcDazv/wor3ElhVsT/h5/WrQ8
      -----END CERTIFICATE-----

      # Entrust Root Certification Authority - EC1
      -----BEGIN CERTIFICATE-----
      MIIC+TCCAoCgAwIBAgINAKaLeSkAAAAAUNCR+TAKBggqhkjOPQQDAzCBvzELMAkG
      A1UEBhMCVVMxFjAUBgNVBAoTDUVudHJ1c3QsIEluYy4xKDAmBgNVBAsTH1NlZSB3
      d3cuZW50cnVzdC5uZXQvbGVnYWwtdGVybXMxOTA3BgNVBAsTMChjKSAyMDEyIEVu
      dHJ1c3QsIEluYy4gLSBmb3IgYXV0aG9yaXplZCB1c2Ugb25seTEzMDEGA1UEAxMq
      RW50cnVzdCBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRUMxMB4XDTEy
      MTIxODE1MjUzNloXDTM3MTIxODE1NTUzNlowgb8xCzAJBgNVBAYTAlVTMRYwFAYD
      VQQKEw1FbnRydXN0LCBJbmMuMSgwJgYDVQQLEx9TZWUgd3d3LmVudHJ1c3QubmV0
      L2xlZ2FsLXRlcm1zMTkwNwYDVQQLEzAoYykgMjAxMiBFbnRydXN0LCBJbmMuIC0g
      Zm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxMzAxBgNVBAMTKkVudHJ1c3QgUm9vdCBD
      ZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEVDMTB2MBAGByqGSM49AgEGBSuBBAAi
      A2IABIQTydC6bUF74mzQ61VfZgIaJPRbiWlH47jCffHyAsWfoPZb1YsGGYZPUxBt
      ByQnoaD41UcZYUx9ypMn6nQM72+WCf5j7HBdNq1nd67JnXxVRDqiY1Ef9eNi1KlH
      Bz7MIKNCMEAwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0O
      BBYEFLdj5xrdjekIplWDpOBqUEFlEUJJMAoGCCqGSM49BAMDA2cAMGQCMGF52OVC
      R98crlOZF7ZvHH3hvxGU0QOIdeSNiaSKd0bebWHvAvX7td/M/k7//qnmpwIwW5nX
      hTcGtXsI/esni0qU+eH6p44mCOh8kmhtc9hvJqwhAriZtyZBWyVgrtBIGu4G
      -----END CERTIFICATE-----

      # Entrust Root Certification Authority - G2
      -----BEGIN CERTIFICATE-----
      MIIEPjCCAyagAwIBAgIESlOMKDANBgkqhkiG9w0BAQsFADCBvjELMAkGA1UEBhMC
      VVMxFjAUBgNVBAoTDUVudHJ1c3QsIEluYy4xKDAmBgNVBAsTH1NlZSB3d3cuZW50
      cnVzdC5uZXQvbGVnYWwtdGVybXMxOTA3BgNVBAsTMChjKSAyMDA5IEVudHJ1c3Qs
      IEluYy4gLSBmb3IgYXV0aG9yaXplZCB1c2Ugb25seTEyMDAGA1UEAxMpRW50cnVz
      dCBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IC0gRzIwHhcNMDkwNzA3MTcy
      NTU0WhcNMzAxMjA3MTc1NTU0WjCBvjELMAkGA1UEBhMCVVMxFjAUBgNVBAoTDUVu
      dHJ1c3QsIEluYy4xKDAmBgNVBAsTH1NlZSB3d3cuZW50cnVzdC5uZXQvbGVnYWwt
      dGVybXMxOTA3BgNVBAsTMChjKSAyMDA5IEVudHJ1c3QsIEluYy4gLSBmb3IgYXV0
      aG9yaXplZCB1c2Ugb25seTEyMDAGA1UEAxMpRW50cnVzdCBSb290IENlcnRpZmlj
      YXRpb24gQXV0aG9yaXR5IC0gRzIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQC6hLZy254Ma+KZ6TABp3bqMriVQRrJ2mFOWHLP/vaCeb9zYQYKpSfYs1/T
      RU4cctZOMvJyig/3gxnQaoCAAEUesMfnmr8SVycco2gvCoe9amsOXmXzHHfV1IWN
      cCG0szLni6LVhjkCsbjSR87kyUnEO6fe+1R9V77w6G7CebI6C1XiUJgWMhNcL3hW
      wcKUs/Ja5CeanyTXxuzQmyWC48zCxEXFjJd6BmsqEZ+pCm5IO2/b1BEZQvePB7/1
      U1+cPvQXLOZprE4yTGJ36rfo5bs0vBmLrpxR57d+tVOxMyLlbc9wPBr64ptntoP0
      jaWvYkxN4FisZDQSA/i2jZRjJKRxAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRqciZ60B7vfec7aVHUbI2fkBJmqzAN
      BgkqhkiG9w0BAQsFAAOCAQEAeZ8dlsa2eT8ijYfThwMEYGprmi5ZiXMRrEPR9RP/
      jTkrwPK9T3CMqS/qF8QLVJ7UG5aYMzyorWKiAHarWWluBh1+xLlEjZivEtRh2woZ
      Rkfz6/djwUAFQKXSt/S1mja/qYh2iARVBCuch38aNzx+LaUa2NSJXsq9rD1s2G2v
      1fN2D807iDginWyTmsQ9v4IbZT+mD12q/OWyFcq1rca8PdCE6OoGcrBNOTJ4vz4R
      nAuknZoh8/CbCzB428Hch0P+vGOaysXCHMnHjf87ElgI5rY97HosTvuDls4MPGmH
      VHOkc8KT/1EQrBVUAdj8BbGJoX90g5pJ19xOe4pIb4tF9g==
      -----END CERTIFICATE-----

      # Entrust Root Certification Authority - G4
      -----BEGIN CERTIFICATE-----
      MIIGSzCCBDOgAwIBAgIRANm1Q3+vqTkPAAAAAFVlrVgwDQYJKoZIhvcNAQELBQAw
      gb4xCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1FbnRydXN0LCBJbmMuMSgwJgYDVQQL
      Ex9TZWUgd3d3LmVudHJ1c3QubmV0L2xlZ2FsLXRlcm1zMTkwNwYDVQQLEzAoYykg
      MjAxNSBFbnRydXN0LCBJbmMuIC0gZm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxMjAw
      BgNVBAMTKUVudHJ1c3QgUm9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEc0
      MB4XDTE1MDUyNzExMTExNloXDTM3MTIyNzExNDExNlowgb4xCzAJBgNVBAYTAlVT
      MRYwFAYDVQQKEw1FbnRydXN0LCBJbmMuMSgwJgYDVQQLEx9TZWUgd3d3LmVudHJ1
      c3QubmV0L2xlZ2FsLXRlcm1zMTkwNwYDVQQLEzAoYykgMjAxNSBFbnRydXN0LCBJ
      bmMuIC0gZm9yIGF1dGhvcml6ZWQgdXNlIG9ubHkxMjAwBgNVBAMTKUVudHJ1c3Qg
      Um9vdCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAtIEc0MIICIjANBgkqhkiG9w0B
      AQEFAAOCAg8AMIICCgKCAgEAsewsQu7i0TD/pZJH4i3DumSXbcr3DbVZwbPLqGgZ
      2K+EbTBwXX7zLtJTmeH+H17ZSK9dE43b/2MzTdMAArzE+NEGCJR5WIoV3imz/f3E
      T+iq4qA7ec2/a0My3dl0ELn39GjUu9CH1apLiipvKgS1sqbHoHrmSKvS0VnM1n4j
      5pds8ELl3FFLFUHtSUrJ3hCX1nbB76W1NhSXNdh4IjVS70O92yfbYVaCNNzLiGAM
      C1rlLAHGVK/XqsEQe9IFWrhAnoanw5CGAlZSCXqc0ieCU0plUmr1POeo8pyvi73T
      DtTUXm6Hnmo9RR3RXRv06QqsYJn7ibT/mCzPfB3pAqoEmh643IhuJbNsZvc8kPNX
      wbMv9W3y+8qh+CmdRouzavbmZwe+LGcKKh9asj5XxNMhIWNlUpEbsZmOeX7m640A
      2Vqq6nPopIICR5b+W45UYaPrL0swsIsjdXJ8ITzI9vF01Bx7owVV7rtNOzK+mndm
      nqxpkCIHH2E6lr7lmk/MBTwoWdPBDFSoWWG9yHJM6Nyfh3+9nEg2XpWjDrk4JFX8
      dWbrAuMINClKxuMrLzOg2qOGpRKX/YAr2hRC45K9PvJdXmd0LhyIRyk0X+IyqJwl
      N4y6mACXi0mWHv0liqzc2thddG5msP9E36EYxr5ILzeUePiVSj9/E15dWf10hkNj
      c0kCAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYD
      VR0OBBYEFJ84xFYjwznooHFs6FRM5Og6sb9nMA0GCSqGSIb3DQEBCwUAA4ICAQAS
      5UKme4sPDORGpbZgQIeMJX6tuGguW8ZAdjwD+MlZ9POrYs4QjbRaZIxowLByQzTS
      Gwv2LFPSypBLhmb8qoMi9IsabyZIrHZ3CL/FmFz0Jomee8O5ZDIBf9PD3Vht7LGr
      hFV0d4QEJ1JrhkzO3bll/9bGXp+aEJlLdWr+aumXIOTkdnrG0CSqkM0gkLpHZPt/
      B7NTeLUKYvJzQ85BK4FqLoUWlFPUa19yIqtRLULVAJyZv967lDtX/Zr1hstWO1uI
      AeV8KEsD+UmDfLJ/fOPtjqF/YFOOVZ1QNBIPt5d7bIdKROf1beyAN/BYGW5KaHbw
      H5Lk6rWS02FREAutp9lfx1/cH6NcjKF+m7ee01ZvZl4HliDtC3T7Zk6LERXpgUl+
      b7DUUH8i119lAg2m9IUe2K4GS0qn0jFmwvjO5QimpAKWRGhXxNUzzxkvFMSUHHuk
      2fCfDrGA4tGeEWSpiBE6doLlYsKA2KSD7ZPvfC+QsDJMlhVoSFLUmQjAJOgc47Ol
      IQ6SwJAfzyBfyjs4x7dtOvPmRLgOMWuIjnDrnBdSqEGULoe256YSxXXfW8AKbnuk
      5F6G+TaU33fD6Q3AOfF5u0aOq0NZJ7cguyPpVkAh7DE9ZapD8j3fcEThuk0mEDuY
      n/PIjhs4ViFqUZPTkcpG2om3PVODLAgfi49T3f+sHw==
      -----END CERTIFICATE-----

      # FNMT-RCM
      -----BEGIN CERTIFICATE-----
      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
      nkrh8en1JUb2xN7kRGRzHcY5PnrmhXsY
      -----END CERTIFICATE-----

      # GDCA TrustAUTH R5 ROOT
      -----BEGIN CERTIFICATE-----
      MIIFiDCCA3CgAwIBAgIIfQmX/vBH6nowDQYJKoZIhvcNAQELBQAwYjELMAkGA1UE
      BhMCQ04xMjAwBgNVBAoMKUdVQU5HIERPTkcgQ0VSVElGSUNBVEUgQVVUSE9SSVRZ
      IENPLixMVEQuMR8wHQYDVQQDDBZHRENBIFRydXN0QVVUSCBSNSBST09UMB4XDTE0
      MTEyNjA1MTMxNVoXDTQwMTIzMTE1NTk1OVowYjELMAkGA1UEBhMCQ04xMjAwBgNV
      BAoMKUdVQU5HIERPTkcgQ0VSVElGSUNBVEUgQVVUSE9SSVRZIENPLixMVEQuMR8w
      HQYDVQQDDBZHRENBIFRydXN0QVVUSCBSNSBST09UMIICIjANBgkqhkiG9w0BAQEF
      AAOCAg8AMIICCgKCAgEA2aMW8Mh0dHeb7zMNOwZ+Vfy1YI92hhJCfVZmPoiC7XJj
      Dp6L3TQsAlFRwxn9WVSEyfFrs0yw6ehGXTjGoqcuEVe6ghWinI9tsJlKCvLriXBj
      TnnEt1u9ol2x8kECK62pOqPseQrsXzrj/e+APK00mxqriCZ7VqKChh/rNYmDf1+u
      KU49tm7srsHwJ5uu4/Ts765/94Y9cnrrpftZTqfrlYwiOXnhLQiPzLyRuEH3FMEj
      qcOtmkVEs7LXLM3GKeJQEK5cy4KOFxg2fZfmiJqwTTQJ9Cy5WmYqsBebnh52nUpm
      MUHfP/vFBu8btn4aRjb3ZGM74zkYI+dndRTVdVeSN72+ahsmUPI2JgaQxXABZG12
      ZuGR224HwGGALrIuL4xwp9E7PLOR5G62xDtw8mySlwnNR30YwPO7ng/Wi64HtloP
      zgsMR6flPri9fcebNaBhlzpBdRfMK5Z3KpIhHtmVdiBnaM8Nvd/WHwlqmuLMc3Gk
      L30SgLdTMEZeS1SZD2fJpcjyIMGC7J0R38IC+xo70e0gmu9lZJIQDSri3nDxGGeC
      jGHeuLzRL5z7D9Ar7Rt2ueQ5Vfj4oR24qoAATILnsn8JuLwwoC8N9VKejveSswoA
      HQBUlwbgsQfZxw9cZX08bVlX5O2ljelAU58VS6Bx9hoh49pwBiFYFIeFd3mqgnkC
      AwEAAaNCMEAwHQYDVR0OBBYEFOLJQJ9NzuiaoXzPDj9lxSmIahlRMA8GA1UdEwEB
      /wQFMAMBAf8wDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEBCwUAA4ICAQDRSVfg
      p8xoWLoBDysZzY2wYUWsEe1jUGn4H3++Fo/9nesLqjJHdtJnJO29fDMylyrHBYZm
      DRd9FBUb1Ov9H5r2XpdptxolpAqzkT9fNqyL7FeoPueBihhXOYV0GkLH6VsTX4/5
      COmSdI31R9KrO9b7eGZONn356ZLpBN79SWP8bfsUcZNnL0dKt7n/HipzcEYwv1ry
      L3ml4Y0M2fmyYzeMN2WFcGpcWwlyua1jPLHd+PwyvzeG5LuOmCd+uh8W4XAR8gPf
      JWIyJyYYMoSf/wA6E7qaTfRPuBRwIrHKK5DOKcFw9C+df/KQHtZa37dG/OaG+svg
      IHZ6uqbL9XzeYqWxi+7egmaKTjowHz+Ay60nugxe19CxVsp3cbK1daFQqUBDF8Io
      2c9Si1vIY9RCPqAzekYu9wogRlR+ak8x8YF+QnQ4ZXMn7sZ8uI7XpTrXmKGcjBBV
      09tL7ECQ8s1uV9JiDnxXk7Gnbc2dg7sq5+W2O3FYrf3RRbxake5TFW/TRQl1brqQ
      XR4EzzffHqhmsYzmIGrv/EhOdJhCrylvLmrH+33RZjEizIYAfmaDDEL0vTSSwxrq
      T8p+ck0LcIymSLumoRT2+1hEmRSuqguTaaApJUqlyyvdimYHFngVV3Eb7PVHhPOe
      MTd61X8kreS8/f3MboPoDKi3QWwH3b08hpcv0g==
      -----END CERTIFICATE-----

      # GLOBALTRUST 2020
      -----BEGIN CERTIFICATE-----
      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
      qfrQA71yN2BWHzZ8vTmR9W0Nv3vXkg==
      -----END CERTIFICATE-----

      # GTS Root R1
      -----BEGIN CERTIFICATE-----
      MIIFVzCCAz+gAwIBAgINAgPlk28xsBNJiGuiFzANBgkqhkiG9w0BAQwFADBHMQsw
      CQYDVQQGEwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZpY2VzIExMQzEU
      MBIGA1UEAxMLR1RTIFJvb3QgUjEwHhcNMTYwNjIyMDAwMDAwWhcNMzYwNjIyMDAw
      MDAwWjBHMQswCQYDVQQGEwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZp
      Y2VzIExMQzEUMBIGA1UEAxMLR1RTIFJvb3QgUjEwggIiMA0GCSqGSIb3DQEBAQUA
      A4ICDwAwggIKAoICAQC2EQKLHuOhd5s73L+UPreVp0A8of2C+X0yBoJx9vaMf/vo
      27xqLpeXo4xL+Sv2sfnOhB2x+cWX3u+58qPpvBKJXqeqUqv4IyfLpLGcY9vXmX7w
      Cl7raKb0xlpHDU0QM+NOsROjyBhsS+z8CZDfnWQpJSMHobTSPS5g4M/SCYe7zUjw
      TcLCeoiKu7rPWRnWr4+wB7CeMfGCwcDfLqZtbBkOtdh+JhpFAz2weaSUKK0Pfybl
      qAj+lug8aJRT7oM6iCsVlgmy4HqMLnXWnOunVmSPlk9orj2XwoSPwLxAwAtcvfaH
      szVsrBhQf4TgTM2S0yDpM7xSma8ytSmzJSq0SPly4cpk9+aCEI3oncKKiPo4Zor8
      Y/kB+Xj9e1x3+naH+uzfsQ55lVe0vSbv1gHR6xYKu44LtcXFilWr06zqkUspzBmk
      MiVOKvFlRNACzqrOSbTqn3yDsEB750Orp2yjj32JgfpMpf/VjsPOS+C12LOORc92
      wO1AK/1TD7Cn1TsNsYqiA94xrcx36m97PtbfkSIS5r762DL8EGMUUXLeXdYWk70p
      aDPvOmbsB4om3xPXV2V4J95eSRQAogB/mqghtqmxlbCluQ0WEdrHbEg8QOB+DVrN
      VjzRlwW5y0vtOUucxD/SVRNuJLDWcfr0wbrM7Rv1/oFB2ACYPTrIrnqYNxgFlQID
      AQABo0IwQDAOBgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4E
      FgQU5K8rJnEaK0gnhS9SZizv8IkTcT4wDQYJKoZIhvcNAQEMBQADggIBAJ+qQibb
      C5u+/x6Wki4+omVKapi6Ist9wTrYggoGxval3sBOh2Z5ofmmWJyq+bXmYOfg6LEe
      QkEzCzc9zolwFcq1JKjPa7XSQCGYzyI0zzvFIoTgxQ6KfF2I5DUkzps+GlQebtuy
      h6f88/qBVRRiClmpIgUxPoLW7ttXNLwzldMXG+gnoot7TiYaelpkttGsN/H9oPM4
      7HLwEXWdyzRSjeZ2axfG34arJ45JK3VmgRAhpuo+9K4l/3wV3s6MJT/KYnAK9y8J
      ZgfIPxz88NtFMN9iiMG1D53Dn0reWVlHxYciNuaCp+0KueIHoI17eko8cdLiA6Ef
      MgfdG+RCzgwARWGAtQsgWSl4vflVy2PFPEz0tv/bal8xa5meLMFrUKTX5hgUvYU/
      Z6tGn6D/Qqc6f1zLXbBwHSs09dR2CQzreExZBfMzQsNhFRAbd03OIozUhfJFfbdT
      6u9AWpQKXCBfTkBdYiJ23//OYb2MI3jSNwLgjt7RETeJ9r/tSQdirpLsQBqvFAnZ
      0E6yove+7u7Y/9waLd64NnHi/Hm3lCXRSHNboTXns5lndcEZOitHTtNCjv0xyBZm
      2tIMPNuzjsmhDYAPexZ3FL//2wmUspO8IFgV6dtxQ/PeEMMA3KgqlbbC1j+Qa3bb
      bP6MvPJwNQzcmRk13NfIRmPVNnGuV/u3gm3c
      -----END CERTIFICATE-----

      # GTS Root R2
      -----BEGIN CERTIFICATE-----
      MIIFVzCCAz+gAwIBAgINAgPlrsWNBCUaqxElqjANBgkqhkiG9w0BAQwFADBHMQsw
      CQYDVQQGEwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZpY2VzIExMQzEU
      MBIGA1UEAxMLR1RTIFJvb3QgUjIwHhcNMTYwNjIyMDAwMDAwWhcNMzYwNjIyMDAw
      MDAwWjBHMQswCQYDVQQGEwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZp
      Y2VzIExMQzEUMBIGA1UEAxMLR1RTIFJvb3QgUjIwggIiMA0GCSqGSIb3DQEBAQUA
      A4ICDwAwggIKAoICAQDO3v2m++zsFDQ8BwZabFn3GTXd98GdVarTzTukk3LvCvpt
      nfbwhYBboUhSnznFt+4orO/LdmgUud+tAWyZH8QiHZ/+cnfgLFuv5AS/T3KgGjSY
      6Dlo7JUle3ah5mm5hRm9iYz+re026nO8/4Piy33B0s5Ks40FnotJk9/BW9BuXvAu
      MC6C/Pq8tBcKSOWIm8Wba96wyrQD8Nr0kLhlZPdcTK3ofmZemde4wj7I0BOdre7k
      RXuJVfeKH2JShBKzwkCX44ofR5GmdFrS+LFjKBC4swm4VndAoiaYecb+3yXuPuWg
      f9RhD1FLPD+M2uFwdNjCaKH5wQzpoeJ/u1U8dgbuak7MkogwTZq9TwtImoS1mKPV
      +3PBV2HdKFZ1E66HjucMUQkQdYhMvI35ezzUIkgfKtzra7tEscszcTJGr61K8Yzo
      dDqs5xoic4DSMPclQsciOzsSrZYuxsN2B6ogtzVJV+mSSeh2FnIxZyuWfoqjx5RW
      Ir9qS34BIbIjMt/kmkRtWVtd9QCgHJvGeJeNkP+byKq0rxFROV7Z+2et1VsRnTKa
      G73VululycslaVNVJ1zgyjbLiGH7HrfQy+4W+9OmTN6SpdTi3/UGVN4unUu0kzCq
      gc7dGtxRcw1PcOnlthYhGXmy5okLdWTK1au8CcEYof/UVKGFPP0UJAOyh9OktwID
      AQABo0IwQDAOBgNVHQ8BAf8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4E
      FgQUu//KjiOfT5nK2+JopqUVJxce2Q4wDQYJKoZIhvcNAQEMBQADggIBAB/Kzt3H
      vqGf2SdMC9wXmBFqiN495nFWcrKeGk6c1SuYJF2ba3uwM4IJvd8lRuqYnrYb/oM8
      0mJhwQTtzuDFycgTE1XnqGOtjHsB/ncw4c5omwX4Eu55MaBBRTUoCnGkJE+M3DyC
      B19m3H0Q/gxhswWV7uGugQ+o+MePTagjAiZrHYNSVc61LwDKgEDg4XSsYPWHgJ2u
      NmSRXbBoGOqKYcl3qJfEycel/FVL8/B/uWU9J2jQzGv6U53hkRrJXRqWbTKH7QMg
      yALOWr7Z6v2yTcQvG99fevX4i8buMTolUVVnjWQye+mew4K6Ki3pHrTgSAai/Gev
      HyICc/sgCq+dVEuhzf9gR7A/Xe8bVr2XIZYtCtFenTgCR2y59PYjJbigapordwj6
      xLEokCZYCDzifqrXPW+6MYgKBesntaFJ7qBFVHvmJ2WZICGoo7z7GJa7Um8M7YNR
      TOlZ4iBgxcJlkoKM8xAfDoqXvneCbT+PHV28SSe9zE8P4c52hgQjxcCMElv924Sg
      JPFI/2R80L5cFtHvma3AH/vLrrw4IgYmZNralw4/KBVEqE8AyvCazM90arQ+POuV
      7LXTWtiBmelDGDfrs7vRWGJB82bSj6p4lVQgw1oudCvV0b4YacCs1aTPObpRhANl
      6WLAYv7YTVWW4tAR+kg0Eeye7QUd5MjWHYbL
      -----END CERTIFICATE-----

      # GTS Root R3
      -----BEGIN CERTIFICATE-----
      MIICCTCCAY6gAwIBAgINAgPluILrIPglJ209ZjAKBggqhkjOPQQDAzBHMQswCQYD
      VQQGEwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZpY2VzIExMQzEUMBIG
      A1UEAxMLR1RTIFJvb3QgUjMwHhcNMTYwNjIyMDAwMDAwWhcNMzYwNjIyMDAwMDAw
      WjBHMQswCQYDVQQGEwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZpY2Vz
      IExMQzEUMBIGA1UEAxMLR1RTIFJvb3QgUjMwdjAQBgcqhkjOPQIBBgUrgQQAIgNi
      AAQfTzOHMymKoYTey8chWEGJ6ladK0uFxh1MJ7x/JlFyb+Kf1qPKzEUURout736G
      jOyxfi//qXGdGIRFBEFVbivqJn+7kAHjSxm65FSWRQmx1WyRRK2EE46ajA2ADDL2
      4CejQjBAMA4GA1UdDwEB/wQEAwIBhjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBTB8Sa6oC2uhYHP0/EqEr24Cmf9vDAKBggqhkjOPQQDAwNpADBmAjEA9uEglRR7
      VKOQFhG/hMjqb2sXnh5GmCCbn9MN2azTL818+FsuVbu/3ZL3pAzcMeGiAjEA/Jdm
      ZuVDFhOD3cffL74UOO0BzrEXGhF16b0DjyZ+hOXJYKaV11RZt+cRLInUue4X
      -----END CERTIFICATE-----

      # GTS Root R4
      -----BEGIN CERTIFICATE-----
      MIICCTCCAY6gAwIBAgINAgPlwGjvYxqccpBQUjAKBggqhkjOPQQDAzBHMQswCQYD
      VQQGEwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZpY2VzIExMQzEUMBIG
      A1UEAxMLR1RTIFJvb3QgUjQwHhcNMTYwNjIyMDAwMDAwWhcNMzYwNjIyMDAwMDAw
      WjBHMQswCQYDVQQGEwJVUzEiMCAGA1UEChMZR29vZ2xlIFRydXN0IFNlcnZpY2Vz
      IExMQzEUMBIGA1UEAxMLR1RTIFJvb3QgUjQwdjAQBgcqhkjOPQIBBgUrgQQAIgNi
      AATzdHOnaItgrkO4NcWBMHtLSZ37wWHO5t5GvWvVYRg1rkDdc/eJkTBa6zzuhXyi
      QHY7qca4R9gq55KRanPpsXI5nymfopjTX15YhmUPoYRlBtHci8nHc8iMai/lxKvR
      HYqjQjBAMA4GA1UdDwEB/wQEAwIBhjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBSATNbrdP9JNqPV2Py1PsVq8JQdjDAKBggqhkjOPQQDAwNpADBmAjEA6ED/g94D
      9J+uHXqnLrmvT/aDHQ4thQEd0dlq7A/Cr8deVl5c1RxYIigL9zC2L7F8AjEA8GE8
      p/SgguMh1YQdc4acLa/KNJvxn7kjNuK8YAOdgLOaVsjh4rsUecrNIdSUtUlD
      -----END CERTIFICATE-----

      # GlobalSign ECC Root CA - R5
      -----BEGIN CERTIFICATE-----
      MIICHjCCAaSgAwIBAgIRYFlJ4CYuu1X5CneKcflK2GwwCgYIKoZIzj0EAwMwUDEk
      MCIGA1UECxMbR2xvYmFsU2lnbiBFQ0MgUm9vdCBDQSAtIFI1MRMwEQYDVQQKEwpH
      bG9iYWxTaWduMRMwEQYDVQQDEwpHbG9iYWxTaWduMB4XDTEyMTExMzAwMDAwMFoX
      DTM4MDExOTAzMTQwN1owUDEkMCIGA1UECxMbR2xvYmFsU2lnbiBFQ0MgUm9vdCBD
      QSAtIFI1MRMwEQYDVQQKEwpHbG9iYWxTaWduMRMwEQYDVQQDEwpHbG9iYWxTaWdu
      MHYwEAYHKoZIzj0CAQYFK4EEACIDYgAER0UOlvt9Xb/pOdEh+J8LttV7HpI6SFkc
      8GIxLcB6KP4ap1yztsyX50XUWPrRd21DosCHZTQKH3rd6zwzocWdTaRvQZU4f8ke
      hOvRnkmSh5SHDDqFSmafnVmTTZdhBoZKo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYD
      VR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUPeYpSJvqB8ohREom3m7e0oPQn1kwCgYI
      KoZIzj0EAwMDaAAwZQIxAOVpEslu28YxuglB4Zf4+/2a4n0Sye18ZNPLBSWLVtmg
      515dTguDnFt2KaAJJiFqYgIwcdK1j1zqO+F4CYWodZI7yFz9SO8NdCKoCOJuxUnO
      xwy8p2Fp8fc74SrL+SvzZpA3
      -----END CERTIFICATE-----

      # GlobalSign Root CA
      -----BEGIN CERTIFICATE-----
      MIIDdTCCAl2gAwIBAgILBAAAAAABFUtaw5QwDQYJKoZIhvcNAQEFBQAwVzELMAkG
      A1UEBhMCQkUxGTAXBgNVBAoTEEdsb2JhbFNpZ24gbnYtc2ExEDAOBgNVBAsTB1Jv
      b3QgQ0ExGzAZBgNVBAMTEkdsb2JhbFNpZ24gUm9vdCBDQTAeFw05ODA5MDExMjAw
      MDBaFw0yODAxMjgxMjAwMDBaMFcxCzAJBgNVBAYTAkJFMRkwFwYDVQQKExBHbG9i
      YWxTaWduIG52LXNhMRAwDgYDVQQLEwdSb290IENBMRswGQYDVQQDExJHbG9iYWxT
      aWduIFJvb3QgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDaDuaZ
      jc6j40+Kfvvxi4Mla+pIH/EqsLmVEQS98GPR4mdmzxzdzxtIK+6NiY6arymAZavp
      xy0Sy6scTHAHoT0KMM0VjU/43dSMUBUc71DuxC73/OlS8pF94G3VNTCOXkNz8kHp
      1Wrjsok6Vjk4bwY8iGlbKk3Fp1S4bInMm/k8yuX9ifUSPJJ4ltbcdG6TRGHRjcdG
      snUOhugZitVtbNV4FpWi6cgKOOvyJBNPc1STE4U6G7weNLWLBYy5d4ux2x8gkasJ
      U26Qzns3dLlwR5EiUWMWea6xrkEmCMgZK9FGqkjWZCrXgzT/LCrBbBlDSgeF59N8
      9iFo7+ryUp9/k5DPAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8E
      BTADAQH/MB0GA1UdDgQWBBRge2YaRQ2XyolQL30EzTSo//z9SzANBgkqhkiG9w0B
      AQUFAAOCAQEA1nPnfE920I2/7LqivjTFKDK1fPxsnCwrvQmeU79rXqoRSLblCKOz
      yj1hTdNGCbM+w6DjY1Ub8rrvrTnhQ7k4o+YviiY776BQVvnGCv04zcQLcFGUl5gE
      38NflNUVyRRBnMRddWQVDf9VMOyGj/8N7yy5Y0b2qvzfvGn9LhJIZJrglfCm7ymP
      AbEVtQwdpf5pLGkkeB6zpxxxYu7KyJesF12KwvhHhm4qxFYxldBniYUr+WymXUad
      DKqC5JlR3XC321Y9YeRq4VzW9v493kHMB65jUr9TU/Qr6cf9tveCX4XSQRjbgbME
      HMUfpIBvFSDJ3gyICh3WZlXi/EjJKSZp4A==
      -----END CERTIFICATE-----

      # GlobalSign Root CA - R3
      -----BEGIN CERTIFICATE-----
      MIIDXzCCAkegAwIBAgILBAAAAAABIVhTCKIwDQYJKoZIhvcNAQELBQAwTDEgMB4G
      A1UECxMXR2xvYmFsU2lnbiBSb290IENBIC0gUjMxEzARBgNVBAoTCkdsb2JhbFNp
      Z24xEzARBgNVBAMTCkdsb2JhbFNpZ24wHhcNMDkwMzE4MTAwMDAwWhcNMjkwMzE4
      MTAwMDAwWjBMMSAwHgYDVQQLExdHbG9iYWxTaWduIFJvb3QgQ0EgLSBSMzETMBEG
      A1UEChMKR2xvYmFsU2lnbjETMBEGA1UEAxMKR2xvYmFsU2lnbjCCASIwDQYJKoZI
      hvcNAQEBBQADggEPADCCAQoCggEBAMwldpB5BngiFvXAg7aEyiie/QV2EcWtiHL8
      RgJDx7KKnQRfJMsuS+FggkbhUqsMgUdwbN1k0ev1LKMPgj0MK66X17YUhhB5uzsT
      gHeMCOFJ0mpiLx9e+pZo34knlTifBtc+ycsmWQ1z3rDI6SYOgxXG71uL0gRgykmm
      KPZpO/bLyCiR5Z2KYVc3rHQU3HTgOu5yLy6c+9C7v/U9AOEGM+iCK65TpjoWc4zd
      QQ4gOsC0p6Hpsk+QLjJg6VfLuQSSaGjlOCZgdbKfd/+RFO+uIEn8rUAVSNECMWEZ
      XriX7613t2Saer9fwRPvm2L7DWzgVGkWqQPabumDk3F2xmmFghcCAwEAAaNCMEAw
      DgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFI/wS3+o
      LkUkrk1Q+mOai97i3Ru8MA0GCSqGSIb3DQEBCwUAA4IBAQBLQNvAUKr+yAzv95ZU
      RUm7lgAJQayzE4aGKAczymvmdLm6AC2upArT9fHxD4q/c2dKg8dEe3jgr25sbwMp
      jjM5RcOO5LlXbKr8EpbsU8Yt5CRsuZRj+9xTaGdWPoO4zzUhw8lo/s7awlOqzJCK
      6fBdRoyV3XpYKBovHd7NADdBj+1EbddTKJd+82cEHhXXipa0095MJ6RMG3NzdvQX
      mcIfeg7jLQitChws/zyrVQ4PkX4268NXSb7hLi18YIvDQVETI53O9zJrlAGomecs
      Mx86OyXShkDOOyyGeMlhLxS67ttVb9+E7gUJTb0o2HLO02JQZR7rkpeDMdmztcpH
      WD9f
      -----END CERTIFICATE-----

      # GlobalSign Root CA - R6
      -----BEGIN CERTIFICATE-----
      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
      5hpxbqCo8YLoRT5s1gLXCmeDBVrJpBA=
      -----END CERTIFICATE-----

      # GlobalSign Root E46
      -----BEGIN CERTIFICATE-----
      MIICCzCCAZGgAwIBAgISEdK7ujNu1LzmJGjFDYQdmOhDMAoGCCqGSM49BAMDMEYx
      CzAJBgNVBAYTAkJFMRkwFwYDVQQKExBHbG9iYWxTaWduIG52LXNhMRwwGgYDVQQD
      ExNHbG9iYWxTaWduIFJvb3QgRTQ2MB4XDTE5MDMyMDAwMDAwMFoXDTQ2MDMyMDAw
      MDAwMFowRjELMAkGA1UEBhMCQkUxGTAXBgNVBAoTEEdsb2JhbFNpZ24gbnYtc2Ex
      HDAaBgNVBAMTE0dsb2JhbFNpZ24gUm9vdCBFNDYwdjAQBgcqhkjOPQIBBgUrgQQA
      IgNiAAScDrHPt+ieUnd1NPqlRqetMhkytAepJ8qUuwzSChDH2omwlwxwEwkBjtjq
      R+q+soArzfwoDdusvKSGN+1wCAB16pMLey5SnCNoIwZD7JIvU4Tb+0cUB+hflGdd
      yXqBPCCjQjBAMA4GA1UdDwEB/wQEAwIBhjAPBgNVHRMBAf8EBTADAQH/MB0GA1Ud
      DgQWBBQxCpCPtsad0kRLgLWi5h+xEk8blTAKBggqhkjOPQQDAwNoADBlAjEA31SQ
      7Zvvi5QCkxeCmb6zniz2C5GMn0oUsfZkvLtoURMMA/cVi4RguYv/Uo7njLwcAjA8
      +RHUjE7AwWHCFUyqqx0LMV87HOIAl0Qx5v5zli/altP+CAezNIm8BZ/3Hobui3A=
      -----END CERTIFICATE-----

      # GlobalSign Root R46
      -----BEGIN CERTIFICATE-----
      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
      -----END CERTIFICATE-----

      # Go Daddy Class 2 CA
      -----BEGIN CERTIFICATE-----
      MIIEADCCAuigAwIBAgIBADANBgkqhkiG9w0BAQUFADBjMQswCQYDVQQGEwJVUzEh
      MB8GA1UEChMYVGhlIEdvIERhZGR5IEdyb3VwLCBJbmMuMTEwLwYDVQQLEyhHbyBE
      YWRkeSBDbGFzcyAyIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTA0MDYyOTE3
      MDYyMFoXDTM0MDYyOTE3MDYyMFowYzELMAkGA1UEBhMCVVMxITAfBgNVBAoTGFRo
      ZSBHbyBEYWRkeSBHcm91cCwgSW5jLjExMC8GA1UECxMoR28gRGFkZHkgQ2xhc3Mg
      MiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCCASAwDQYJKoZIhvcNAQEBBQADggEN
      ADCCAQgCggEBAN6d1+pXGEmhW+vXX0iG6r7d/+TvZxz0ZWizV3GgXne77ZtJ6XCA
      PVYYYwhv2vLM0D9/AlQiVBDYsoHUwHU9S3/Hd8M+eKsaA7Ugay9qK7HFiH7Eux6w
      wdhFJ2+qN1j3hybX2C32qRe3H3I2TqYXP2WYktsqbl2i/ojgC95/5Y0V4evLOtXi
      EqITLdiOr18SPaAIBQi2XKVlOARFmR6jYGB0xUGlcmIbYsUfb18aQr4CUWWoriMY
      avx4A6lNf4DD+qta/KFApMoZFv6yyO9ecw3ud72a9nmYvLEHZ6IVDd2gWMZEewo+
      YihfukEHU1jPEX44dMX4/7VpkI+EdOqXG68CAQOjgcAwgb0wHQYDVR0OBBYEFNLE
      sNKR1EwRcbNhyz2h/t2oatTjMIGNBgNVHSMEgYUwgYKAFNLEsNKR1EwRcbNhyz2h
      /t2oatTjoWekZTBjMQswCQYDVQQGEwJVUzEhMB8GA1UEChMYVGhlIEdvIERhZGR5
      IEdyb3VwLCBJbmMuMTEwLwYDVQQLEyhHbyBEYWRkeSBDbGFzcyAyIENlcnRpZmlj
      YXRpb24gQXV0aG9yaXR5ggEAMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEFBQAD
      ggEBADJL87LKPpH8EsahB4yOd6AzBhRckB4Y9wimPQoZ+YeAEW5p5JYXMP80kWNy
      OO7MHAGjHZQopDH2esRU1/blMVgDoszOYtuURXO1v0XJJLXVggKtI3lpjbi2Tc7P
      TMozI+gciKqdi0FuFskg5YmezTvacPd+mSYgFFQlq25zheabIZ0KbIIOqPjCDPoQ
      HmyW74cNxA9hi63ugyuV+I6ShHI56yDqg+2DzZduCLzrTia2cyvk0/ZM/iZx4mER
      dEr/VxqHD3VILs9RaRegAhJhldXRQLIQTO7ErBBDpqWeCtWVYpoNz4iCxTIM5Cuf
      ReYNnyicsbkqWletNw+vHX/bvZ8=
      -----END CERTIFICATE-----

      # Go Daddy Root Certificate Authority - G2
      -----BEGIN CERTIFICATE-----
      MIIDxTCCAq2gAwIBAgIBADANBgkqhkiG9w0BAQsFADCBgzELMAkGA1UEBhMCVVMx
      EDAOBgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNjb3R0c2RhbGUxGjAYBgNVBAoT
      EUdvRGFkZHkuY29tLCBJbmMuMTEwLwYDVQQDEyhHbyBEYWRkeSBSb290IENlcnRp
      ZmljYXRlIEF1dGhvcml0eSAtIEcyMB4XDTA5MDkwMTAwMDAwMFoXDTM3MTIzMTIz
      NTk1OVowgYMxCzAJBgNVBAYTAlVTMRAwDgYDVQQIEwdBcml6b25hMRMwEQYDVQQH
      EwpTY290dHNkYWxlMRowGAYDVQQKExFHb0RhZGR5LmNvbSwgSW5jLjExMC8GA1UE
      AxMoR28gRGFkZHkgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkgLSBHMjCCASIw
      DQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL9xYgjx+lk09xvJGKP3gElY6SKD
      E6bFIEMBO4Tx5oVJnyfq9oQbTqC023CYxzIBsQU+B07u9PpPL1kwIuerGVZr4oAH
      /PMWdYA5UXvl+TW2dE6pjYIT5LY/qQOD+qK+ihVqf94Lw7YZFAXK6sOoBJQ7Rnwy
      DfMAZiLIjWltNowRGLfTshxgtDj6AozO091GB94KPutdfMh8+7ArU6SSYmlRJQVh
      GkSBjCypQ5Yj36w6gZoOKcUcqeldHraenjAKOc7xiID7S13MMuyFYkMlNAJWJwGR
      tDtwKj9useiciAF9n9T521NtYJ2/LOdYq7hfRvzOxBsDPAnrSTFcaUaz4EcCAwEA
      AaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYE
      FDqahQcQZyi27/a9BUFuIMGU2g/eMA0GCSqGSIb3DQEBCwUAA4IBAQCZ21151fmX
      WWcDYfF+OwYxdS2hII5PZYe096acvNjpL9DbWu7PdIxztDhC2gV7+AJ1uP2lsdeu
      9tfeE8tTEH6KRtGX+rcuKxGrkLAngPnon1rpN5+r5N9ss4UXnT3ZJE95kTXWXwTr
      gIOrmgIttRD02JDHBHNA7XIloKmf7J6raBKZV8aPEjoJpL1E/QYVN8Gb5DKj7Tjo
      2GTzLH4U/ALqn83/B2gX2yKQOC16jdFU8WnjXzPKej17CuPKf1855eJ1usV2GDPO
      LPAvTK33sefOT6jEm0pUBsV/fdUID+Ic/n4XuKxe9tQWskMJDE32p2u0mYRlynqI
      4uJEvlz36hz1
      -----END CERTIFICATE-----

      # HARICA TLS ECC Root CA 2021
      -----BEGIN CERTIFICATE-----
      MIICVDCCAdugAwIBAgIQZ3SdjXfYO2rbIvT/WeK/zjAKBggqhkjOPQQDAzBsMQsw
      CQYDVQQGEwJHUjE3MDUGA1UECgwuSGVsbGVuaWMgQWNhZGVtaWMgYW5kIFJlc2Vh
      cmNoIEluc3RpdHV0aW9ucyBDQTEkMCIGA1UEAwwbSEFSSUNBIFRMUyBFQ0MgUm9v
      dCBDQSAyMDIxMB4XDTIxMDIxOTExMDExMFoXDTQ1MDIxMzExMDEwOVowbDELMAkG
      A1UEBhMCR1IxNzA1BgNVBAoMLkhlbGxlbmljIEFjYWRlbWljIGFuZCBSZXNlYXJj
      aCBJbnN0aXR1dGlvbnMgQ0ExJDAiBgNVBAMMG0hBUklDQSBUTFMgRUNDIFJvb3Qg
      Q0EgMjAyMTB2MBAGByqGSM49AgEGBSuBBAAiA2IABDgI/rGgltJ6rK9JOtDA4MM7
      KKrxcm1lAEeIhPyaJmuqS7psBAqIXhfyVYf8MLA04jRYVxqEU+kw2anylnTDUR9Y
      STHMmE5gEYd103KUkE+bECUqqHgtvpBBWJAVcqeht6NCMEAwDwYDVR0TAQH/BAUw
      AwEB/zAdBgNVHQ4EFgQUyRtTgRL+BNUW0aq8mm+3oJUZbsowDgYDVR0PAQH/BAQD
      AgGGMAoGCCqGSM49BAMDA2cAMGQCMBHervjcToiwqfAircJRQO9gcS3ujwLEXQNw
      SaSS6sUUiHCm0w2wqsosQJz76YJumgIwK0eaB8bRwoF8yguWGEEbo/QwCZ61IygN
      nxS2PFOiTAZpffpskcYqSUXm7LcT4Tps
      -----END CERTIFICATE-----

      # HARICA TLS RSA Root CA 2021
      -----BEGIN CERTIFICATE-----
      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
      63ZTGI0RmLo=
      -----END CERTIFICATE-----

      # Hellenic Academic and Research Institutions ECC RootCA 2015
      -----BEGIN CERTIFICATE-----
      MIICwzCCAkqgAwIBAgIBADAKBggqhkjOPQQDAjCBqjELMAkGA1UEBhMCR1IxDzAN
      BgNVBAcTBkF0aGVuczFEMEIGA1UEChM7SGVsbGVuaWMgQWNhZGVtaWMgYW5kIFJl
      c2VhcmNoIEluc3RpdHV0aW9ucyBDZXJ0LiBBdXRob3JpdHkxRDBCBgNVBAMTO0hl
      bGxlbmljIEFjYWRlbWljIGFuZCBSZXNlYXJjaCBJbnN0aXR1dGlvbnMgRUNDIFJv
      b3RDQSAyMDE1MB4XDTE1MDcwNzEwMzcxMloXDTQwMDYzMDEwMzcxMlowgaoxCzAJ
      BgNVBAYTAkdSMQ8wDQYDVQQHEwZBdGhlbnMxRDBCBgNVBAoTO0hlbGxlbmljIEFj
      YWRlbWljIGFuZCBSZXNlYXJjaCBJbnN0aXR1dGlvbnMgQ2VydC4gQXV0aG9yaXR5
      MUQwQgYDVQQDEztIZWxsZW5pYyBBY2FkZW1pYyBhbmQgUmVzZWFyY2ggSW5zdGl0
      dXRpb25zIEVDQyBSb290Q0EgMjAxNTB2MBAGByqGSM49AgEGBSuBBAAiA2IABJKg
      QehLgoRc4vgxEZmGZE4JJS+dQS8KrjVPdJWyUWRrjWvmP3CV8AVER6ZyOFB2lQJa
      jq4onvktTpnvLEhvTCUp6NFxW98dwXU3tNf6e3pCnGoKVlp8aQuqgAkkbH7BRqNC
      MEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFLQi
      C4KZJAEOnLvkDv2/+5cgk5kqMAoGCCqGSM49BAMCA2cAMGQCMGfOFmI4oqxiRaep
      lSTAGiecMjvAwNW6qef4BENThe5SId6d9SWDPp5YSy/XZxMOIQIwBeF1Ad5o7Sof
      TUwJCA3sS61kFyjndc5FZXIhF8siQQ6ME5g4mlRtm8rifOoCWCKR
      -----END CERTIFICATE-----

      # Hellenic Academic and Research Institutions RootCA 2011
      -----BEGIN CERTIFICATE-----
      MIIEMTCCAxmgAwIBAgIBADANBgkqhkiG9w0BAQUFADCBlTELMAkGA1UEBhMCR1Ix
      RDBCBgNVBAoTO0hlbGxlbmljIEFjYWRlbWljIGFuZCBSZXNlYXJjaCBJbnN0aXR1
      dGlvbnMgQ2VydC4gQXV0aG9yaXR5MUAwPgYDVQQDEzdIZWxsZW5pYyBBY2FkZW1p
      YyBhbmQgUmVzZWFyY2ggSW5zdGl0dXRpb25zIFJvb3RDQSAyMDExMB4XDTExMTIw
      NjEzNDk1MloXDTMxMTIwMTEzNDk1MlowgZUxCzAJBgNVBAYTAkdSMUQwQgYDVQQK
      EztIZWxsZW5pYyBBY2FkZW1pYyBhbmQgUmVzZWFyY2ggSW5zdGl0dXRpb25zIENl
      cnQuIEF1dGhvcml0eTFAMD4GA1UEAxM3SGVsbGVuaWMgQWNhZGVtaWMgYW5kIFJl
      c2VhcmNoIEluc3RpdHV0aW9ucyBSb290Q0EgMjAxMTCCASIwDQYJKoZIhvcNAQEB
      BQADggEPADCCAQoCggEBAKlTAOMupvaO+mDYLZU++CwqVE7NuYRhlFhPjz2L5EPz
      dYmNUeTDN9KKiE15HrcS3UN4SoqS5tdI1Q+kOilENbgH9mgdVc04UfCMJDGFr4PJ
      fel3r+0ae50X+bOdOFAPplp5kYCvN66m0zH7tSYJnTxa71HFK9+WXesyHgLacEns
      bgzImjeN9/E2YEsmLIKe0HjzDQ9jpFEw4fkrJxIH2Oq9GGKYsFk3fb7u8yBRQlqD
      75O6aRXxYp2fmTmCobd0LovUxQt7L/DICto9eQqakxylKHJzkUOap9FNhYS5qXSP
      FEDH3N6sQWRstBmbAmNtJGSPRLIl6s5ddAxjMlyNh+UCAwEAAaOBiTCBhjAPBgNV
      HRMBAf8EBTADAQH/MAsGA1UdDwQEAwIBBjAdBgNVHQ4EFgQUppFC/RNhSiOeCKQp
      5dgTBCPuQSUwRwYDVR0eBEAwPqA8MAWCAy5ncjAFggMuZXUwBoIELmVkdTAGggQu
      b3JnMAWBAy5ncjAFgQMuZXUwBoEELmVkdTAGgQQub3JnMA0GCSqGSIb3DQEBBQUA
      A4IBAQAf73lB4XtuP7KMhjdCSk4cNx6NZrokgclPEg8hwAOXhiVtXdMiKahsog2p
      6z0GW5k6x8zDmjR/qw7IThzh+uTczQ2+vyT+bOdrwg3IBp5OjWEopmr95fZi6hg8
      TqBTnbI6nOulnJEWtk2C4AwFSKls9cz4y51JtPACpf1wA+2KIaWuE4ZJwzNzvoc7
      dIsXRSZMFpGD/md9zU1jZ/rzAxKWeAaNsWftjj++n08C9bMJL/NMh98qy5V8Acys
      Nnq/onN694/BtZqhFLKPM58N7yLcZnuEvUUXBj08yrl3NI/K6s8/MT7jiOOASSXI
      l7WdmplNsDz4SgCbZN2fOUvRJ9e4
      -----END CERTIFICATE-----

      # Hellenic Academic and Research Institutions RootCA 2015
      -----BEGIN CERTIFICATE-----
      MIIGCzCCA/OgAwIBAgIBADANBgkqhkiG9w0BAQsFADCBpjELMAkGA1UEBhMCR1Ix
      DzANBgNVBAcTBkF0aGVuczFEMEIGA1UEChM7SGVsbGVuaWMgQWNhZGVtaWMgYW5k
      IFJlc2VhcmNoIEluc3RpdHV0aW9ucyBDZXJ0LiBBdXRob3JpdHkxQDA+BgNVBAMT
      N0hlbGxlbmljIEFjYWRlbWljIGFuZCBSZXNlYXJjaCBJbnN0aXR1dGlvbnMgUm9v
      dENBIDIwMTUwHhcNMTUwNzA3MTAxMTIxWhcNNDAwNjMwMTAxMTIxWjCBpjELMAkG
      A1UEBhMCR1IxDzANBgNVBAcTBkF0aGVuczFEMEIGA1UEChM7SGVsbGVuaWMgQWNh
      ZGVtaWMgYW5kIFJlc2VhcmNoIEluc3RpdHV0aW9ucyBDZXJ0LiBBdXRob3JpdHkx
      QDA+BgNVBAMTN0hlbGxlbmljIEFjYWRlbWljIGFuZCBSZXNlYXJjaCBJbnN0aXR1
      dGlvbnMgUm9vdENBIDIwMTUwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoIC
      AQDC+Kk/G4n8PDwEXT2QNrCROnk8ZlrvbTkBSRq0t89/TSNTt5AA4xMqKKYx8ZEA
      4yjsriFBzh/a/X0SWwGDD7mwX5nh8hKDgE0GPt+sr+ehiGsxr/CL0BgzuNtFajT0
      AoAkKAoCFZVedioNmToUW/bLy1O8E00BiDeUJRtCvCLYjqOWXjrZMts+6PAQZe10
      4S+nfK8nNLspfZu2zwnI5dMK/IhlZXQK3HMcXM1AsRzUtoSMTFDPaI6oWa7CJ06C
      ojXdFPQf/7J31Ycvqm59JCfnxssm5uX+Zwdj2EUN3TpZZTlYepKZcj2chF6IIbjV
      9Cz82XBST3i4vTwri5WY9bPRaM8gFH5MXF/ni+X1NYEZN9cRCLdmvtNKzoNXADrD
      gfgXy5I2XdGj2HUb4Ysn6npIQf1FGQatJ5lOwXBH3bWfgVMS5bGMSF0xQxfjjMZ6
      Y5ZLKTBOhE5iGV48zpeQpX8B653g+IuJ3SWYPZK2fu/Z8VFRfS0myGlZYeCsargq
      NhEEelC9MoS+L9xy1dcdFkfkR2YgP/SWxa+OAXqlD3pk9Q0Yh9muiNX6hME6wGko
      LfINaFGq46V3xqSQDqE3izEjR8EJCOtu93ib14L8hCCZSRm2Ekax+0VVFqmjZayc
      Bw/qa9wfLgZy7IaIEuQt218FL+TwA9MmM+eAws1CoRc0CwIDAQABo0IwQDAPBgNV
      HRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUcRVnyMjJvXVd
      ctA4GGqd83EkVAswDQYJKoZIhvcNAQELBQADggIBAHW7bVRLqhBYRjTyYtcWNl0I
      XtVsyIe9tC5G8jH4fOpCtZMWVdyhDBKg2mF+D1hYc2Ryx+hFjtyp8iY/xnmMsVMI
      M4GwVhO+5lFc2JsKT0ucVlMC6U/2DWDqTUJV6HwbISHTGzrMd/K4kPFox/la/vot
      9L/J9UUbzjgQKjeKeaO04wlshYaT/4mWJ3iBj2fjRnRUjtkNaeJK9E10A/+yd+2V
      Z5fkscWrv2oj6NSU4kQoYsRL4vDY4ilrGnB+JGGTe08DMiUNRSQrlrRGar9KC/ea
      j8GsGsVn82800vpzY4zvFrCopEYq+OsS7HK07/grfoxSwIuEVPkvPuNVqNxmsdnh
      X9izjFk0WaSrT2y7HxjbdavYy5LNlDhhDgcGH0tGEPEVvo2FXDtKK4F5D7Rpn0lQ
      l033DlZdwJVqwjbDG2jJ9SrcR5q+ss7FJej6A7na+RZukYT1HCjI/CbM1xyQVqdf
      bzoEvM14iQuODy+jqk+iGxI9FghAD/FGTNeqewjBCvVtJ94Cj8rDtSvK6evIIVM4
      pcw72Hc3MKJP2W/R8kCtQXoXxdZKNYm3QdV8hn9VTYNKpXMgwDqvkPGaJI7ZjnHK
      e7iG2rKPmT4dEw0SEe7Uq/DpFXYC5ODfqiAeW2GFZECpkJcNrVPSWh2HagCXZWK0
      vm9qp/UsQu0yrbYhnr68
      -----END CERTIFICATE-----

      # HiPKI Root CA - G1
      -----BEGIN CERTIFICATE-----
      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
      -----END CERTIFICATE-----

      # Hongkong Post Root CA 1
      -----BEGIN CERTIFICATE-----
      MIIDMDCCAhigAwIBAgICA+gwDQYJKoZIhvcNAQEFBQAwRzELMAkGA1UEBhMCSEsx
      FjAUBgNVBAoTDUhvbmdrb25nIFBvc3QxIDAeBgNVBAMTF0hvbmdrb25nIFBvc3Qg
      Um9vdCBDQSAxMB4XDTAzMDUxNTA1MTMxNFoXDTIzMDUxNTA0NTIyOVowRzELMAkG
      A1UEBhMCSEsxFjAUBgNVBAoTDUhvbmdrb25nIFBvc3QxIDAeBgNVBAMTF0hvbmdr
      b25nIFBvc3QgUm9vdCBDQSAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC
      AQEArP84tulmAknjorThkPlAj3n54r15/gK97iSSHSL22oVyaf7XPwnU3ZG1ApzQ
      jVrhVcNQhrkpJsLj2aDxaQMoIIBFIi1WpztUlVYiWR8o3x8gPW2iNr4joLFutbEn
      PzlTCeqrauh0ssJlXI6/fMN4hM2eFvz1Lk8gKgifd/PFHsSaUmYeSF7jEAaPIpjh
      ZY4bXSNmO7ilMlHIhqqhqZ5/dpTCpmy3QfDVyAY45tQM4vM7TG1QjMSDJ8EThFk9
      nnV0ttgCXjqQesBCNnLsak3c78QA3xMYV18meMjWCnl3v/evt3a5pQuEF10Q6m/h
      q5URX208o1xNg1vysxmKgIsLhwIDAQABoyYwJDASBgNVHRMBAf8ECDAGAQH/AgED
      MA4GA1UdDwEB/wQEAwIBxjANBgkqhkiG9w0BAQUFAAOCAQEADkbVPK7ih9legYsC
      mEEIjEy82tvuJxuC52pF7BaLT4Wg87JwvVqWuspube5Gi27nKi6Wsxkz67SfqLI3
      7piol7Yutmcn1KZJ/RyTZXaeQi/cImyaT/JaFTmxcdcrUehtHJjA2Sr0oYJ71clB
      oiMBdDhViw+5LmeiIAQ32pwL0xch4I+XeTRvhEgCIDMb5jREn5Fw9IBehEPCKdJs
      EhTkYY2sEJCehFC78JZvRZ+K88psT/oROhUVRsPNH4NbLUES7VBnQRM9IauUiqpO
      fMGx+6fWtScvl6tu4B3i0RwsH0Ti/L6RoZz71ilTc4afU9hDDl3WY4JxHYB0yvbi
      AmvZWg==
      -----END CERTIFICATE-----

      # Hongkong Post Root CA 3
      -----BEGIN CERTIFICATE-----
      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
      mpv0
      -----END CERTIFICATE-----

      # ISRG Root X1
      -----BEGIN CERTIFICATE-----
      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
      -----END CERTIFICATE-----

      # ISRG Root X2
      -----BEGIN CERTIFICATE-----
      MIICGzCCAaGgAwIBAgIQQdKd0XLq7qeAwSxs6S+HUjAKBggqhkjOPQQDAzBPMQsw
      CQYDVQQGEwJVUzEpMCcGA1UEChMgSW50ZXJuZXQgU2VjdXJpdHkgUmVzZWFyY2gg
      R3JvdXAxFTATBgNVBAMTDElTUkcgUm9vdCBYMjAeFw0yMDA5MDQwMDAwMDBaFw00
      MDA5MTcxNjAwMDBaME8xCzAJBgNVBAYTAlVTMSkwJwYDVQQKEyBJbnRlcm5ldCBT
      ZWN1cml0eSBSZXNlYXJjaCBHcm91cDEVMBMGA1UEAxMMSVNSRyBSb290IFgyMHYw
      EAYHKoZIzj0CAQYFK4EEACIDYgAEzZvVn4CDCuwJSvMWSj5cz3es3mcFDR0HttwW
      +1qLFNvicWDEukWVEYmO6gbf9yoWHKS5xcUy4APgHoIYOIvXRdgKam7mAHf7AlF9
      ItgKbppbd9/w+kHsOdx1ymgHDB/qo0IwQDAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0T
      AQH/BAUwAwEB/zAdBgNVHQ4EFgQUfEKWrt5LSDv6kviejM9ti6lyN5UwCgYIKoZI
      zj0EAwMDaAAwZQIwe3lORlCEwkSHRhtFcP9Ymd70/aTSVaYgLXTWNLxBo1BfASdW
      tL4ndQavEi51mI38AjEAi/V3bNTIZargCyzuFJ0nN6T5U6VR5CmD1/iQMVtCnwr1
      /q4AaOeMSQ+2b1tbFfLn
      -----END CERTIFICATE-----

      # IdenTrust Commercial Root CA 1
      -----BEGIN CERTIFICATE-----
      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
      -----END CERTIFICATE-----

      # IdenTrust Public Sector Root CA 1
      -----BEGIN CERTIFICATE-----
      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
      -----END CERTIFICATE-----

      # Izenpe.com
      -----BEGIN CERTIFICATE-----
      MIIF8TCCA9mgAwIBAgIQALC3WhZIX7/hy/WL1xnmfTANBgkqhkiG9w0BAQsFADA4
      MQswCQYDVQQGEwJFUzEUMBIGA1UECgwLSVpFTlBFIFMuQS4xEzARBgNVBAMMCkl6
      ZW5wZS5jb20wHhcNMDcxMjEzMTMwODI4WhcNMzcxMjEzMDgyNzI1WjA4MQswCQYD
      VQQGEwJFUzEUMBIGA1UECgwLSVpFTlBFIFMuQS4xEzARBgNVBAMMCkl6ZW5wZS5j
      b20wggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDJ03rKDx6sp4boFmVq
      scIbRTJxldn+EFvMr+eleQGPicPK8lVx93e+d5TzcqQsRNiekpsUOqHnJJAKClaO
      xdgmlOHZSOEtPtoKct2jmRXagaKH9HtuJneJWK3W6wyyQXpzbm3benhB6QiIEn6H
      LmYRY2xU+zydcsC8Lv/Ct90NduM61/e0aL6i9eOBbsFGb12N4E3GVFWJGjMxCrFX
      uaOKmMPsOzTFlUFpfnXCPCDFYbpRR6AgkJOhkEvzTnyFRVSa0QUmQbC1TR0zvsQD
      yCV8wXDbO/QJLVQnSKwv4cSsPsjLkkxTOTcj7NMB+eAJRE1NZMDhDVqHIrytG6P+
      JrUV86f8hBnp7KGItERphIPzidF0BqnMC9bC3ieFUCbKF7jJeodWLBoBHmy+E60Q
      rLUk9TiRodZL2vG70t5HtfG8gfZZa88ZU+mNFctKy6lvROUbQc/hhqfK0GqfvEyN
      BjNaooXlkDWgYlwWTvDjovoDGrQscbNYLN57C9saD+veIR8GdwYDsMnvmfzAuU8L
      hij+0rnq49qlw0dpEuDb8PYZi+17cNcC1u2HGCgsBCRMd+RIihrGO5rUD8r6ddIB
      QFqNeb+Lz0vPqhbBleStTIo+F5HUsWLlguWABKQDfo2/2n+iD5dPDNMN+9fR5XJ+
      HMh3/1uaD7euBUbl8agW7EekFwIDAQABo4H2MIHzMIGwBgNVHREEgagwgaWBD2lu
      Zm9AaXplbnBlLmNvbaSBkTCBjjFHMEUGA1UECgw+SVpFTlBFIFMuQS4gLSBDSUYg
      QTAxMzM3MjYwLVJNZXJjLlZpdG9yaWEtR2FzdGVpeiBUMTA1NSBGNjIgUzgxQzBB
      BgNVBAkMOkF2ZGEgZGVsIE1lZGl0ZXJyYW5lbyBFdG9yYmlkZWEgMTQgLSAwMTAx
      MCBWaXRvcmlhLUdhc3RlaXowDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMC
      AQYwHQYDVR0OBBYEFB0cZQ6o8iV7tJHP5LGx5r1VdGwFMA0GCSqGSIb3DQEBCwUA
      A4ICAQB4pgwWSp9MiDrAyw6lFn2fuUhfGI8NYjb2zRlrrKvV9pF9rnHzP7MOeIWb
      laQnIUdCSnxIOvVFfLMMjlF4rJUT3sb9fbgakEyrkgPH7UIBzg/YsfqikuFgba56
      awmqxinuaElnMIAkejEWOVt+8Rwu3WwJrfIxwYJOubv5vr8qhT/AQKM6WfxZSzwo
      JNu0FXWuDYi6LnPAvViH5ULy617uHjAimcs30cQhbIHsvm0m5hzkQiCeR7Csg1lw
      LDXWrzY0tM07+DKo7+N4ifuNRSzanLh+QBxh5z6ikixL8s36mLYp//Pye6kfLqCT
      VyvehQP5aTfLnnhqBbTFMXiJ7HqnheG5ezzevh55hM6fcA5ZwjUukCox2eRFekGk
      LhObNA5me0mrZJfQRsN5nXJQY6aYWwa9SG3YOYNw6DXwBdGqvOPbyALqfP2C2sJb
      UjWumDqtujWTI6cfSN01RpiyEGjkpTHCClguGYEQyVB1/OpaFs4R1+7vUIgtYf8/
      QnMFlEPVjjxOAToZpR9GTnfQXeWBIiGH/pR9hNiTrdZoQ0iy2+tzJOeRf1SktoA+
      naM8THLCV8Sg1Mw4J87VBp6iSNnpn86CcDaTmjvfliHjWbcM2pE38P1ZWrOZyGls
      QyYBNWNgVYkDOnXYukrZVP/u3oDYLdE41V4tC5h9Pmzb/CaIxw==
      -----END CERTIFICATE-----

      # Microsec e-Szigno Root CA 2009
      -----BEGIN CERTIFICATE-----
      MIIECjCCAvKgAwIBAgIJAMJ+QwRORz8ZMA0GCSqGSIb3DQEBCwUAMIGCMQswCQYD
      VQQGEwJIVTERMA8GA1UEBwwIQnVkYXBlc3QxFjAUBgNVBAoMDU1pY3Jvc2VjIEx0
      ZC4xJzAlBgNVBAMMHk1pY3Jvc2VjIGUtU3ppZ25vIFJvb3QgQ0EgMjAwOTEfMB0G
      CSqGSIb3DQEJARYQaW5mb0BlLXN6aWduby5odTAeFw0wOTA2MTYxMTMwMThaFw0y
      OTEyMzAxMTMwMThaMIGCMQswCQYDVQQGEwJIVTERMA8GA1UEBwwIQnVkYXBlc3Qx
      FjAUBgNVBAoMDU1pY3Jvc2VjIEx0ZC4xJzAlBgNVBAMMHk1pY3Jvc2VjIGUtU3pp
      Z25vIFJvb3QgQ0EgMjAwOTEfMB0GCSqGSIb3DQEJARYQaW5mb0BlLXN6aWduby5o
      dTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAOn4j/NjrdqG2KfgQvvP
      kd6mJviZpWNwrZuuyjNAfW2WbqEORO7hE52UQlKavXWFdCyoDh2Tthi3jCyoz/tc
      cbna7P7ofo/kLx2yqHWH2Leh5TvPmUpG0IMZfcChEhyVbUr02MelTTMuhTlAdX4U
      fIASmFDHQWe4oIBhVKZsTh/gnQ4H6cm6M+f+wFUoLAKApxn1ntxVUwOXewdI/5n7
      N4okxFnMUBBjjqqpGrCEGob5X7uxUG6k0QrM1XF+H6cbfPVTbiJfyyvm1HxdrtbC
      xkzlBQHZ7Vf8wSN5/PrIJIOV87VqUQHQd9bpEqH5GoP7ghu5sJf0dgYzQ0mg/wu1
      +rUCAwEAAaOBgDB+MA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0G
      A1UdDgQWBBTLD8bfQkPMPcu1SCOhGnqmKrs0aDAfBgNVHSMEGDAWgBTLD8bfQkPM
      Pcu1SCOhGnqmKrs0aDAbBgNVHREEFDASgRBpbmZvQGUtc3ppZ25vLmh1MA0GCSqG
      SIb3DQEBCwUAA4IBAQDJ0Q5eLtXMs3w+y/w9/w0olZMEyL/azXm4Q5DwpL7v8u8h
      mLzU1F0G9u5C7DBsoKqpyvGvivo/C3NqPuouQH4frlRheesuCDfXI/OMn74dseGk
      ddug4lQUsbocKaQY9hK6ohQU4zE1yED/t+AFdlfBHFny+L/k7SViXITwfn4fs775
      tyERzAMBVnCnEJIeGzSBHq2cGsMEPO0CYdYeBvNfOofyK/FFh+U9rNHHV4S9a67c
      2Pm2G2JwCz02yULyMtd6YebS2z3PyKnJm9zbWETXbzivf3jTo60adbocwTZ8jx5t
      HMN1Rq41Bab2XD0h7lbwyYIiLXpUq3DDfSJlgnCW
      -----END CERTIFICATE-----

      # Microsoft ECC Root Certificate Authority 2017
      -----BEGIN CERTIFICATE-----
      MIICWTCCAd+gAwIBAgIQZvI9r4fei7FK6gxXMQHC7DAKBggqhkjOPQQDAzBlMQsw
      CQYDVQQGEwJVUzEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMTYwNAYD
      VQQDEy1NaWNyb3NvZnQgRUNDIFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDIw
      MTcwHhcNMTkxMjE4MjMwNjQ1WhcNNDIwNzE4MjMxNjA0WjBlMQswCQYDVQQGEwJV
      UzEeMBwGA1UEChMVTWljcm9zb2Z0IENvcnBvcmF0aW9uMTYwNAYDVQQDEy1NaWNy
      b3NvZnQgRUNDIFJvb3QgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IDIwMTcwdjAQBgcq
      hkjOPQIBBgUrgQQAIgNiAATUvD0CQnVBEyPNgASGAlEvaqiBYgtlzPbKnR5vSmZR
      ogPZnZH6thaxjG7efM3beaYvzrvOcS/lpaso7GMEZpn4+vKTEAXhgShC48Zo9OYb
      hGBKia/teQ87zvH2RPUBeMCjVDBSMA4GA1UdDwEB/wQEAwIBhjAPBgNVHRMBAf8E
      BTADAQH/MB0GA1UdDgQWBBTIy5lycFIM+Oa+sgRXKSrPQhDtNTAQBgkrBgEEAYI3
      FQEEAwIBADAKBggqhkjOPQQDAwNoADBlAjBY8k3qDPlfXu5gKcs68tvWMoQZP3zV
      L8KxzJOuULsJMsbG7X7JNpQS5GiFBqIb0C8CMQCZ6Ra0DvpWSNSkMBaReNtUjGUB
      iudQZsIxtzm6uBoiB078a1QWIP8rtedMDE2mT3M=
      -----END CERTIFICATE-----

      # Microsoft RSA Root Certificate Authority 2017
      -----BEGIN CERTIFICATE-----
      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
      RA+GsCyRxj3qrg+E
      -----END CERTIFICATE-----

      # NAVER Global Root Certification Authority
      -----BEGIN CERTIFICATE-----
      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
      9XXeifdy
      -----END CERTIFICATE-----

      # NetLock Arany (Class Gold) Főtanúsítvány
      -----BEGIN CERTIFICATE-----
      MIIEFTCCAv2gAwIBAgIGSUEs5AAQMA0GCSqGSIb3DQEBCwUAMIGnMQswCQYDVQQG
      EwJIVTERMA8GA1UEBwwIQnVkYXBlc3QxFTATBgNVBAoMDE5ldExvY2sgS2Z0LjE3
      MDUGA1UECwwuVGFuw7pzw610dsOhbnlraWFkw7NrIChDZXJ0aWZpY2F0aW9uIFNl
      cnZpY2VzKTE1MDMGA1UEAwwsTmV0TG9jayBBcmFueSAoQ2xhc3MgR29sZCkgRsWR
      dGFuw7pzw610dsOhbnkwHhcNMDgxMjExMTUwODIxWhcNMjgxMjA2MTUwODIxWjCB
      pzELMAkGA1UEBhMCSFUxETAPBgNVBAcMCEJ1ZGFwZXN0MRUwEwYDVQQKDAxOZXRM
      b2NrIEtmdC4xNzA1BgNVBAsMLlRhbsO6c8OtdHbDoW55a2lhZMOzayAoQ2VydGlm
      aWNhdGlvbiBTZXJ2aWNlcykxNTAzBgNVBAMMLE5ldExvY2sgQXJhbnkgKENsYXNz
      IEdvbGQpIEbFkXRhbsO6c8OtdHbDoW55MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8A
      MIIBCgKCAQEAxCRec75LbRTDofTjl5Bu0jBFHjzuZ9lk4BqKf8owyoPjIMHj9DrT
      lF8afFttvzBPhCf2nx9JvMaZCpDyD/V/Q4Q3Y1GLeqVw/HpYzY6b7cNGbIRwXdrz
      AZAj/E4wqX7hJ2Pn7WQ8oLjJM2P+FpD/sLj916jAwJRDC7bVWaaeVtAkH3B5r9s5
      VA1lddkVQZQBr17s9o3x/61k/iCa11zr/qYfCGSji3ZVrR47KGAuhyXoqq8fxmRG
      ILdwfzzeSNuWU7c5d+Qa4scWhHaXWy+7GRWF+GmF9ZmnqfI0p6m2pgP8b4Y9VHx2
      BJtr+UBdADTHLpl1neWIA6pN+APSQnbAGwIDAKiLo0UwQzASBgNVHRMBAf8ECDAG
      AQH/AgEEMA4GA1UdDwEB/wQEAwIBBjAdBgNVHQ4EFgQUzPpnk/C2uNClwB7zU/2M
      U9+D15YwDQYJKoZIhvcNAQELBQADggEBAKt/7hwWqZw8UQCgwBEIBaeZ5m8BiFRh
      bvG5GK1Krf6BQCOUL/t1fC8oS2IkgYIL9WHxHG64YTjrgfpioTtaYtOUZcTh5m2C
      +C8lcLIhJsFyUR+MLMOEkMNaj7rP9KdlpeuY0fsFskZ1FSNqb4VjMIDw1Z4fKRzC
      bLBQWV2QWzuoDTDPv31/zvGdg73JRm4gpvlhUbohL3u+pRVjodSVh/GeufOJ8z2F
      uLjbvrW5KfnaNwUASZQDhETnv0Mxz3WLJdH0pmT1kvarBes96aULNmLazAZfNou2
      XjG4Kvte9nHfRCaexOYNkbQudZWAUWpLMKawYqGT8ZvYzsRjdT9ZR7E=
      -----END CERTIFICATE-----

      # Network Solutions Certificate Authority
      -----BEGIN CERTIFICATE-----
      MIID5jCCAs6gAwIBAgIQV8szb8JcFuZHFhfjkDFo4DANBgkqhkiG9w0BAQUFADBi
      MQswCQYDVQQGEwJVUzEhMB8GA1UEChMYTmV0d29yayBTb2x1dGlvbnMgTC5MLkMu
      MTAwLgYDVQQDEydOZXR3b3JrIFNvbHV0aW9ucyBDZXJ0aWZpY2F0ZSBBdXRob3Jp
      dHkwHhcNMDYxMjAxMDAwMDAwWhcNMjkxMjMxMjM1OTU5WjBiMQswCQYDVQQGEwJV
      UzEhMB8GA1UEChMYTmV0d29yayBTb2x1dGlvbnMgTC5MLkMuMTAwLgYDVQQDEydO
      ZXR3b3JrIFNvbHV0aW9ucyBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkwggEiMA0GCSqG
      SIb3DQEBAQUAA4IBDwAwggEKAoIBAQDkvH6SMG3G2I4rC7xGzuAnlt7e+foS0zwz
      c7MEL7xxjOWftiJgPl9dzgn/ggwbmlFQGiaJ3dVhXRncEg8tCqJDXRfQNJIg6nPP
      OCwGJgl6cvf6UDL4wpPTaaIjzkGxzOTVHzbRijr4jGPiFFlp7Q3Tf2vouAPlT2rl
      mGNpSAW+Lv8ztumXWWn4Zxmuk2GWRBXTcrA/vGp97Eh/jcOrqnErU2lBUzS1sLnF
      BgrEsEX1QV1uiUV7PTsmjHTC5dLRfbIR1PtYMiKagMnc/Qzpf14Dl847ABSHJ3A4
      qY5usyd2mFHgBeMhqxrVhSI8KbWaFsWAqPS7azCPL0YCorEMIuDTAgMBAAGjgZcw
      gZQwHQYDVR0OBBYEFCEwyfsA106Y2oeqKtCnLrFAMadMMA4GA1UdDwEB/wQEAwIB
      BjAPBgNVHRMBAf8EBTADAQH/MFIGA1UdHwRLMEkwR6BFoEOGQWh0dHA6Ly9jcmwu
      bmV0c29sc3NsLmNvbS9OZXR3b3JrU29sdXRpb25zQ2VydGlmaWNhdGVBdXRob3Jp
      dHkuY3JsMA0GCSqGSIb3DQEBBQUAA4IBAQC7rkvnt1frf6ott3NHhWrB5KUd5Oc8
      6fRZZXe1eltajSU24HqXLjjAV2CDmAaDn7l2em5Q4LqILPxFzBiwmZVRDuwduIj/
      h1AcgsLj4DKAv6ALR8jDMe+ZZzKATxcheQxpXN5eNK4CtSbqUN9/GGUsyfJj4akH
      /nxxH2szJGoeBfcFaMBqEssuXmHLrijTfsK0ZpEmXzwuJF/LWA/rKOyvEZbz3Htv
      wKeI8lN3s2Berq4o2jUsbzRF0ybh3uxbTydrFny9RAQYgrOJeRcQcT16ohZO9QHN
      pGxlaKFJdlxDydi8NmdspZS11My5vWo1ViHe2MPr+8ukYEywVaCge1ey
      -----END CERTIFICATE-----

      # OISTE WISeKey Global Root GB CA
      -----BEGIN CERTIFICATE-----
      MIIDtTCCAp2gAwIBAgIQdrEgUnTwhYdGs/gjGvbCwDANBgkqhkiG9w0BAQsFADBt
      MQswCQYDVQQGEwJDSDEQMA4GA1UEChMHV0lTZUtleTEiMCAGA1UECxMZT0lTVEUg
      Rm91bmRhdGlvbiBFbmRvcnNlZDEoMCYGA1UEAxMfT0lTVEUgV0lTZUtleSBHbG9i
      YWwgUm9vdCBHQiBDQTAeFw0xNDEyMDExNTAwMzJaFw0zOTEyMDExNTEwMzFaMG0x
      CzAJBgNVBAYTAkNIMRAwDgYDVQQKEwdXSVNlS2V5MSIwIAYDVQQLExlPSVNURSBG
      b3VuZGF0aW9uIEVuZG9yc2VkMSgwJgYDVQQDEx9PSVNURSBXSVNlS2V5IEdsb2Jh
      bCBSb290IEdCIENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2Be3
      HEokKtaXscriHvt9OO+Y9bI5mE4nuBFde9IllIiCFSZqGzG7qFshISvYD06fWvGx
      WuR51jIjK+FTzJlFXHtPrby/h0oLS5daqPZI7H17Dc0hBt+eFf1Biki3IPShehtX
      1F1Q/7pn2COZH8g/497/b1t3sWtuuMlk9+HKQUYOKXHQuSP8yYFfTvdv37+ErXNk
      u7dCjmn21HYdfp2nuFeKUWdy19SouJVUQHMD9ur06/4oQnc/nSMbsrY9gBQHTC5P
      99UKFg29ZkM3fiNDecNAhvVMKdqOmq0NpQSHiB6F4+lT1ZvIiwNjeOvgGUpuuy9r
      M2RYk61pv48b74JIxwIDAQABo1EwTzALBgNVHQ8EBAMCAYYwDwYDVR0TAQH/BAUw
      AwEB/zAdBgNVHQ4EFgQUNQ/INmNe4qPs+TtmFc5RUuORmj0wEAYJKwYBBAGCNxUB
      BAMCAQAwDQYJKoZIhvcNAQELBQADggEBAEBM+4eymYGQfp3FsLAmzYh7KzKNbrgh
      cViXfa43FK8+5/ea4n32cZiZBKpDdHij40lhPnOMTZTg+XHEthYOU3gf1qKHLwI5
      gSk8rxWYITD+KJAAjNHhy/peyP34EEY7onhCkRd0VQreUGdNZtGn//3ZwLWoo4rO
      ZvUPQ82nK1d7Y0Zqqi5S2PTt4W2tKZB4SLrhI6qjiey1q5bAtEuiHZeeevJuQHHf
      aPFlTc58Bd9TZaml8LGXBHAVRgOY1NK/VLSgWH1Sb9pWJmLU2NuJMW8c8CLC02Ic
      Nc1MaRVUGpCY3useX8p3x8uOPUNpnJpY0CQ73xtAln41rYHHTnG6iBM=
      -----END CERTIFICATE-----

      # OISTE WISeKey Global Root GC CA
      -----BEGIN CERTIFICATE-----
      MIICaTCCAe+gAwIBAgIQISpWDK7aDKtARb8roi066jAKBggqhkjOPQQDAzBtMQsw
      CQYDVQQGEwJDSDEQMA4GA1UEChMHV0lTZUtleTEiMCAGA1UECxMZT0lTVEUgRm91
      bmRhdGlvbiBFbmRvcnNlZDEoMCYGA1UEAxMfT0lTVEUgV0lTZUtleSBHbG9iYWwg
      Um9vdCBHQyBDQTAeFw0xNzA1MDkwOTQ4MzRaFw00MjA1MDkwOTU4MzNaMG0xCzAJ
      BgNVBAYTAkNIMRAwDgYDVQQKEwdXSVNlS2V5MSIwIAYDVQQLExlPSVNURSBGb3Vu
      ZGF0aW9uIEVuZG9yc2VkMSgwJgYDVQQDEx9PSVNURSBXSVNlS2V5IEdsb2JhbCBS
      b290IEdDIENBMHYwEAYHKoZIzj0CAQYFK4EEACIDYgAETOlQwMYPchi82PG6s4ni
      eUqjFqdrVCTbUf/q9Akkwwsin8tqJ4KBDdLArzHkdIJuyiXZjHWd8dvQmqJLIX4W
      p2OQ0jnUsYd4XxiWD1AbNTcPasbc2RNNpI6QN+a9WzGRo1QwUjAOBgNVHQ8BAf8E
      BAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUSIcUrOPDnpBgOtfKie7T
      rYy0UGYwEAYJKwYBBAGCNxUBBAMCAQAwCgYIKoZIzj0EAwMDaAAwZQIwJsdpW9zV
      57LnyAyMjMPdeYwbY9XJUpROTYJKcx6ygISpJcBMWm1JKWB4E+J+SOtkAjEA2zQg
      Mgj/mkkCtojeFK9dbJlxjRo/i9fgojaGHAeCOnZT/cKi7e97sIBPWA9LUzm9
      -----END CERTIFICATE-----

      # QuoVadis Root CA 1 G3
      -----BEGIN CERTIFICATE-----
      MIIFYDCCA0igAwIBAgIUeFhfLq0sGUvjNwc1NBMotZbUZZMwDQYJKoZIhvcNAQEL
      BQAwSDELMAkGA1UEBhMCQk0xGTAXBgNVBAoTEFF1b1ZhZGlzIExpbWl0ZWQxHjAc
      BgNVBAMTFVF1b1ZhZGlzIFJvb3QgQ0EgMSBHMzAeFw0xMjAxMTIxNzI3NDRaFw00
      MjAxMTIxNzI3NDRaMEgxCzAJBgNVBAYTAkJNMRkwFwYDVQQKExBRdW9WYWRpcyBM
      aW1pdGVkMR4wHAYDVQQDExVRdW9WYWRpcyBSb290IENBIDEgRzMwggIiMA0GCSqG
      SIb3DQEBAQUAA4ICDwAwggIKAoICAQCgvlAQjunybEC0BJyFuTHK3C3kEakEPBtV
      wedYMB0ktMPvhd6MLOHBPd+C5k+tR4ds7FtJwUrVu4/sh6x/gpqG7D0DmVIB0jWe
      rNrwU8lmPNSsAgHaJNM7qAJGr6Qc4/hzWHa39g6QDbXwz8z6+cZM5cOGMAqNF341
      68Xfuw6cwI2H44g4hWf6Pser4BOcBRiYz5P1sZK0/CPTz9XEJ0ngnjybCKOLXSoh
      4Pw5qlPafX7PGglTvF0FBM+hSo+LdoINofjSxxR3W5A2B4GbPgb6Ul5jxaYA/qXp
      UhtStZI5cgMJYr2wYBZupt0lwgNm3fME0UDiTouG9G/lg6AnhF4EwfWQvTA9xO+o
      abw4m6SkltFi2mnAAZauy8RRNOoMqv8hjlmPSlzkYZqn0ukqeI1RPToV7qJZjqlc
      3sX5kCLliEVx3ZGZbHqfPT2YfF72vhZooF6uCyP8Wg+qInYtyaEQHeTTRCOQiJ/G
      KubX9ZqzWB4vMIkIG1SitZgj7Ah3HJVdYdHLiZxfokqRmu8hqkkWCKi9YSgxyXSt
      hfbZxbGL0eUQMk1fiyA6PEkfM4VZDdvLCXVDaXP7a3F98N/ETH3Goy7IlXnLc6KO
      Tk0k+17kBL5yG6YnLUlamXrXXAkgt3+UuU/xDRxeiEIbEbfnkduebPRq34wGmAOt
      zCjvpUfzUwIDAQABo0IwQDAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIB
      BjAdBgNVHQ4EFgQUo5fW816iEOGrRZ88F2Q87gFwnMwwDQYJKoZIhvcNAQELBQAD
      ggIBABj6W3X8PnrHX3fHyt/PX8MSxEBd1DKquGrX1RUVRpgjpeaQWxiZTOOtQqOC
      MTaIzen7xASWSIsBx40Bz1szBpZGZnQdT+3Btrm0DWHMY37XLneMlhwqI2hrhVd2
      cDMT/uFPpiN3GPoajOi9ZcnPP/TJF9zrx7zABC4tRi9pZsMbj/7sPtPKlL92CiUN
      qXsCHKnQO18LwIE6PWThv6ctTr1NxNgpxiIY0MWscgKCP6o6ojoilzHdCGPDdRS5
      YCgtW2jgFqlmgiNR9etT2DGbe+m3nUvriBbP+V04ikkwj+3x6xn0dxoxGE1nVGwv
      b2X52z3sIexe9PSLymBlVNFxZPT5pqOBMzYzcfCkeF9OrYMh3jRJjehZrJ3ydlo2
      8hP0r+AJx2EqbPfgna67hkooby7utHnNkDPDs3b69fBsnQGQ+p6Q9pxyz0fawx/k
      NSBT8lTR32GDpgLiJTjehTItXnOQUl1CxM49S+H5GYQd1aJQzEH7QRTDvdbJWqNj
      ZgKAvQU6O0ec7AAmTPWIUb+oI38YB7AL7YsmoWTTYUrrXJ/es69nA7Mf3W1daWhp
      q1467HxpvMc7hU6eFbm0FU/DlXpY18ls6Wy58yljXrQs8C097Vpl4KlbQMJImYFt
      nh8GKjwStIsPm6Ik8KaN1nrgS7ZklmOVhMJKzRwuJIczYOXD
      -----END CERTIFICATE-----

      # QuoVadis Root CA 2
      -----BEGIN CERTIFICATE-----
      MIIFtzCCA5+gAwIBAgICBQkwDQYJKoZIhvcNAQEFBQAwRTELMAkGA1UEBhMCQk0x
      GTAXBgNVBAoTEFF1b1ZhZGlzIExpbWl0ZWQxGzAZBgNVBAMTElF1b1ZhZGlzIFJv
      b3QgQ0EgMjAeFw0wNjExMjQxODI3MDBaFw0zMTExMjQxODIzMzNaMEUxCzAJBgNV
      BAYTAkJNMRkwFwYDVQQKExBRdW9WYWRpcyBMaW1pdGVkMRswGQYDVQQDExJRdW9W
      YWRpcyBSb290IENBIDIwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCa
      GMpLlA0ALa8DKYrwD4HIrkwZhR0In6spRIXzL4GtMh6QRr+jhiYaHv5+HBg6XJxg
      Fyo6dIMzMH1hVBHL7avg5tKifvVrbxi3Cgst/ek+7wrGsxDp3MJGF/hd/aTa/55J
      WpzmM+Yklvc/ulsrHHo1wtZn/qtmUIttKGAr79dgw8eTvI02kfN/+NsRE8Scd3bB
      rrcCaoF6qUWD4gXmuVbBlDePSHFjIuwXZQeVikvfj8ZaCuWw419eaxGrDPmF60Tp
      +ARz8un+XJiM9XOva7R+zdRcAitMOeGylZUtQofX1bOQQ7dsE/He3fbE+Ik/0XX1
      ksOR1YqI0JDs3G3eicJlcZaLDQP9nL9bFqyS2+r+eXyt66/3FsvbzSUr5R/7mp/i
      Ucw6UwxI5g69ybR2BlLmEROFcmMDBOAENisgGQLodKcftslWZvB1JdxnwQ5hYIiz
      PtGo/KPaHbDRsSNU30R2be1B2MGyIrZTHN81Hdyhdyox5C315eXbyOD/5YDXC2Og
      /zOhD7osFRXql7PSorW+8oyWHhqPHWykYTe5hnMz15eWniN9gqRMgeKh0bpnX5UH
      oycR7hYQe7xFSkyyBNKr79X9DFHOUGoIMfmR2gyPZFwDwzqLID9ujWc9Otb+fVuI
      yV77zGHcizN300QyNQliBJIWENieJ0f7OyHj+OsdWwIDAQABo4GwMIGtMA8GA1Ud
      EwEB/wQFMAMBAf8wCwYDVR0PBAQDAgEGMB0GA1UdDgQWBBQahGK8SEwzJQTU7tD2
      A8QZRtGUazBuBgNVHSMEZzBlgBQahGK8SEwzJQTU7tD2A8QZRtGUa6FJpEcwRTEL
      MAkGA1UEBhMCQk0xGTAXBgNVBAoTEFF1b1ZhZGlzIExpbWl0ZWQxGzAZBgNVBAMT
      ElF1b1ZhZGlzIFJvb3QgQ0EgMoICBQkwDQYJKoZIhvcNAQEFBQADggIBAD4KFk2f
      BluornFdLwUvZ+YTRYPENvbzwCYMDbVHZF34tHLJRqUDGCdViXh9duqWNIAXINzn
      g/iN/Ae42l9NLmeyhP3ZRPx3UIHmfLTJDQtyU/h2BwdBR5YM++CCJpNVjP4iH2Bl
      fF/nJrP3MpCYUNQ3cVX2kiF495V5+vgtJodmVjB3pjd4M1IQWK4/YY7yarHvGH5K
      WWPKjaJW1acvvFYfzznB4vsKqBUsfU16Y8Zsl0Q80m/DShcK+JDSV6IZUaUtl0Ha
      B0+pUNqQjZRG4T7wlP0QADj1O+hA4bRuVhogzG9Yje0uRY/W6ZM/57Es3zrWIozc
      hLsib9D45MY56QSIPMO661V6bYCZJPVsAfv4l7CUW+v90m/xd2gNNWQjrLhVoQPR
      TUIZ3Ph1WVaj+ahJefivDrkRoHy3au000LYmYjgahwz46P0u05B/B5EqHdZ+XIWD
      mbA4CD/pXvk1B+TJYm5Xf6dQlfe6yJvmjqIBxdZmv3lh8zwc4bmCXF2gw+nYSL0Z
      ohEUGW6yhhtoPkg3Goi3XZZenMfvJ2II4pEZXNLxId26F0KCl3GBUzGpn/Z9Yr9y
      4aOTHcyKJloJONDO1w2AFrR4pTqHTI2KpdVGl/IsELm8VCLAAVBpQ570su9t+Oza
      8eOx79+Rj1QqCyXBJhnEUhAFZdWCEOrCMc0u
      -----END CERTIFICATE-----

      # QuoVadis Root CA 2 G3
      -----BEGIN CERTIFICATE-----
      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
      -----END CERTIFICATE-----

      # QuoVadis Root CA 3
      -----BEGIN CERTIFICATE-----
      MIIGnTCCBIWgAwIBAgICBcYwDQYJKoZIhvcNAQEFBQAwRTELMAkGA1UEBhMCQk0x
      GTAXBgNVBAoTEFF1b1ZhZGlzIExpbWl0ZWQxGzAZBgNVBAMTElF1b1ZhZGlzIFJv
      b3QgQ0EgMzAeFw0wNjExMjQxOTExMjNaFw0zMTExMjQxOTA2NDRaMEUxCzAJBgNV
      BAYTAkJNMRkwFwYDVQQKExBRdW9WYWRpcyBMaW1pdGVkMRswGQYDVQQDExJRdW9W
      YWRpcyBSb290IENBIDMwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDM
      V0IWVJzmmNPTTe7+7cefQzlKZbPoFog02w1ZkXTPkrgEQK0CSzGrvI2RaNggDhoB
      4hp7Thdd4oq3P5kazethq8Jlph+3t723j/z9cI8LoGe+AaJZz3HmDyl2/7FWeUUr
      H556VOijKTVopAFPD6QuN+8bv+OPEKhyq1hX51SGyMnzW9os2l2ObjyjPtr7guXd
      8lyyBTNvijbO0BNO/79KDDRMpsMhvVAEVeuxu537RR5kFd5VAYwCdrXLoT9Cabwv
      vWhDFlaJKjdhkf2mrk7AyxRllDdLkgbvBNDInIjbC3uBr7E9KsRlOni27tyAsdLT
      mZw67mtaa7ONt9XOnMK+pUsvFrGeaDsGb659n/je7Mwpp5ijJUMv7/FfJuGITfhe
      btfZFG4ZM2mnO4SJk8RTVROhUXhA+LjJou57ulJCg54U7QVSWllWp5f8nT8KKdjc
      T5EOE7zelaTfi5m+rJsziO+1ga8bxiJTyPbH7pcUsMV8eFLI8M5ud2CEpukqdiDt
      WAEXMJPpGovgc2PZapKUSU60rUqFxKMiMPwJ7Wgic6aIDFUhWMXhOp8q3crhkODZ
      c6tsgLjoC2SToJyMGf+z0gzskSaHirOi4XCPLArlzW1oUevaPwV/izLmE1xr/l9A
      4iLItLRkT9a6fUg+qGkM17uGcclzuD87nSVL2v9A6wIDAQABo4IBlTCCAZEwDwYD
      VR0TAQH/BAUwAwEB/zCB4QYDVR0gBIHZMIHWMIHTBgkrBgEEAb5YAAMwgcUwgZMG
      CCsGAQUFBwICMIGGGoGDQW55IHVzZSBvZiB0aGlzIENlcnRpZmljYXRlIGNvbnN0
      aXR1dGVzIGFjY2VwdGFuY2Ugb2YgdGhlIFF1b1ZhZGlzIFJvb3QgQ0EgMyBDZXJ0
      aWZpY2F0ZSBQb2xpY3kgLyBDZXJ0aWZpY2F0aW9uIFByYWN0aWNlIFN0YXRlbWVu
      dC4wLQYIKwYBBQUHAgEWIWh0dHA6Ly93d3cucXVvdmFkaXNnbG9iYWwuY29tL2Nw
      czALBgNVHQ8EBAMCAQYwHQYDVR0OBBYEFPLAE+CCQz777i9nMpY1XNu4ywLQMG4G
      A1UdIwRnMGWAFPLAE+CCQz777i9nMpY1XNu4ywLQoUmkRzBFMQswCQYDVQQGEwJC
      TTEZMBcGA1UEChMQUXVvVmFkaXMgTGltaXRlZDEbMBkGA1UEAxMSUXVvVmFkaXMg
      Um9vdCBDQSAzggIFxjANBgkqhkiG9w0BAQUFAAOCAgEAT62gLEz6wPJv92ZVqyM0
      7ucp2sNbtrCD2dDQ4iH782CnO11gUyeim/YIIirnv6By5ZwkajGxkHon24QRiSem
      d1o417+shvzuXYO8BsbRd2sPbSQvS3pspweWyuOEn62Iix2rFo1bZhfZFvSLgNLd
      +LJ2w/w4E6oM3kJpK27zPOuAJ9v1pkQNn1pVWQvVDVJIxa6f8i+AxeoyUDUSly7B
      4f/xI4hROJ/yZlZ25w9Rl6VSDE1JUZU2Pb+iSwwQHYaZTKrzchGT5Or2m9qoXadN
      t54CrnMAyNojA+j56hl0YgCUyyIgvpSnWbWCar6ZeXqp8kokUvd0/bpO5qgdAm6x
      DYBEwa7TIzdfu4V8K5Iu6H6li92Z4b8nby1dqnuH/grdS/yO9SbkbnBCbjPsMZ57
      k8HkyWkaPcBrTiJt7qtYTcbQQcEr6k8Sh17rRdhs9ZgC06DYVYoGmRmioHfRMJ6s
      zHXug/WwYjnPbFfiTNKRCw51KBuav/0aQ/HKd/s7j2G4aSgWQgRecCocIdiP4b0j
      Wy10QJLZYxkNc91pvGJHvOB0K7Lrfb5BG7XARsWhIstfTsEokt4YutUqKLsRixeT
      mJlglFwjz1onl14LBQaTNx47aTbrqZ5hHY8y2o4M1nQ+ewkk2gF3R8Q7zTSMmfXK
      4SVhM7JZG+Ju1zdXtg2pEto=
      -----END CERTIFICATE-----

      # QuoVadis Root CA 3 G3
      -----BEGIN CERTIFICATE-----
      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
      -----END CERTIFICATE-----

      # SSL.com EV Root Certification Authority ECC
      -----BEGIN CERTIFICATE-----
      MIIClDCCAhqgAwIBAgIILCmcWxbtBZUwCgYIKoZIzj0EAwIwfzELMAkGA1UEBhMC
      VVMxDjAMBgNVBAgMBVRleGFzMRAwDgYDVQQHDAdIb3VzdG9uMRgwFgYDVQQKDA9T
      U0wgQ29ycG9yYXRpb24xNDAyBgNVBAMMK1NTTC5jb20gRVYgUm9vdCBDZXJ0aWZp
      Y2F0aW9uIEF1dGhvcml0eSBFQ0MwHhcNMTYwMjEyMTgxNTIzWhcNNDEwMjEyMTgx
      NTIzWjB/MQswCQYDVQQGEwJVUzEOMAwGA1UECAwFVGV4YXMxEDAOBgNVBAcMB0hv
      dXN0b24xGDAWBgNVBAoMD1NTTCBDb3Jwb3JhdGlvbjE0MDIGA1UEAwwrU1NMLmNv
      bSBFViBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IEVDQzB2MBAGByqGSM49
      AgEGBSuBBAAiA2IABKoSR5CYG/vvw0AHgyBO8TCCogbR8pKGYfL2IWjKAMTH6kMA
      VIbc/R/fALhBYlzccBYy3h+Z1MzFB8gIH2EWB1E9fVwHU+M1OIzfzZ/ZLg1Kthku
      WnBaBu2+8KGwytAJKaNjMGEwHQYDVR0OBBYEFFvKXuXe0oGqzagtZFG22XKbl+ZP
      MA8GA1UdEwEB/wQFMAMBAf8wHwYDVR0jBBgwFoAUW8pe5d7SgarNqC1kUbbZcpuX
      5k8wDgYDVR0PAQH/BAQDAgGGMAoGCCqGSM49BAMCA2gAMGUCMQCK5kCJN+vp1RPZ
      ytRrJPOwPYdGWBrssd9v+1a6cGvHOMzosYxPD/fxZ3YOg9AeUY8CMD32IygmTMZg
      h5Mmm7I1HrrW9zzRHM76JTymGoEVW/MSD2zuZYrJh6j5B+BimoxcSg==
      -----END CERTIFICATE-----

      # SSL.com EV Root Certification Authority RSA R2
      -----BEGIN CERTIFICATE-----
      MIIF6zCCA9OgAwIBAgIIVrYpzTS8ePYwDQYJKoZIhvcNAQELBQAwgYIxCzAJBgNV
      BAYTAlVTMQ4wDAYDVQQIDAVUZXhhczEQMA4GA1UEBwwHSG91c3RvbjEYMBYGA1UE
      CgwPU1NMIENvcnBvcmF0aW9uMTcwNQYDVQQDDC5TU0wuY29tIEVWIFJvb3QgQ2Vy
      dGlmaWNhdGlvbiBBdXRob3JpdHkgUlNBIFIyMB4XDTE3MDUzMTE4MTQzN1oXDTQy
      MDUzMDE4MTQzN1owgYIxCzAJBgNVBAYTAlVTMQ4wDAYDVQQIDAVUZXhhczEQMA4G
      A1UEBwwHSG91c3RvbjEYMBYGA1UECgwPU1NMIENvcnBvcmF0aW9uMTcwNQYDVQQD
      DC5TU0wuY29tIEVWIFJvb3QgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkgUlNBIFIy
      MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAjzZlQOHWTcDXtOlG2mvq
      M0fNTPl9fb69LT3w23jhhqXZuglXaO1XPqDQCEGD5yhBJB/jchXQARr7XnAjssuf
      OePPxU7Gkm0mxnu7s9onnQqG6YE3Bf7wcXHswxzpY6IXFJ3vG2fThVUCAtZJycxa
      4bH3bzKfydQ7iEGonL3Lq9ttewkfokxykNorCPzPPFTOZw+oz12WGQvE43LrrdF9
      HSfvkusQv1vrO6/PgN3B0pYEW3p+pKk8OHakYo6gOV7qd89dAFmPZiw+B6KjBSYR
      aZfqhbcPlgtLyEDhULouisv3D5oi53+aNxPN8k0TayHRwMwi8qFG9kRpnMphNQcA
      b9ZhCBHqurj26bNg5U257J8UZslXWNvNh2n4ioYSA0e/ZhN2rHd9NCSFg83XqpyQ
      Gp8hLH94t2S42Oim9HizVcuE0jLEeK6jj2HdzghTreyI/BXkmg3mnxp3zkyPuBQV
      PWKchjgGAGYS5Fl2WlPAApiiECtoRHuOec4zSnaqW4EWG7WK2NAAe15itAnWhmMO
      pgWVSbooi4iTsjQc2KRVbrcc0N6ZVTsj9CLg+SlmJuwgUHfbSguPvuUCYHBBXtSu
      UDkiFCbLsjtzdFVHB3mBOagwE0TlBIqulhMlQg+5U8Sb/M3kHN48+qvWBkofZ6aY
      MBzdLNvcGJVXZsb/XItW9XcCAwEAAaNjMGEwDwYDVR0TAQH/BAUwAwEB/zAfBgNV
      HSMEGDAWgBT5YLvU49U09rj1BoAlp3PbRmmonjAdBgNVHQ4EFgQU+WC71OPVNPa4
      9QaAJadz20ZpqJ4wDgYDVR0PAQH/BAQDAgGGMA0GCSqGSIb3DQEBCwUAA4ICAQBW
      s47LCp1Jjr+kxJG7ZhcFUZh1++VQLHqe8RT6q9OKPv+RKY9ji9i0qVQBDb6Thi/5
      Sm3HXvVX+cpVHBK+Rw82xd9qt9t1wkclf7nxY/hoLVUE0fKNsKTPvDxeH3jnpaAg
      cLAExbf3cqfeIg29MyVGjGSSJuM+LmOW2puMPfgYCdcDzH2GguDKBAdRUNf/ktUM
      79qGn5nX67evaOI5JpS6aLe/g9Pqemc9YmeuJeVy6OLk7K4S9ksrPJ/psEDzOFSz
      /bdoyNrGj1E8svuR3Bznm53htw1yj+KkxKl4+esUrMZDBcJlOSgYAsOCsp0FvmXt
      ll9ldDz7CTUue5wT/RsPXcdtgTpWD8w74a8CLyKsRspGPKAcTNZEtF4uXBVmCeEm
      Kf7GUmG6sXP/wwyc5WxqlD8UykAWlYTzWamsX0xhk23RO8yilQwipmdnRC652dKK
      QbNmC1r7fSOl8hqw/96bg5Qu0T/fkreRrwU7ZcegbLHNYhLDkBvjJc40vG93drEQ
      w/cFGsDWr3RiSBd3kmmQYRzelYB0VI8YHMPzA9C/pEN1hlMYegouCRw2n5H9gooi
      S9EOUCXdywMMF8mDAAhONU2Ki+3wApRmLER/y5UnlhetCTCstnEXbosX9hwJ1C07
      mKVx01QT2WDz9UtmT/rx7iASjbSsV7FFY6GsdqnC+w==
      -----END CERTIFICATE-----

      # SSL.com Root Certification Authority ECC
      -----BEGIN CERTIFICATE-----
      MIICjTCCAhSgAwIBAgIIdebfy8FoW6gwCgYIKoZIzj0EAwIwfDELMAkGA1UEBhMC
      VVMxDjAMBgNVBAgMBVRleGFzMRAwDgYDVQQHDAdIb3VzdG9uMRgwFgYDVQQKDA9T
      U0wgQ29ycG9yYXRpb24xMTAvBgNVBAMMKFNTTC5jb20gUm9vdCBDZXJ0aWZpY2F0
      aW9uIEF1dGhvcml0eSBFQ0MwHhcNMTYwMjEyMTgxNDAzWhcNNDEwMjEyMTgxNDAz
      WjB8MQswCQYDVQQGEwJVUzEOMAwGA1UECAwFVGV4YXMxEDAOBgNVBAcMB0hvdXN0
      b24xGDAWBgNVBAoMD1NTTCBDb3Jwb3JhdGlvbjExMC8GA1UEAwwoU1NMLmNvbSBS
      b290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IEVDQzB2MBAGByqGSM49AgEGBSuB
      BAAiA2IABEVuqVDEpiM2nl8ojRfLliJkP9x6jh3MCLOicSS6jkm5BBtHllirLZXI
      7Z4INcgn64mMU1jrYor+8FsPazFSY0E7ic3s7LaNGdM0B9y7xgZ/wkWV7Mt/qCPg
      CemB+vNH06NjMGEwHQYDVR0OBBYEFILRhXMw5zUE044CkvvlpNHEIejNMA8GA1Ud
      EwEB/wQFMAMBAf8wHwYDVR0jBBgwFoAUgtGFczDnNQTTjgKS++Wk0cQh6M0wDgYD
      VR0PAQH/BAQDAgGGMAoGCCqGSM49BAMCA2cAMGQCMG/n61kRpGDPYbCWe+0F+S8T
      kdzt5fxQaxFGRrMcIQBiu77D5+jNB5n5DQtdcj7EqgIwH7y6C+IwJPt8bYBVCpk+
      gA0z5Wajs6O7pdWLjwkspl1+4vAHCGht0nxpbl/f5Wpl
      -----END CERTIFICATE-----

      # SSL.com Root Certification Authority RSA
      -----BEGIN CERTIFICATE-----
      MIIF3TCCA8WgAwIBAgIIeyyb0xaAMpkwDQYJKoZIhvcNAQELBQAwfDELMAkGA1UE
      BhMCVVMxDjAMBgNVBAgMBVRleGFzMRAwDgYDVQQHDAdIb3VzdG9uMRgwFgYDVQQK
      DA9TU0wgQ29ycG9yYXRpb24xMTAvBgNVBAMMKFNTTC5jb20gUm9vdCBDZXJ0aWZp
      Y2F0aW9uIEF1dGhvcml0eSBSU0EwHhcNMTYwMjEyMTczOTM5WhcNNDEwMjEyMTcz
      OTM5WjB8MQswCQYDVQQGEwJVUzEOMAwGA1UECAwFVGV4YXMxEDAOBgNVBAcMB0hv
      dXN0b24xGDAWBgNVBAoMD1NTTCBDb3Jwb3JhdGlvbjExMC8GA1UEAwwoU1NMLmNv
      bSBSb290IENlcnRpZmljYXRpb24gQXV0aG9yaXR5IFJTQTCCAiIwDQYJKoZIhvcN
      AQEBBQADggIPADCCAgoCggIBAPkP3aMrfcvQKv7sZ4Wm5y4bunfh4/WvpOz6Sl2R
      xFdHaxh3a3by/ZPkPQ/CFp4LZsNWlJ4Xg4XOVu/yFv0AYvUiCVToZRdOQbngT0aX
      qhvIuG5iXmmxX9sqAn78bMrzQdjt0Oj8P2FI7bADFB0QDksZ4LtO7IZl/zbzXmcC
      C52GVWH9ejjt/uIZALdvoVBidXQ8oPrIJZK0bnoix/geoeOy3ZExqysdBP+lSgQ3
      6YWkMyv94tZVNHwZpEpox7Ko07fKoZOI68GXvIz5HdkihCR0xwQ9aqkpk8zruFvh
      /l8lqjRYyMEjVJ0bmBHDOJx+PYZspQ9AhnwC9FwCTyjLrnGfDzrIM/4RJTXq/LrF
      YD3ZfBjVsqnTdXgDciLKOsMf7yzlLqn6niy2UUb9rwPW6mBo6oUWNmuF6R7As93E
      JNyAKoFBbZQ+yODJgUEAnl6/f8UImKIYLEJAs/lvOCdLToD0PYFH4Ih86hzOtXVc
      US4cK38acijnALXRdMbX5J+tB5O2UzU1/Dfkw/ZdFr4hc96SCvigY2q8lpJqPvi8
      ZVWb3vUNiSYE/CUapiVpy8JtynziWV+XrOvvLsi81xtZPCvM8hnIk2snYxnP/Okm
      +Mpxm3+T/jRnhE6Z6/yzeAkzcLpmpnbtG3PrGqUNxCITIJRWCk4sbE6x/c+cCbqi
      M+2HAgMBAAGjYzBhMB0GA1UdDgQWBBTdBAkHovV6fVJTEpKV7jiAJQ2mWTAPBgNV
      HRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFN0ECQei9Xp9UlMSkpXuOIAlDaZZMA4G
      A1UdDwEB/wQEAwIBhjANBgkqhkiG9w0BAQsFAAOCAgEAIBgRlCn7Jp0cHh5wYfGV
      cpNxJK1ok1iOMq8bs3AD/CUrdIWQPXhq9LmLpZc7tRiRux6n+UBbkflVma8eEdBc
      Hadm47GUBwwyOabqG7B52B2ccETjit3E+ZUfijhDPwGFpUenPUayvOUiaPd7nNgs
      PgohyC0zrL/FgZkxdMF1ccW+sfAjRfSda/wZY52jvATGGAslu1OJD7OAUN5F7kR/
      q5R4ZJjT9ijdh9hwZXT7DrkT66cPYakylszeu+1jTBi7qUD3oFRuIIhxdRjqerQ0
      cuAjJ3dctpDqhiVAq+8zD8ufgr6iIPv2tS0a5sKFsXQP+8hlAqRSAUfdSSLBv9jr
      a6x+3uxjMxW3IwiPxg+NQVrdjsW5j+VFP3jbutIbQLH+cU0/4IGiul607BXgk90I
      H37hVZkLId6Tngr75qNJvTYw/ud3sqB1l7UtgYgXZSD32pAAn8lSzDLKNXz1PQ/Y
      K9f1JmzJBjSWFupwWRoyeXkLtoh/D1JIPb9s2KJELtFOt3JY04kTlf5Eq/jXixtu
      nLwsoFvVagCvXzfh1foQC5ichucmj87w7G6KVwuA406ywKBjYZC6VWg3dGq2ktuf
      oYYitmUnDuy2n0Jg5GfCtdpBC8TTi2EbvPofkSvXRAdeuims2cXp71NIWuuA8ShY
      Ic2wBlX7Jz9TkHCpBB5XJ7k=
      -----END CERTIFICATE-----

      # SZAFIR ROOT CA2
      -----BEGIN CERTIFICATE-----
      MIIDcjCCAlqgAwIBAgIUPopdB+xV0jLVt+O2XwHrLdzk1uQwDQYJKoZIhvcNAQEL
      BQAwUTELMAkGA1UEBhMCUEwxKDAmBgNVBAoMH0tyYWpvd2EgSXpiYSBSb3psaWN6
      ZW5pb3dhIFMuQS4xGDAWBgNVBAMMD1NaQUZJUiBST09UIENBMjAeFw0xNTEwMTkw
      NzQzMzBaFw0zNTEwMTkwNzQzMzBaMFExCzAJBgNVBAYTAlBMMSgwJgYDVQQKDB9L
      cmFqb3dhIEl6YmEgUm96bGljemVuaW93YSBTLkEuMRgwFgYDVQQDDA9TWkFGSVIg
      Uk9PVCBDQTIwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC3vD5QqEvN
      QLXOYeeWyrSh2gwisPq1e3YAd4wLz32ohswmUeQgPYUM1ljj5/QqGJ3a0a4m7utT
      3PSQ1hNKDJA8w/Ta0o4NkjrcsbH/ON7Dui1fgLkCvUqdGw+0w8LBZwPd3BucPbOw
      3gAeqDRHu5rr/gsUvTaE2g0gv/pby6kWIK05YO4vdbbnl5z5Pv1+TW9NL++IDWr6
      3fE9biCloBK0TXC5ztdyO4mTp4CEHCdJckm1/zuVnsHMyAHs6A6KCpbns6aH5db5
      BSsNl0BwPLqsdVqc1U2dAgrSS5tmS0YHF2Wtn2yIANwiieDhZNRnvDF5YTy7ykHN
      XGoAyDw4jlivAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQD
      AgEGMB0GA1UdDgQWBBQuFqlKGLXLzPVvUPMjX/hd56zwyDANBgkqhkiG9w0BAQsF
      AAOCAQEAtXP4A9xZWx126aMqe5Aosk3AM0+qmrHUuOQn/6mWmc5G4G18TKI4pAZw
      8PRBEew/R40/cof5O/2kbytTAOD/OblqBw7rHRz2onKQy4I9EYKL0rufKq8h5mOG
      nXkZ7/e7DDWQw4rtTw/1zBLZpD67oPwglV9PJi8RI4NOdQcPv5vRtB3pEAT+ymCP
      oky4rc/hkA/NrgrHXXu3UNLUYfrVFdvXn4dRVOul4+vJhaAlIDf7js4MNIThPIGy
      d05DpYhfhmehPea0XGG2Ptv+tyjFogeutcrKjSoS75ftwjCkySp6+/NNIxuZMzSg
      LvWpCz/UXeHPhJ/iGcJfitYgHuNztw==
      -----END CERTIFICATE-----

      # SecureSign RootCA11
      -----BEGIN CERTIFICATE-----
      MIIDbTCCAlWgAwIBAgIBATANBgkqhkiG9w0BAQUFADBYMQswCQYDVQQGEwJKUDEr
      MCkGA1UEChMiSmFwYW4gQ2VydGlmaWNhdGlvbiBTZXJ2aWNlcywgSW5jLjEcMBoG
      A1UEAxMTU2VjdXJlU2lnbiBSb290Q0ExMTAeFw0wOTA0MDgwNDU2NDdaFw0yOTA0
      MDgwNDU2NDdaMFgxCzAJBgNVBAYTAkpQMSswKQYDVQQKEyJKYXBhbiBDZXJ0aWZp
      Y2F0aW9uIFNlcnZpY2VzLCBJbmMuMRwwGgYDVQQDExNTZWN1cmVTaWduIFJvb3RD
      QTExMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA/XeqpRyQBTvLTJsz
      i1oURaTnkBbR31fSIRCkF/3frNYfp+TbfPfs37gD2pRY/V1yfIw/XwFndBWW4wI8
      h9uuywGOwvNmxoVF9ALGOrVisq/6nL+k5tSAMJjzDbaTj6nU2DbysPyKyiyhFTOV
      MdrAG/LuYpmGYz+/3ZMqg6h2uRMft85OQoWPIucuGvKVCbIFtUROd6EgvanyTgp9
      UK31BQ1FT0Zx/Sg+U/sE2C3XZR1KG/rPO7AxmjVuyIsG0wCR8pQIZUyxNAYAeoni
      8McDWc/V1uinMrPmmECGxc0nEovMe863ETxiYAcjPitAbpSACW22s293bzUIUPsC
      h8U+iQIDAQABo0IwQDAdBgNVHQ4EFgQUW/hNT7KlhtQ60vFjmqC+CfZXt94wDgYD
      VR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQEFBQADggEB
      AKChOBZmLqdWHyGcBvod7bkixTgm2E5P7KN/ed5GIaGHd48HCJqypMWvDzKYC3xm
      KbabfSVSSUOrTC4rbnpwrxYO4wJs+0LmGJ1F2FXI6Dvd5+H0LgscNFxsWEr7jIhQ
      X5Ucv+2rIrVls4W6ng+4reV6G4pQOh29Dbx7VFALuUKvVaAYga1lme++5Jy/xIWr
      QbJUb9wlze144o4MjQlJ3WN7WmmWAiGovVJZ6X01y8hSyn+B/tlr0/cR7SXf+Of5
      pPpyl4RTDaXQMhhRdlkUbA/r7F+AjHVDg8OFmP9Mni0N5HeDk061lgeLKBObjBmN
      QSdJQO7e5iNEOdyhIta6A/I=
      -----END CERTIFICATE-----

      # SecureTrust CA
      -----BEGIN CERTIFICATE-----
      MIIDuDCCAqCgAwIBAgIQDPCOXAgWpa1Cf/DrJxhZ0DANBgkqhkiG9w0BAQUFADBI
      MQswCQYDVQQGEwJVUzEgMB4GA1UEChMXU2VjdXJlVHJ1c3QgQ29ycG9yYXRpb24x
      FzAVBgNVBAMTDlNlY3VyZVRydXN0IENBMB4XDTA2MTEwNzE5MzExOFoXDTI5MTIz
      MTE5NDA1NVowSDELMAkGA1UEBhMCVVMxIDAeBgNVBAoTF1NlY3VyZVRydXN0IENv
      cnBvcmF0aW9uMRcwFQYDVQQDEw5TZWN1cmVUcnVzdCBDQTCCASIwDQYJKoZIhvcN
      AQEBBQADggEPADCCAQoCggEBAKukgeWVzfX2FI7CT8rU4niVWJxB4Q2ZQCQXOZEz
      Zum+4YOvYlyJ0fwkW2Gz4BERQRwdbvC4u/jep4G6pkjGnx29vo6pQT64lO0pGtSO
      0gMdA+9tDWccV9cGrcrI9f4Or2YlSASWC12juhbDCE/RRvgUXPLIXgGZbf2IzIao
      wW8xQmxSPmjL8xk037uHGFaAJsTQ3MBv396gwpEWoGQRS0S8Hvbn+mPeZqx2pHGj
      7DaUaHp3pLHnDi+BeuK1cobvomuL8A/b01k/unK8RCSc43Oz969XL0Imnal0ugBS
      8kvNU3xHCzaFDmapCJcWNFfBZveA4+1wVMeT4C4oFVmHursCAwEAAaOBnTCBmjAT
      BgkrBgEEAYI3FAIEBh4EAEMAQTALBgNVHQ8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB
      /zAdBgNVHQ4EFgQUQjK2FvoE/f5dS3rD/fdMQB1aQ68wNAYDVR0fBC0wKzApoCeg
      JYYjaHR0cDovL2NybC5zZWN1cmV0cnVzdC5jb20vU1RDQS5jcmwwEAYJKwYBBAGC
      NxUBBAMCAQAwDQYJKoZIhvcNAQEFBQADggEBADDtT0rhWDpSclu1pqNlGKa7UTt3
      6Z3q059c4EVlew3KW+JwULKUBRSuSceNQQcSc5R+DCMh/bwQf2AQWnL1mA6s7Ll/
      3XpvXdMc9P+IBWlCqQVxyLesJugutIxq/3HcuLHfmbx8IVQr5Fiiu1cprp6poxkm
      D5kuCLDv/WnPmRoJjeOnnyvJNjR7JLN4TJUXpAYmHrZkUjZfYGfZnMUFdAvnZyPS
      CPyI6a6Lf+Ew9Dd+/cYy2i2eRDAwbO4H3tI0/NL/QPZL9GZGBlSm8jIKYyYwa5vR
      3ItHuuG51WLQoqD0ZwV4KWMabwTW+MZMo5qxN7SN5ShLHZ4swrhovO0C7jE=
      -----END CERTIFICATE-----

      # Secure Global CA
      -----BEGIN CERTIFICATE-----
      MIIDvDCCAqSgAwIBAgIQB1YipOjUiolN9BPI8PjqpTANBgkqhkiG9w0BAQUFADBK
      MQswCQYDVQQGEwJVUzEgMB4GA1UEChMXU2VjdXJlVHJ1c3QgQ29ycG9yYXRpb24x
      GTAXBgNVBAMTEFNlY3VyZSBHbG9iYWwgQ0EwHhcNMDYxMTA3MTk0MjI4WhcNMjkx
      MjMxMTk1MjA2WjBKMQswCQYDVQQGEwJVUzEgMB4GA1UEChMXU2VjdXJlVHJ1c3Qg
      Q29ycG9yYXRpb24xGTAXBgNVBAMTEFNlY3VyZSBHbG9iYWwgQ0EwggEiMA0GCSqG
      SIb3DQEBAQUAA4IBDwAwggEKAoIBAQCvNS7YrGxVaQZx5RNoJLNP2MwhR/jxYDiJ
      iQPpvepeRlMJ3Fz1Wuj3RSoC6zFh1ykzTM7HfAo3fg+6MpjhHZevj8fcyTiW89sa
      /FHtaMbQbqR8JNGuQsiWUGMu4P51/pinX0kuleM5M2SOHqRfkNJnPLLZ/kG5VacJ
      jnIFHovdRIWCQtBJwB1g8NEXLJXr9qXBkqPFwqcIYA1gBBCWeZ4WNOaptvolRTnI
      HmX5k/Wq8VLcmZg9pYYaDDUz+kulBAYVHDGA76oYa8J719rO+TMg1fW9ajMtgQT7
      sFzUnKPiXB3jqUJ1XnvUd+85VLrJChgbEplJL4hL/VBi0XPnj3pDAgMBAAGjgZ0w
      gZowEwYJKwYBBAGCNxQCBAYeBABDAEEwCwYDVR0PBAQDAgGGMA8GA1UdEwEB/wQF
      MAMBAf8wHQYDVR0OBBYEFK9EBMJBfkiD2045AuzshHrmzsmkMDQGA1UdHwQtMCsw
      KaAnoCWGI2h0dHA6Ly9jcmwuc2VjdXJldHJ1c3QuY29tL1NHQ0EuY3JsMBAGCSsG
      AQQBgjcVAQQDAgEAMA0GCSqGSIb3DQEBBQUAA4IBAQBjGghAfaReUw132HquHw0L
      URYD7xh8yOOvaliTFGCRsoTciE6+OYo68+aCiV0BN7OrJKQVDpI1WkpEXk5X+nXO
      H0jOZvQ8QCaSmGwb7iRGDBezUqXbpZGRzzfTb+cnCDpOGR86p1hcF895P4vkp9Mm
      I50mD1hp/Ed+stCNi5O/KU9DaXR2Z0vPB4zmAve14bRDtUstFJ/53CYNv6ZHdAbY
      iNE6KTCEztI5gGIbqMdXSbxqVVFnFUq+NQfk1XWYN3kwFNspnWzFacxHVaIw98xc
      f8LDmBxrThaA63p4ZUWiABqvDA1VZDRIuJK58bRQKfJPIx/abKwfROHdI3hRW8cW
      -----END CERTIFICATE-----

      # Security Communication RootCA2
      -----BEGIN CERTIFICATE-----
      MIIDdzCCAl+gAwIBAgIBADANBgkqhkiG9w0BAQsFADBdMQswCQYDVQQGEwJKUDEl
      MCMGA1UEChMcU0VDT00gVHJ1c3QgU3lzdGVtcyBDTy4sTFRELjEnMCUGA1UECxMe
      U2VjdXJpdHkgQ29tbXVuaWNhdGlvbiBSb290Q0EyMB4XDTA5MDUyOTA1MDAzOVoX
      DTI5MDUyOTA1MDAzOVowXTELMAkGA1UEBhMCSlAxJTAjBgNVBAoTHFNFQ09NIFRy
      dXN0IFN5c3RlbXMgQ08uLExURC4xJzAlBgNVBAsTHlNlY3VyaXR5IENvbW11bmlj
      YXRpb24gUm9vdENBMjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANAV
      OVKxUrO6xVmCxF1SrjpDZYBLx/KWvNs2l9amZIyoXvDjChz335c9S672XewhtUGr
      zbl+dp+++T42NKA7wfYxEUV0kz1XgMX5iZnK5atq1LXaQZAQwdbWQonCv/Q4EpVM
      VAX3NuRFg3sUZdbcDE3R3n4MqzvEFb46VqZab3ZpUql6ucjrappdUtAtCms1FgkQ
      hNBqyjoGADdH5H5XTz+L62e4iKrFvlNVspHEfbmwhRkGeC7bYRr6hfVKkaHnFtWO
      ojnflLhwHyg/i/xAXmODPIMqGplrz95Zajv8bxbXH/1KEOtOghY6rCcMU/Gt1SSw
      awNQwS08Ft1ENCcadfsCAwEAAaNCMEAwHQYDVR0OBBYEFAqFqXdlBZh8QIH4D5cs
      OPEK7DzPMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3
      DQEBCwUAA4IBAQBMOqNErLlFsceTfsgLCkLfZOoc7llsCLqJX2rKSpWeeo8HxdpF
      coJxDjrSzG+ntKEju/Ykn8sX/oymzsLS28yN/HH8AynBbF0zX2S2ZTuJbxh2ePXc
      okgfGT+Ok+vx+hfuzU7jBBJV1uXk3fs+BXziHV7Gp7yXT2g69ekuCkO2r1dcYmh8
      t/2jioSgrGK+KwmHNPBqAbubKVY8/gA3zyNs8U6qtnRGEmyR7jTV7JqR50S+kDFy
      1UkC9gLl9B/rfNmWVan/7Ir5mUf/NVoCqgTLiluHcSmRvaS0eg29mvVXIwAHIRc/
      SjnRBUkLp7Y3gaVdjKozXoEofKd9J+sAro03
      -----END CERTIFICATE-----

      # Security Communication Root CA
      -----BEGIN CERTIFICATE-----
      MIIDWjCCAkKgAwIBAgIBADANBgkqhkiG9w0BAQUFADBQMQswCQYDVQQGEwJKUDEY
      MBYGA1UEChMPU0VDT00gVHJ1c3QubmV0MScwJQYDVQQLEx5TZWN1cml0eSBDb21t
      dW5pY2F0aW9uIFJvb3RDQTEwHhcNMDMwOTMwMDQyMDQ5WhcNMjMwOTMwMDQyMDQ5
      WjBQMQswCQYDVQQGEwJKUDEYMBYGA1UEChMPU0VDT00gVHJ1c3QubmV0MScwJQYD
      VQQLEx5TZWN1cml0eSBDb21tdW5pY2F0aW9uIFJvb3RDQTEwggEiMA0GCSqGSIb3
      DQEBAQUAA4IBDwAwggEKAoIBAQCzs/5/022x7xZ8V6UMbXaKL0u/ZPtM7orw8yl8
      9f/uKuDp6bpbZCKamm8sOiZpUQWZJtzVHGpxxpp9Hp3dfGzGjGdnSj74cbAZJ6kJ
      DKaVv0uMDPpVmDvY6CKhS3E4eayXkmmziX7qIWgGmBSWh9JhNrxtJ1aeV+7AwFb9
      Ms+k2Y7CI9eNqPPYJayX5HA49LY6tJ07lyZDo6G8SVlyTCMwhwFY9k6+HGhWZq/N
      QV3Is00qVUarH9oe4kA92819uZKAnDfdDJZkndwi92SL32HeFZRSFaB9UslLqCHJ
      xrHty8OVYNEP8Ktw+N/LTX7s1vqr2b1/VPKl6Xn62dZ2JChzAgMBAAGjPzA9MB0G
      A1UdDgQWBBSgc0mZaNyFW2XjmygvV5+9M7wHSDALBgNVHQ8EBAMCAQYwDwYDVR0T
      AQH/BAUwAwEB/zANBgkqhkiG9w0BAQUFAAOCAQEAaECpqLvkT115swW1F7NgE+vG
      kl3g0dNq/vu+m22/xwVtWSDEHPC32oRYAmP6SBbvT6UL90qY8j+eG61Ha2POCEfr
      Uj94nK9NrvjVT8+amCoQQTlSxN3Zmw7vkwGusi7KaEIkQmywszo+zenaSMQVy+n5
      Bw+SUEmK3TGXX8npN6o7WWWXlDLJs58+OmJYxUmtYg5xpTKqL8aJdkNAExNnPaJU
      JRDL8Try2frbSVa7pv6nQTXD4IhhyYjH3zYQIphZ6rBK+1YWc26sTfcioU+tHXot
      RSflMMFe8toTyyVCUZVHA4xsIcx0Qu1T/zOLjw9XARYvz6buyXAiFL39vmwLAw==
      -----END CERTIFICATE-----

      # Staat der Nederlanden EV Root CA
      -----BEGIN CERTIFICATE-----
      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
      7uzXLg==
      -----END CERTIFICATE-----

      # Starfield Class 2 CA
      -----BEGIN CERTIFICATE-----
      MIIEDzCCAvegAwIBAgIBADANBgkqhkiG9w0BAQUFADBoMQswCQYDVQQGEwJVUzEl
      MCMGA1UEChMcU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjEyMDAGA1UECxMp
      U3RhcmZpZWxkIENsYXNzIDIgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMDQw
      NjI5MTczOTE2WhcNMzQwNjI5MTczOTE2WjBoMQswCQYDVQQGEwJVUzElMCMGA1UE
      ChMcU3RhcmZpZWxkIFRlY2hub2xvZ2llcywgSW5jLjEyMDAGA1UECxMpU3RhcmZp
      ZWxkIENsYXNzIDIgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwggEgMA0GCSqGSIb3
      DQEBAQUAA4IBDQAwggEIAoIBAQC3Msj+6XGmBIWtDBFk385N78gDGIc/oav7PKaf
      8MOh2tTYbitTkPskpD6E8J7oX+zlJ0T1KKY/e97gKvDIr1MvnsoFAZMej2YcOadN
      +lq2cwQlZut3f+dZxkqZJRRU6ybH838Z1TBwj6+wRir/resp7defqgSHo9T5iaU0
      X9tDkYI22WY8sbi5gv2cOj4QyDvvBmVmepsZGD3/cVE8MC5fvj13c7JdBmzDI1aa
      K4UmkhynArPkPw2vCHmCuDY96pzTNbO8acr1zJ3o/WSNF4Azbl5KXZnJHoe0nRrA
      1W4TNSNe35tfPe/W93bC6j67eA0cQmdrBNj41tpvi/JEoAGrAgEDo4HFMIHCMB0G
      A1UdDgQWBBS/X7fRzt0fhvRbVazc1xDCDqmI5zCBkgYDVR0jBIGKMIGHgBS/X7fR
      zt0fhvRbVazc1xDCDqmI56FspGowaDELMAkGA1UEBhMCVVMxJTAjBgNVBAoTHFN0
      YXJmaWVsZCBUZWNobm9sb2dpZXMsIEluYy4xMjAwBgNVBAsTKVN0YXJmaWVsZCBD
      bGFzcyAyIENlcnRpZmljYXRpb24gQXV0aG9yaXR5ggEAMAwGA1UdEwQFMAMBAf8w
      DQYJKoZIhvcNAQEFBQADggEBAAWdP4id0ckaVaGsafPzWdqbAYcaT1epoXkJKtv3
      L7IezMdeatiDh6GX70k1PncGQVhiv45YuApnP+yz3SFmH8lU+nLMPUxA2IGvd56D
      eruix/U0F47ZEUD0/CwqTRV/p2JdLiXTAAsgGh1o+Re49L2L7ShZ3U0WixeDyLJl
      xy16paq8U4Zt3VekyvggQQto8PT7dL5WXXp59fkdheMtlb71cZBDzI0fmgAKhynp
      VSJYACPq4xJDKVtHCN2MQWplBqjlIapBtJUhlbl90TSrE9atvNziPTnNvT51cKEY
      WQPJIrSPnNVeKtelttQKbfi3QBFGmh95DmK/D5fs4C8fF5Q=
      -----END CERTIFICATE-----

      # Starfield Root Certificate Authority - G2
      -----BEGIN CERTIFICATE-----
      MIID3TCCAsWgAwIBAgIBADANBgkqhkiG9w0BAQsFADCBjzELMAkGA1UEBhMCVVMx
      EDAOBgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNjb3R0c2RhbGUxJTAjBgNVBAoT
      HFN0YXJmaWVsZCBUZWNobm9sb2dpZXMsIEluYy4xMjAwBgNVBAMTKVN0YXJmaWVs
      ZCBSb290IENlcnRpZmljYXRlIEF1dGhvcml0eSAtIEcyMB4XDTA5MDkwMTAwMDAw
      MFoXDTM3MTIzMTIzNTk1OVowgY8xCzAJBgNVBAYTAlVTMRAwDgYDVQQIEwdBcml6
      b25hMRMwEQYDVQQHEwpTY290dHNkYWxlMSUwIwYDVQQKExxTdGFyZmllbGQgVGVj
      aG5vbG9naWVzLCBJbmMuMTIwMAYDVQQDEylTdGFyZmllbGQgUm9vdCBDZXJ0aWZp
      Y2F0ZSBBdXRob3JpdHkgLSBHMjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC
      ggEBAL3twQP89o/8ArFvW59I2Z154qK3A2FWGMNHttfKPTUuiUP3oWmb3ooa/RMg
      nLRJdzIpVv257IzdIvpy3Cdhl+72WoTsbhm5iSzchFvVdPtrX8WJpRBSiUZV9Lh1
      HOZ/5FSuS/hVclcCGfgXcVnrHigHdMWdSL5stPSksPNkN3mSwOxGXn/hbVNMYq/N
      Hwtjuzqd+/x5AJhhdM8mgkBj87JyahkNmcrUDnXMN/uLicFZ8WJ/X7NfZTD4p7dN
      dloedl40wOiWVpmKs/B/pM293DIxfJHP4F8R+GuqSVzRmZTRouNjWwl2tVZi4Ut0
      HZbUJtQIBFnQmA4O5t78w+wfkPECAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAO
      BgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFHwMMh+n2TB/xH1oo2Kooc6rB1snMA0G
      CSqGSIb3DQEBCwUAA4IBAQARWfolTwNvlJk7mh+ChTnUdgWUXuEok21iXQnCoKjU
      sHU48TRqneSfioYmUeYs0cYtbpUgSpIB7LiKZ3sx4mcujJUDJi5DnUox9g61DLu3
      4jd/IroAow57UvtruzvE03lRTs2Q9GcHGcg8RnoNAX3FWOdt5oUwF5okxBDgBPfg
      8n/Uqgr/Qh037ZTlZFkSIHc40zI+OIF1lnP6aI+xy84fxez6nH7PfrHxBy22/L/K
      pL/QlwVKvOoYKAKQvVR4CSFx09F9HdkWsKlhPdAKACL8x3vLCWRFCztAgfd9fDL1
      mMpYjn0q7pBZc2T5NnReJaH1ZgUufzkVqSr7UIuOhWn0
      -----END CERTIFICATE-----

      # Starfield Services Root Certificate Authority - G2
      -----BEGIN CERTIFICATE-----
      MIID7zCCAtegAwIBAgIBADANBgkqhkiG9w0BAQsFADCBmDELMAkGA1UEBhMCVVMx
      EDAOBgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNjb3R0c2RhbGUxJTAjBgNVBAoT
      HFN0YXJmaWVsZCBUZWNobm9sb2dpZXMsIEluYy4xOzA5BgNVBAMTMlN0YXJmaWVs
      ZCBTZXJ2aWNlcyBSb290IENlcnRpZmljYXRlIEF1dGhvcml0eSAtIEcyMB4XDTA5
      MDkwMTAwMDAwMFoXDTM3MTIzMTIzNTk1OVowgZgxCzAJBgNVBAYTAlVTMRAwDgYD
      VQQIEwdBcml6b25hMRMwEQYDVQQHEwpTY290dHNkYWxlMSUwIwYDVQQKExxTdGFy
      ZmllbGQgVGVjaG5vbG9naWVzLCBJbmMuMTswOQYDVQQDEzJTdGFyZmllbGQgU2Vy
      dmljZXMgUm9vdCBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkgLSBHMjCCASIwDQYJKoZI
      hvcNAQEBBQADggEPADCCAQoCggEBANUMOsQq+U7i9b4Zl1+OiFOxHz/Lz58gE20p
      OsgPfTz3a3Y4Y9k2YKibXlwAgLIvWX/2h/klQ4bnaRtSmpDhcePYLQ1Ob/bISdm2
      8xpWriu2dBTrz/sm4xq6HZYuajtYlIlHVv8loJNwU4PahHQUw2eeBGg6345AWh1K
      Ts9DkTvnVtYAcMtS7nt9rjrnvDH5RfbCYM8TWQIrgMw0R9+53pBlbQLPLJGmpufe
      hRhJfGZOozptqbXuNC66DQO4M99H67FrjSXZm86B0UVGMpZwh94CDklDhbZsc7tk
      6mFBrMnUVN+HL8cisibMn1lUaJ/8viovxFUcdUBgF4UCVTmLfwUCAwEAAaNCMEAw
      DwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFJxfAN+q
      AdcwKziIorhtSpzyEZGDMA0GCSqGSIb3DQEBCwUAA4IBAQBLNqaEd2ndOxmfZyMI
      bw5hyf2E3F/YNoHN2BtBLZ9g3ccaaNnRbobhiCPPE95Dz+I0swSdHynVv/heyNXB
      ve6SbzJ08pGCL72CQnqtKrcgfU28elUSwhXqvfdqlS5sdJ/PHLTyxQGjhdByPq1z
      qwubdQxtRbeOlKyWN7Wg0I8VRw7j6IPdj/3vQQF3zCepYoUz8jcI73HPdwbeyBkd
      iEDPfUYd/x7H4c7/I9vG+o1VTqkC50cRRj70/b17KSa7qWFiNyi2LSr2EIZkyXCn
      0q23KXB56jzaYyWf/Wi3MOxw+3WKt21gZ7IeyLnp2KhvAotnDU0mV3HaIPzBSlCN
      sSi6
      -----END CERTIFICATE-----

      # SwissSign Gold CA - G2
      -----BEGIN CERTIFICATE-----
      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
      -----END CERTIFICATE-----

      # SwissSign Silver CA - G2
      -----BEGIN CERTIFICATE-----
      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
      -----END CERTIFICATE-----

      # T-TeleSec GlobalRoot Class 2
      -----BEGIN CERTIFICATE-----
      MIIDwzCCAqugAwIBAgIBATANBgkqhkiG9w0BAQsFADCBgjELMAkGA1UEBhMCREUx
      KzApBgNVBAoMIlQtU3lzdGVtcyBFbnRlcnByaXNlIFNlcnZpY2VzIEdtYkgxHzAd
      BgNVBAsMFlQtU3lzdGVtcyBUcnVzdCBDZW50ZXIxJTAjBgNVBAMMHFQtVGVsZVNl
      YyBHbG9iYWxSb290IENsYXNzIDIwHhcNMDgxMDAxMTA0MDE0WhcNMzMxMDAxMjM1
      OTU5WjCBgjELMAkGA1UEBhMCREUxKzApBgNVBAoMIlQtU3lzdGVtcyBFbnRlcnBy
      aXNlIFNlcnZpY2VzIEdtYkgxHzAdBgNVBAsMFlQtU3lzdGVtcyBUcnVzdCBDZW50
      ZXIxJTAjBgNVBAMMHFQtVGVsZVNlYyBHbG9iYWxSb290IENsYXNzIDIwggEiMA0G
      CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCqX9obX+hzkeXaXPSi5kfl82hVYAUd
      AqSzm1nzHoqvNK38DcLZSBnuaY/JIPwhqgcZ7bBcrGXHX+0CfHt8LRvWurmAwhiC
      FoT6ZrAIxlQjgeTNuUk/9k9uN0goOA/FvudocP05l03Sx5iRUKrERLMjfTlH6VJi
      1hKTXrcxlkIF+3anHqP1wvzpesVsqXFP6st4vGCvx9702cu+fjOlbpSD8DT6Iavq
      jnKgP6TeMFvvhk1qlVtDRKgQFRzlAVfFmPHmBiiRqiDFt1MmUUOyCxGVWOHAD3bZ
      wI18gfNycJ5v/hqO2V81xrJvNHy+SE/iWjnX2J14np+GPgNeGYtEotXHAgMBAAGj
      QjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBS/
      WSA2AHmgoCJrjNXyYdK4LMuCSjANBgkqhkiG9w0BAQsFAAOCAQEAMQOiYQsfdOhy
      NsZt+U2e+iKo4YFWz827n+qrkRk4r6p8FU3ztqONpfSO9kSpp+ghla0+AGIWiPAC
      uvxhI+YzmzB6azZie60EI4RYZeLbK4rnJVM3YlNfvNoBYimipidx5joifsFvHZVw
      IEoHNN/q/xWA5brXethbdXwFeilHfkCoMRN3zUA7tFFHei4R40cR3p1m0IvVVGb6
      g1XqfMIpiRvpb7PO4gWEyS8+eIVibslfwXhjdFjASBgMmTnrpMwatXlajRWc2BQN
      9noHV8cigwUtPJslJj0Ys6lDfMjIq2SPDqO/nBudMNva0Bkuqjzx+zOAduTNrRlP
      BSeOE6Fuwg==
      -----END CERTIFICATE-----

      # T-TeleSec GlobalRoot Class 3
      -----BEGIN CERTIFICATE-----
      MIIDwzCCAqugAwIBAgIBATANBgkqhkiG9w0BAQsFADCBgjELMAkGA1UEBhMCREUx
      KzApBgNVBAoMIlQtU3lzdGVtcyBFbnRlcnByaXNlIFNlcnZpY2VzIEdtYkgxHzAd
      BgNVBAsMFlQtU3lzdGVtcyBUcnVzdCBDZW50ZXIxJTAjBgNVBAMMHFQtVGVsZVNl
      YyBHbG9iYWxSb290IENsYXNzIDMwHhcNMDgxMDAxMTAyOTU2WhcNMzMxMDAxMjM1
      OTU5WjCBgjELMAkGA1UEBhMCREUxKzApBgNVBAoMIlQtU3lzdGVtcyBFbnRlcnBy
      aXNlIFNlcnZpY2VzIEdtYkgxHzAdBgNVBAsMFlQtU3lzdGVtcyBUcnVzdCBDZW50
      ZXIxJTAjBgNVBAMMHFQtVGVsZVNlYyBHbG9iYWxSb290IENsYXNzIDMwggEiMA0G
      CSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC9dZPwYiJvJK7genasfb3ZJNW4t/zN
      8ELg63iIVl6bmlQdTQyK9tPPcPRStdiTBONGhnFBSivwKixVA9ZIw+A5OO3yXDw/
      RLyTPWGrTs0NvvAgJ1gORH8EGoel15YUNpDQSXuhdfsaa3Ox+M6pCSzyU9XDFES4
      hqX2iys52qMzVNn6chr3IhUciJFrf2blw2qAsCTz34ZFiP0Zf3WHHx+xGwpzJFu5
      ZeAsVMhg02YXP+HMVDNzkQI6pn97djmiH5a2OK61yJN0HZ65tOVgnS9W0eDrXltM
      EnAMbEQgqxHY9Bn20pxSN+f6tsIxO0rUFJmtxxr1XV/6B7h8DR/Wgx6zAgMBAAGj
      QjBAMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBS1
      A/d2O2GCahKqGFPrAyGUv/7OyjANBgkqhkiG9w0BAQsFAAOCAQEAVj3vlNW92nOy
      WL6ukK2YJ5f+AbGwUgC4TeQbIXQbfsDuXmkqJa9c1h3a0nnJ85cp4IaH3gRZD/FZ
      1GSFS5mvJQQeyUapl96Cshtwn5z2r3Ex3XsFpSzTucpH9sry9uetuUg/vBa3wW30
      6gmv7PO15wWeph6KU1HWk4HMdJP2udqmJQV0eVp+QD6CSyYRMG7hP0HHRwA11fXT
      91Q+gT3aSWqas+8QPebrb9HIIkfLzM8BMZLZGOMivgkeGj5asuRrDFR6fUNOuIml
      e9eiPZaGzPImNC1qkp2aGtAw4l1OBLBfiyB+d8E9lYLRRpo7PHi4b6HQDWSieB4p
      TpPDpFQUWw==
      -----END CERTIFICATE-----

      # TUBITAK Kamu SM SSL Kok Sertifikasi - Surum 1
      -----BEGIN CERTIFICATE-----
      MIIEYzCCA0ugAwIBAgIBATANBgkqhkiG9w0BAQsFADCB0jELMAkGA1UEBhMCVFIx
      GDAWBgNVBAcTD0dlYnplIC0gS29jYWVsaTFCMEAGA1UEChM5VHVya2l5ZSBCaWxp
      bXNlbCB2ZSBUZWtub2xvamlrIEFyYXN0aXJtYSBLdXJ1bXUgLSBUVUJJVEFLMS0w
      KwYDVQQLEyRLYW11IFNlcnRpZmlrYXN5b24gTWVya2V6aSAtIEthbXUgU00xNjA0
      BgNVBAMTLVRVQklUQUsgS2FtdSBTTSBTU0wgS29rIFNlcnRpZmlrYXNpIC0gU3Vy
      dW0gMTAeFw0xMzExMjUwODI1NTVaFw00MzEwMjUwODI1NTVaMIHSMQswCQYDVQQG
      EwJUUjEYMBYGA1UEBxMPR2ViemUgLSBLb2NhZWxpMUIwQAYDVQQKEzlUdXJraXll
      IEJpbGltc2VsIHZlIFRla25vbG9qaWsgQXJhc3Rpcm1hIEt1cnVtdSAtIFRVQklU
      QUsxLTArBgNVBAsTJEthbXUgU2VydGlmaWthc3lvbiBNZXJrZXppIC0gS2FtdSBT
      TTE2MDQGA1UEAxMtVFVCSVRBSyBLYW11IFNNIFNTTCBLb2sgU2VydGlmaWthc2kg
      LSBTdXJ1bSAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAr3UwM6q7
      a9OZLBI3hNmNe5eA027n/5tQlT6QlVZC1xl8JoSNkvoBHToP4mQ4t4y86Ij5iySr
      LqP1N+RAjhgleYN1Hzv/bKjFxlb4tO2KRKOrbEz8HdDc72i9z+SqzvBV96I01INr
      N3wcwv61A+xXzry0tcXtAA9TNypN9E8Mg/uGz8v+jE69h/mniyFXnHrfA2eJLJ2X
      YacQuFWQfw4tJzh03+f92k4S400VIgLI4OD8D62K18lUUMw7D8oWgITQUVbDjlZ/
      iSIzL+aFCr2lqBs23tPcLG07xxO9WSMs5uWk99gL7eqQQESolbuT1dCANLZGeA4f
      AJNG4e7p+exPFwIDAQABo0IwQDAdBgNVHQ4EFgQUZT/HiobGPN08VFw1+DrtUgxH
      V8gwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQEL
      BQADggEBACo/4fEyjq7hmFxLXs9rHmoJ0iKpEsdeV31zVmSAhHqT5Am5EM2fKifh
      AHe+SMg1qIGf5LgsyX8OsNJLN13qudULXjS99HMpw+0mFZx+CFOKWI3QSyjfwbPf
      IPP54+M638yclNhOT8NrF7f3cuitZjO1JVOr4PhMqZ398g26rrnZqsZr+ZO7rqu4
      lzwDGrpDxpa5RXI4s6ehlj2Re37AIVNMh+3yC1SVUZPVIqUNivGTDj5UDrDYyU7c
      8jEyVupk+eq1nRZmQnLzf9OxMUP8pI4X8W0jq5Rm+K37DwhuJi1/FwcJsoz7UMCf
      lo3Ptv0AnVoUmr8CRPXBwp8iXqIPoeM=
      -----END CERTIFICATE-----

      # TWCA Global Root CA
      -----BEGIN CERTIFICATE-----
      MIIFQTCCAymgAwIBAgICDL4wDQYJKoZIhvcNAQELBQAwUTELMAkGA1UEBhMCVFcx
      EjAQBgNVBAoTCVRBSVdBTi1DQTEQMA4GA1UECxMHUm9vdCBDQTEcMBoGA1UEAxMT
      VFdDQSBHbG9iYWwgUm9vdCBDQTAeFw0xMjA2MjcwNjI4MzNaFw0zMDEyMzExNTU5
      NTlaMFExCzAJBgNVBAYTAlRXMRIwEAYDVQQKEwlUQUlXQU4tQ0ExEDAOBgNVBAsT
      B1Jvb3QgQ0ExHDAaBgNVBAMTE1RXQ0EgR2xvYmFsIFJvb3QgQ0EwggIiMA0GCSqG
      SIb3DQEBAQUAA4ICDwAwggIKAoICAQCwBdvI64zEbooh745NnHEKH1Jw7W2CnJfF
      10xORUnLQEK1EjRsGcJ0pDFfhQKX7EMzClPSnIyOt7h52yvVavKOZsTuKwEHktSz
      0ALfUPZVr2YOy+BHYC8rMjk1Ujoog/h7FsYYuGLWRyWRzvAZEk2tY/XTP3VfKfCh
      MBwqoJimFb3u/Rk28OKRQ4/6ytYQJ0lM793B8YVwm8rqqFpD/G2Gb3PpN0Wp8DbH
      zIh1HrtsBv+baz4X7GGqcXzGHaL3SekVtTzWoWH1EfcFbx39Eb7QMAfCKbAJTibc
      46KokWofwpFFiFzlmLhxpRUZyXx1EcxwdE8tmx2RRP1WKKD+u4ZqyPpcC1jcxkt2
      yKsi2XMPpfRaAok/T54igu6idFMqPVMnaR1sjjIsZAAmY2E2TqNGtz99sy2sbZCi
      laLOz9qC5wc0GZbpuCGqKX6mOL6OKUohZnkfs8O1CWfe1tQHRvMq2uYiN2DLgbYP
      oA/pyJV/v1WRBXrPPRXAb94JlAGD1zQbzECl8LibZ9WYkTunhHiVJqRaCPgrdLQA
      BDzfuBSO6N+pjWxnkjMdwLfS7JLIvgm/LCkFbwJrnu+8vyq8W8BQj0FwcYeyTbcE
      qYSjMq+u7msXi7Kx/mzhkIyIqJdIzshNy/MGz19qCkKxHh53L46g5pIOBvwFItIm
      4TFRfTLcDwIDAQABoyMwITAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB
      /zANBgkqhkiG9w0BAQsFAAOCAgEAXzSBdu+WHdXltdkCY4QWwa6gcFGn90xHNcgL
      1yg9iXHZqjNB6hQbbCEAwGxCGX6faVsgQt+i0trEfJdLjbDorMjupWkEmQqSpqsn
      LhpNgb+E1HAerUf+/UqdM+DyucRFCCEK2mlpc3INvjT+lIutwx4116KD7+U4x6WF
      H6vPNOw/KP4M8VeGTslV9xzU2KV9Bnpv1d8Q34FOIWWxtuEXeZVFBs5fzNxGiWNo
      RI2T9GRwoD2dKAXDOXC4Ynsg/eTb6QihuJ49CcdP+yz4k3ZB3lLg4VfSnQO8d57+
      nile98FRYB/e2guyLXW3Q0iT5/Z5xoRdgFlglPx4mI88k1HtQJAH32RjJMtOcQWh
      15QaiDLxInQirqWm2BJpTGCjAu4r7NRjkgtevi92a6O2JryPA9gK8kxkRr05YuWW
      6zRjESjMlfGt7+/cgFhI6Uu46mWs6fyAtbXIRfmswZ/ZuepiiI7E8UuDEq3mi4TW
      nsLrgxifarsbJGAzcMzs9zLzXNl5fe+epP7JI8Mk7hWSsT2RTyaGvWZzJBPqpK5j
      wa19hAM8EHiGG3njxPPyBJUgriOCxLM6AGK/5jYk4Ve6xx6QddVfP5VhK8E7zeWz
      aGHQRiapIVJpLesux+t3zqY6tQMzT3bR51xUAV3LePTJDL/PEo4XLSNolOer/qmy
      KwbQBM0=
      -----END CERTIFICATE-----

      # TWCA Root Certification Authority
      -----BEGIN CERTIFICATE-----
      MIIDezCCAmOgAwIBAgIBATANBgkqhkiG9w0BAQUFADBfMQswCQYDVQQGEwJUVzES
      MBAGA1UECgwJVEFJV0FOLUNBMRAwDgYDVQQLDAdSb290IENBMSowKAYDVQQDDCFU
      V0NBIFJvb3QgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMDgwODI4MDcyNDMz
      WhcNMzAxMjMxMTU1OTU5WjBfMQswCQYDVQQGEwJUVzESMBAGA1UECgwJVEFJV0FO
      LUNBMRAwDgYDVQQLDAdSb290IENBMSowKAYDVQQDDCFUV0NBIFJvb3QgQ2VydGlm
      aWNhdGlvbiBBdXRob3JpdHkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIB
      AQCwfnK4pAOU5qfeCTiRShFAh6d8WWQUe7UREN3+v9XAu1bihSX0NXIP+FPQQeFE
      AcK0HMMxQhZHhTMidrIKbw/lJVBPhYa+v5guEGcevhEFhgWQxFnQfHgQsIBct+HH
      K3XLfJ+utdGdIzdjp9xCoi2SBBtQwXu4PhvJVgSLL1KbralW6cH/ralYhzC2gfeX
      RfwZVzsrb+RH9JlF/h3x+JejiB03HFyP4HYlmlD4oFT/RJB2I9IyxsOrBr/8+7/z
      rX2SYgJbKdM1o5OaQ2RgXbL6Mv87BK9NQGr5x+PvI/1ry+UPizgN7gr8/g+YnzAx
      3WxSZfmLgb4i4RxYA7qRG4kHAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNV
      HRMBAf8EBTADAQH/MB0GA1UdDgQWBBRqOFsmjd6LWvJPelSDGRjjCDWmujANBgkq
      hkiG9w0BAQUFAAOCAQEAPNV3PdrfibqHDAhUaiBQkr6wQT25JmSDCi/oQMCXKCeC
      MErJk/9q56YAf4lCmtYR5VPOL8zy2gXE/uJQxDqGfczafhAJO5I1KlOy/usrBdls
      XebQ79NqZp4VKIV66IIArB6nCWlWQtNoURi+VJq/REG6Sb4gumlc7rh3zc5sH62D
      lhh9DrUUOYTxKOkto557HnpyWoOzeW/vtPzQCqVYT0bf+215WfKEIlKuD8z7fDvn
      aspHYcN6+NOSBB+4IIThNlQWx0DeO4pz3N/GCUzf7Nr/1FNCocnyYh0igzyXxfkZ
      YiesZSLX0zzG5Y6yU8xJzrww/nsOM5D77dIUkR8Hrw==
      -----END CERTIFICATE-----

      # TeliaSonera Root CA v1
      -----BEGIN CERTIFICATE-----
      MIIFODCCAyCgAwIBAgIRAJW+FqD3LkbxezmCcvqLzZYwDQYJKoZIhvcNAQEFBQAw
      NzEUMBIGA1UECgwLVGVsaWFTb25lcmExHzAdBgNVBAMMFlRlbGlhU29uZXJhIFJv
      b3QgQ0EgdjEwHhcNMDcxMDE4MTIwMDUwWhcNMzIxMDE4MTIwMDUwWjA3MRQwEgYD
      VQQKDAtUZWxpYVNvbmVyYTEfMB0GA1UEAwwWVGVsaWFTb25lcmEgUm9vdCBDQSB2
      MTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAMK+6yfwIaPzaSZVfp3F
      VRaRXP3vIb9TgHot0pGMYzHw7CTww6XScnwQbfQ3t+XmfHnqjLWCi65ItqwA3GV1
      7CpNX8GH9SBlK4GoRz6JI5UwFpB/6FcHSOcZrr9FZ7E3GwYq/t75rH2D+1665I+X
      Z75Ljo1kB1c4VWk0Nj0TSO9P4tNmHqTPGrdeNjPUtAa9GAH9d4RQAEX1jF3oI7x+
      /jXh7VB7qTCNGdMJjmhnXb88lxhTuylixcpecsHHltTbLaC0H2kD7OriUPEMPPCs
      81Mt8Bz17Ww5OXOAFshSsCPN4D7c3TxHoLs1iuKYaIu+5b9y7tL6pe0S7fyYGKkm
      dtwoSxAgHNN/Fnct7W+A90m7UwW7XWjH1Mh1Fj+JWov3F0fUTPHSiXk+TT2YqGHe
      Oh7S+F4D4MHJHIzTjU3TlTazN19jY5szFPAtJmtTfImMMsJu7D0hADnJoWjiUIMu
      sDor8zagrC/kb2HCUQk5PotTubtn2txTuXZZNp1D5SDgPTJghSJRt8czu90VL6R4
      pgd7gUY2BIbdeTXHlSw7sKMXNeVzH7RcWe/a6hBle3rQf5+ztCo3O3CLm1u5K7fs
      slESl1MpWtTwEhDcTwK7EpIvYtQ/aUN8Ddb8WHUBiJ1YFkveupD/RwGJBmr2X7KQ
      arMCpgKIv7NHfirZ1fpoeDVNAgMBAAGjPzA9MA8GA1UdEwEB/wQFMAMBAf8wCwYD
      VR0PBAQDAgEGMB0GA1UdDgQWBBTwj1k4ALP1j5qWDNXr+nuqF+gTEjANBgkqhkiG
      9w0BAQUFAAOCAgEAvuRcYk4k9AwI//DTDGjkk0kiP0Qnb7tt3oNmzqjMDfz1mgbl
      dxSR651Be5kqhOX//CHBXfDkH1e3damhXwIm/9fH907eT/j3HEbAek9ALCI18Bmx
      0GtnLLCo4MBANzX2hFxc469CeP6nyQ1Q6g2EdvZR74NTxnr/DlZJLo961gzmJ1Tj
      TQpgcmLNkQfWpb/ImWvtxBnmq0wROMVvMeJuScg/doAmAyYp4Db29iBT4xdwNBed
      Y2gea+zDTYa4EzAvXUYNR0PVG6pZDrlcjQZIrXSHX8f8MVRBE+LHIQ6e4B4N4cB7
      Q4WQxYpYxmUKeFfyxiMPAdkgS94P+5KFdSpcc41teyWRyu5FrgZLAMzTsVlQ2jqI
      OylDRl6XK1TOU2+NSueW+r9xDkKLfP0ooNBIytrEgUy7onOTJsjrDNYmiLbAJM+7
      vVvrdX3pCI6GMyx5dwlppYn8s3CQh3aP0yK7Qs69cwsgJirQmz1wHiRszYd2qReW
      t88NkvuOGKmYSdGe/mBEciG5Ge3C9THxOUiIkCR1VBatzvT4aRRkOfujuLpwQMcn
      HL/EVlP6Y2XQ8xwOFvVrhlhNGNTkDY6lnVuR3HYkUD/GKvvZt5y11ubQ2egZixVx
      SK236thZiNSQvxaz2emsWWFUyBy6ysHK4bkgTI86k4mloMy/0/Z1pHWWbVY=
      -----END CERTIFICATE-----

      # Telia Root CA v2
      -----BEGIN CERTIFICATE-----
      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
      rBPuUBQemMc=
      -----END CERTIFICATE-----

      # TrustCor ECA-1
      -----BEGIN CERTIFICATE-----
      MIIEIDCCAwigAwIBAgIJAISCLF8cYtBAMA0GCSqGSIb3DQEBCwUAMIGcMQswCQYD
      VQQGEwJQQTEPMA0GA1UECAwGUGFuYW1hMRQwEgYDVQQHDAtQYW5hbWEgQ2l0eTEk
      MCIGA1UECgwbVHJ1c3RDb3IgU3lzdGVtcyBTLiBkZSBSLkwuMScwJQYDVQQLDB5U
      cnVzdENvciBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxFzAVBgNVBAMMDlRydXN0Q29y
      IEVDQS0xMB4XDTE2MDIwNDEyMzIzM1oXDTI5MTIzMTE3MjgwN1owgZwxCzAJBgNV
      BAYTAlBBMQ8wDQYDVQQIDAZQYW5hbWExFDASBgNVBAcMC1BhbmFtYSBDaXR5MSQw
      IgYDVQQKDBtUcnVzdENvciBTeXN0ZW1zIFMuIGRlIFIuTC4xJzAlBgNVBAsMHlRy
      dXN0Q29yIENlcnRpZmljYXRlIEF1dGhvcml0eTEXMBUGA1UEAwwOVHJ1c3RDb3Ig
      RUNBLTEwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDPj+ARtZ+odnbb
      3w9U73NjKYKtR8aja+3+XzP4Q1HpGjORMRegdMTUpwHmspI+ap3tDvl0mEDTPwOA
      BoJA6LHip1GnHYMma6ve+heRK9jGrB6xnhkB1Zem6g23xFUfJ3zSCNV2HykVh0A5
      3ThFEXXQmqc04L/NyFIduUd+Dbi7xgz2c1cWWn5DkR9VOsZtRASqnKmcp0yJF4Ou
      owReUoCLHhIlERnXDH19MURB6tuvsBzvgdAsxZohmz3tQjtQJvLsznFhBmIhVE5/
      wZ0+fyCMgMsq2JdiyIMzkX2woloPV+g7zPIlstR8L+xNxqE6FXrntl019fZISjZF
      ZtS6mFjBAgMBAAGjYzBhMB0GA1UdDgQWBBREnkj1zG1I1KBLf/5ZJC+Dl5mahjAf
      BgNVHSMEGDAWgBREnkj1zG1I1KBLf/5ZJC+Dl5mahjAPBgNVHRMBAf8EBTADAQH/
      MA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0BAQsFAAOCAQEABT41XBVwm8nHc2Fv
      civUwo/yQ10CzsSUuZQRg2dd4mdsdXa/uwyqNsatR5Nj3B5+1t4u/ukZMjgDfxT2
      AHMsWbEhBuH7rBiVDKP/mZb3Kyeb1STMHd3BOuCYRLDE5D53sXOpZCz2HAF8P11F
      hcCF5yWPldwX8zyfGm6wyuMdKulMY/okYWLW2n62HGz1Ah3UKt1VkOsqEUc8Ll50
      soIipX1TH0XsJ5F95yIW6MBoNtjG8U+ARDL54dHRHareqKucBK+tIA5kmE2la8BI
      WJZpTdwHjFGTot+fDz2LYLSCjaoITmJF4PkL0uDgPFveXHEnJcLmA4GLEFPjx1Wi
      tJ/X5g==
      -----END CERTIFICATE-----

      # TrustCor RootCert CA-1
      -----BEGIN CERTIFICATE-----
      MIIEMDCCAxigAwIBAgIJANqb7HHzA7AZMA0GCSqGSIb3DQEBCwUAMIGkMQswCQYD
      VQQGEwJQQTEPMA0GA1UECAwGUGFuYW1hMRQwEgYDVQQHDAtQYW5hbWEgQ2l0eTEk
      MCIGA1UECgwbVHJ1c3RDb3IgU3lzdGVtcyBTLiBkZSBSLkwuMScwJQYDVQQLDB5U
      cnVzdENvciBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxHzAdBgNVBAMMFlRydXN0Q29y
      IFJvb3RDZXJ0IENBLTEwHhcNMTYwMjA0MTIzMjE2WhcNMjkxMjMxMTcyMzE2WjCB
      pDELMAkGA1UEBhMCUEExDzANBgNVBAgMBlBhbmFtYTEUMBIGA1UEBwwLUGFuYW1h
      IENpdHkxJDAiBgNVBAoMG1RydXN0Q29yIFN5c3RlbXMgUy4gZGUgUi5MLjEnMCUG
      A1UECwweVHJ1c3RDb3IgQ2VydGlmaWNhdGUgQXV0aG9yaXR5MR8wHQYDVQQDDBZU
      cnVzdENvciBSb290Q2VydCBDQS0xMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB
      CgKCAQEAv463leLCJhJrMxnHQFgKq1mqjQCj/IDHUHuO1CAmujIS2CNUSSUQIpid
      RtLByZ5OGy4sDjjzGiVoHKZaBeYei0i/mJZ0PmnK6bV4pQa81QBeCQryJ3pS/C3V
      seq0iWEk8xoT26nPUu0MJLq5nux+AHT6k61sKZKuUbS701e/s/OojZz0JEsq1pme
      9J7+wH5COucLlVPat2gOkEz7cD+PSiyU8ybdY2mplNgQTsVHCJCZGxdNuWxu72CV
      EY4hgLW9oHPY0LJ3xEXqWib7ZnZ2+AYfYW0PVcWDtxBWcgYHpfOxGgMFZA6dWorW
      hnAbJN7+KIor0Gqw/Hqi3LJ5DotlDwIDAQABo2MwYTAdBgNVHQ4EFgQU7mtJPHo/
      DeOxCbeKyKsZn3MzUOcwHwYDVR0jBBgwFoAU7mtJPHo/DeOxCbeKyKsZn3MzUOcw
      DwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQAD
      ggEBACUY1JGPE+6PHh0RU9otRCkZoB5rMZ5NDp6tPVxBb5UrJKF5mDo4Nvu7Zp5I
      /5CQ7z3UuJu0h3U/IJvOcs+hVcFNZKIZBqEHMwwLKeXx6quj7LUKdJDHfXLy11yf
      ke+Ri7fc7Waiz45mO7yfOgLgJ90WmMCV1Aqk5IGadZQ1nJBfiDcGrVmVCrDRZ9MZ
      yonnMlo2HD6CqFqTvsbQZJG2z9m2GM/bftJlo6bEjhcxwft+dtvTheNYsnd6djts
      L1Ac59v2Z3kf9YKVmgenFK+P3CghZwnS1k1aHBkcjndcw5QkPTJrS37UeJSDvjdN
      zl/HHk484IkzlQsPpTLWPFp5LBk=
      -----END CERTIFICATE-----

      # TrustCor RootCert CA-2
      -----BEGIN CERTIFICATE-----
      MIIGLzCCBBegAwIBAgIIJaHfyjPLWQIwDQYJKoZIhvcNAQELBQAwgaQxCzAJBgNV
      BAYTAlBBMQ8wDQYDVQQIDAZQYW5hbWExFDASBgNVBAcMC1BhbmFtYSBDaXR5MSQw
      IgYDVQQKDBtUcnVzdENvciBTeXN0ZW1zIFMuIGRlIFIuTC4xJzAlBgNVBAsMHlRy
      dXN0Q29yIENlcnRpZmljYXRlIEF1dGhvcml0eTEfMB0GA1UEAwwWVHJ1c3RDb3Ig
      Um9vdENlcnQgQ0EtMjAeFw0xNjAyMDQxMjMyMjNaFw0zNDEyMzExNzI2MzlaMIGk
      MQswCQYDVQQGEwJQQTEPMA0GA1UECAwGUGFuYW1hMRQwEgYDVQQHDAtQYW5hbWEg
      Q2l0eTEkMCIGA1UECgwbVHJ1c3RDb3IgU3lzdGVtcyBTLiBkZSBSLkwuMScwJQYD
      VQQLDB5UcnVzdENvciBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxHzAdBgNVBAMMFlRy
      dXN0Q29yIFJvb3RDZXJ0IENBLTIwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIK
      AoICAQCnIG7CKqJiJJWQdsg4foDSq8GbZQWU9MEKENUCrO2fk8eHyLAnK0IMPQo+
      QVqedd2NyuCb7GgypGmSaIwLgQ5WoD4a3SwlFIIvl9NkRvRUqdw6VC0xK5mC8tkq
      1+9xALgxpL56JAfDQiDyitSSBBtlVkxs1Pu2YVpHI7TYabS3OtB0PAx1oYxOdqHp
      2yqlO/rOsP9+aij9JxzIsekp8VduZLTQwRVtDr4uDkbIXvRR/u8OYzo7cbrPb1nK
      DOObXUm4TOJXsZiKQlecdu/vvdFoqNL0Cbt3Nb4lggjEFixEIFapRBF37120Hape
      az6LMvYHL1cEksr1/p3C6eizjkxLAjHZ5DxIgif3GIJ2SDpxsROhOdUuxTTCHWKF
      3wP+TfSvPd9cW436cOGlfifHhi5qjxLGhF5DUVCcGZt45vz27Ud+ez1m7xMTiF88
      oWP7+ayHNZ/zgp6kPwqcMWmLmaSISo5uZk3vFsQPeSghYA2FFn3XVDjxklb9tTNM
      g9zXEJ9L/cb4Qr26fHMC4P99zVvh1Kxhe1fVSntb1IVYJ12/+CtgrKAmrhQhJ8Z3
      mjOAPF5GP/fDsaOGM8boXg25NSyqRsGFAnWAoOsk+xWq5Gd/bnc/9ASKL3x74xdh
      8N0JqSDIvgmk0H5Ew7IwSjiqqewYmgeCK9u4nBit2uBGF6zPXQIDAQABo2MwYTAd
      BgNVHQ4EFgQU2f4hQG6UnrybPZx9mCAZ5YwwYrIwHwYDVR0jBBgwFoAU2f4hQG6U
      nrybPZx9mCAZ5YwwYrIwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAYYw
      DQYJKoZIhvcNAQELBQADggIBAJ5Fngw7tu/hOsh80QA9z+LqBrWyOrsGS2h60COX
      dKcs8AjYeVrXWoSK2BKaG9l9XE1wxaX5q+WjiYndAfrs3fnpkpfbsEZC89NiqpX+
      MWcUaViQCqoL7jcjx1BRtPV+nuN79+TMQjItSQzL/0kMmx40/W5ulop5A7Zv2wnL
      /V9lFDfhOPXzYRZY5LVtDQsEGz9QLX+zx3oaFoBg+Iof6Rsqxvm6ARppv9JYx1RX
      CI/hOWB3S6xZhBqI8d3LT3jX5+EzLfzuQfogsL7L9ziUwOHQhQ+77Sxzq+3+knYa
      ZH9bDTMJBzN7Bj8RpFxwPIXAz+OQqIN3+tvmxYxoZxBnpVIt8MSZj3+/0WvitUfW
      2dCFmU2Umw9Lje4AWkcdEQOsQRivh7dvDDqPys/cA8GiCcjl/YBeyGBCARsaU1q7
      N6a3vLqE6R5sGtRk2tRD/pOLS/IseRYQ1JMLiI+h2IYURpFHmygk71dSTlxCnKr3
      Sewn6EAes6aJInKc9Q0ztFijMDvd1GpUk74aTfOTlPf8hAs/hCBcNANExdqtvArB
      As8e5ZTZ845b2EzwnexhF7sUMlQMAimTHpKG9n/v55IFDlndmQguLvqcAFLTxWYp
      5KeXRKQOKIETNcX2b2TmQcTVL8w0RSXPQQCWPUouwpaYT05KnJe32x+SMsj/D1Fu
      1uwJ
      -----END CERTIFICATE-----

      # Trustwave Global Certification Authority
      -----BEGIN CERTIFICATE-----
      MIIF2jCCA8KgAwIBAgIMBfcOhtpJ80Y1LrqyMA0GCSqGSIb3DQEBCwUAMIGIMQsw
      CQYDVQQGEwJVUzERMA8GA1UECAwISWxsaW5vaXMxEDAOBgNVBAcMB0NoaWNhZ28x
      ITAfBgNVBAoMGFRydXN0d2F2ZSBIb2xkaW5ncywgSW5jLjExMC8GA1UEAwwoVHJ1
      c3R3YXZlIEdsb2JhbCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0xNzA4MjMx
      OTM0MTJaFw00MjA4MjMxOTM0MTJaMIGIMQswCQYDVQQGEwJVUzERMA8GA1UECAwI
      SWxsaW5vaXMxEDAOBgNVBAcMB0NoaWNhZ28xITAfBgNVBAoMGFRydXN0d2F2ZSBI
      b2xkaW5ncywgSW5jLjExMC8GA1UEAwwoVHJ1c3R3YXZlIEdsb2JhbCBDZXJ0aWZp
      Y2F0aW9uIEF1dGhvcml0eTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIB
      ALldUShLPDeS0YLOvR29zd24q88KPuFd5dyqCblXAj7mY2Hf8g+CY66j96xz0Xzn
      swuvCAAJWX/NKSqIk4cXGIDtiLK0thAfLdZfVaITXdHG6wZWiYj+rDKd/VzDBcdu
      7oaJuogDnXIhhpCujwOl3J+IKMujkkkP7NAP4m1ET4BqstTnoApTAbqOl5F2brz8
      1Ws25kCI1nsvXwXoLG0R8+eyvpJETNKXpP7ScoFDB5zpET71ixpZfR9oWN0EACyW
      80OzfpgZdNmcc9kYvkHHNHnZ9GLCQ7mzJ7Aiy/k9UscwR7PJPrhq4ufogXBeQotP
      JqX+OsIgbrv4Fo7NDKm0G2x2EOFYeUY+VM6AqFcJNykbmROPDMjWLBz7BegIlT1l
      RtzuzWniTY+HKE40Cz7PFNm73bZQmq131BnW2hqIyE4bJ3XYsgjxroMwuREOzYfw
      hI0Vcnyh78zyiGG69Gm7DIwLdVcEuE4qFC49DxweMqZiNu5m4iK4BUBjECLzMx10
      coos9TkpoNPnG4CELcU9402x/RpvumUHO1jsQkUm+9jaJXLE9gCxInm943xZYkqc
      BW89zubWR2OZxiRvchLIrH+QtAuRcOi35hYQcRfO3gZPSEF9NUqjifLJS3tBEW1n
      twiYTOURGa5CgNz7kAXU+FDKvuStx8KU1xad5hePrzb7AgMBAAGjQjBAMA8GA1Ud
      EwEB/wQFMAMBAf8wHQYDVR0OBBYEFJngGWcNYtt2s9o9uFvo/ULSMQ6HMA4GA1Ud
      DwEB/wQEAwIBBjANBgkqhkiG9w0BAQsFAAOCAgEAmHNw4rDT7TnsTGDZqRKGFx6W
      0OhUKDtkLSGm+J1WE2pIPU/HPinbbViDVD2HfSMF1OQc3Og4ZYbFdada2zUFvXfe
      uyk3QAUHw5RSn8pk3fEbK9xGChACMf1KaA0HZJDmHvUqoai7PF35owgLEQzxPy0Q
      lG/+4jSHg9bP5Rs1bdID4bANqKCqRieCNqcVtgimQlRXtpla4gt5kNdXElE1GYhB
      aCXUNxeEFfsBctyV3lImIJgm4nb1J2/6ADtKYdkNy1GTKv0WBpanI5ojSP5RvbbE
      sLFUzt5sQa0WZ37b/TjNuThOssFgy50X31ieemKyJo90lZvkWx3SD92YHJtZuSPT
      MaCm/zjdzyBP6VhWOmfD0faZmZ26NraAL4hHT4a/RDqA5Dccprrql5gR0IRiR2Qe
      qu5AvzSxnI9O4fKSTx+O856X3vOmeWqJcU9LJxdI/uz0UA9PSX3MReO9ekDFQdxh
      VicGaeVyQYHTtgGJoC86cnn+OjC/QezHYj6RS8fZMXZC+fc8Y+wmjHMMfRod6qh8
      h6jCJ3zhM0EPz8/8AKAigJ5Kp28AsEFFtyLKaEjFQqKu3R3y4G5OBVixwJAWKqQ9
      EEC+j2Jjg6mcgn0tAumDMHzLJ8n9HmYAsC7TIS+OMxZsmO0QqAfWzJPP29FpHOTK
      yeC2nOnOcXHebD8WpHk=
      -----END CERTIFICATE-----

      # Trustwave Global ECC P256 Certification Authority
      -----BEGIN CERTIFICATE-----
      MIICYDCCAgegAwIBAgIMDWpfCD8oXD5Rld9dMAoGCCqGSM49BAMCMIGRMQswCQYD
      VQQGEwJVUzERMA8GA1UECBMISWxsaW5vaXMxEDAOBgNVBAcTB0NoaWNhZ28xITAf
      BgNVBAoTGFRydXN0d2F2ZSBIb2xkaW5ncywgSW5jLjE6MDgGA1UEAxMxVHJ1c3R3
      YXZlIEdsb2JhbCBFQ0MgUDI1NiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0x
      NzA4MjMxOTM1MTBaFw00MjA4MjMxOTM1MTBaMIGRMQswCQYDVQQGEwJVUzERMA8G
      A1UECBMISWxsaW5vaXMxEDAOBgNVBAcTB0NoaWNhZ28xITAfBgNVBAoTGFRydXN0
      d2F2ZSBIb2xkaW5ncywgSW5jLjE6MDgGA1UEAxMxVHJ1c3R3YXZlIEdsb2JhbCBF
      Q0MgUDI1NiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTBZMBMGByqGSM49AgEGCCqG
      SM49AwEHA0IABH77bOYj43MyCMpg5lOcunSNGLB4kFKA3TjASh3RqMyTpJcGOMoN
      FWLGjgEqZZ2q3zSRLoHB5DOSMcT9CTqmP62jQzBBMA8GA1UdEwEB/wQFMAMBAf8w
      DwYDVR0PAQH/BAUDAwcGADAdBgNVHQ4EFgQUo0EGrJBt0UrrdaVKEJmzsaGLSvcw
      CgYIKoZIzj0EAwIDRwAwRAIgB+ZU2g6gWrKuEZ+Hxbb/ad4lvvigtwjzRM4q3wgh
      DDcCIC0mA6AFvWvR9lz4ZcyGbbOcNEhjhAnFjXca4syc4XR7
      -----END CERTIFICATE-----

      # Trustwave Global ECC P384 Certification Authority
      -----BEGIN CERTIFICATE-----
      MIICnTCCAiSgAwIBAgIMCL2Fl2yZJ6SAaEc7MAoGCCqGSM49BAMDMIGRMQswCQYD
      VQQGEwJVUzERMA8GA1UECBMISWxsaW5vaXMxEDAOBgNVBAcTB0NoaWNhZ28xITAf
      BgNVBAoTGFRydXN0d2F2ZSBIb2xkaW5ncywgSW5jLjE6MDgGA1UEAxMxVHJ1c3R3
      YXZlIEdsb2JhbCBFQ0MgUDM4NCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTAeFw0x
      NzA4MjMxOTM2NDNaFw00MjA4MjMxOTM2NDNaMIGRMQswCQYDVQQGEwJVUzERMA8G
      A1UECBMISWxsaW5vaXMxEDAOBgNVBAcTB0NoaWNhZ28xITAfBgNVBAoTGFRydXN0
      d2F2ZSBIb2xkaW5ncywgSW5jLjE6MDgGA1UEAxMxVHJ1c3R3YXZlIEdsb2JhbCBF
      Q0MgUDM4NCBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTB2MBAGByqGSM49AgEGBSuB
      BAAiA2IABGvaDXU1CDFHBa5FmVXxERMuSvgQMSOjfoPTfygIOiYaOs+Xgh+AtycJ
      j9GOMMQKmw6sWASr9zZ9lCOkmwqKi6vr/TklZvFe/oyujUF5nQlgziip04pt89ZF
      1PKYhDhloKNDMEEwDwYDVR0TAQH/BAUwAwEB/zAPBgNVHQ8BAf8EBQMDBwYAMB0G
      A1UdDgQWBBRVqYSJ0sEyvRjLbKYHTsjnnb6CkDAKBggqhkjOPQQDAwNnADBkAjA3
      AZKXRRJ+oPM+rRk6ct30UJMDEr5E0k9BpIycnR+j9sKS50gU/k6bpZFXrsY3crsC
      MGclCrEMXu6pY5Jv5ZAL/mYiykf9ijH3g/56vxC+GCsej/YpHpRZ744hN8tRmKVu
      Sw==
      -----END CERTIFICATE-----

      # TunTrust Root CA
      -----BEGIN CERTIFICATE-----
      MIIFszCCA5ugAwIBAgIUEwLV4kBMkkaGFmddtLu7sms+/BMwDQYJKoZIhvcNAQEL
      BQAwYTELMAkGA1UEBhMCVE4xNzA1BgNVBAoMLkFnZW5jZSBOYXRpb25hbGUgZGUg
      Q2VydGlmaWNhdGlvbiBFbGVjdHJvbmlxdWUxGTAXBgNVBAMMEFR1blRydXN0IFJv
      b3QgQ0EwHhcNMTkwNDI2MDg1NzU2WhcNNDQwNDI2MDg1NzU2WjBhMQswCQYDVQQG
      EwJUTjE3MDUGA1UECgwuQWdlbmNlIE5hdGlvbmFsZSBkZSBDZXJ0aWZpY2F0aW9u
      IEVsZWN0cm9uaXF1ZTEZMBcGA1UEAwwQVHVuVHJ1c3QgUm9vdCBDQTCCAiIwDQYJ
      KoZIhvcNAQEBBQADggIPADCCAgoCggIBAMPN0/y9BFPdDCA61YguBUtB9YOCfvdZ
      n56eY+hz2vYGqU8ftPkLHzmMmiDQfgbU7DTZhrx1W4eI8NLZ1KMKsmwb60ksPqxd
      2JQDoOw05TDENX37Jk0bbjBU2PWARZw5rZzJJQRNmpA+TkBuimvNKWfGzC3gdOgF
      VwpIUPp6Q9p+7FuaDmJ2/uqdHYVy7BG7NegfJ7/Boce7SBbdVtfMTqDhuazb1YMZ
      GoXRlJfXyqNlC/M4+QKu3fZnz8k/9YosRxqZbwUN/dAdgjH8KcwAWJeRTIAAHDOF
      li/LQcKLEITDCSSJH7UP2dl3RxiSlGBcx5kDPP73lad9UKGAwqmDrViWVSHbhlnU
      r8a83YFuB9tgYv7sEG7aaAH0gxupPqJbI9dkxt/con3YS7qC0lH4Zr8GRuR5KiY2
      eY8fTpkdso8MDhz/yV3A/ZAQprE38806JG60hZC/gLkMjNWb1sjxVj8agIl6qeIb
      MlEsPvLfe/ZdeikZjuXIvTZxi11Mwh0/rViizz1wTaZQmCXcI/m4WEEIcb9PuISg
      jwBUFfyRbVinljvrS5YnzWuioYasDXxU5mZMZl+QviGaAkYt5IPCgLnPSz7ofzwB
      7I9ezX/SKEIBlYrilz0QIX32nRzFNKHsLA4KUiwSVXAkPcvCFDVDXSdOvsC9qnyW
      5/yeYa1E0wCXAgMBAAGjYzBhMB0GA1UdDgQWBBQGmpsfU33x9aTI04Y+oXNZtPdE
      ITAPBgNVHRMBAf8EBTADAQH/MB8GA1UdIwQYMBaAFAaamx9TffH1pMjThj6hc1m0
      90QhMA4GA1UdDwEB/wQEAwIBBjANBgkqhkiG9w0BAQsFAAOCAgEAqgVutt0Vyb+z
      xiD2BkewhpMl0425yAA/l/VSJ4hxyXT968pk21vvHl26v9Hr7lxpuhbI87mP0zYu
      QEkHDVneixCwSQXi/5E/S7fdAo74gShczNxtr18UnH1YeA32gAm56Q6XKRm4t+v4
      FstVEuTGfbvE7Pi1HE4+Z7/FXxttbUcoqgRYYdZ2vyJ/0Adqp2RT8JeNnYA/u8EH
      22Wv5psymsNUk8QcCMNE+3tjEUPRahphanltkE8pjkcFwRJpadbGNjHh/PqAulxP
      xOu3Mqz4dWEX1xAZufHSCe96Qp1bWgvUxpVOKs7/B9dPfhgGiPEZtdmYu65xxBzn
      dFlY7wyJz4sfdZMaBBSSSFCp61cpABbjNhzI+L/wM9VBD8TMPN3pM0MBkRArHtG5
      Xc0yGYuPjCB31yLEQtyEFpslbei0VXF/sHyz03FJuc9SpAQ/3D2gu68zngowYI7b
      nV2UqL1g52KAdoGDDIzMMEZJ4gzSqK/rYXHv5yJiqfdcZGyfFoxnNidF9Ql7v/YQ
      CvGwjVRDjAS6oz/v4jXH+XTgbzRB0L9zZVcg+ZtnemZoJE6AZb0QmQZZ8mWvuMZH
      u/2QeItBcy6vVR/cO5JyboTT0GFMDcx2V+IthSIVNg3rAZ3r2OvEhJn7wAzMMujj
      d9qDRIueVSjAi1jTkD5OGwDxFa2DK5o=
      -----END CERTIFICATE-----

      # UCA Extended Validation Root
      -----BEGIN CERTIFICATE-----
      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
      -----END CERTIFICATE-----

      # UCA Global G2 Root
      -----BEGIN CERTIFICATE-----
      MIIFRjCCAy6gAwIBAgIQXd+x2lqj7V2+WmUgZQOQ7zANBgkqhkiG9w0BAQsFADA9
      MQswCQYDVQQGEwJDTjERMA8GA1UECgwIVW5pVHJ1c3QxGzAZBgNVBAMMElVDQSBH
      bG9iYWwgRzIgUm9vdDAeFw0xNjAzMTEwMDAwMDBaFw00MDEyMzEwMDAwMDBaMD0x
      CzAJBgNVBAYTAkNOMREwDwYDVQQKDAhVbmlUcnVzdDEbMBkGA1UEAwwSVUNBIEds
      b2JhbCBHMiBSb290MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAxeYr
      b3zvJgUno4Ek2m/LAfmZmqkywiKHYUGRO8vDaBsGxUypK8FnFyIdK+35KYmToni9
      kmugow2ifsqTs6bRjDXVdfkX9s9FxeV67HeToI8jrg4aA3++1NDtLnurRiNb/yzm
      VHqUwCoV8MmNsHo7JOHXaOIxPAYzRrZUEaalLyJUKlgNAQLx+hVRZ2zA+te2G3/R
      VogvGjqNO7uCEeBHANBSh6v7hn4PJGtAnTRnvI3HLYZveT6OqTwXS3+wmeOwcWDc
      C/Vkw85DvG1xudLeJ1uK6NjGruFZfc8oLTW4lVYa8bJYS7cSN8h8s+1LgOGN+jIj
      tm+3SJUIsUROhYw6AlQgL9+/V087OpAh18EmNVQg7Mc/R+zvWr9LesGtOxdQXGLY
      D0tK3Cv6brxzks3sx1DoQZbXqX5t2Okdj4q1uViSukqSKwxW/YDrCPBeKW4bHAyv
      j5OJrdu9o54hyokZ7N+1wxrrFv54NkzWbtA+FxyQF2smuvt6L78RHBgOLXMDj6Dl
      NaBa4kx1HXHhOThTeEDMg5PXCp6dW4+K5OXgSORIskfNTip1KnvyIvbJvgmRlld6
      iIis7nCs+dwp4wwcOxJORNanTrAmyPPZGpeRaOrvjUYG0lZFWJo8DA+DuAUlwznP
      O6Q0ibd5Ei9Hxeepl2n8pndntd978XplFeRhVmUCAwEAAaNCMEAwDgYDVR0PAQH/
      BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFIHEjMz15DD/pQwIX4wV
      ZyF0Ad/fMA0GCSqGSIb3DQEBCwUAA4ICAQATZSL1jiutROTL/7lo5sOASD0Ee/oj
      L3rtNtqyzm325p7lX1iPyzcyochltq44PTUbPrw7tgTQvPlJ9Zv3hcU2tsu8+Mg5
      1eRfB70VVJd0ysrtT7q6ZHafgbiERUlMjW+i67HM0cOU2kTC5uLqGOiiHycFutfl
      1qnN3e92mI0ADs0b+gO3joBYDic/UvuUospeZcnWhNq5NXHzJsBPd+aBJ9J3O5oU
      b3n09tDh05S60FdRvScFDcH9yBIw7m+NESsIndTUv4BFFJqIRNow6rSn4+7vW4LV
      PtateJLbXDzz2K36uGt/xDYotgIVilQsnLAXc47QN6MUPJiVAAwpBVueSUmxX8fj
      y88nZY41F7dXyDDZQVu5FLbowg+UMaeUmMxq67XhJ/UQqAHojhJi6IjMtX9Gl8Cb
      EGY4GjZGXyJoPd/JxhMnq1MGrKI8hgZlb7F+sSlEmqO6SWkoaY/X5V+tBIZkbxqg
      DMUIYs6Ao9Dz7GjevjPHF1t/gMRMTLGmhIrDO7gJzRSBuhjjVFc2/tsvfEehOjPI
      +Vg7RE+xygKJBJYoaMVLuCaJu9YzL1DV/pqJuhgyklTGW+Cd+V7lDSKb9triyCGy
      YiGqhkCyLmTTX8jjfhFnRR8F/uOi77Oos/N9j/gMHyIfLXC0uAE0djAA5SN4p1bX
      UB+K+wb1whnw0A==
      -----END CERTIFICATE-----

      # USERTrust ECC Certification Authority
      -----BEGIN CERTIFICATE-----
      MIICjzCCAhWgAwIBAgIQXIuZxVqUxdJxVt7NiYDMJjAKBggqhkjOPQQDAzCBiDEL
      MAkGA1UEBhMCVVMxEzARBgNVBAgTCk5ldyBKZXJzZXkxFDASBgNVBAcTC0plcnNl
      eSBDaXR5MR4wHAYDVQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxLjAsBgNVBAMT
      JVVTRVJUcnVzdCBFQ0MgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTAwMjAx
      MDAwMDAwWhcNMzgwMTE4MjM1OTU5WjCBiDELMAkGA1UEBhMCVVMxEzARBgNVBAgT
      Ck5ldyBKZXJzZXkxFDASBgNVBAcTC0plcnNleSBDaXR5MR4wHAYDVQQKExVUaGUg
      VVNFUlRSVVNUIE5ldHdvcmsxLjAsBgNVBAMTJVVTRVJUcnVzdCBFQ0MgQ2VydGlm
      aWNhdGlvbiBBdXRob3JpdHkwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAAQarFRaqflo
      I+d61SRvU8Za2EurxtW20eZzca7dnNYMYf3boIkDuAUU7FfO7l0/4iGzzvfUinng
      o4N+LZfQYcTxmdwlkWOrfzCjtHDix6EznPO/LlxTsV+zfTJ/ijTjeXmjQjBAMB0G
      A1UdDgQWBBQ64QmG1M8ZwpZ2dEl23OA1xmNjmjAOBgNVHQ8BAf8EBAMCAQYwDwYD
      VR0TAQH/BAUwAwEB/zAKBggqhkjOPQQDAwNoADBlAjA2Z6EWCNzklwBBHU6+4WMB
      zzuqQhFkoJ2UOQIReVx7Hfpkue4WQrO/isIJxOzksU0CMQDpKmFHjFJKS04YcPbW
      RNZu9YO6bVi9JNlWSOrvxKJGgYhqOkbRqZtNyWHa0V1Xahg=
      -----END CERTIFICATE-----

      # USERTrust RSA Certification Authority
      -----BEGIN CERTIFICATE-----
      MIIF3jCCA8agAwIBAgIQAf1tMPyjylGoG7xkDjUDLTANBgkqhkiG9w0BAQwFADCB
      iDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCk5ldyBKZXJzZXkxFDASBgNVBAcTC0pl
      cnNleSBDaXR5MR4wHAYDVQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxLjAsBgNV
      BAMTJVVTRVJUcnVzdCBSU0EgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTAw
      MjAxMDAwMDAwWhcNMzgwMTE4MjM1OTU5WjCBiDELMAkGA1UEBhMCVVMxEzARBgNV
      BAgTCk5ldyBKZXJzZXkxFDASBgNVBAcTC0plcnNleSBDaXR5MR4wHAYDVQQKExVU
      aGUgVVNFUlRSVVNUIE5ldHdvcmsxLjAsBgNVBAMTJVVTRVJUcnVzdCBSU0EgQ2Vy
      dGlmaWNhdGlvbiBBdXRob3JpdHkwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIK
      AoICAQCAEmUXNg7D2wiz0KxXDXbtzSfTTK1Qg2HiqiBNCS1kCdzOiZ/MPans9s/B
      3PHTsdZ7NygRK0faOca8Ohm0X6a9fZ2jY0K2dvKpOyuR+OJv0OwWIJAJPuLodMkY
      tJHUYmTbf6MG8YgYapAiPLz+E/CHFHv25B+O1ORRxhFnRghRy4YUVD+8M/5+bJz/
      Fp0YvVGONaanZshyZ9shZrHUm3gDwFA66Mzw3LyeTP6vBZY1H1dat//O+T23LLb2
      VN3I5xI6Ta5MirdcmrS3ID3KfyI0rn47aGYBROcBTkZTmzNg95S+UzeQc0PzMsNT
      79uq/nROacdrjGCT3sTHDN/hMq7MkztReJVni+49Vv4M0GkPGw/zJSZrM233bkf6
      c0Plfg6lZrEpfDKEY1WJxA3Bk1QwGROs0303p+tdOmw1XNtB1xLaqUkL39iAigmT
      Yo61Zs8liM2EuLE/pDkP2QKe6xJMlXzzawWpXhaDzLhn4ugTncxbgtNMs+1b/97l
      c6wjOy0AvzVVdAlJ2ElYGn+SNuZRkg7zJn0cTRe8yexDJtC/QV9AqURE9JnnV4ee
      UB9XVKg+/XRjL7FQZQnmWEIuQxpMtPAlR1n6BB6T1CZGSlCBst6+eLf8ZxXhyVeE
      Hg9j1uliutZfVS7qXMYoCAQlObgOK6nyTJccBz8NUvXt7y+CDwIDAQABo0IwQDAd
      BgNVHQ4EFgQUU3m/WqorSs9UgOHYm8Cd8rIDZsswDgYDVR0PAQH/BAQDAgEGMA8G
      A1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQEMBQADggIBAFzUfA3P9wF9QZllDHPF
      Up/L+M+ZBn8b2kMVn54CVVeWFPFSPCeHlCjtHzoBN6J2/FNQwISbxmtOuowhT6KO
      VWKR82kV2LyI48SqC/3vqOlLVSoGIG1VeCkZ7l8wXEskEVX/JJpuXior7gtNn3/3
      ATiUFJVDBwn7YKnuHKsSjKCaXqeYalltiz8I+8jRRa8YFWSQEg9zKC7F4iRO/Fjs
      8PRF/iKz6y+O0tlFYQXBl2+odnKPi4w2r78NBc5xjeambx9spnFixdjQg3IM8WcR
      iQycE0xyNN+81XHfqnHd4blsjDwSXWXavVcStkNr/+XeTWYRUc+ZruwXtuhxkYze
      Sf7dNXGiFSeUHM9h4ya7b6NnJSFd5t0dCy5oGzuCr+yDZ4XUmFF0sbmZgIn/f3gZ
      XHlKYC6SQK5MNyosycdiyA5d9zZbyuAlJQG03RoHnHcAP9Dc1ew91Pq7P8yF1m9/
      qS3fuQL39ZeatTXaw2ewh0qpKJ4jjv9cJ2vhsE/zB+4ALtRZh8tSQZXq9EfX7mRB
      VXyNWQKV3WKdwrnuWih0hKWbt5DHDAff9Yk2dDLWKMGwsAvgnEzDHNb842m1R0aB
      L6KCq9NjRHDEjf8tM7qtj3u1cIiuPhnPQCjY/MiQu12ZIvVS5ljFH4gxQ+6IHdfG
      jjxDah2nGN59PRbxYvnKkKj9
      -----END CERTIFICATE-----

      # XRamp Global CA Root
      -----BEGIN CERTIFICATE-----
      MIIEMDCCAxigAwIBAgIQUJRs7Bjq1ZxN1ZfvdY+grTANBgkqhkiG9w0BAQUFADCB
      gjELMAkGA1UEBhMCVVMxHjAcBgNVBAsTFXd3dy54cmFtcHNlY3VyaXR5LmNvbTEk
      MCIGA1UEChMbWFJhbXAgU2VjdXJpdHkgU2VydmljZXMgSW5jMS0wKwYDVQQDEyRY
      UmFtcCBHbG9iYWwgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMDQxMTAxMTcx
      NDA0WhcNMzUwMTAxMDUzNzE5WjCBgjELMAkGA1UEBhMCVVMxHjAcBgNVBAsTFXd3
      dy54cmFtcHNlY3VyaXR5LmNvbTEkMCIGA1UEChMbWFJhbXAgU2VjdXJpdHkgU2Vy
      dmljZXMgSW5jMS0wKwYDVQQDEyRYUmFtcCBHbG9iYWwgQ2VydGlmaWNhdGlvbiBB
      dXRob3JpdHkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCYJB69FbS6
      38eMpSe2OAtp87ZOqCwuIR1cRN8hXX4jdP5efrRKt6atH67gBhbim1vZZ3RrXYCP
      KZ2GG9mcDZhtdhAoWORlsH9KmHmf4MMxfoArtYzAQDsRhtDLooY2YKTVMIJt2W7Q
      DxIEM5dfT2Fa8OT5kavnHTu86M/0ay00fOJIYRyO82FEzG+gSqmUsE3a56k0enI4
      qEHMPJQRfevIpoy3hsvKMzvZPTeL+3o+hiznc9cKV6xkmxnr9A8ECIqsAxcZZPRa
      JSKNNCyy9mgdEm3Tih4U2sSPpuIjhdV6Db1q4Ons7Be7QhtnqiXtRYMh/MHJfNVi
      PvryxS3T/dRlAgMBAAGjgZ8wgZwwEwYJKwYBBAGCNxQCBAYeBABDAEEwCwYDVR0P
      BAQDAgGGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFMZPoj0GY4QJnM5i5ASs
      jVy16bYbMDYGA1UdHwQvMC0wK6ApoCeGJWh0dHA6Ly9jcmwueHJhbXBzZWN1cml0
      eS5jb20vWEdDQS5jcmwwEAYJKwYBBAGCNxUBBAMCAQEwDQYJKoZIhvcNAQEFBQAD
      ggEBAJEVOQMBG2f7Shz5CmBbodpNl2L5JFMn14JkTpAuw0kbK5rc/Kh4ZzXxHfAR
      vbdI4xD2Dd8/0sm2qlWkSLoC295ZLhVbO50WfUfXN+pfTXYSNrsf16GBBEYgoyxt
      qZ4Bfj8pzgCT3/3JknOJiWSe5yvkHJEs0rnOfc5vMZnT5r7SHpDwCRR5XCOrTdLa
      IR9NmXmd4c8nnxCbHIgNsIpkQTG4DmyQJKSbXHGPurt+HBvbaoAPIbzp26a3QPSy
      i6mx5O+aGtA9aZnuqCij4Tyz8LIRnM98QObd50N9otg6tamN8jSZxNQQ4Qb9CYQQ
      O+7ETPTsJ3xCwnR8gooJybQDJbw=
      -----END CERTIFICATE-----

      # certSIGN ROOT CA
      -----BEGIN CERTIFICATE-----
      MIIDODCCAiCgAwIBAgIGIAYFFnACMA0GCSqGSIb3DQEBBQUAMDsxCzAJBgNVBAYT
      AlJPMREwDwYDVQQKEwhjZXJ0U0lHTjEZMBcGA1UECxMQY2VydFNJR04gUk9PVCBD
      QTAeFw0wNjA3MDQxNzIwMDRaFw0zMTA3MDQxNzIwMDRaMDsxCzAJBgNVBAYTAlJP
      MREwDwYDVQQKEwhjZXJ0U0lHTjEZMBcGA1UECxMQY2VydFNJR04gUk9PVCBDQTCC
      ASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALczuX7IJUqOtdu0KBuqV5Do
      0SLTZLrTk+jUrIZhQGpgV2hUhE28alQCBf/fm5oqrl0Hj0rDKH/v+yv6efHHrfAQ
      UySQi2bJqIirr1qjAOm+ukbuW3N7LBeCgV5iLKECZbO9xSsAfsT8AzNXDe3i+s5d
      RdY4zTW2ssHQnIFKquSyAVwdj1+ZxLGt24gh65AIgoDzMKND5pCCrlUoSe1b16kQ
      OA7+j0xbm0bqQfWwCHTD0IgztnzXdN/chNFDDnU5oSVAKOp4yw4sLjmdjItuFhwv
      JoIQ4uNllAoEwF73XVv4EOLQunpL+943AAAaWyjj0pxzPjKHmKHJUS/X3qwzs08C
      AwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAcYwHQYDVR0O
      BBYEFOCMm9slSbPxfIbWskKHC9BroNnkMA0GCSqGSIb3DQEBBQUAA4IBAQA+0hyJ
      LjX8+HXd5n9liPRyTMks1zJO890ZeUe9jjtbkw9QSSQTaxQGcu8J06Gh40CEyecY
      MnQ8SG4Pn0vU9x7Tk4ZkVJdjclDVVc/6IJMCopvDI5NOFlV2oHB5bc0hH88vLbwZ
      44gx+FkagQnIl6Z0x2DEW8xXjrJ1/RsCCdtZb3KTafcxQdaIOL+Hsr0Wefmq5L6I
      Jd1hJyMctTEHBDa0GpC9oHRxUIltvBTjD4au8as+x6AJzKNI0eDbZOeStc+vckNw
      i/nDhDwTqn6Sm1dTk/pwwpEOMfmbZ13pljheX7NzTogVZ96edhBiIL5VaZVDADlN
      9u6wWk5JRFRYX0KD
      -----END CERTIFICATE-----

      # certSIGN Root CA G2
      -----BEGIN CERTIFICATE-----
      MIIFRzCCAy+gAwIBAgIJEQA0tk7GNi02MA0GCSqGSIb3DQEBCwUAMEExCzAJBgNV
      BAYTAlJPMRQwEgYDVQQKEwtDRVJUU0lHTiBTQTEcMBoGA1UECxMTY2VydFNJR04g
      Uk9PVCBDQSBHMjAeFw0xNzAyMDYwOTI3MzVaFw00MjAyMDYwOTI3MzVaMEExCzAJ
      BgNVBAYTAlJPMRQwEgYDVQQKEwtDRVJUU0lHTiBTQTEcMBoGA1UECxMTY2VydFNJ
      R04gUk9PVCBDQSBHMjCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAMDF
      dRmRfUR0dIf+DjuW3NgBFszuY5HnC2/OOwppGnzC46+CjobXXo9X69MhWf05N0Iw
      vlDqtg+piNguLWkh59E3GE59kdUWX2tbAMI5Qw02hVK5U2UPHULlj88F0+7cDBrZ
      uIt4ImfkabBoxTzkbFpG583H+u/E7Eu9aqSs/cwoUe+StCmrqzWaTOTECMYmzPhp
      n+Sc8CnTXPnGFiWeI8MgwT0PPzhAsP6CRDiqWhqKa2NYOLQV07YRaXseVO6MGiKs
      cpc/I1mbySKEwQdPzH/iV8oScLumZfNpdWO9lfsbl83kqK/20U6o2YpxJM02PbyW
      xPFsqa7lzw1uKA2wDrXKUXt4FMMgL3/7FFXhEZn91QqhngLjYl/rNUssuHLoPj1P
      rCy7Lobio3aP5ZMqz6WryFyNSwb/EkaseMsUBzXgqd+L6a8VTxaJW732jcZZroiF
      DsGJ6x9nxUWO/203Nit4ZoORUSs9/1F3dmKh7Gc+PoGD4FapUB8fepmrY7+EF3fx
      DTvf95xhszWYijqy7DwaNz9+j5LP2RIUZNoQAhVB/0/E6xyjyfqZ90bp4RjZsbgy
      LcsUDFDYg2WD7rlcz8sFWkz6GZdr1l0T08JcVLwyc6B49fFtHsufpaafItzRUZ6C
      eWRgKRM+o/1Pcmqr4tTluCRVLERLiohEnMqE0yo7AgMBAAGjQjBAMA8GA1UdEwEB
      /wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdDgQWBBSCIS1mxteg4BXrzkwJ
      d8RgnlRuAzANBgkqhkiG9w0BAQsFAAOCAgEAYN4auOfyYILVAzOBywaK8SJJ6ejq
      kX/GM15oGQOGO0MBzwdw5AgeZYWR5hEit/UCI46uuR59H35s5r0l1ZUa8gWmr4UC
      b6741jH/JclKyMeKqdmfS0mbEVeZkkMR3rYzpMzXjWR91M08KCy0mpbqTfXERMQl
      qiCA2ClV9+BB/AYm/7k29UMUA2Z44RGx2iBfRgB4ACGlHgAoYXhvqAEBj500mv/0
      OJD7uNGzcgbJceaBxXntC6Z58hMLnPddDnskk7RI24Zf3lCGeOdA5jGokHZwYa+c
      NywRtYK3qq4kNFtyDGkNzVmf9nGvnAvRCjj5BiKDUyUM/FHE5r7iOZULJK2v0ZXk
      ltd0ZGtxTgI8qoXzIKNDOXZbbFD+mpwUHmUUihW9o4JFWklWatKcsWMy5WHgUyIO
      pwpJ6st+H6jiYoD2EEVSmAYY3qXNL3+q1Ok+CHLsIwMCPKaq2LxndD0UF/tUSxfj
      03k9bWtJySgOLnRQvwzZRjoQhsmnP+mg7H/rpXdYaXHmgwo38oZJar55CJD2AhZk
      PuXaTH4MNMn5X7azKFGnpyuqSfqNZSlO42sTp5SjLVFteAxEy9/eCG/Oo2Sr05WE
      1LlSVHJ7liXMvGnjSG4N0MedJ5qq+BOS3R7fY581qRY27Iy4g/Q9iY/NtBde17MX
      QRBdJ3NghVdJIgc=
      -----END CERTIFICATE-----

      # e-Szigno Root CA 2017
      -----BEGIN CERTIFICATE-----
      MIICQDCCAeWgAwIBAgIMAVRI7yH9l1kN9QQKMAoGCCqGSM49BAMCMHExCzAJBgNV
      BAYTAkhVMREwDwYDVQQHDAhCdWRhcGVzdDEWMBQGA1UECgwNTWljcm9zZWMgTHRk
      LjEXMBUGA1UEYQwOVkFUSFUtMjM1ODQ0OTcxHjAcBgNVBAMMFWUtU3ppZ25vIFJv
      b3QgQ0EgMjAxNzAeFw0xNzA4MjIxMjA3MDZaFw00MjA4MjIxMjA3MDZaMHExCzAJ
      BgNVBAYTAkhVMREwDwYDVQQHDAhCdWRhcGVzdDEWMBQGA1UECgwNTWljcm9zZWMg
      THRkLjEXMBUGA1UEYQwOVkFUSFUtMjM1ODQ0OTcxHjAcBgNVBAMMFWUtU3ppZ25v
      IFJvb3QgQ0EgMjAxNzBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABJbcPYrYsHtv
      xie+RJCxs1YVe45DJH0ahFnuY2iyxl6H0BVIHqiQrb1TotreOpCmYF9oMrWGQd+H
      Wyx7xf58etqjYzBhMA8GA1UdEwEB/wQFMAMBAf8wDgYDVR0PAQH/BAQDAgEGMB0G
      A1UdDgQWBBSHERUI0arBeAyxr87GyZDvvzAEwDAfBgNVHSMEGDAWgBSHERUI0arB
      eAyxr87GyZDvvzAEwDAKBggqhkjOPQQDAgNJADBGAiEAtVfd14pVCzbhhkT61Nlo
      jbjcI4qKDdQvfepz7L9NbKgCIQDLpbQS+ue16M9+k/zzNY9vTlp8tLxOsvxyqltZ
      +efcMQ==
      -----END CERTIFICATE-----

      # ePKI Root Certification Authority
      -----BEGIN CERTIFICATE-----
      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
      hNQ+IIX3Sj0rnP0qCglN6oH4EZw=
      -----END CERTIFICATE-----

      # emSign ECC Root CA - C3
      -----BEGIN CERTIFICATE-----
      MIICKzCCAbGgAwIBAgIKe3G2gla4EnycqDAKBggqhkjOPQQDAzBaMQswCQYDVQQG
      EwJVUzETMBEGA1UECxMKZW1TaWduIFBLSTEUMBIGA1UEChMLZU11ZGhyYSBJbmMx
      IDAeBgNVBAMTF2VtU2lnbiBFQ0MgUm9vdCBDQSAtIEMzMB4XDTE4MDIxODE4MzAw
      MFoXDTQzMDIxODE4MzAwMFowWjELMAkGA1UEBhMCVVMxEzARBgNVBAsTCmVtU2ln
      biBQS0kxFDASBgNVBAoTC2VNdWRocmEgSW5jMSAwHgYDVQQDExdlbVNpZ24gRUND
      IFJvb3QgQ0EgLSBDMzB2MBAGByqGSM49AgEGBSuBBAAiA2IABP2lYa57JhAd6bci
      MK4G9IGzsUJxlTm801Ljr6/58pc1kjZGDoeVjbk5Wum739D+yAdBPLtVb4Ojavti
      sIGJAnB9SMVK4+kiVCJNk7tCDK93nCOmfddhEc5lx/h//vXyqaNCMEAwHQYDVR0O
      BBYEFPtaSNCAIEDyqOkAB2kZd6fmw/TPMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMB
      Af8EBTADAQH/MAoGCCqGSM49BAMDA2gAMGUCMQC02C8Cif22TGK6Q04ThHK1rt0c
      3ta13FaPWEBaLd4gTCKDypOofu4SQMfWh0/434UCMBwUZOR8loMRnLDRWmFLpg9J
      0wD8ofzkpf9/rdcw0Md3f76BB1UwUCAU9Vc4CqgxUQ==
      -----END CERTIFICATE-----

      # emSign ECC Root CA - G3
      -----BEGIN CERTIFICATE-----
      MIICTjCCAdOgAwIBAgIKPPYHqWhwDtqLhDAKBggqhkjOPQQDAzBrMQswCQYDVQQG
      EwJJTjETMBEGA1UECxMKZW1TaWduIFBLSTElMCMGA1UEChMcZU11ZGhyYSBUZWNo
      bm9sb2dpZXMgTGltaXRlZDEgMB4GA1UEAxMXZW1TaWduIEVDQyBSb290IENBIC0g
      RzMwHhcNMTgwMjE4MTgzMDAwWhcNNDMwMjE4MTgzMDAwWjBrMQswCQYDVQQGEwJJ
      TjETMBEGA1UECxMKZW1TaWduIFBLSTElMCMGA1UEChMcZU11ZGhyYSBUZWNobm9s
      b2dpZXMgTGltaXRlZDEgMB4GA1UEAxMXZW1TaWduIEVDQyBSb290IENBIC0gRzMw
      djAQBgcqhkjOPQIBBgUrgQQAIgNiAAQjpQy4LRL1KPOxst3iAhKAnjlfSU2fySU0
      WXTsuwYc58Byr+iuL+FBVIcUqEqy6HyC5ltqtdyzdc6LBtCGI79G1Y4PPwT01xyS
      fvalY8L1X44uT6EYGQIrMgqCZH0Wk9GjQjBAMB0GA1UdDgQWBBR8XQKEE9TMipuB
      zhccLikenEhjQjAOBgNVHQ8BAf8EBAMCAQYwDwYDVR0TAQH/BAUwAwEB/zAKBggq
      hkjOPQQDAwNpADBmAjEAvvNhzwIQHWSVB7gYboiFBS+DCBeQyh+KTOgNG3qxrdWB
      CUfvO6wIBHxcmbHtRwfSAjEAnbpV/KlK6O3t5nYBQnvI+GDZjVGLVTv7jHvrZQnD
      +JbNR6iC8hZVdyR+EhCVBCyj
      -----END CERTIFICATE-----

      # emSign Root CA - C1
      -----BEGIN CERTIFICATE-----
      MIIDczCCAlugAwIBAgILAK7PALrEzzL4Q7IwDQYJKoZIhvcNAQELBQAwVjELMAkG
      A1UEBhMCVVMxEzARBgNVBAsTCmVtU2lnbiBQS0kxFDASBgNVBAoTC2VNdWRocmEg
      SW5jMRwwGgYDVQQDExNlbVNpZ24gUm9vdCBDQSAtIEMxMB4XDTE4MDIxODE4MzAw
      MFoXDTQzMDIxODE4MzAwMFowVjELMAkGA1UEBhMCVVMxEzARBgNVBAsTCmVtU2ln
      biBQS0kxFDASBgNVBAoTC2VNdWRocmEgSW5jMRwwGgYDVQQDExNlbVNpZ24gUm9v
      dCBDQSAtIEMxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAz+upufGZ
      BczYKCFK83M0UYRWEPWgTywS4/oTmifQz/l5GnRfHXk5/Fv4cI7gklL35CX5VIPZ
      HdPIWoU/Xse2B+4+wM6ar6xWQio5JXDWv7V7Nq2s9nPczdcdioOl+yuQFTdrHCZH
      3DspVpNqs8FqOp099cGXOFgFixwR4+S0uF2FHYP+eF8LRWgYSKVGczQ7/g/IdrvH
      GPMF0Ybzhe3nudkyrVWIzqa2kbBPrH4VI5b2P/AgNBbeCsbEBEV5f6f9vtKppa+c
      xSMq9zwhbL2vj07FOrLzNBL834AaSaTUqZX3noleoomslMuoaJuvimUnzYnu3Yy1
      aylwQ6BpC+S5DwIDAQABo0IwQDAdBgNVHQ4EFgQU/qHgcB4qAzlSWkK+XJGFehiq
      TbUwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQEL
      BQADggEBAMJKVvoVIXsoounlHfv4LcQ5lkFMOycsxGwYFYDGrK9HWS8mC+M2sO87
      /kOXSTKZEhVb3xEp/6tT+LvBeA+snFOvV71ojD1pM/CjoCNjO2RnIkSt1XHLVip4
      kqNPEjE2NuLe/gDEo2APJ62gsIq1NnpSob0n9CAnYuhNlCQT5AoE6TyrLshDCUrG
      YQTlSTR+08TI9Q/Aqum6VF7zYytPT1DU/rl7mYw9wC68AivTxEDkigcxHpvOJpkT
      +xHqmiIMERnHXhuBUDDIlhJu58tBf5E7oke3VIAb3ADMmpDqw8NQBmIMMMAVSKeo
      WXzhriKi4gp6D/piq1JM4fHfyr6DDUI=
      -----END CERTIFICATE-----

      # emSign Root CA - G1
      -----BEGIN CERTIFICATE-----
      MIIDlDCCAnygAwIBAgIKMfXkYgxsWO3W2DANBgkqhkiG9w0BAQsFADBnMQswCQYD
      VQQGEwJJTjETMBEGA1UECxMKZW1TaWduIFBLSTElMCMGA1UEChMcZU11ZGhyYSBU
      ZWNobm9sb2dpZXMgTGltaXRlZDEcMBoGA1UEAxMTZW1TaWduIFJvb3QgQ0EgLSBH
      MTAeFw0xODAyMTgxODMwMDBaFw00MzAyMTgxODMwMDBaMGcxCzAJBgNVBAYTAklO
      MRMwEQYDVQQLEwplbVNpZ24gUEtJMSUwIwYDVQQKExxlTXVkaHJhIFRlY2hub2xv
      Z2llcyBMaW1pdGVkMRwwGgYDVQQDExNlbVNpZ24gUm9vdCBDQSAtIEcxMIIBIjAN
      BgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAk0u76WaK7p1b1TST0Bsew+eeuGQz
      f2N4aLTNLnF115sgxk0pvLZoYIr3IZpWNVrzdr3YzZr/k1ZLpVkGoZM0Kd0WNHVO
      8oG0x5ZOrRkVUkr+PHB1cM2vK6sVmjM8qrOLqs1D/fXqcP/tzxE7lM5OMhbTI0Aq
      d7OvPAEsbO2ZLIvZTmmYsvePQbAyeGHWDV/D+qJAkh1cF+ZwPjXnorfCYuKrpDhM
      tTk1b+oDafo6VGiFbdbyL0NVHpENDtjVaqSW0RM8LHhQ6DqS0hdW5TUaQBw+jSzt
      Od9C4INBdN+jzcKGYEho42kLVACL5HZpIQ15TjQIXhTCzLG3rdd8cIrHhQIDAQAB
      o0IwQDAdBgNVHQ4EFgQU++8Nhp6w492pufEhF38+/PB3KxowDgYDVR0PAQH/BAQD
      AgEGMA8GA1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEBAFn/8oz1h31x
      PaOfG1vR2vjTnGs2vZupYeveFix0PZ7mddrXuqe8QhfnPZHr5X3dPpzxz5KsbEjM
      wiI/aTvFthUvozXGaCocV685743QNcMYDHsAVhzNixl03r4PEuDQqqE/AjSxcM6d
      GNYIAwlG7mDgfrbESQRRfXBgvKqy/3lyeqYdPV8q+Mri/Tm3R7nrft8EI6/6nAYH
      6ftjk4BAtcZsCjEozgyfz7MjNYBBjWzEN3uBL4ChQEKF6dk4jeihU80Bv2noWgby
      RQuQ+q7hv53yrlc8pa6yVvSLZUDp/TGBLPQ5Cdjua6e0ph0VpZj3AYHYhX3zUVxx
      iN66zB+Afko=
      -----END CERTIFICATE-----

      # vTrus ECC Root CA
      -----BEGIN CERTIFICATE-----
      MIICDzCCAZWgAwIBAgIUbmq8WapTvpg5Z6LSa6Q75m0c1towCgYIKoZIzj0EAwMw
      RzELMAkGA1UEBhMCQ04xHDAaBgNVBAoTE2lUcnVzQ2hpbmEgQ28uLEx0ZC4xGjAY
      BgNVBAMTEXZUcnVzIEVDQyBSb290IENBMB4XDTE4MDczMTA3MjY0NFoXDTQzMDcz
      MTA3MjY0NFowRzELMAkGA1UEBhMCQ04xHDAaBgNVBAoTE2lUcnVzQ2hpbmEgQ28u
      LEx0ZC4xGjAYBgNVBAMTEXZUcnVzIEVDQyBSb290IENBMHYwEAYHKoZIzj0CAQYF
      K4EEACIDYgAEZVBKrox5lkqqHAjDo6LN/llWQXf9JpRCux3NCNtzslt188+cToL0
      v/hhJoVs1oVbcnDS/dtitN9Ti72xRFhiQgnH+n9bEOf+QP3A2MMrMudwpremIFUd
      e4BdS49nTPEQo0IwQDAdBgNVHQ4EFgQUmDnNvtiyjPeyq+GtJK97fKHbH88wDwYD
      VR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMCAQYwCgYIKoZIzj0EAwMDaAAwZQIw
      V53dVvHH4+m4SVBrm2nDb+zDfSXkV5UTQJtS0zvzQBm8JsctBp61ezaf9SXUY2sA
      AjEA6dPGnlaaKsyh2j/IZivTWJwghfqrkYpwcBE4YGQLYgmRWAD5Tfs0aNoJrSEG
      GJTO
      -----END CERTIFICATE-----

      # vTrus Root CA
      -----BEGIN CERTIFICATE-----
      MIIFVjCCAz6gAwIBAgIUQ+NxE9izWRRdt86M/TX9b7wFjUUwDQYJKoZIhvcNAQEL
      BQAwQzELMAkGA1UEBhMCQ04xHDAaBgNVBAoTE2lUcnVzQ2hpbmEgQ28uLEx0ZC4x
      FjAUBgNVBAMTDXZUcnVzIFJvb3QgQ0EwHhcNMTgwNzMxMDcyNDA1WhcNNDMwNzMx
      MDcyNDA1WjBDMQswCQYDVQQGEwJDTjEcMBoGA1UEChMTaVRydXNDaGluYSBDby4s
      THRkLjEWMBQGA1UEAxMNdlRydXMgUm9vdCBDQTCCAiIwDQYJKoZIhvcNAQEBBQAD
      ggIPADCCAgoCggIBAL1VfGHTuB0EYgWgrmy3cLRB6ksDXhA/kFocizuwZotsSKYc
      IrrVQJLuM7IjWcmOvFjai57QGfIvWcaMY1q6n6MLsLOaXLoRuBLpDLvPbmyAhykU
      AyyNJJrIZIO1aqwTLDPxn9wsYTwaP3BVm60AUn/PBLn+NvqcwBauYv6WTEN+VRS+
      GrPSbcKvdmaVayqwlHeFXgQPYh1jdfdr58tbmnDsPmcF8P4HCIDPKNsFxhQnL4Z9
      8Cfe/+Z+M0jnCx5Y0ScrUw5XSmXX+6KAYPxMvDVTAWqXcoKv8R1w6Jz1717CbMdH
      flqUhSZNO7rrTOiwCcJlwp2dCZtOtZcFrPUGoPc2BX70kLJrxLT5ZOrpGgrIDajt
      J8nU57O5q4IikCc9Kuh8kO+8T/3iCiSn3mUkpF3qwHYw03dQ+A0Em5Q2AXPKBlim
      0zvc+gRGE1WKyURHuFE5Gi7oNOJ5y1lKCn+8pu8fA2dqWSslYpPZUxlmPCdiKYZN
      pGvu/9ROutW04o5IWgAZCfEF2c6Rsffr6TlP9m8EQ5pV9T4FFL2/s1m02I4zhKOQ
      UqqzApVg+QxMaPnu1RcN+HFXtSXkKe5lXa/R7jwXC1pDxaWG6iSe4gUH3DRCEpHW
      OXSuTEGC2/KmSNGzm/MzqvOmwMVO9fSddmPmAsYiS8GVP1BkLFTltvA8Kc9XAgMB
      AAGjQjBAMB0GA1UdDgQWBBRUYnBj8XWEQ1iO0RYgscasGrz2iTAPBgNVHRMBAf8E
      BTADAQH/MA4GA1UdDwEB/wQEAwIBBjANBgkqhkiG9w0BAQsFAAOCAgEAKbqSSaet
      8PFww+SX8J+pJdVrnjT+5hpk9jprUrIQeBqfTNqK2uwcN1LgQkv7bHbKJAs5EhWd
      nxEt/Hlk3ODg9d3gV8mlsnZwUKT+twpw1aA08XXXTUm6EdGz2OyC/+sOxL9kLX1j
      bhd47F18iMjrjld22VkE+rxSH0Ws8HqA7Oxvdq6R2xCOBNyS36D25q5J08FsEhvM
      Kar5CKXiNxTKsbhm7xqC5PD48acWabfbqWE8n/Uxy+QARsIvdLGx14HuqCaVvIiv
      TDUHKgLKeBRtRytAVunLKmChZwOgzoy8sHJnxDHO2zTlJQNgJXtxmOTAGytfdELS
      S8VZCAeHvsXDf+eW2eHcKJfWjwXj9ZtOyh1QRwVTsMo554WgicEFOwE30z9J4nfr
      I8iIZjs9OXYhRvHsXyO466JmdXTBQPfYaJqT4i2pLr0cox7IdMakLXogqzu4sEb9
      b91fUlV1YvCXoHzXOP0l382gmxDPi7g4Xl7FtKYCNqEeXxzP4padKar9mK5S4fNB
      UvupLnKWnyfjqnN9+BojZns7q2WwMgFLFT49ok8MKzWixtlnEjUwzXYuFrOZnk1P
      Ti07NEPhmg4NpGaXutIcSkwsKouLgU9xGqndXHt7CMUADTdA43x7VF8vhV929ven
      sBxXVsFy6K2ir40zSbofitzmdHxghm+Hl3s=
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{"maistra.io/mesh-generation":"2.3.1-1-2"},"labels":{"app":"istio","app.kubernetes.io/component":"telemetry-common","app.kubernetes.io/instance":"istio-system","app.kubernetes.io/managed-by":"maistra-istio-operator","app.kubernetes.io/name":"telemetry-common","app.kubernetes.io/part-of":"istio","app.kubernetes.io/version":"2.3.1-1-2","config.openshift.io/inject-trusted-cabundle":"true","maistra-version":"2.1.6","maistra.io/owner":"istio-system","maistra.io/owner-name":"basic","release":"istio"},"name":"trusted-ca-bundle","namespace":"istio-system","ownerReferences":[{"apiVersion":"maistra.io/v2","blockOwnerDeletion":true,"controller":true,"kind":"ServiceMeshControlPlane","name":"basic","uid":"0c79eb74-854c-4f98-85c6-5955e78fd93e"}]}}
      maistra.io/mesh-generation: 2.3.1-1-2
    creationTimestamp: "2023-03-03T20:03:11Z"
    labels:
      app: istio
      app.kubernetes.io/component: telemetry-common
      app.kubernetes.io/instance: istio-system
      app.kubernetes.io/managed-by: maistra-istio-operator
      app.kubernetes.io/name: telemetry-common
      app.kubernetes.io/part-of: istio
      app.kubernetes.io/version: 2.3.1-1-2
      config.openshift.io/inject-trusted-cabundle: "true"
      maistra-version: 2.1.6
      maistra.io/owner: istio-system
      maistra.io/owner-name: basic
      release: istio
    name: trusted-ca-bundle
    namespace: istio-system
    ownerReferences:
    - apiVersion: maistra.io/v2
      blockOwnerDeletion: true
      controller: true
      kind: ServiceMeshControlPlane
      name: basic
      uid: 0c79eb74-854c-4f98-85c6-5955e78fd93e
    resourceVersion: "34643"
    uid: b215c900-1ad5-4788-86c8-119b9f574faa
kind: ConfigMapList
metadata:
  resourceVersion: "61060"
