---
apiVersion: route.openshift.io/v1
items:
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"route.openshift.io/v1","kind":"Route","metadata":{"annotations":{"maistra.io/mesh-generation":"2.5.1-1-2"},"labels":{"app":"istio-ingressgateway","app.kubernetes.io/component":"istio-ingress","app.kubernetes.io/instance":"istio-system","app.kubernetes.io/managed-by":"maistra-istio-operator","app.kubernetes.io/name":"istio-ingress","app.kubernetes.io/part-of":"istio","app.kubernetes.io/version":"2.5.1-1-2","istio":"ingressgateway","knative":"ingressgateway","maistra-version":"2.4.7","maistra.io/owner":"istio-system","maistra.io/owner-name":"basic","release":"istio"},"name":"istio-ingressgateway","namespace":"istio-system","ownerReferences":[{"apiVersion":"maistra.io/v2","blockOwnerDeletion":true,"controller":true,"kind":"ServiceMeshControlPlane","name":"basic","uid":"b5faf99f-8aeb-4477-aa3e-3f2e4796ec3c"}]},"spec":{"port":{"targetPort":8080},"to":{"kind":"Service","name":"istio-ingressgateway"}}}
      maistra.io/mesh-generation: 2.5.1-1-2
      openshift.io/host.generated: "true"
    creationTimestamp: "2024-06-05T10:45:55Z"
    labels:
      app: istio-ingressgateway
      app.kubernetes.io/component: istio-ingress
      app.kubernetes.io/instance: istio-system
      app.kubernetes.io/managed-by: maistra-istio-operator
      app.kubernetes.io/name: istio-ingress
      app.kubernetes.io/part-of: istio
      app.kubernetes.io/version: 2.5.1-1-2
      istio: ingressgateway
      knative: ingressgateway
      maistra-version: 2.4.7
      maistra.io/owner: istio-system
      maistra.io/owner-name: basic
      release: istio
    managedFields:
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
            f:maistra.io/mesh-generation: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:istio: {}
            f:knative: {}
            f:maistra-version: {}
            f:maistra.io/owner: {}
            f:maistra.io/owner-name: {}
            f:release: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b5faf99f-8aeb-4477-aa3e-3f2e4796ec3c"}: {}
        f:spec:
          f:port:
            .: {}
            f:targetPort: {}
          f:to:
            f:kind: {}
            f:name: {}
            f:weight: {}
          f:wildcardPolicy: {}
      manager: istio-operator
      operation: Update
      time: "2024-06-05T10:45:55Z"
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:ingress: {}
      manager: openshift-router
      operation: Update
      subresource: status
      time: "2024-06-05T10:45:55Z"
    name: istio-ingressgateway
    namespace: istio-system
    ownerReferences:
    - apiVersion: maistra.io/v2
      blockOwnerDeletion: true
      controller: true
      kind: ServiceMeshControlPlane
      name: basic
      uid: b5faf99f-8aeb-4477-aa3e-3f2e4796ec3c
    resourceVersion: "35349"
    uid: 490f615b-ed8a-41f1-ba1f-074aab1110f2
  spec:
    host: istio-ingressgateway-istio-system.apps.ci-ln-bxslict-76ef8.origin-ci-int-aws.dev.rhcloud.com
    port:
      targetPort: 8080
    to:
      kind: Service
      name: istio-ingressgateway
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: "2024-06-05T10:45:55Z"
        status: "True"
        type: Admitted
      host: istio-ingressgateway-istio-system.apps.ci-ln-bxslict-76ef8.origin-ci-int-aws.dev.rhcloud.com
      routerCanonicalHostname: router-default.apps.ci-ln-bxslict-76ef8.origin-ci-int-aws.dev.rhcloud.com
      routerName: default
      wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      haproxy.router.openshift.io/timeout: 600s
      networking.internal.knative.dev/rollout: '{"configurations":[{"configurationName":"helloworld-go","percent":100,"revisions":[{"revisionName":"helloworld-go-00001","percent":100}],"stepParams":{}}]}'
      networking.knative.dev/ingress.class: istio.ingress.networking.knative.dev
      serving.knative.dev/creator: system:admin
      serving.knative.dev/lastModifier: system:admin
      serving.knative.openshift.io/enablePassthrough: "true"
    creationTimestamp: "2024-06-05T10:59:20Z"
    labels:
      networking.internal.knative.dev/ingress: helloworld-go
      serving.knative.dev/route: helloworld-go
      serving.knative.dev/routeNamespace: user-ns
      serving.knative.dev/service: helloworld-go
      serving.knative.openshift.io/ingressName: helloworld-go
      serving.knative.openshift.io/ingressNamespace: user-ns
    managedFields:
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:ingress: {}
      manager: openshift-router
      operation: Update
      subresource: status
      time: "2024-06-05T10:59:20Z"
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:haproxy.router.openshift.io/timeout: {}
            f:networking.internal.knative.dev/rollout: {}
            f:networking.knative.dev/ingress.class: {}
            f:serving.knative.dev/creator: {}
            f:serving.knative.dev/lastModifier: {}
            f:serving.knative.openshift.io/enablePassthrough: {}
          f:labels:
            .: {}
            f:networking.internal.knative.dev/ingress: {}
            f:serving.knative.dev/route: {}
            f:serving.knative.dev/routeNamespace: {}
            f:serving.knative.dev/service: {}
            f:serving.knative.openshift.io/ingressName: {}
            f:serving.knative.openshift.io/ingressNamespace: {}
        f:spec:
          f:host: {}
          f:port:
            .: {}
            f:targetPort: {}
          f:tls:
            .: {}
            f:insecureEdgeTerminationPolicy: {}
            f:termination: {}
          f:to:
            f:kind: {}
            f:name: {}
            f:weight: {}
          f:wildcardPolicy: {}
      manager: operator
      operation: Update
      time: "2024-06-05T10:59:20Z"
    name: route-acbd3525-dae1-4f5f-b979-0093b802b28b-313336626532
    namespace: istio-system
    resourceVersion: "44059"
    uid: 5ecbb1d0-6e26-4f8c-a1d5-f0afbcb0f2b7
  spec:
    host: helloworld-go-user-ns.apps.ci-ln-bxslict-76ef8.origin-ci-int-aws.dev.rhcloud.com
    port:
      targetPort: https
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: passthrough
    to:
      kind: Service
      name: istio-ingressgateway
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: "2024-06-05T10:59:20Z"
        status: "True"
        type: Admitted
      host: helloworld-go-user-ns.apps.ci-ln-bxslict-76ef8.origin-ci-int-aws.dev.rhcloud.com
      routerCanonicalHostname: router-default.apps.ci-ln-bxslict-76ef8.origin-ci-int-aws.dev.rhcloud.com
      routerName: default
      wildcardPolicy: None
kind: RouteList
metadata:
  resourceVersion: "54666"
