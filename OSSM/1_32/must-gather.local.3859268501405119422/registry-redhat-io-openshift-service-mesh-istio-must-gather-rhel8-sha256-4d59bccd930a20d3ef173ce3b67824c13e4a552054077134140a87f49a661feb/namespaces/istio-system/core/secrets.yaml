---
apiVersion: v1
items:
- apiVersion: v1
  data:
    .dockercfg: OTI0OSBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: builder
      kubernetes.io/service-account.uid: ce8565e7-a4b9-4993-a6df-348643a6e7dc
      openshift.io/token-secret.name: builder-token-r5cwp
      openshift.io/token-secret.value: ""
    creationTimestamp: "2024-06-05T10:45:30Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"0e0d2899-6ed2-4d85-bffa-ab4abb972e89"}: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2024-06-05T10:45:30Z"
    name: builder-dockercfg-zjx47
    namespace: istio-system
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: builder-token-r5cwp
      uid: 0e0d2899-6ed2-4d85-bffa-ab4abb972e89
    resourceVersion: "34718"
    uid: c3da5c35-d336-46c4-ac2e-dfcdd36c34b5
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZVp5di9xeTJxMjh3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpRd05qQTFNVEF3TkRRMVdoY05NelF3TmpBek1UQXdORFExV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTm1YUmVlVXEwVEZmK2dZb0JMWTNNRi9lSndWZDg5UApBdjl1d2xVeHpuL3p5ODFwSlhmNEt1cGduUFE5cTlrbWJIWE0vQ01lNTlvd0dsZ0lDNytzbm9KaDJudmxtYmRFCmc5SWh5VGhlNStWYnRmQjRXRWdueWtMcjdIcjQ0bExySVhqTVAvWm5YSWcySTEyYkdGN2c5amJlNm83aXV3STIKa0YreEgzVnQ3aFJyK0ltRXJZK2xjdkpGNTAzeXZRd1hrSzE0V0xBcno1RCtZZUR0S2RRcVhqYTU2UFlqYnlQbwpOQW91bFFpRkIwUmdqVkx0eW9FSFZUcTduR1RmNWdhVzFsc2NrQStOTDZjdnJjREVZM3FHNUlBR0h0Sk5OWGxZClNzNm1aZzJUV3J1WW1sR0xyQ2ZhT1poZGdYajN4eUQyUElGSzdDUzZBZzNsT25qZjJpUTlJZGtDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkFyWgp5a1c0UlNYaXVjY2sxQ3JuM0VuQzFGa0tNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUF0ZnBRbFJtMTZsUnRNClFBTGRyY2hRRHd3WkwweHVzemNNVjZZTDJITzk3SEhyK2xkVGUvL1pVUXE4UlZrWVpObzVZeFRTVzZiUXZIbFAKTTI5ZGZ5ZEhZUWJCajBBTFlKOWRoZCtJMFZwR2NXbGpKR1hmbi9KZ3Y3QWtmWFczbk9GaEZ6anBmUlZ6VWhNSQpqdTM1c21kMlZXWkRYRk1sMGlHQXRMalRqbGhiNkZzUEkvOVg1UHNlbVc2a2hxTndXMSttNjV3YWhGYWZhc1JnCmdFaGQzOGZzNHBLMGQyR3NlbWFlVnZwbUk1V01jVTI0c2Y3NTJaZ1Z6TzJOTnhlNm4wNzI1elpqM0RtYVFMNGoKOXh1SUFjVURpWTNDcDNFYVdUTFowZnErY2tJY1pvTkh0UjVFMi9hNzNsOWlPWlo4MTk4bTJWNFJpQkNXUXcxSgpMTzlENTFRawotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSWJWSGlwRjdqblJvd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJME1EWXdOVEV3TURRME5Gb1hEVE0wTURZd016RXdNRFEwTkZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFvNXdHSzRoajUxd28KaUROeXAxamtTZ0VlakV2UUptSmZsbzJDUWNGTi9RaVJnV2g5SlYyMW0zOC9vS2x5NTBhT2NKRnhiTGJEN1pBSgptNnhJdWdBTlRXTEM1di8vQ2lXazBVT2RTVHNNbjhVVlpVVW45RFlLR3lTTkwrck1SUkZ0RmthdVVCZTRtNXZ0CnVZdnNrdDlIYVI2OU5CRnJoMUxjM2xZQ3BjK25UWk9lN1NCakNzNjhnMkpsVFZyemh4WC9yaEZTSFdiZE1sb1kKeFBIeVJnR2NxUVpkMUZSYklsSUpTTmF5M3cyblhGNC9qb0VEbUxQQTJVV2VOLzB4ZDJjaTZaemhaZWd1c2kyeQpoaUwrMWpxSnp5UGtvQTJSWHVBOWtYRnBrcFZKYi9oZkRtOVpEUGFCWUpNQ3dPdUEvYjdMOUpXMW9CRGFqcysyCkhwVEdWVkVTY3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWVZYkIwSHJwMklVRDBVQnVxY054Slo4eGZsSXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUNMOW5XeCtmT29NVjl4R2NGVC9xVDFlRUZRazVwUmlkcm43Ukp2OGtkSW41MWhGclg1YmlTNXNVUnBoCnhZWFcvSzBQa05iREpUY3doejU2L1FQUVZ6NjNyVkI5VGtaV1YyeU1WWitTRFVxQWJveGMzS2xKSDZoKzZEQUgKOVhMVDQ5TWtSWW0wdjRhQk5EaFl6ZnMyODdOL0NKWWVTTU40bWJBZXkwNlMyRHlJOEV1c0k3aTJMQjY2aXNQcQp2UUt4Rm1UYWhGZ3dSdzFzdFdTdC9IWjk1UnpXdzlaNHVCdnYwMktING1aOFF3VmRId0x2cUFIWXdUNzFPZmhxCm1sYnFteEVaWXZpcDhQZ3FwaCsrWjlXN3JtM2JPV0FBQ1dKOE85cWtqcUhmOWRucDJaTGRpb3VpTEV0N0gzdnAKS1lXY29veDNVeWlFbElGTDhoK1B2V2o1K3dJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUp4RThkWUwzbDZ3d0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEkwTURZd05URXdNRFEwTkZvWERUTTBNRFl3TXpFd01EUTBORm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQW1Wb0xNUGxuTDhnVEhyUlNUcng0ek1BN3RMRngzbEd5cEtZbGNEQkxMQ3cwUXUybUdnWTBBR2VaQjUyMwo5bFpOdFpiNVVkWGlJbENIQ3RHc0NSRFpxSmVLMGgwNkh1T1N5bXVLeXhpM2xDRUZRVDF3M2JzWDNZcUcrM2Y5CktRSGlscjJoSmswdktaOU14K0RSbFlwRW9UYTFiR0swNTJKb1ZFS3dXT2hLclZiTWIvYWNmaXBmdFpsUkw1YUUKaGNDZ1FSQXdsd0pwM2I2NGVsNEhXQlZkUXAvOGlzaHNSTHlYWTV2YXNYMDFxQjdETHN0MGxsbW5EbHppREJ1MQplRC9IR3VueEF1Rkk5VGtPY2xMNGdaM0R5SUVrS1YyLzExeFBmcC83cXIzZFllVk5VM1IreFhoN0FtYURoSW1iCi9yenFKcFhJU0phUWd4ZlFURmVaMFJNaDN3SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVRMHloUU80S1hvK2NrZmxta3NYQUpZYlpqVnN3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFCbjh1K1FmeVB1b3lkczBSaVJGYmJ4OEIwY0ZTUDVKVjRrUnNwVHlhT0pzCnhKZzFaQzV4ckJaNm5ONE1NUUwwYm4yb1p0YUpWUTZzSXRYMFY4TjFSZ1pibXdjVXkzZzlMVGUxM1FidWdpamYKUkZOME9ZLzBwV0VOY1JmYjY0THdLR0d2Mk5LT0d1SUdKQlZZVWVweFFqL0tneWxVUjJCSHVBTlpDQlM2cGVJcAo1Q3B3cTl6NysxcC91TDEySHlSVlBBbGwvbGh3S3YyaFVSa2I3NzVmWGxwUVYyTDdvY1J5OGN4QmNxcnpKUzJTCjVtQ0RZVEJNeHh2dnNrY2oxd01oaFVJN3R5MllDWmQ5UmpHRmh4S0hBZjc1Zm10YTJJbWpnZEVjMmVYcTZkbk4KcU5SakNqTkhmdkRrSWtjWCtqTWRxemY4MUlCeXBGemgxWHdMdGhzRjBQOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGx6Q0NBbitnQXdJQkFnSUlGSUtMczg0UVVSUXdEUVlKS29aSWh2Y05BUUVMQlFBd1dURlhNRlVHQTFVRQpBd3hPYjNCbGJuTm9hV1owTFd0MVltVXRZWEJwYzJWeWRtVnlMVzl3WlhKaGRHOXlYMnh2WTJGc2FHOXpkQzF5ClpXTnZkbVZ5ZVMxelpYSjJhVzVuTFhOcFoyNWxja0F4TnpFM05UZ3lOVGN6TUI0WERUSTBNRFl3TlRFd01UWXgKTWxvWERUTTBNRFl3TXpFd01UWXhNMW93V1RGWE1GVUdBMVVFQXd4T2IzQmxibk5vYVdaMExXdDFZbVV0WVhCcApjMlZ5ZG1WeUxXOXdaWEpoZEc5eVgyeHZZMkZzYUc5emRDMXlaV052ZG1WeWVTMXpaWEoyYVc1bkxYTnBaMjVsCmNrQXhOekUzTlRneU5UY3pNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTZtcVQKcXp6dS9TUWdzeko1TEo1ZnptUjhGR1NUWmpzSmJ3amRRaHNSaktlMU9TRnJyY0VjeDh1aytsVWRrWEFtODVESwpsdFBEcURyTEF3NnZ4TURucmU5dm5kQ21VeEgwVW9qWi8xSDI1ZGZ5NFc0K05BRGExcEIydzVJZGRXME05YXpRClZGaTg3Y3pGaDR3Nk9sMm1rTWh3ZG5CeWNNejU3MFgrV2ZBTzc5aUxKTzRnSlFmTkZFc2hQTkpmcTdOT1ZTTzgKZG50K0tXNit2bnZBcDcrTmI1aTRkMEtsM21LMlpKWm9DVFNXeHJTVE1sNmkzZG0wLzN2OVdaSjNCT25USm1VRwpRQ3F4WW4vVWNIYXpCSld6cDlScVd3QncyRExWNHBQU3d0QndTYlNpczZaQi9STmRic3hpUURqZytEcExEMkFnCjU2aFoxVDVJbG8wWkRseG5UUUlEQVFBQm8yTXdZVEFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVSW5COGMxRHhSeTVGZUJrL2lyTUJ6Z29jdExJd0h3WURWUjBqQkJndwpGb0FVSW5COGMxRHhSeTVGZUJrL2lyTUJ6Z29jdExJd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFNbGxZUVMwCm1ZczgydzArc01sVjhSZE1oZldqSnA1b2pMTTltYld5VW5PZG5QSU80Nzl6SEtCUHB4eFlrZmZqSGNZc29Wd2EKSzZ5UjVhck16QkkwYkNSVmdvK1BBMnl3dHNQOWhZSlNVYWFML04xdXRjMVJWUFVoMFhad0tlTzhmdFdIOEhUdApDaEZFemswV3dDZVBPbEx1d004eDZMVmxzbVptRFBPSVBvMTM3NW5KWUhGeDV0WXAzUDNQQStBUWx4UVNhZG9ZCmhXWWRYbERBcFRSbXZad0ZWNlIwT3UwUEYvMmRlbTJwZGFFcGVDL0Q0UHhxOFBod0N1V0JvTFdCOHBlcW1PUTYKa0JibVM4U0x1bGJ0ZlV3REM1ZnRzbnRyN2VaU1N6MTZtOFRSYkI2UGJCWXEwOS9yUDZkUUFHY0pyVFBVeCtFaQovV2JHRVFvQ1h2TXRWRlU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURyekNDQXBlZ0F3SUJBZ0lJREJUTDV2bUFlbzB3RFFZSktvWklodmNOQVFFTEJRQXdKakVrTUNJR0ExVUUKQXd3YmFXNW5jbVZ6Y3kxdmNHVnlZWFJ2Y2tBeE56RTNOVGd5TlRrNE1CNFhEVEkwTURZd05URXdNVFl6TjFvWApEVEkyTURZd05URXdNVFl6T0Zvd1J6RkZNRU1HQTFVRUF3dzhLaTVoY0hCekxtTnBMV3h1TFdKNGMyeHBZM1F0Ck56Wmxaamd1YjNKcFoybHVMV05wTFdsdWRDMWhkM011WkdWMkxuSm9ZMnh2ZFdRdVkyOXRNSUlCSWpBTkJna3EKaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUExZkNjRTIzaThJZXVBQzNVUStsbjJaQlBXT1VSWDBoagpxK3VIYWpzNVQ4WGpVYUNjbkhoMGNZOVlGZ0l6Z2lWc09Gd3lDTzlrVDZVT0J3R2FqRmlob3ZybzJtdkZsNWRYCjNDOWIzcmlkcS9tZnhvZ3RCSTRZUDBTWTVnUVI5TXBqaVA3WTZYZTNCZmltZ0pzQmtYQjVUblhqc25LT1RSVk4KVE1taktuMkZLUFlGZUpIR29rZlI4QkVyWW9kNStBMzIxL3gvSDF6bm1BNy9tbnNtb25sWU1BK1N6OWN3dnZWVwptVGp6ZU9PS0Y2dWF1TExKSDBtdzFpdGFGclpITFM1bE0xVWszazEzZmZXSEd3elAvbk5IYVdyTlVxRjNrQmRFCnhoWWN0a2JRUnBtVGpKelhMWjJJTVFYMGViNEZZZmRJc0YxZWlvRi9UOEk1eHVZWEpFQlc1d0lEQVFBQm80Ry8KTUlHOE1BNEdBMVVkRHdFQi93UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFUQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCUllnSmNBczBSS2UwRUtNVjhiSXhkNGVLTXdTekFmQmdOVkhTTUVHREFXCmdCUUlLaTNuVDQ3TzBvT3ZLS1l6bUpqUUpmd3lzekJIQmdOVkhSRUVRREErZ2p3cUxtRndjSE11WTJrdGJHNHQKWW5oemJHbGpkQzAzTm1WbU9DNXZjbWxuYVc0dFkya3RhVzUwTFdGM2N5NWtaWFl1Y21oamJHOTFaQzVqYjIwdwpEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTDZPa0ZHMFMwbjlXNWI5U05ZUFRCZzJJVEhSZURPYkVwV2hmYTFmCjhOSGx5cVl2RTVDUWdnQU9TM1AwcVA2OGVmdm54b1NOUEQ1U2Rqb2dDeks5NGxCeVVQb1dPOWhyTkdYZmNhS2MKZ3NodlNaOWZZbHpPb3NwUXQ3emFPYVlHMGJhRC91Y0h6WXNXeFVIRjV5RE16SGFCNFlnc1VZeWJLL1dIYUpLKwp2b0FiandxLzRzOFpyWk44NGhkS1JpSzdQdFk1SVFKR21LNGhZZnlQUHdhSWErRDhKazFwSkNYaXF0TkkrWWdmCmtacjhCNWRMc1Mzd3pBeHBPLzh1WnJwdmxjU0xPTEZvcEtnaFI3bFVCdHRDcGp5bzBxZTZicGFyZlFaK2dWWFYKUTUzL0ovWTlXSFBDNWJ5RFRjRWVHMTY3VlNDYzIxeW9IWU0wU2h1eENkUGJtdUk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURERENDQWZTZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVNRd0lnWURWUVFEREJ0cGJtZHkKWlhOekxXOXdaWEpoZEc5eVFERTNNVGMxT0RJMU9UZ3dIaGNOTWpRd05qQTFNVEF4TmpNM1doY05Nall3TmpBMQpNVEF4TmpNNFdqQW1NU1F3SWdZRFZRUUREQnRwYm1keVpYTnpMVzl3WlhKaGRHOXlRREUzTVRjMU9ESTFPVGd3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURCMnBPZlVXNVpkeEpycEUraks4SDAKRkNRSFF0b3lMTDR1UW5GWFEvZkxOUUhtalRxZG15MlNTbUZZWEJPeDNqWWx0SW1na3ByckpxUitCOGhEaU00TApoZjNRTlRneGM5MzluRytENHpzQUN4cEU0czN4YmtNR3p5dHhmU3pPVElIVWVKWUU5OHVZTWZMVkpKT2NiT3JJClpzd0JuallKZ0o5RHYwZzRzdW9sL0wrYVNkazVxYXAyRzlBekVnb1RzNHp2S3hHcVNlWHhNWFhyWHE4TE4rVkoKaUwyUEtoaWlNYnVvVGdlbGU1LzBqSnN0Ty9qZXFyYWlCa0ZYWEtIdFJFNFNrSnZyZ2JRamhFRFAyai9reWRkZwp4MGhuVDBCdHBmN1d3aVc5Q2lhdkpuZW91SEI1czk4SHNPVFNjN2hkMkdaaUhOM3FXUlZjSFZHOFhLbkVFcmtiCkFnTUJBQUdqUlRCRE1BNEdBMVVkRHdFQi93UUVBd0lDcERBU0JnTlZIUk1CQWY4RUNEQUdBUUgvQWdFQU1CMEcKQTFVZERnUVdCQlFJS2kzblQ0N08wb092S0tZem1KalFKZnd5c3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQQpZZHpxazdDeFJ3UUo5M3A1MmgvM29FZ01jb3J0VzJJVjQzaWZJS1Z1d3Y3cDR0Vmh5Rm9lQnpiZ1hiUDE0UkowCjJ1VU9GcWVIWjVPbEl6dTlNT28reGRvQkJNeVB4enY0TkNuTERnUHo2eXlrVjdCcGVTMHY0TlB4TEUrOTV4OTEKajQ0SUJYbkJ6azRrZXZMeVVMd05IL1JFS25XbVBKSERzWEIzK1A1Q21nVkNib1k1Zitac0FwWERZUnNhR1VFUgpQMjMySzROTmdKYllmOEVDK1BqL0VNUUo4cWtKaSs3WVhhQmtIczFHaXMxdlh1SDYrelp0TGlicDJmMHlVUFhqCjlHVTRoUlhYR3R5L2h5a3hVVERXNTQvK24zWERLRU1aNmNvTWNRbThSNEJKSERCQjJpTTlhYzRZOWErMWJ1SWcKR1kwSk1ySzdIUWZNVE9DR3hSVzRUdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    namespace: MTIgYnl0ZXMgbG9uZw==
    service-ca.crt: 
    token: MTI1NCBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: builder
      kubernetes.io/service-account.uid: ce8565e7-a4b9-4993-a6df-348643a6e7dc
    creationTimestamp: "2024-06-05T10:45:30Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-05T10:45:30Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2024-06-05T10:45:30Z"
    name: builder-token-r5cwp
    namespace: istio-system
    resourceVersion: "34713"
    uid: 0e0d2899-6ed2-4d85-bffa-ab4abb972e89
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    .dockercfg: OTI0OSBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: default
      kubernetes.io/service-account.uid: c47eea8a-3074-4710-af70-b8080efb0b05
      openshift.io/token-secret.name: default-token-ml527
      openshift.io/token-secret.value: ""
    creationTimestamp: "2024-06-05T10:45:30Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c7b9c1f9-ea5f-439e-a520-686fd9b32198"}: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2024-06-05T10:45:30Z"
    name: default-dockercfg-cddsl
    namespace: istio-system
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: default-token-ml527
      uid: c7b9c1f9-ea5f-439e-a520-686fd9b32198
    resourceVersion: "34720"
    uid: 5d0d40dc-ae22-409d-95c3-b2098ccf16b5
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: MTIgYnl0ZXMgbG9uZw==
    service-ca.crt: 
    token: MTI1NCBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: default
      kubernetes.io/service-account.uid: c47eea8a-3074-4710-af70-b8080efb0b05
    creationTimestamp: "2024-06-05T10:45:30Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-05T10:45:30Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2024-06-05T10:45:30Z"
    name: default-token-ml527
    namespace: istio-system
    resourceVersion: "34716"
    uid: c7b9c1f9-ea5f-439e-a520-686fd9b32198
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    .dockercfg: OTI4NSBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: deployer
      kubernetes.io/service-account.uid: af5f83b4-0c31-4d28-8882-5c8cacba1b33
      openshift.io/token-secret.name: deployer-token-jjsgk
      openshift.io/token-secret.value: ""
    creationTimestamp: "2024-06-05T10:45:30Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5ddd8b36-a587-4db6-904a-d802d28f107a"}: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2024-06-05T10:45:30Z"
    name: deployer-dockercfg-qkdnh
    namespace: istio-system
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: deployer-token-jjsgk
      uid: 5ddd8b36-a587-4db6-904a-d802d28f107a
    resourceVersion: "34715"
    uid: 6dc97e86-5dca-4616-853f-9eb54a7b13df
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: MTIgYnl0ZXMgbG9uZw==
    service-ca.crt: 
    token: MTI1OCBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: deployer
      kubernetes.io/service-account.uid: af5f83b4-0c31-4d28-8882-5c8cacba1b33
    creationTimestamp: "2024-06-05T10:45:30Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-05T10:45:30Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2024-06-05T10:45:30Z"
    name: deployer-token-jjsgk
    namespace: istio-system
    resourceVersion: "34712"
    uid: 5ddd8b36-a587-4db6-904a-d802d28f107a
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    ca-cert.pem: MTA5NCBieXRlcyBsb25n
    ca-key.pem: MTY3NSBieXRlcyBsb25n
    cert-chain.pem: MCBieXRlcyBsb25n
    key.pem: MCBieXRlcyBsb25n
    root-cert.pem: MCBieXRlcyBsb25n
  kind: Secret
  metadata:
    creationTimestamp: "2024-06-05T10:45:52Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca-cert.pem: {}
          f:ca-key.pem: {}
          f:cert-chain.pem: {}
          f:key.pem: {}
          f:root-cert.pem: {}
        f:type: {}
      manager: pilot-discovery
      operation: Update
      time: "2024-06-05T10:45:52Z"
    name: istio-ca-secret
    namespace: istio-system
    resourceVersion: "35272"
    uid: 41bd7a2c-10c3-4f05-8944-ff91dc89194e
  type: istio.io/ca-root
- apiVersion: v1
  data:
    .dockercfg: MTAwNDEgYnl0ZXMgbG9uZw==
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: istio-egressgateway-service-account
      kubernetes.io/service-account.uid: 9265f8dd-47c8-48fe-8752-899d45579e57
      openshift.io/token-secret.name: istio-egressgateway-service-account-token-fz27k
      openshift.io/token-secret.value: ""
    creationTimestamp: "2024-06-05T10:45:56Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"195f9c58-5c7c-42d9-97eb-b095c13284c8"}: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2024-06-05T10:45:56Z"
    name: istio-egressgateway-service-account-dockercfg-c2w82
    namespace: istio-system
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: istio-egressgateway-service-account-token-fz27k
      uid: 195f9c58-5c7c-42d9-97eb-b095c13284c8
    resourceVersion: "35377"
    uid: efc49beb-7a6a-4800-825b-713479533b50
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: MTIgYnl0ZXMgbG9uZw==
    service-ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZVp5di9xeTJxMjh3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpRd05qQTFNVEF3TkRRMVdoY05NelF3TmpBek1UQXdORFExV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTm1YUmVlVXEwVEZmK2dZb0JMWTNNRi9lSndWZDg5UApBdjl1d2xVeHpuL3p5ODFwSlhmNEt1cGduUFE5cTlrbWJIWE0vQ01lNTlvd0dsZ0lDNytzbm9KaDJudmxtYmRFCmc5SWh5VGhlNStWYnRmQjRXRWdueWtMcjdIcjQ0bExySVhqTVAvWm5YSWcySTEyYkdGN2c5amJlNm83aXV3STIKa0YreEgzVnQ3aFJyK0ltRXJZK2xjdkpGNTAzeXZRd1hrSzE0V0xBcno1RCtZZUR0S2RRcVhqYTU2UFlqYnlQbwpOQW91bFFpRkIwUmdqVkx0eW9FSFZUcTduR1RmNWdhVzFsc2NrQStOTDZjdnJjREVZM3FHNUlBR0h0Sk5OWGxZClNzNm1aZzJUV3J1WW1sR0xyQ2ZhT1poZGdYajN4eUQyUElGSzdDUzZBZzNsT25qZjJpUTlJZGtDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkFyWgp5a1c0UlNYaXVjY2sxQ3JuM0VuQzFGa0tNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUF0ZnBRbFJtMTZsUnRNClFBTGRyY2hRRHd3WkwweHVzemNNVjZZTDJITzk3SEhyK2xkVGUvL1pVUXE4UlZrWVpObzVZeFRTVzZiUXZIbFAKTTI5ZGZ5ZEhZUWJCajBBTFlKOWRoZCtJMFZwR2NXbGpKR1hmbi9KZ3Y3QWtmWFczbk9GaEZ6anBmUlZ6VWhNSQpqdTM1c21kMlZXWkRYRk1sMGlHQXRMalRqbGhiNkZzUEkvOVg1UHNlbVc2a2hxTndXMSttNjV3YWhGYWZhc1JnCmdFaGQzOGZzNHBLMGQyR3NlbWFlVnZwbUk1V01jVTI0c2Y3NTJaZ1Z6TzJOTnhlNm4wNzI1elpqM0RtYVFMNGoKOXh1SUFjVURpWTNDcDNFYVdUTFowZnErY2tJY1pvTkh0UjVFMi9hNzNsOWlPWlo4MTk4bTJWNFJpQkNXUXcxSgpMTzlENTFRawotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSWJWSGlwRjdqblJvd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJME1EWXdOVEV3TURRME5Gb1hEVE0wTURZd016RXdNRFEwTkZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFvNXdHSzRoajUxd28KaUROeXAxamtTZ0VlakV2UUptSmZsbzJDUWNGTi9RaVJnV2g5SlYyMW0zOC9vS2x5NTBhT2NKRnhiTGJEN1pBSgptNnhJdWdBTlRXTEM1di8vQ2lXazBVT2RTVHNNbjhVVlpVVW45RFlLR3lTTkwrck1SUkZ0RmthdVVCZTRtNXZ0CnVZdnNrdDlIYVI2OU5CRnJoMUxjM2xZQ3BjK25UWk9lN1NCakNzNjhnMkpsVFZyemh4WC9yaEZTSFdiZE1sb1kKeFBIeVJnR2NxUVpkMUZSYklsSUpTTmF5M3cyblhGNC9qb0VEbUxQQTJVV2VOLzB4ZDJjaTZaemhaZWd1c2kyeQpoaUwrMWpxSnp5UGtvQTJSWHVBOWtYRnBrcFZKYi9oZkRtOVpEUGFCWUpNQ3dPdUEvYjdMOUpXMW9CRGFqcysyCkhwVEdWVkVTY3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWVZYkIwSHJwMklVRDBVQnVxY054Slo4eGZsSXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUNMOW5XeCtmT29NVjl4R2NGVC9xVDFlRUZRazVwUmlkcm43Ukp2OGtkSW41MWhGclg1YmlTNXNVUnBoCnhZWFcvSzBQa05iREpUY3doejU2L1FQUVZ6NjNyVkI5VGtaV1YyeU1WWitTRFVxQWJveGMzS2xKSDZoKzZEQUgKOVhMVDQ5TWtSWW0wdjRhQk5EaFl6ZnMyODdOL0NKWWVTTU40bWJBZXkwNlMyRHlJOEV1c0k3aTJMQjY2aXNQcQp2UUt4Rm1UYWhGZ3dSdzFzdFdTdC9IWjk1UnpXdzlaNHVCdnYwMktING1aOFF3VmRId0x2cUFIWXdUNzFPZmhxCm1sYnFteEVaWXZpcDhQZ3FwaCsrWjlXN3JtM2JPV0FBQ1dKOE85cWtqcUhmOWRucDJaTGRpb3VpTEV0N0gzdnAKS1lXY29veDNVeWlFbElGTDhoK1B2V2o1K3dJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUp4RThkWUwzbDZ3d0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEkwTURZd05URXdNRFEwTkZvWERUTTBNRFl3TXpFd01EUTBORm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQW1Wb0xNUGxuTDhnVEhyUlNUcng0ek1BN3RMRngzbEd5cEtZbGNEQkxMQ3cwUXUybUdnWTBBR2VaQjUyMwo5bFpOdFpiNVVkWGlJbENIQ3RHc0NSRFpxSmVLMGgwNkh1T1N5bXVLeXhpM2xDRUZRVDF3M2JzWDNZcUcrM2Y5CktRSGlscjJoSmswdktaOU14K0RSbFlwRW9UYTFiR0swNTJKb1ZFS3dXT2hLclZiTWIvYWNmaXBmdFpsUkw1YUUKaGNDZ1FSQXdsd0pwM2I2NGVsNEhXQlZkUXAvOGlzaHNSTHlYWTV2YXNYMDFxQjdETHN0MGxsbW5EbHppREJ1MQplRC9IR3VueEF1Rkk5VGtPY2xMNGdaM0R5SUVrS1YyLzExeFBmcC83cXIzZFllVk5VM1IreFhoN0FtYURoSW1iCi9yenFKcFhJU0phUWd4ZlFURmVaMFJNaDN3SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVRMHloUU80S1hvK2NrZmxta3NYQUpZYlpqVnN3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFCbjh1K1FmeVB1b3lkczBSaVJGYmJ4OEIwY0ZTUDVKVjRrUnNwVHlhT0pzCnhKZzFaQzV4ckJaNm5ONE1NUUwwYm4yb1p0YUpWUTZzSXRYMFY4TjFSZ1pibXdjVXkzZzlMVGUxM1FidWdpamYKUkZOME9ZLzBwV0VOY1JmYjY0THdLR0d2Mk5LT0d1SUdKQlZZVWVweFFqL0tneWxVUjJCSHVBTlpDQlM2cGVJcAo1Q3B3cTl6NysxcC91TDEySHlSVlBBbGwvbGh3S3YyaFVSa2I3NzVmWGxwUVYyTDdvY1J5OGN4QmNxcnpKUzJTCjVtQ0RZVEJNeHh2dnNrY2oxd01oaFVJN3R5MllDWmQ5UmpHRmh4S0hBZjc1Zm10YTJJbWpnZEVjMmVYcTZkbk4KcU5SakNqTkhmdkRrSWtjWCtqTWRxemY4MUlCeXBGemgxWHdMdGhzRjBQOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGx6Q0NBbitnQXdJQkFnSUlGSUtMczg0UVVSUXdEUVlKS29aSWh2Y05BUUVMQlFBd1dURlhNRlVHQTFVRQpBd3hPYjNCbGJuTm9hV1owTFd0MVltVXRZWEJwYzJWeWRtVnlMVzl3WlhKaGRHOXlYMnh2WTJGc2FHOXpkQzF5ClpXTnZkbVZ5ZVMxelpYSjJhVzVuTFhOcFoyNWxja0F4TnpFM05UZ3lOVGN6TUI0WERUSTBNRFl3TlRFd01UWXgKTWxvWERUTTBNRFl3TXpFd01UWXhNMW93V1RGWE1GVUdBMVVFQXd4T2IzQmxibk5vYVdaMExXdDFZbVV0WVhCcApjMlZ5ZG1WeUxXOXdaWEpoZEc5eVgyeHZZMkZzYUc5emRDMXlaV052ZG1WeWVTMXpaWEoyYVc1bkxYTnBaMjVsCmNrQXhOekUzTlRneU5UY3pNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTZtcVQKcXp6dS9TUWdzeko1TEo1ZnptUjhGR1NUWmpzSmJ3amRRaHNSaktlMU9TRnJyY0VjeDh1aytsVWRrWEFtODVESwpsdFBEcURyTEF3NnZ4TURucmU5dm5kQ21VeEgwVW9qWi8xSDI1ZGZ5NFc0K05BRGExcEIydzVJZGRXME05YXpRClZGaTg3Y3pGaDR3Nk9sMm1rTWh3ZG5CeWNNejU3MFgrV2ZBTzc5aUxKTzRnSlFmTkZFc2hQTkpmcTdOT1ZTTzgKZG50K0tXNit2bnZBcDcrTmI1aTRkMEtsM21LMlpKWm9DVFNXeHJTVE1sNmkzZG0wLzN2OVdaSjNCT25USm1VRwpRQ3F4WW4vVWNIYXpCSld6cDlScVd3QncyRExWNHBQU3d0QndTYlNpczZaQi9STmRic3hpUURqZytEcExEMkFnCjU2aFoxVDVJbG8wWkRseG5UUUlEQVFBQm8yTXdZVEFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVSW5COGMxRHhSeTVGZUJrL2lyTUJ6Z29jdExJd0h3WURWUjBqQkJndwpGb0FVSW5COGMxRHhSeTVGZUJrL2lyTUJ6Z29jdExJd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFNbGxZUVMwCm1ZczgydzArc01sVjhSZE1oZldqSnA1b2pMTTltYld5VW5PZG5QSU80Nzl6SEtCUHB4eFlrZmZqSGNZc29Wd2EKSzZ5UjVhck16QkkwYkNSVmdvK1BBMnl3dHNQOWhZSlNVYWFML04xdXRjMVJWUFVoMFhad0tlTzhmdFdIOEhUdApDaEZFemswV3dDZVBPbEx1d004eDZMVmxzbVptRFBPSVBvMTM3NW5KWUhGeDV0WXAzUDNQQStBUWx4UVNhZG9ZCmhXWWRYbERBcFRSbXZad0ZWNlIwT3UwUEYvMmRlbTJwZGFFcGVDL0Q0UHhxOFBod0N1V0JvTFdCOHBlcW1PUTYKa0JibVM4U0x1bGJ0ZlV3REM1ZnRzbnRyN2VaU1N6MTZtOFRSYkI2UGJCWXEwOS9yUDZkUUFHY0pyVFBVeCtFaQovV2JHRVFvQ1h2TXRWRlU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURyekNDQXBlZ0F3SUJBZ0lJREJUTDV2bUFlbzB3RFFZSktvWklodmNOQVFFTEJRQXdKakVrTUNJR0ExVUUKQXd3YmFXNW5jbVZ6Y3kxdmNHVnlZWFJ2Y2tBeE56RTNOVGd5TlRrNE1CNFhEVEkwTURZd05URXdNVFl6TjFvWApEVEkyTURZd05URXdNVFl6T0Zvd1J6RkZNRU1HQTFVRUF3dzhLaTVoY0hCekxtTnBMV3h1TFdKNGMyeHBZM1F0Ck56Wmxaamd1YjNKcFoybHVMV05wTFdsdWRDMWhkM011WkdWMkxuSm9ZMnh2ZFdRdVkyOXRNSUlCSWpBTkJna3EKaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUExZkNjRTIzaThJZXVBQzNVUStsbjJaQlBXT1VSWDBoagpxK3VIYWpzNVQ4WGpVYUNjbkhoMGNZOVlGZ0l6Z2lWc09Gd3lDTzlrVDZVT0J3R2FqRmlob3ZybzJtdkZsNWRYCjNDOWIzcmlkcS9tZnhvZ3RCSTRZUDBTWTVnUVI5TXBqaVA3WTZYZTNCZmltZ0pzQmtYQjVUblhqc25LT1RSVk4KVE1taktuMkZLUFlGZUpIR29rZlI4QkVyWW9kNStBMzIxL3gvSDF6bm1BNy9tbnNtb25sWU1BK1N6OWN3dnZWVwptVGp6ZU9PS0Y2dWF1TExKSDBtdzFpdGFGclpITFM1bE0xVWszazEzZmZXSEd3elAvbk5IYVdyTlVxRjNrQmRFCnhoWWN0a2JRUnBtVGpKelhMWjJJTVFYMGViNEZZZmRJc0YxZWlvRi9UOEk1eHVZWEpFQlc1d0lEQVFBQm80Ry8KTUlHOE1BNEdBMVVkRHdFQi93UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFUQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCUllnSmNBczBSS2UwRUtNVjhiSXhkNGVLTXdTekFmQmdOVkhTTUVHREFXCmdCUUlLaTNuVDQ3TzBvT3ZLS1l6bUpqUUpmd3lzekJIQmdOVkhSRUVRREErZ2p3cUxtRndjSE11WTJrdGJHNHQKWW5oemJHbGpkQzAzTm1WbU9DNXZjbWxuYVc0dFkya3RhVzUwTFdGM2N5NWtaWFl1Y21oamJHOTFaQzVqYjIwdwpEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTDZPa0ZHMFMwbjlXNWI5U05ZUFRCZzJJVEhSZURPYkVwV2hmYTFmCjhOSGx5cVl2RTVDUWdnQU9TM1AwcVA2OGVmdm54b1NOUEQ1U2Rqb2dDeks5NGxCeVVQb1dPOWhyTkdYZmNhS2MKZ3NodlNaOWZZbHpPb3NwUXQ3emFPYVlHMGJhRC91Y0h6WXNXeFVIRjV5RE16SGFCNFlnc1VZeWJLL1dIYUpLKwp2b0FiandxLzRzOFpyWk44NGhkS1JpSzdQdFk1SVFKR21LNGhZZnlQUHdhSWErRDhKazFwSkNYaXF0TkkrWWdmCmtacjhCNWRMc1Mzd3pBeHBPLzh1WnJwdmxjU0xPTEZvcEtnaFI3bFVCdHRDcGp5bzBxZTZicGFyZlFaK2dWWFYKUTUzL0ovWTlXSFBDNWJ5RFRjRWVHMTY3VlNDYzIxeW9IWU0wU2h1eENkUGJtdUk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURERENDQWZTZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVNRd0lnWURWUVFEREJ0cGJtZHkKWlhOekxXOXdaWEpoZEc5eVFERTNNVGMxT0RJMU9UZ3dIaGNOTWpRd05qQTFNVEF4TmpNM1doY05Nall3TmpBMQpNVEF4TmpNNFdqQW1NU1F3SWdZRFZRUUREQnRwYm1keVpYTnpMVzl3WlhKaGRHOXlRREUzTVRjMU9ESTFPVGd3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURCMnBPZlVXNVpkeEpycEUraks4SDAKRkNRSFF0b3lMTDR1UW5GWFEvZkxOUUhtalRxZG15MlNTbUZZWEJPeDNqWWx0SW1na3ByckpxUitCOGhEaU00TApoZjNRTlRneGM5MzluRytENHpzQUN4cEU0czN4YmtNR3p5dHhmU3pPVElIVWVKWUU5OHVZTWZMVkpKT2NiT3JJClpzd0JuallKZ0o5RHYwZzRzdW9sL0wrYVNkazVxYXAyRzlBekVnb1RzNHp2S3hHcVNlWHhNWFhyWHE4TE4rVkoKaUwyUEtoaWlNYnVvVGdlbGU1LzBqSnN0Ty9qZXFyYWlCa0ZYWEtIdFJFNFNrSnZyZ2JRamhFRFAyai9reWRkZwp4MGhuVDBCdHBmN1d3aVc5Q2lhdkpuZW91SEI1czk4SHNPVFNjN2hkMkdaaUhOM3FXUlZjSFZHOFhLbkVFcmtiCkFnTUJBQUdqUlRCRE1BNEdBMVVkRHdFQi93UUVBd0lDcERBU0JnTlZIUk1CQWY4RUNEQUdBUUgvQWdFQU1CMEcKQTFVZERnUVdCQlFJS2kzblQ0N08wb092S0tZem1KalFKZnd5c3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQQpZZHpxazdDeFJ3UUo5M3A1MmgvM29FZ01jb3J0VzJJVjQzaWZJS1Z1d3Y3cDR0Vmh5Rm9lQnpiZ1hiUDE0UkowCjJ1VU9GcWVIWjVPbEl6dTlNT28reGRvQkJNeVB4enY0TkNuTERnUHo2eXlrVjdCcGVTMHY0TlB4TEUrOTV4OTEKajQ0SUJYbkJ6azRrZXZMeVVMd05IL1JFS25XbVBKSERzWEIzK1A1Q21nVkNib1k1Zitac0FwWERZUnNhR1VFUgpQMjMySzROTmdKYllmOEVDK1BqL0VNUUo4cWtKaSs3WVhhQmtIczFHaXMxdlh1SDYrelp0TGlicDJmMHlVUFhqCjlHVTRoUlhYR3R5L2h5a3hVVERXNTQvK24zWERLRU1aNmNvTWNRbThSNEJKSERCQjJpTTlhYzRZOWErMWJ1SWcKR1kwSk1ySzdIUWZNVE9DR3hSVzRUdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVVRDQ0FqbWdBd0lCQWdJSVV0VnROVGozcHRVd0RRWUpLb1pJaHZjTkFRRUxCUUF3TmpFME1ESUdBMVVFCkF3d3JiM0JsYm5Ob2FXWjBMWE5sY25acFkyVXRjMlZ5ZG1sdVp5MXphV2R1WlhKQU1UY3hOelU0TWpVM01qQWUKRncweU5EQTJNRFV4TURFMk1URmFGdzB5TmpBNE1EUXhNREUyTVRKYU1EWXhOREF5QmdOVkJBTU1LMjl3Wlc1egphR2xtZEMxelpYSjJhV05sTFhObGNuWnBibWN0YzJsbmJtVnlRREUzTVRjMU9ESTFOekl3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURnQWw4eklsVVI3T3E2TUtDSTJTS0dBWFJRMkZ0cEh2ZTcKUmZvWW9iVnpFY1hXVHZ1YVRpUHBSWElyL2wyamhHVk9BMk1OWW1aV0JKdmJQOWYzUUJ1ZnFMbVFwRUVrNmVlTAprOWIrOEZVc2d2bDZ6Q1h3RjFvTTVFb3A2d1VsTHFidUlHZGtqclNZL2FBWmxnRVRxTEVKRUhMUjlqVEZsSitXCmFvYjhtVHh2VkpFalB3OElJQ1N4VXNtcVdQdDBoa3I1TzdZQjRSMjV6dmV6bVlTSEZEZDU5UGsralN4N0JmcWwKeS9UbmMxR0VTei9INDRoNnV1OUJ2bmdZaU1JZ2x0QTFaOXJnL1lYZ2pYRnZJYWFKeGNSbXpRT3lsRnRlSU9XUQo5UGFmdFplYnl0NTF0TFZPejA3Qm5POVZTWm9IMndXOUdTZUE1TkMrRUhFZ2s0TUEvVU5SQWdNQkFBR2pZekJoCk1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTUFVxQWMKN3lvSEhVNXNuQ0g0WE1pd0dXZEthekFmQmdOVkhTTUVHREFXZ0JTUFVxQWM3eW9ISFU1c25DSDRYTWl3R1dkSwphekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBSFl3K0JuSjhicE1zL2djSWFrakpCQ1dHMVV6bWNtb3JvRjRSCmJYNnZic2N1a2xlbStBUjk0KzFqckxieFNBaUlYd3BXVEVWeWdKai9BTzcwenI3ZzR1TVRwTzdSWk1vZ1FXb0QKczRPTnkrSVJIb1pIQ2RUN2xWcGdmQjV0Q2dkU0sxdHVyN3c1V0s3dTJxZDF2SGEzcERGaXFySUFqYzZEUUJRcwo4UEp3d09jK3E2L0gzLzd6UkVNTzRMVG5UbExmaENHbkxxRllpWCtqbTlHZ2pwTjFVcTdndFkvMW5nYTNwTVBNClBSNmhYekh5Zmw4dkk2OU91emNFc2dwblNYdzNSajFrT1ZyejEyWGFnVjRXUm5OTWlnN0Uvc21vak8yWmRVWU0KZ1l0MjhEekxPZkgvRE9PblRIemdva3dSdW05ZVZpL3p1SHdiQ29TTmgwbCtZMGIzUkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    token: MTM2NiBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: istio-egressgateway-service-account
      kubernetes.io/service-account.uid: 9265f8dd-47c8-48fe-8752-899d45579e57
    creationTimestamp: "2024-06-05T10:45:56Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-05T10:45:56Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2024-06-05T10:45:56Z"
    name: istio-egressgateway-service-account-token-fz27k
    namespace: istio-system
    resourceVersion: "35375"
    uid: 195f9c58-5c7c-42d9-97eb-b095c13284c8
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    .dockercfg: MTAwNjUgYnl0ZXMgbG9uZw==
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: istio-ingressgateway-service-account
      kubernetes.io/service-account.uid: ea7a172c-7b40-453a-b8f1-09c777f19a7d
      openshift.io/token-secret.name: istio-ingressgateway-service-account-token-dd9zb
      openshift.io/token-secret.value: ""
    creationTimestamp: "2024-06-05T10:45:55Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"0794cb4d-58c7-4371-88d3-f02dceab88d3"}: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2024-06-05T10:45:55Z"
    name: istio-ingressgateway-service-account-dockercfg-m2nxp
    namespace: istio-system
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: istio-ingressgateway-service-account-token-dd9zb
      uid: 0794cb4d-58c7-4371-88d3-f02dceab88d3
    resourceVersion: "35347"
    uid: e43c1418-4fd2-4110-81eb-5b06567b6211
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: MTIgYnl0ZXMgbG9uZw==
    service-ca.crt: 
    token: MTM3MCBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: istio-ingressgateway-service-account
      kubernetes.io/service-account.uid: ea7a172c-7b40-453a-b8f1-09c777f19a7d
    creationTimestamp: "2024-06-05T10:45:55Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-05T10:45:55Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2024-06-05T10:45:55Z"
    name: istio-ingressgateway-service-account-token-dd9zb
    namespace: istio-system
    resourceVersion: "35344"
    uid: 0794cb4d-58c7-4371-88d3-f02dceab88d3
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    .dockercfg: OTM5MyBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: istiod-basic
      kubernetes.io/service-account.uid: 03e332e5-7f11-43c3-a8e7-911828733660
      openshift.io/token-secret.name: istiod-basic-token-2flb9
      openshift.io/token-secret.value: ""
    creationTimestamp: "2024-06-05T10:45:40Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d013c86b-abbc-48f9-a083-17d30c734ae7"}: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2024-06-05T10:45:40Z"
    name: istiod-basic-dockercfg-fsl75
    namespace: istio-system
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: istiod-basic-token-2flb9
      uid: d013c86b-abbc-48f9-a083-17d30c734ae7
    resourceVersion: "35010"
    uid: e7e44600-cc2d-4cdf-afe3-05b8eef28ac2
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: MTIgYnl0ZXMgbG9uZw==
    service-ca.crt: 
    token: MTI3NCBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: istiod-basic
      kubernetes.io/service-account.uid: 03e332e5-7f11-43c3-a8e7-911828733660
    creationTimestamp: "2024-06-05T10:45:40Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-05T10:45:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2024-06-05T10:45:40Z"
    name: istiod-basic-token-2flb9
    namespace: istio-system
    resourceVersion: "35009"
    uid: d013c86b-abbc-48f9-a083-17d30c734ae7
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXakNDQWtLZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFwTVJVd0V3WURWUVFLREF4RmVHRnQKY0d4bElFbHVZeTR4RURBT0JnTlZCQU1NQjBWNFlXMXdiR1V3SGhjTk1qUXdOakExTVRBME5qRTFXaGNOTWpVdwpOakExTVRBME5qRTFXakFwTVJVd0V3WURWUVFLREF4RmVHRnRjR3hsSUVsdVl5NHhFREFPQmdOVkJBTU1CMFY0CllXMXdiR1V3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRGJMM2lEaENNN1lUKysKZkwvQmxTQ3FFc3pDT3NmUFYxbEZPMGJvU3NkaElHNE9UNENVWkY5NXd6ZDI0empRc0FkQTh2VGxqZ0lQMDNQSApSbFBPZDNyTUtJUXZjVHhZYVc0S2ZsLzY0dzRqS242R2g0NVVUanV5dUFnS0lnNWJZR1hsRktZVVVOMWV2TmRFClpJeWhEYTRyUTdyZURXSE5vZnlwaWNVV1R5ZmY0Sy9CNzB0RFQxWGIwYWhqTVNBOE0yQU5lcEo2VElOS3RQcVcKV1ZlclRUYmFLbTB1bDdBU2p3aEo4cVhPeVVhQUF2S2lwakhHcVdsOER0TGVhaE5kS1praTBtRWJxc2R5TFhQOQpjdXNXK2lhRG5ocHd4MXdLYlVqa0FKRnhlVzZaVEhBYm91S0lHRmhiZTc1OUQ2OWlqWE9sbitaR2l6LzVTWmJsClV2Szg5YnBEQWdNQkFBR2pnWXd3Z1lrd1J3WURWUjBSQkVBd1BvSThLaTVoY0hCekxtTnBMV3h1TFdKNGMyeHAKWTNRdE56Wmxaamd1YjNKcFoybHVMV05wTFdsdWRDMWhkM011WkdWMkxuSm9ZMnh2ZFdRdVkyOXRNQjBHQTFVZApEZ1FXQkJRbStoMVQ4Smp5SE85dThSbEJXc3lmTmtuZ3V6QWZCZ05WSFNNRUdEQVdnQlJQRDZjZUsyQ21pK0NNCm9ZV1AwSHM0SjhiZWhEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFJdE1aT3hmSlgrK056bzNMemMrcFBWYVAKcXJRTzU2V09EQjhpQnZlc2ptTUhhZDJLMEhOanYvYmZXY1p2eS93Um12WnVTdXFSYitHaDF6TWZ6dFdIaGdQRQpxMWU3bDEzR2lvcS8ycmFFR0RrQzhIb284dndvR2dOMVlhdGRaUjF5eS9qdVlFendkQXZOblZzRUNQd21oYkw2CnhwUTZyaHlUcXliWWdLcUg1RWRwRjhSanRScXdzUFIxck53NUxaaUpVYnJoQ3hPUS9xNFFRaDR3dWd4V21GUjAKTWZCdldQY0tXbjkvY21wS2s4NkR6bElCbFBIRnNVMEtSQzNqSkVnMlVCTE9ITStRc2hhbjQxdlVyMU5Dbk1UNQpzMmJ3YWV4dzR0QVExN202RWNzSWVValNrMklVV2RTS3g4MkpIbHV6eVlxWmwySUg4WUpJei9FQ08vK2pkUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    tls.key: MTcwNCBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: ""
    creationTimestamp: "2024-06-05T10:46:17Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:tls.crt: {}
          f:tls.key: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:type: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2024-06-05T10:46:17Z"
    name: wildcard-certs
    namespace: istio-system
    resourceVersion: "35629"
    uid: e2a86735-6156-49a0-9c60-f1ba342fe7df
  type: kubernetes.io/tls
kind: SecretList
metadata:
  resourceVersion: "54668"
