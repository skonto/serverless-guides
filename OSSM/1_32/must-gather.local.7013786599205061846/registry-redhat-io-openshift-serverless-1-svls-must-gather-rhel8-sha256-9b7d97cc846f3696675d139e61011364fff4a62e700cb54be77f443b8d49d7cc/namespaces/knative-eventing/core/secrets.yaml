---
apiVersion: v1
items:
- apiVersion: v1
  data:
    .dockercfg: OTMzMCBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: builder
      kubernetes.io/service-account.uid: 475010a0-ecc2-41c3-aca1-10496317f8f5
      openshift.io/token-secret.name: builder-token-n89zn
      openshift.io/token-secret.value: ""
    creationTimestamp: "2024-06-05T10:46:23Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"9185c197-9451-485f-bf28-0059fcfcf9f2"}: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2024-06-05T10:46:23Z"
    name: builder-dockercfg-q6w49
    namespace: knative-eventing
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: builder-token-n89zn
      uid: 9185c197-9451-485f-bf28-0059fcfcf9f2
    resourceVersion: "35804"
    uid: 10c265d0-eebe-4a49-9bcc-92a08e0beee9
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: MTYgYnl0ZXMgbG9uZw==
    service-ca.crt: 
    token: MTI2NSBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: builder
      kubernetes.io/service-account.uid: 475010a0-ecc2-41c3-aca1-10496317f8f5
    creationTimestamp: "2024-06-05T10:46:23Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-05T10:46:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2024-06-05T10:46:23Z"
    name: builder-token-n89zn
    namespace: knative-eventing
    resourceVersion: "35800"
    uid: 9185c197-9451-485f-bf28-0059fcfcf9f2
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    .dockercfg: OTMzMCBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: default
      kubernetes.io/service-account.uid: 48fd961c-dd48-442b-9005-119772499e7d
      openshift.io/token-secret.name: default-token-rcd96
      openshift.io/token-secret.value: ""
    creationTimestamp: "2024-06-05T10:46:23Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"1b967dc1-90c8-40e7-b706-61fe8d1375af"}: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2024-06-05T10:46:23Z"
    name: default-dockercfg-sp6mf
    namespace: knative-eventing
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: default-token-rcd96
      uid: 1b967dc1-90c8-40e7-b706-61fe8d1375af
    resourceVersion: "35786"
    uid: e8ed06de-8f69-4112-831d-184d5a5659f3
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: MTYgYnl0ZXMgbG9uZw==
    service-ca.crt: 
    token: MTI2NSBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: default
      kubernetes.io/service-account.uid: 48fd961c-dd48-442b-9005-119772499e7d
    creationTimestamp: "2024-06-05T10:46:23Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-05T10:46:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2024-06-05T10:46:23Z"
    name: default-token-rcd96
    namespace: knative-eventing
    resourceVersion: "35783"
    uid: 1b967dc1-90c8-40e7-b706-61fe8d1375af
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    .dockercfg: OTM1NCBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: deployer
      kubernetes.io/service-account.uid: 3ee6b0b6-5869-4c8f-9760-2c1b6a9a18a9
      openshift.io/token-secret.name: deployer-token-7tb7q
      openshift.io/token-secret.value: ""
    creationTimestamp: "2024-06-05T10:46:23Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"058e5734-ae88-426c-bf03-87660ea689a3"}: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2024-06-05T10:46:23Z"
    name: deployer-dockercfg-t2vvt
    namespace: knative-eventing
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: deployer-token-7tb7q
      uid: 058e5734-ae88-426c-bf03-87660ea689a3
    resourceVersion: "35801"
    uid: 6e1704e7-fb24-404a-946a-f5b3ec15c375
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJZVp5di9xeTJxMjh3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpRd05qQTFNVEF3TkRRMVdoY05NelF3TmpBek1UQXdORFExV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTm1YUmVlVXEwVEZmK2dZb0JMWTNNRi9lSndWZDg5UApBdjl1d2xVeHpuL3p5ODFwSlhmNEt1cGduUFE5cTlrbWJIWE0vQ01lNTlvd0dsZ0lDNytzbm9KaDJudmxtYmRFCmc5SWh5VGhlNStWYnRmQjRXRWdueWtMcjdIcjQ0bExySVhqTVAvWm5YSWcySTEyYkdGN2c5amJlNm83aXV3STIKa0YreEgzVnQ3aFJyK0ltRXJZK2xjdkpGNTAzeXZRd1hrSzE0V0xBcno1RCtZZUR0S2RRcVhqYTU2UFlqYnlQbwpOQW91bFFpRkIwUmdqVkx0eW9FSFZUcTduR1RmNWdhVzFsc2NrQStOTDZjdnJjREVZM3FHNUlBR0h0Sk5OWGxZClNzNm1aZzJUV3J1WW1sR0xyQ2ZhT1poZGdYajN4eUQyUElGSzdDUzZBZzNsT25qZjJpUTlJZGtDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkFyWgp5a1c0UlNYaXVjY2sxQ3JuM0VuQzFGa0tNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUF0ZnBRbFJtMTZsUnRNClFBTGRyY2hRRHd3WkwweHVzemNNVjZZTDJITzk3SEhyK2xkVGUvL1pVUXE4UlZrWVpObzVZeFRTVzZiUXZIbFAKTTI5ZGZ5ZEhZUWJCajBBTFlKOWRoZCtJMFZwR2NXbGpKR1hmbi9KZ3Y3QWtmWFczbk9GaEZ6anBmUlZ6VWhNSQpqdTM1c21kMlZXWkRYRk1sMGlHQXRMalRqbGhiNkZzUEkvOVg1UHNlbVc2a2hxTndXMSttNjV3YWhGYWZhc1JnCmdFaGQzOGZzNHBLMGQyR3NlbWFlVnZwbUk1V01jVTI0c2Y3NTJaZ1Z6TzJOTnhlNm4wNzI1elpqM0RtYVFMNGoKOXh1SUFjVURpWTNDcDNFYVdUTFowZnErY2tJY1pvTkh0UjVFMi9hNzNsOWlPWlo4MTk4bTJWNFJpQkNXUXcxSgpMTzlENTFRawotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSWJWSGlwRjdqblJvd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJME1EWXdOVEV3TURRME5Gb1hEVE0wTURZd016RXdNRFEwTkZvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFvNXdHSzRoajUxd28KaUROeXAxamtTZ0VlakV2UUptSmZsbzJDUWNGTi9RaVJnV2g5SlYyMW0zOC9vS2x5NTBhT2NKRnhiTGJEN1pBSgptNnhJdWdBTlRXTEM1di8vQ2lXazBVT2RTVHNNbjhVVlpVVW45RFlLR3lTTkwrck1SUkZ0RmthdVVCZTRtNXZ0CnVZdnNrdDlIYVI2OU5CRnJoMUxjM2xZQ3BjK25UWk9lN1NCakNzNjhnMkpsVFZyemh4WC9yaEZTSFdiZE1sb1kKeFBIeVJnR2NxUVpkMUZSYklsSUpTTmF5M3cyblhGNC9qb0VEbUxQQTJVV2VOLzB4ZDJjaTZaemhaZWd1c2kyeQpoaUwrMWpxSnp5UGtvQTJSWHVBOWtYRnBrcFZKYi9oZkRtOVpEUGFCWUpNQ3dPdUEvYjdMOUpXMW9CRGFqcysyCkhwVEdWVkVTY3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVWVZYkIwSHJwMklVRDBVQnVxY054Slo4eGZsSXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUNMOW5XeCtmT29NVjl4R2NGVC9xVDFlRUZRazVwUmlkcm43Ukp2OGtkSW41MWhGclg1YmlTNXNVUnBoCnhZWFcvSzBQa05iREpUY3doejU2L1FQUVZ6NjNyVkI5VGtaV1YyeU1WWitTRFVxQWJveGMzS2xKSDZoKzZEQUgKOVhMVDQ5TWtSWW0wdjRhQk5EaFl6ZnMyODdOL0NKWWVTTU40bWJBZXkwNlMyRHlJOEV1c0k3aTJMQjY2aXNQcQp2UUt4Rm1UYWhGZ3dSdzFzdFdTdC9IWjk1UnpXdzlaNHVCdnYwMktING1aOFF3VmRId0x2cUFIWXdUNzFPZmhxCm1sYnFteEVaWXZpcDhQZ3FwaCsrWjlXN3JtM2JPV0FBQ1dKOE85cWtqcUhmOWRucDJaTGRpb3VpTEV0N0gzdnAKS1lXY29veDNVeWlFbElGTDhoK1B2V2o1K3dJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUp4RThkWUwzbDZ3d0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEkwTURZd05URXdNRFEwTkZvWERUTTBNRFl3TXpFd01EUTBORm93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQW1Wb0xNUGxuTDhnVEhyUlNUcng0ek1BN3RMRngzbEd5cEtZbGNEQkxMQ3cwUXUybUdnWTBBR2VaQjUyMwo5bFpOdFpiNVVkWGlJbENIQ3RHc0NSRFpxSmVLMGgwNkh1T1N5bXVLeXhpM2xDRUZRVDF3M2JzWDNZcUcrM2Y5CktRSGlscjJoSmswdktaOU14K0RSbFlwRW9UYTFiR0swNTJKb1ZFS3dXT2hLclZiTWIvYWNmaXBmdFpsUkw1YUUKaGNDZ1FSQXdsd0pwM2I2NGVsNEhXQlZkUXAvOGlzaHNSTHlYWTV2YXNYMDFxQjdETHN0MGxsbW5EbHppREJ1MQplRC9IR3VueEF1Rkk5VGtPY2xMNGdaM0R5SUVrS1YyLzExeFBmcC83cXIzZFllVk5VM1IreFhoN0FtYURoSW1iCi9yenFKcFhJU0phUWd4ZlFURmVaMFJNaDN3SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVRMHloUU80S1hvK2NrZmxta3NYQUpZYlpqVnN3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFCbjh1K1FmeVB1b3lkczBSaVJGYmJ4OEIwY0ZTUDVKVjRrUnNwVHlhT0pzCnhKZzFaQzV4ckJaNm5ONE1NUUwwYm4yb1p0YUpWUTZzSXRYMFY4TjFSZ1pibXdjVXkzZzlMVGUxM1FidWdpamYKUkZOME9ZLzBwV0VOY1JmYjY0THdLR0d2Mk5LT0d1SUdKQlZZVWVweFFqL0tneWxVUjJCSHVBTlpDQlM2cGVJcAo1Q3B3cTl6NysxcC91TDEySHlSVlBBbGwvbGh3S3YyaFVSa2I3NzVmWGxwUVYyTDdvY1J5OGN4QmNxcnpKUzJTCjVtQ0RZVEJNeHh2dnNrY2oxd01oaFVJN3R5MllDWmQ5UmpHRmh4S0hBZjc1Zm10YTJJbWpnZEVjMmVYcTZkbk4KcU5SakNqTkhmdkRrSWtjWCtqTWRxemY4MUlCeXBGemgxWHdMdGhzRjBQOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGx6Q0NBbitnQXdJQkFnSUlGSUtMczg0UVVSUXdEUVlKS29aSWh2Y05BUUVMQlFBd1dURlhNRlVHQTFVRQpBd3hPYjNCbGJuTm9hV1owTFd0MVltVXRZWEJwYzJWeWRtVnlMVzl3WlhKaGRHOXlYMnh2WTJGc2FHOXpkQzF5ClpXTnZkbVZ5ZVMxelpYSjJhVzVuTFhOcFoyNWxja0F4TnpFM05UZ3lOVGN6TUI0WERUSTBNRFl3TlRFd01UWXgKTWxvWERUTTBNRFl3TXpFd01UWXhNMW93V1RGWE1GVUdBMVVFQXd4T2IzQmxibk5vYVdaMExXdDFZbVV0WVhCcApjMlZ5ZG1WeUxXOXdaWEpoZEc5eVgyeHZZMkZzYUc5emRDMXlaV052ZG1WeWVTMXpaWEoyYVc1bkxYTnBaMjVsCmNrQXhOekUzTlRneU5UY3pNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTZtcVQKcXp6dS9TUWdzeko1TEo1ZnptUjhGR1NUWmpzSmJ3amRRaHNSaktlMU9TRnJyY0VjeDh1aytsVWRrWEFtODVESwpsdFBEcURyTEF3NnZ4TURucmU5dm5kQ21VeEgwVW9qWi8xSDI1ZGZ5NFc0K05BRGExcEIydzVJZGRXME05YXpRClZGaTg3Y3pGaDR3Nk9sMm1rTWh3ZG5CeWNNejU3MFgrV2ZBTzc5aUxKTzRnSlFmTkZFc2hQTkpmcTdOT1ZTTzgKZG50K0tXNit2bnZBcDcrTmI1aTRkMEtsM21LMlpKWm9DVFNXeHJTVE1sNmkzZG0wLzN2OVdaSjNCT25USm1VRwpRQ3F4WW4vVWNIYXpCSld6cDlScVd3QncyRExWNHBQU3d0QndTYlNpczZaQi9STmRic3hpUURqZytEcExEMkFnCjU2aFoxVDVJbG8wWkRseG5UUUlEQVFBQm8yTXdZVEFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVSW5COGMxRHhSeTVGZUJrL2lyTUJ6Z29jdExJd0h3WURWUjBqQkJndwpGb0FVSW5COGMxRHhSeTVGZUJrL2lyTUJ6Z29jdExJd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFNbGxZUVMwCm1ZczgydzArc01sVjhSZE1oZldqSnA1b2pMTTltYld5VW5PZG5QSU80Nzl6SEtCUHB4eFlrZmZqSGNZc29Wd2EKSzZ5UjVhck16QkkwYkNSVmdvK1BBMnl3dHNQOWhZSlNVYWFML04xdXRjMVJWUFVoMFhad0tlTzhmdFdIOEhUdApDaEZFemswV3dDZVBPbEx1d004eDZMVmxzbVptRFBPSVBvMTM3NW5KWUhGeDV0WXAzUDNQQStBUWx4UVNhZG9ZCmhXWWRYbERBcFRSbXZad0ZWNlIwT3UwUEYvMmRlbTJwZGFFcGVDL0Q0UHhxOFBod0N1V0JvTFdCOHBlcW1PUTYKa0JibVM4U0x1bGJ0ZlV3REM1ZnRzbnRyN2VaU1N6MTZtOFRSYkI2UGJCWXEwOS9yUDZkUUFHY0pyVFBVeCtFaQovV2JHRVFvQ1h2TXRWRlU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURyekNDQXBlZ0F3SUJBZ0lJREJUTDV2bUFlbzB3RFFZSktvWklodmNOQVFFTEJRQXdKakVrTUNJR0ExVUUKQXd3YmFXNW5jbVZ6Y3kxdmNHVnlZWFJ2Y2tBeE56RTNOVGd5TlRrNE1CNFhEVEkwTURZd05URXdNVFl6TjFvWApEVEkyTURZd05URXdNVFl6T0Zvd1J6RkZNRU1HQTFVRUF3dzhLaTVoY0hCekxtTnBMV3h1TFdKNGMyeHBZM1F0Ck56Wmxaamd1YjNKcFoybHVMV05wTFdsdWRDMWhkM011WkdWMkxuSm9ZMnh2ZFdRdVkyOXRNSUlCSWpBTkJna3EKaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUExZkNjRTIzaThJZXVBQzNVUStsbjJaQlBXT1VSWDBoagpxK3VIYWpzNVQ4WGpVYUNjbkhoMGNZOVlGZ0l6Z2lWc09Gd3lDTzlrVDZVT0J3R2FqRmlob3ZybzJtdkZsNWRYCjNDOWIzcmlkcS9tZnhvZ3RCSTRZUDBTWTVnUVI5TXBqaVA3WTZYZTNCZmltZ0pzQmtYQjVUblhqc25LT1RSVk4KVE1taktuMkZLUFlGZUpIR29rZlI4QkVyWW9kNStBMzIxL3gvSDF6bm1BNy9tbnNtb25sWU1BK1N6OWN3dnZWVwptVGp6ZU9PS0Y2dWF1TExKSDBtdzFpdGFGclpITFM1bE0xVWszazEzZmZXSEd3elAvbk5IYVdyTlVxRjNrQmRFCnhoWWN0a2JRUnBtVGpKelhMWjJJTVFYMGViNEZZZmRJc0YxZWlvRi9UOEk1eHVZWEpFQlc1d0lEQVFBQm80Ry8KTUlHOE1BNEdBMVVkRHdFQi93UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFUQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCUllnSmNBczBSS2UwRUtNVjhiSXhkNGVLTXdTekFmQmdOVkhTTUVHREFXCmdCUUlLaTNuVDQ3TzBvT3ZLS1l6bUpqUUpmd3lzekJIQmdOVkhSRUVRREErZ2p3cUxtRndjSE11WTJrdGJHNHQKWW5oemJHbGpkQzAzTm1WbU9DNXZjbWxuYVc0dFkya3RhVzUwTFdGM2N5NWtaWFl1Y21oamJHOTFaQzVqYjIwdwpEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTDZPa0ZHMFMwbjlXNWI5U05ZUFRCZzJJVEhSZURPYkVwV2hmYTFmCjhOSGx5cVl2RTVDUWdnQU9TM1AwcVA2OGVmdm54b1NOUEQ1U2Rqb2dDeks5NGxCeVVQb1dPOWhyTkdYZmNhS2MKZ3NodlNaOWZZbHpPb3NwUXQ3emFPYVlHMGJhRC91Y0h6WXNXeFVIRjV5RE16SGFCNFlnc1VZeWJLL1dIYUpLKwp2b0FiandxLzRzOFpyWk44NGhkS1JpSzdQdFk1SVFKR21LNGhZZnlQUHdhSWErRDhKazFwSkNYaXF0TkkrWWdmCmtacjhCNWRMc1Mzd3pBeHBPLzh1WnJwdmxjU0xPTEZvcEtnaFI3bFVCdHRDcGp5bzBxZTZicGFyZlFaK2dWWFYKUTUzL0ovWTlXSFBDNWJ5RFRjRWVHMTY3VlNDYzIxeW9IWU0wU2h1eENkUGJtdUk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURERENDQWZTZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFtTVNRd0lnWURWUVFEREJ0cGJtZHkKWlhOekxXOXdaWEpoZEc5eVFERTNNVGMxT0RJMU9UZ3dIaGNOTWpRd05qQTFNVEF4TmpNM1doY05Nall3TmpBMQpNVEF4TmpNNFdqQW1NU1F3SWdZRFZRUUREQnRwYm1keVpYTnpMVzl3WlhKaGRHOXlRREUzTVRjMU9ESTFPVGd3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURCMnBPZlVXNVpkeEpycEUraks4SDAKRkNRSFF0b3lMTDR1UW5GWFEvZkxOUUhtalRxZG15MlNTbUZZWEJPeDNqWWx0SW1na3ByckpxUitCOGhEaU00TApoZjNRTlRneGM5MzluRytENHpzQUN4cEU0czN4YmtNR3p5dHhmU3pPVElIVWVKWUU5OHVZTWZMVkpKT2NiT3JJClpzd0JuallKZ0o5RHYwZzRzdW9sL0wrYVNkazVxYXAyRzlBekVnb1RzNHp2S3hHcVNlWHhNWFhyWHE4TE4rVkoKaUwyUEtoaWlNYnVvVGdlbGU1LzBqSnN0Ty9qZXFyYWlCa0ZYWEtIdFJFNFNrSnZyZ2JRamhFRFAyai9reWRkZwp4MGhuVDBCdHBmN1d3aVc5Q2lhdkpuZW91SEI1czk4SHNPVFNjN2hkMkdaaUhOM3FXUlZjSFZHOFhLbkVFcmtiCkFnTUJBQUdqUlRCRE1BNEdBMVVkRHdFQi93UUVBd0lDcERBU0JnTlZIUk1CQWY4RUNEQUdBUUgvQWdFQU1CMEcKQTFVZERnUVdCQlFJS2kzblQ0N08wb092S0tZem1KalFKZnd5c3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQQpZZHpxazdDeFJ3UUo5M3A1MmgvM29FZ01jb3J0VzJJVjQzaWZJS1Z1d3Y3cDR0Vmh5Rm9lQnpiZ1hiUDE0UkowCjJ1VU9GcWVIWjVPbEl6dTlNT28reGRvQkJNeVB4enY0TkNuTERnUHo2eXlrVjdCcGVTMHY0TlB4TEUrOTV4OTEKajQ0SUJYbkJ6azRrZXZMeVVMd05IL1JFS25XbVBKSERzWEIzK1A1Q21nVkNib1k1Zitac0FwWERZUnNhR1VFUgpQMjMySzROTmdKYllmOEVDK1BqL0VNUUo4cWtKaSs3WVhhQmtIczFHaXMxdlh1SDYrelp0TGlicDJmMHlVUFhqCjlHVTRoUlhYR3R5L2h5a3hVVERXNTQvK24zWERLRU1aNmNvTWNRbThSNEJKSERCQjJpTTlhYzRZOWErMWJ1SWcKR1kwSk1ySzdIUWZNVE9DR3hSVzRUdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    namespace: MTYgYnl0ZXMgbG9uZw==
    service-ca.crt: 
    token: MTI2OSBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: deployer
      kubernetes.io/service-account.uid: 3ee6b0b6-5869-4c8f-9760-2c1b6a9a18a9
    creationTimestamp: "2024-06-05T10:46:23Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-06-05T10:46:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2024-06-05T10:46:23Z"
    name: deployer-token-7tb7q
    namespace: knative-eventing
    resourceVersion: "35799"
    uid: 058e5734-ae88-426c-bf03-87660ea689a3
  type: kubernetes.io/service-account-token
kind: SecretList
metadata:
  resourceVersion: "53921"
