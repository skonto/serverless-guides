---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "operator.knative.dev/v1beta1",
          "kind": "KnativeServing",
          "metadata": {
            "name": "knative-serving"
          },
          "spec": {
          }
        },
        {
          "apiVersion": "operator.knative.dev/v1beta1",
          "kind": "KnativeEventing",
          "metadata": {
            "name": "knative-eventing"
          },
          "spec": {
          }
        },
        {
          "apiVersion": "operator.serverless.openshift.io/v1alpha1",
          "kind": "KnativeKafka",
          "metadata": {
            "name": "knative-kafka"
          },
          "spec": {
            "broker": {
              "enabled": false,
              "defaultConfig": {
                "numPartitions": 10,
                "replicationFactor": 3,
                "bootstrapServers": "REPLACE_WITH_COMMA_SEPARATED_KAFKA_BOOTSTRAP_SERVERS"
              }
            },
            "source": {
              "enabled": false
            },
            "sink": {
              "enabled": false
            },
            "channel": {
              "enabled": false,
              "bootstrapServers": "REPLACE_WITH_COMMA_SEPARATED_KAFKA_BOOTSTRAP_SERVERS"
            }
          }
        }
      ]
    capabilities: Full Lifecycle
    categories: Networking,Integration & Delivery,Cloud Provider,Developer Tools
    certified: "false"
    createdAt: "2020-04-20T17:00:00Z"
    description: Deploy and manage event-driven serverless applications and functions
      using Knative.
    features.operators.openshift.io/disconnected: "true"
    features.operators.openshift.io/fips-compliant: "false"
    features.operators.openshift.io/proxy-aware: "true"
    features.operators.openshift.io/tls-profiles: "false"
    features.operators.openshift.io/token-auth-aws: "false"
    features.operators.openshift.io/token-auth-azure: "false"
    features.operators.openshift.io/token-auth-gcp: "false"
    k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.2.20/23"],"mac_address":"0a:58:0a:82:02:14","gateway_ips":["10.130.2.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.130.2.1"},{"dest":"172.30.0.0/16","nextHop":"10.130.2.1"},{"dest":"100.64.0.0/16","nextHop":"10.130.2.1"}],"ip_address":"10.130.2.20/23","gateway_ip":"10.130.2.1","role":"primary"}}'
    k8s.v1.cni.cncf.io/network-status: |-
      [{
          "name": "ovn-kubernetes",
          "interface": "eth0",
          "ips": [
              "10.130.2.20"
          ],
          "mac": "0a:58:0a:82:02:14",
          "default": true,
          "dns": {}
      }]
    olm.operatorGroup: serverless
    olm.operatorNamespace: openshift-serverless
    olm.skipRange: '>=1.34.0 <1.34.1'
    olm.targetNamespaces: ""
    olmcahash: e5a235e72045e73943a10e1fd5e1162d97a8b23078b784fc9b50f1457bef508d
    openshift.io/scc: restricted-v2
    operatorframework.io/properties: '{"properties":[{"type":"olm.gvk","value":{"group":"operator.knative.dev","kind":"KnativeEventing","version":"v1beta1"}},{"type":"olm.gvk","value":{"group":"operator.knative.dev","kind":"KnativeServing","version":"v1beta1"}},{"type":"olm.gvk","value":{"group":"operator.serverless.openshift.io","kind":"KnativeKafka","version":"v1alpha1"}},{"type":"olm.package","value":{"packageName":"serverless-operator","version":"1.34.1"}}]}'
    operatorframework.io/suggested-namespace: openshift-serverless
    operators.openshift.io/infrastructure-features: '["disconnected", "proxy-aware"]'
    operators.openshift.io/must-gather-image: quay.io/openshift-knative/must-gather
    operators.openshift.io/valid-subscription: '["OpenShift Container Platform", "OpenShift
      Platform Plus"]'
    repository: https://github.com/openshift-knative/serverless-operator
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
    support: Red Hat
  creationTimestamp: "2025-01-09T14:57:50Z"
  generateName: knative-openshift-5fc65bff85-
  labels:
    name: knative-openshift
    pod-template-hash: 5fc65bff85
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:k8s.ovn.org/pod-networks: {}
    manager: ip-10-0-83-16
    operation: Update
    subresource: status
    time: "2025-01-09T14:57:50Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:alm-examples: {}
          f:capabilities: {}
          f:categories: {}
          f:certified: {}
          f:createdAt: {}
          f:description: {}
          f:features.operators.openshift.io/disconnected: {}
          f:features.operators.openshift.io/fips-compliant: {}
          f:features.operators.openshift.io/proxy-aware: {}
          f:features.operators.openshift.io/tls-profiles: {}
          f:features.operators.openshift.io/token-auth-aws: {}
          f:features.operators.openshift.io/token-auth-azure: {}
          f:features.operators.openshift.io/token-auth-gcp: {}
          f:olm.operatorGroup: {}
          f:olm.operatorNamespace: {}
          f:olm.skipRange: {}
          f:olm.targetNamespaces: {}
          f:olmcahash: {}
          f:operatorframework.io/properties: {}
          f:operatorframework.io/suggested-namespace: {}
          f:operators.openshift.io/infrastructure-features: {}
          f:operators.openshift.io/must-gather-image: {}
          f:operators.openshift.io/valid-subscription: {}
          f:repository: {}
          f:support: {}
        f:generateName: {}
        f:labels:
          .: {}
          f:name: {}
          f:pod-template-hash: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"bd20691d-7f5b-477a-acd4-e07db07ced42"}: {}
      f:spec:
        f:containers:
          k:{"name":"knative-openshift"}:
            .: {}
            f:env:
              .: {}
              k:{"name":"CURRENT_VERSION"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"DASHBOARDS_ROOT_MANIFEST_PATH"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"DEPLOYMENT_NAME"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"ENABLE_PPROF"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_APISERVER_RA_IMAGE"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_DISPATCHER_IMAGE"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_KN_CLIENT"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_KN_PLUGIN_EVENT_SENDER"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_KN_PLUGIN_FUNC_NODEJS_20_MINIMAL"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_KN_PLUGIN_FUNC_OPENJDK_21"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_KN_PLUGIN_FUNC_PYTHON_39"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_KN_PLUGIN_FUNC_TEKTON_BUILDAH"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_KN_PLUGIN_FUNC_TEKTON_S2I"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_KN_PLUGIN_FUNC_UTIL"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_KUBE_RBAC_PROXY"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_activator"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_autoscaler"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_autoscaler-hpa"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_controller__controller"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_eventing-controller__eventing-controller"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_eventing-istio-controller__eventing-istio-controller"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_eventing-webhook__eventing-webhook"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_eventmesh-backend__controller"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_imc-controller__controller"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_imc-dispatcher__dispatcher"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_kourier-gateway"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_mt-broker-controller__mt-broker-controller"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_mt-broker-filter__filter"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_mt-broker-ingress__ingress"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_net-istio-controller__controller"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_net-istio-webhook__webhook"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_net-kourier-controller__controller"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_pingsource-mt-adapter__dispatcher"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_queue-proxy"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_storage-version-migration-eventing-__migrate"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_storage-version-migration-serving-__migrate"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"IMAGE_webhook__webhook"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KAFKA_IMAGE_kafka-broker-dispatcher__kafka-broker-dispatcher"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KAFKA_IMAGE_kafka-broker-receiver__kafka-broker-receiver"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KAFKA_IMAGE_kafka-channel-dispatcher__kafka-channel-dispatcher"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KAFKA_IMAGE_kafka-channel-receiver__kafka-channel-receiver"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KAFKA_IMAGE_kafka-controller-post-install__post-install"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KAFKA_IMAGE_kafka-controller__controller"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KAFKA_IMAGE_kafka-sink-receiver__kafka-sink-receiver"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KAFKA_IMAGE_kafka-source-dispatcher__kafka-source-dispatcher"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KAFKA_IMAGE_kafka-webhook-eventing__kafka-webhook-eventing"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KAFKA_IMAGE_knative-kafka-storage-version-migrator__migrate"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KAFKABROKER_MANIFEST_PATH"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KAFKACHANNEL_MANIFEST_PATH"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KAFKACONTROLLER_MANIFEST_PATH"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KAFKASINK_MANIFEST_PATH"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KAFKASOURCE_MANIFEST_PATH"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KNATIVE_EVENTING_KAFKA_BROKER_VERSION"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KNATIVE_EVENTING_VERSION"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KNATIVE_SERVING_VERSION"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KUBERNETES_MIN_VERSION"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"NAMESPACE"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef: {}
              k:{"name":"OPERATOR_CONDITION_NAME"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"OPERATOR_NAME"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"POD_NAME"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef: {}
              k:{"name":"QUICKSTART_MANIFEST_PATH"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"REQUIRED_EVENTING_NAMESPACE"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"REQUIRED_KAFKA_NAMESPACE"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"REQUIRED_SERVING_NAMESPACE"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"SOURCES_GENERATE_SERVICE_MONITORS"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"SOURCES_USE_CLUSTER_MONITORING"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"WATCH_NAMESPACE"}:
                .: {}
                f:name: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:livenessProbe:
              .: {}
              f:failureThreshold: {}
              f:httpGet:
                .: {}
                f:path: {}
                f:port: {}
                f:scheme: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":8080,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
            f:readinessProbe:
              .: {}
              f:failureThreshold: {}
              f:httpGet:
                .: {}
                f:path: {}
                f:port: {}
                f:scheme: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:resources: {}
            f:securityContext:
              .: {}
              f:allowPrivilegeEscalation: {}
              f:capabilities:
                .: {}
                f:drop: {}
              f:readOnlyRootFilesystem: {}
              f:runAsNonRoot: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/apiserver.local.config/certificates"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/cli-artifacts"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/tmp/k8s-webhook-server/serving-certs"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:initContainers:
          .: {}
          k:{"name":"cli-artifacts"}:
            .: {}
            f:command: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources: {}
            f:securityContext:
              .: {}
              f:allowPrivilegeEscalation: {}
              f:capabilities:
                .: {}
                f:drop: {}
              f:runAsNonRoot: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/cli-artifacts"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext: {}
        f:serviceAccount: {}
        f:serviceAccountName: {}
        f:terminationGracePeriodSeconds: {}
        f:volumes:
          .: {}
          k:{"name":"apiservice-cert"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:items: {}
              f:secretName: {}
          k:{"name":"cli-artifacts"}:
            .: {}
            f:emptyDir: {}
            f:name: {}
          k:{"name":"webhook-cert"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:items: {}
              f:secretName: {}
    manager: kube-controller-manager
    operation: Update
    time: "2025-01-09T14:57:50Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:k8s.v1.cni.cncf.io/network-status: {}
    manager: multus-daemon
    operation: Update
    subresource: status
    time: "2025-01-09T14:57:51Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"PodReadyToStartContainers"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:hostIPs: {}
        f:initContainerStatuses: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"10.130.2.20"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    subresource: status
    time: "2025-01-09T14:58:05Z"
  name: knative-openshift-5fc65bff85-x4s2w
  namespace: openshift-serverless
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: knative-openshift-5fc65bff85
    uid: bd20691d-7f5b-477a-acd4-e07db07ced42
  resourceVersion: "51373"
  uid: 5b185da7-ac71-4ad0-8ea5-2f6c2747b8dd
spec:
  containers:
  - env:
    - name: WATCH_NAMESPACE
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    - name: DEPLOYMENT_NAME
      value: knative-openshift
    - name: POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: OPERATOR_NAME
      value: knative-openshift
    - name: REQUIRED_SERVING_NAMESPACE
      value: knative-serving
    - name: REQUIRED_EVENTING_NAMESPACE
      value: knative-eventing
    - name: REQUIRED_KAFKA_NAMESPACE
      value: knative-eventing
    - name: KAFKACHANNEL_MANIFEST_PATH
      value: deploy/resources/knativekafka/channel
    - name: KAFKASOURCE_MANIFEST_PATH
      value: deploy/resources/knativekafka/source
    - name: KAFKACONTROLLER_MANIFEST_PATH
      value: deploy/resources/knativekafka/controller
    - name: KAFKABROKER_MANIFEST_PATH
      value: deploy/resources/knativekafka/broker
    - name: KAFKASINK_MANIFEST_PATH
      value: deploy/resources/knativekafka/sink
    - name: QUICKSTART_MANIFEST_PATH
      value: deploy/resources/quickstart/serverless-application-quickstart.yaml
    - name: DASHBOARDS_ROOT_MANIFEST_PATH
      value: deploy/resources/dashboards
    - name: SOURCES_USE_CLUSTER_MONITORING
      value: "true"
    - name: SOURCES_GENERATE_SERVICE_MONITORS
      value: "true"
    - name: ENABLE_PPROF
      value: "false"
    - name: KUBERNETES_MIN_VERSION
      value: v1.0.0
    - name: IMAGE_queue-proxy
      value: registry.ci.openshift.org/openshift/knative-serving-queue:knative-v1.14
    - name: IMAGE_activator
      value: registry.ci.openshift.org/openshift/knative-serving-activator:knative-v1.14
    - name: IMAGE_autoscaler
      value: registry.ci.openshift.org/openshift/knative-serving-autoscaler:knative-v1.14
    - name: IMAGE_autoscaler-hpa
      value: registry.ci.openshift.org/openshift/knative-serving-autoscaler-hpa:knative-v1.14
    - name: IMAGE_controller__controller
      value: registry.ci.openshift.org/openshift/knative-serving-controller:knative-v1.14
    - name: IMAGE_webhook__webhook
      value: registry.ci.openshift.org/openshift/knative-serving-webhook:knative-v1.14
    - name: IMAGE_storage-version-migration-serving-__migrate
      value: registry.ci.openshift.org/openshift/knative-serving-storage-version-migration:knative-v1.14
    - name: IMAGE_kourier-gateway
      value: quay.io/maistra-dev/proxyv2-ubi8:2.4-latest
    - name: IMAGE_net-kourier-controller__controller
      value: registry.ci.openshift.org/openshift/net-kourier-kourier:knative-v1.14
    - name: IMAGE_net-istio-controller__controller
      value: registry.ci.openshift.org/openshift/net-istio-controller:knative-v1.14
    - name: IMAGE_net-istio-webhook__webhook
      value: registry.ci.openshift.org/openshift/net-istio-webhook:knative-v1.14
    - name: IMAGE_eventing-controller__eventing-controller
      value: registry.ci.openshift.org/openshift/knative-eventing-controller:knative-v1.14
    - name: IMAGE_eventing-istio-controller__eventing-istio-controller
      value: registry.ci.openshift.org/openshift/knative-eventing-istio-controller:knative-v1.14
    - name: IMAGE_eventing-webhook__eventing-webhook
      value: registry.ci.openshift.org/openshift/knative-eventing-webhook:knative-v1.14
    - name: IMAGE_storage-version-migration-eventing-__migrate
      value: registry.ci.openshift.org/openshift/knative-eventing-migrate:knative-v1.14
    - name: IMAGE_mt-broker-controller__mt-broker-controller
      value: registry.ci.openshift.org/openshift/knative-eventing-mtchannel-broker:knative-v1.14
    - name: IMAGE_mt-broker-filter__filter
      value: registry.ci.openshift.org/openshift/knative-eventing-filter:knative-v1.14
    - name: IMAGE_mt-broker-ingress__ingress
      value: registry.ci.openshift.org/openshift/knative-eventing-ingress:knative-v1.14
    - name: IMAGE_imc-controller__controller
      value: registry.ci.openshift.org/openshift/knative-eventing-channel-controller:knative-v1.14
    - name: IMAGE_imc-dispatcher__dispatcher
      value: registry.ci.openshift.org/openshift/knative-eventing-channel-dispatcher:knative-v1.14
    - name: IMAGE_pingsource-mt-adapter__dispatcher
      value: registry.ci.openshift.org/openshift/knative-eventing-mtping:knative-v1.14
    - name: IMAGE_APISERVER_RA_IMAGE
      value: registry.ci.openshift.org/openshift/knative-eventing-apiserver-receive-adapter:knative-v1.14
    - name: IMAGE_DISPATCHER_IMAGE
      value: registry.ci.openshift.org/openshift/knative-eventing-channel-dispatcher:knative-v1.14
    - name: IMAGE_eventmesh-backend__controller
      value: registry.ci.openshift.org/openshift/knative-backstage-plugins-eventmesh:knative-v1.14
    - name: IMAGE_KUBE_RBAC_PROXY
      value: registry.ci.openshift.org/origin/4.15:kube-rbac-proxy
    - name: IMAGE_KN_PLUGIN_EVENT_SENDER
      value: registry.ci.openshift.org/knative/release-1.14:client-plugin-event-sender
    - name: IMAGE_KN_CLIENT
      value: registry.ci.openshift.org/openshift/knative-v1.14.0:knative-client
    - name: IMAGE_KN_PLUGIN_FUNC_UTIL
      value: quay.io/boson/alpine-socat:1.7.4.3-r1-non-root
    - name: IMAGE_KN_PLUGIN_FUNC_TEKTON_S2I
      value: registry.redhat.io/source-to-image/source-to-image-rhel8@sha256:6a6025914296a62fdf2092c3a40011bd9b966a6806b094d51eec5e1bd5026ef4
    - name: IMAGE_KN_PLUGIN_FUNC_TEKTON_BUILDAH
      value: registry.redhat.io/rhel8/buildah@sha256:3d505d9c0f5d4cd5a4ec03b8d038656c6cdbdf5191e00ce6388f7e0e4d2f1b74
    - name: IMAGE_KN_PLUGIN_FUNC_NODEJS_20_MINIMAL
      value: registry.access.redhat.com/ubi8/nodejs-20-minimal@sha256:a2a7e399aaf09a48c28f40820da16709b62aee6f2bc703116b9345fab5830861
    - name: IMAGE_KN_PLUGIN_FUNC_OPENJDK_21
      value: registry.access.redhat.com/ubi8/openjdk-21@sha256:441897a1f691c7d4b3a67bb3e0fea83e18352214264cb383fd057bbbd5ed863c
    - name: IMAGE_KN_PLUGIN_FUNC_PYTHON_39
      value: registry.access.redhat.com/ubi8/python-39@sha256:27e795fd6b1b77de70d1dc73a65e4c790650748a9cfda138fdbd194b3d6eea3d
    - name: KAFKA_IMAGE_kafka-broker-receiver__kafka-broker-receiver
      value: registry.ci.openshift.org/openshift/knative-eventing-kafka-broker-receiver:knative-v1.14
    - name: KAFKA_IMAGE_kafka-broker-dispatcher__kafka-broker-dispatcher
      value: registry.ci.openshift.org/openshift/knative-eventing-kafka-broker-dispatcher:knative-v1.14
    - name: KAFKA_IMAGE_kafka-channel-receiver__kafka-channel-receiver
      value: registry.ci.openshift.org/openshift/knative-eventing-kafka-broker-receiver:knative-v1.14
    - name: KAFKA_IMAGE_kafka-channel-dispatcher__kafka-channel-dispatcher
      value: registry.ci.openshift.org/openshift/knative-eventing-kafka-broker-dispatcher:knative-v1.14
    - name: KAFKA_IMAGE_kafka-controller__controller
      value: registry.ci.openshift.org/openshift/knative-eventing-kafka-broker-kafka-controller:knative-v1.14
    - name: KAFKA_IMAGE_kafka-sink-receiver__kafka-sink-receiver
      value: registry.ci.openshift.org/openshift/knative-eventing-kafka-broker-receiver:knative-v1.14
    - name: KAFKA_IMAGE_kafka-source-dispatcher__kafka-source-dispatcher
      value: registry.ci.openshift.org/openshift/knative-eventing-kafka-broker-dispatcher:knative-v1.14
    - name: KAFKA_IMAGE_kafka-webhook-eventing__kafka-webhook-eventing
      value: registry.ci.openshift.org/openshift/knative-eventing-kafka-broker-webhook-kafka:knative-v1.14
    - name: KAFKA_IMAGE_kafka-controller-post-install__post-install
      value: registry.ci.openshift.org/openshift/knative-eventing-kafka-broker-post-install:knative-v1.14
    - name: KAFKA_IMAGE_knative-kafka-storage-version-migrator__migrate
      value: registry.ci.openshift.org/openshift/knative-eventing-migrate:knative-v1.14
    - name: CURRENT_VERSION
      value: 1.34.1
    - name: KNATIVE_SERVING_VERSION
      value: "1.14"
    - name: KNATIVE_EVENTING_VERSION
      value: "1.14"
    - name: KNATIVE_EVENTING_KAFKA_BROKER_VERSION
      value: "1.14"
    - name: OPERATOR_CONDITION_NAME
      value: serverless-operator.v1.34.1
    image: docker.io/skonto/serverless-knative-operator
    imagePullPolicy: Always
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz
        port: 8687
        scheme: HTTP
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    name: knative-openshift
    ports:
    - containerPort: 8080
      name: http-cli
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /readyz
        port: 8687
        scheme: HTTP
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 1000850000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /cli-artifacts
      name: cli-artifacts
    - mountPath: /apiserver.local.config/certificates
      name: apiservice-cert
    - mountPath: /tmp/k8s-webhook-server/serving-certs
      name: webhook-cert
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-8ztcz
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  imagePullSecrets:
  - name: knative-openshift-dockercfg-v88k8
  initContainers:
  - command:
    - sh
    - -c
    - rm -rf /cli-artifacts/* && cp /usr/share/kn/**/* /cli-artifacts && chmod 444
      /cli-artifacts/*
    image: registry.ci.openshift.org/openshift/knative-v1.14.0:kn-cli-artifacts
    imagePullPolicy: Always
    name: cli-artifacts
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsNonRoot: true
      runAsUser: 1000850000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /cli-artifacts
      name: cli-artifacts
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-8ztcz
      readOnly: true
  nodeName: ip-10-0-83-16.ec2.internal
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1000850000
    seLinuxOptions:
      level: s0:c29,c19
    seccompProfile:
      type: RuntimeDefault
  serviceAccount: knative-openshift
  serviceAccountName: knative-openshift
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - emptyDir: {}
    name: cli-artifacts
  - name: apiservice-cert
    secret:
      defaultMode: 420
      items:
      - key: tls.crt
        path: apiserver.crt
      - key: tls.key
        path: apiserver.key
      secretName: knative-openshift-service-cert
  - name: webhook-cert
    secret:
      defaultMode: 420
      items:
      - key: tls.crt
        path: tls.crt
      - key: tls.key
        path: tls.key
      secretName: knative-openshift-service-cert
  - name: kube-api-access-8ztcz
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
      - configMap:
          items:
          - key: service-ca.crt
            path: service-ca.crt
          name: openshift-service-ca.crt
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2025-01-09T14:58:03Z"
    status: "True"
    type: PodReadyToStartContainers
  - lastProbeTime: null
    lastTransitionTime: "2025-01-09T14:58:03Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2025-01-09T14:58:05Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2025-01-09T14:58:05Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2025-01-09T14:57:50Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: cri-o://40b1cf4e398e22efcb5eaa550037098af3ac5b45f1b8fa657b22225bd5a5f049
    image: docker.io/skonto/serverless-knative-operator:latest
    imageID: docker.io/skonto/serverless-knative-operator@sha256:877d7f9c7bf85afc0af110387af8d05a096493255ce35e0f8ed7ea80b34c88b1
    lastState: {}
    name: knative-openshift
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2025-01-09T14:58:04Z"
  hostIP: 10.0.83.16
  initContainerStatuses:
  - containerID: cri-o://a4d6d732deb2c7e6be6efae0a510f4198504a53761c81eece641164fdf450ff1
    image: registry.ci.openshift.org/openshift/knative-v1.14.0:kn-cli-artifacts
    imageID: registry.ci.openshift.org/openshift/knative-v1.14.0@sha256:3276d5e197c50c4120c8c311f151ea2e2f79b6f984fee14db05283097790e2e9
    lastState: {}
    name: cli-artifacts
    ready: true
    restartCount: 0
    started: false
    state:
      terminated:
        containerID: cri-o://a4d6d732deb2c7e6be6efae0a510f4198504a53761c81eece641164fdf450ff1
        exitCode: 0
        finishedAt: "2025-01-09T14:58:02Z"
        reason: Completed
        startedAt: "2025-01-09T14:58:02Z"
  phase: Running
  podIP: 10.130.2.20
  podIPs:
  - ip: 10.130.2.20
  qosClass: BestEffort
  startTime: "2025-01-09T14:57:50Z"
