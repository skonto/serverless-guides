---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.2.28/23"],"mac_address":"0a:58:0a:80:02:1c","gateway_ips":["10.128.2.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.2.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.2.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.2.1"}],"ip_address":"10.128.2.28/23","gateway_ip":"10.128.2.1","role":"primary"}}'
    k8s.v1.cni.cncf.io/network-status: |-
      [{
          "name": "ovn-kubernetes",
          "interface": "eth0",
          "ips": [
              "10.128.2.28"
          ],
          "mac": "0a:58:0a:80:02:1c",
          "default": true,
          "dns": {}
      }]
    openshift.io/scc: privileged
    sidecar.istio.io/inject: "false"
  creationTimestamp: "2025-01-09T14:45:29Z"
  generateName: istio-cni-node-v2-4-
  labels:
    controller-revision-hash: 9cc874dc
    k8s-app: istio-cni-node-v2-4
    pod-template-generation: "1"
    release: istio
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:k8s.ovn.org/pod-networks: {}
    manager: ip-10-0-25-180
    operation: Update
    subresource: status
    time: "2025-01-09T14:45:29Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:sidecar.istio.io/inject: {}
        f:generateName: {}
        f:labels:
          .: {}
          f:controller-revision-hash: {}
          f:k8s-app: {}
          f:pod-template-generation: {}
          f:release: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"2a4c9bac-ec3f-4c12-b4b7-534ed5c9ee05"}: {}
      f:spec:
        f:affinity:
          .: {}
          f:nodeAffinity:
            .: {}
            f:requiredDuringSchedulingIgnoredDuringExecution: {}
        f:containers:
          k:{"name":"install-cni"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"CHAINED_CNI_PLUGIN"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"CNI_BINARIES_PREFIX"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"CNI_CONF_NAME"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"CNI_NET_DIR"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"CNI_NETWORK_CONFIG"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:configMapKeyRef: {}
              k:{"name":"KUBECFG_FILE_NAME"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"MOUNTED_CNI_NET_DIR"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:livenessProbe:
              .: {}
              f:failureThreshold: {}
              f:httpGet:
                .: {}
                f:path: {}
                f:port: {}
                f:scheme: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:name: {}
            f:readinessProbe:
              .: {}
              f:failureThreshold: {}
              f:httpGet:
                .: {}
                f:path: {}
                f:port: {}
                f:scheme: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:securityContext:
              .: {}
              f:privileged: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/host/etc/cni/"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/host/etc/os-release"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/host/opt/cni/bin"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/var/run/istio-cni"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:nodeSelector: {}
        f:priorityClassName: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext: {}
        f:serviceAccount: {}
        f:serviceAccountName: {}
        f:terminationGracePeriodSeconds: {}
        f:tolerations: {}
        f:volumes:
          .: {}
          k:{"name":"cni-bin-dir"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"cni-log-dir"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"etc-cni-dir"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"os-release"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
    manager: kube-controller-manager
    operation: Update
    time: "2025-01-09T14:45:29Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:k8s.v1.cni.cncf.io/network-status: {}
    manager: multus-daemon
    operation: Update
    subresource: status
    time: "2025-01-09T14:45:30Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"PodReadyToStartContainers"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:hostIPs: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"10.128.2.28"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    subresource: status
    time: "2025-01-09T14:45:54Z"
  name: istio-cni-node-v2-4-h578h
  namespace: openshift-operators
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: DaemonSet
    name: istio-cni-node-v2-4
    uid: 2a4c9bac-ec3f-4c12-b4b7-534ed5c9ee05
  resourceVersion: "42853"
  uid: 44f20114-2d9c-4197-958c-f3f7c4a7ea67
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchFields:
          - key: metadata.name
            operator: In
            values:
            - ip-10-0-25-180.ec2.internal
  containers:
  - command:
    - /bin/sh
    - -c
    - |
      set -xe
      # Collect host OS information
      . /host/etc/os-release

      # Detect the major version of the host OS the pod is running on
      rhelmajor=
      case "${ID}" in
        rhcos|scos)
          rhelmajor=$(echo $RHEL_VERSION | sed -E 's/([0-9]+)\.{1}[0-9]+(\.[0-9]+)?/\1/')
        ;;
        rhel)
          rhelmajor=$(echo "${VERSION_ID}" | cut -f 1 -d .)
        ;;
        fedora)
          if [ "${VARIANT_ID}" == "coreos" ]; then
            rhelmajor=8
          else
            echo "WARNING: Unsupported Fedora variant=${VARIANT_ID}"
          fi
        ;;
        *)
          echo "WARNING: Unsupported OS ID=${ID}"
        ;;
      esac

      # Select the appropriate CNI binary to copy based on the OS version
      case "${rhelmajor}" in
        8)
          sourcebin=/opt/cni/bin/istio-cni-rhel8
        ;;
        9)
          sourcebin=/opt/cni/bin/istio-cni-rhel9
        ;;
        *)
          sourcebin=/opt/cni/bin/istio-cni-rhel9
          echo "INFO: Running in a non-FIPS compliant environment; using istio-cni binary compiled with latest RHEL version: sourcebin=${sourcebin}"
        ;;
      esac

      if [ -e "$sourcebin" ]; then
        # Move the source binary to where install-cni expects it to be located and clean up unused binaries
        mv "$sourcebin" /opt/cni/bin/istio-cni
        rm /opt/cni/bin/istio-cni-rhel*
      else
        echo "WARNING: $sourcebin does not exist. Using original file /opt/cni/bin/istio-cni."
      fi

      install-cni
    env:
    - name: CNI_CONF_NAME
      value: v2-4-istio-cni.conf
    - name: CNI_NETWORK_CONFIG
      valueFrom:
        configMapKeyRef:
          key: cni_network_config
          name: ossm-cni-config-v2-4
    - name: CNI_NET_DIR
      value: /etc/cni/multus/net.d
    - name: CHAINED_CNI_PLUGIN
      value: "false"
    - name: MOUNTED_CNI_NET_DIR
      value: /host/etc/cni/multus/net.d
    - name: KUBECFG_FILE_NAME
      value: v2-4-istio-cni.kubeconfig
    - name: CNI_BINARIES_PREFIX
      value: v2-4-
    image: registry.redhat.io/openshift-service-mesh/istio-cni-rhel8@sha256:d01635a1e15f8ce40c094e1ff4085a81fb9618f97780011cda81b1c01b4defa4
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz
        port: 8000
        scheme: HTTP
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    name: install-cni
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /readyz
        port: 8000
        scheme: HTTP
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources:
      requests:
        cpu: 10m
        memory: 100Mi
    securityContext:
      privileged: true
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /host/opt/cni/bin
      name: cni-bin-dir
    - mountPath: /host/etc/cni/
      name: etc-cni-dir
    - mountPath: /var/run/istio-cni
      name: cni-log-dir
    - mountPath: /host/etc/os-release
      name: os-release
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-gq2pt
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  imagePullSecrets:
  - name: ossm-cni-dockercfg-4wcfb
  nodeName: ip-10-0-25-180.ec2.internal
  nodeSelector:
    kubernetes.io/os: linux
  preemptionPolicy: PreemptLowerPriority
  priority: 2000001000
  priorityClassName: system-node-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: ossm-cni
  serviceAccountName: ossm-cni
  terminationGracePeriodSeconds: 5
  tolerations:
  - effect: NoSchedule
    operator: Exists
  - key: CriticalAddonsOnly
    operator: Exists
  - effect: NoExecute
    operator: Exists
  volumes:
  - hostPath:
      path: /var/lib/cni/bin
      type: ""
    name: cni-bin-dir
  - hostPath:
      path: /etc/cni
      type: ""
    name: etc-cni-dir
  - hostPath:
      path: /var/run/istio-cni
      type: ""
    name: cni-log-dir
  - hostPath:
      path: /etc/os-release
      type: File
    name: os-release
  - name: kube-api-access-gq2pt
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
      - configMap:
          items:
          - key: service-ca.crt
            path: service-ca.crt
          name: openshift-service-ca.crt
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2025-01-09T14:45:54Z"
    status: "True"
    type: PodReadyToStartContainers
  - lastProbeTime: null
    lastTransitionTime: "2025-01-09T14:45:29Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2025-01-09T14:45:54Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2025-01-09T14:45:54Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2025-01-09T14:45:29Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: cri-o://b22b480b096d601441bbb5b02301f9c5f9bc8ec25acb368455638f2b60fe619e
    image: registry.redhat.io/openshift-service-mesh/istio-cni-rhel8@sha256:d01635a1e15f8ce40c094e1ff4085a81fb9618f97780011cda81b1c01b4defa4
    imageID: registry.redhat.io/openshift-service-mesh/istio-cni-rhel8@sha256:0d8f01448c9521e550fc07d615a13bb0cd5d52adf7580b38736a5c009add80cd
    lastState: {}
    name: install-cni
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2025-01-09T14:45:53Z"
  hostIP: 10.0.25.180
  hostIPs:
  - ip: 10.0.25.180
  phase: Running
  podIP: 10.128.2.28
  podIPs:
  - ip: 10.128.2.28
  qosClass: Burstable
  startTime: "2025-01-09T14:45:29Z"
