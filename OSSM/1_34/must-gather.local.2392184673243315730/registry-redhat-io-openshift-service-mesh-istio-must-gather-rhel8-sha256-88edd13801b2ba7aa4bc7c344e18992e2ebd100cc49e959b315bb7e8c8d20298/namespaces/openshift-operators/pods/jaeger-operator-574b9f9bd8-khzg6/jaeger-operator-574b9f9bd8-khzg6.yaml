---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "jaegertracing.io/v1",
          "kind": "Jaeger",
          "metadata": {
            "name": "my-jaeger"
          },
          "spec": {
            "strategy": "allInOne"
          }
        }
      ]
    capabilities: Deep Insights
    categories: Logging & Tracing
    certified: "false"
    containerImage: registry.redhat.io/rhosdt/jaeger-rhel8-operator@sha256:2116ed082118c44914fd1309ed1c8d0f4aaf006903ba6eb40b2637de2b66a74e
    createdAt: 11 Dec 2024, 15:20
    description: Provides tracing, monitoring and troubleshooting for microservices-based
      distributed systems
    features.operators.openshift.io/cnf: "false"
    features.operators.openshift.io/cni: "false"
    features.operators.openshift.io/csi: "false"
    features.operators.openshift.io/disconnected: "true"
    features.operators.openshift.io/fips-compliant: "false"
    features.operators.openshift.io/proxy-aware: "true"
    features.operators.openshift.io/tls-profiles: "false"
    features.operators.openshift.io/token-auth-aws: "false"
    features.operators.openshift.io/token-auth-azure: "false"
    features.operators.openshift.io/token-auth-gcp: "false"
    k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.2.27/23"],"mac_address":"0a:58:0a:80:02:1b","gateway_ips":["10.128.2.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.2.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.2.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.2.1"}],"ip_address":"10.128.2.27/23","gateway_ip":"10.128.2.1","role":"primary"}}'
    k8s.v1.cni.cncf.io/network-status: |-
      [{
          "name": "ovn-kubernetes",
          "interface": "eth0",
          "ips": [
              "10.128.2.27"
          ],
          "mac": "0a:58:0a:80:02:1b",
          "default": true,
          "dns": {}
      }]
    olm.operatorGroup: global-operators
    olm.operatorNamespace: openshift-operators
    olm.skipRange: '>=1.13.0 <1.62.0-1'
    olm.targetNamespaces: ""
    olmcahash: 952b4e26cd36f556b1019625204557f7490e36ba3dde2023a26426d3755843d6
    openshift.io/scc: restricted-v2
    operatorframework.io/cluster-monitoring: "true"
    operatorframework.io/properties: '{"properties":[{"type":"olm.gvk","value":{"group":"jaegertracing.io","kind":"Jaeger","version":"v1"}},{"type":"olm.package","value":{"packageName":"jaeger-product","version":"1.62.0-1"}}]}'
    operatorframework.io/suggested-namespace: openshift-distributed-tracing
    operators.openshift.io/infrastructure-features: '["disconnected"]'
    operators.openshift.io/valid-subscription: '["OpenShift Container Platform", "OpenShift
      Platform Plus"]'
    operators.operatorframework.io/builder: operator-sdk-v1.32.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
    repository: https://github.com/os-observability/konflux-jaeger
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
    support: Red Hat
  creationTimestamp: "2025-01-09T14:45:05Z"
  generateName: jaeger-operator-574b9f9bd8-
  labels:
    name: jaeger-operator
    pod-template-hash: 574b9f9bd8
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:k8s.ovn.org/pod-networks: {}
    manager: ip-10-0-25-180
    operation: Update
    subresource: status
    time: "2025-01-09T14:45:05Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:alm-examples: {}
          f:capabilities: {}
          f:categories: {}
          f:certified: {}
          f:containerImage: {}
          f:createdAt: {}
          f:description: {}
          f:features.operators.openshift.io/cnf: {}
          f:features.operators.openshift.io/cni: {}
          f:features.operators.openshift.io/csi: {}
          f:features.operators.openshift.io/disconnected: {}
          f:features.operators.openshift.io/fips-compliant: {}
          f:features.operators.openshift.io/proxy-aware: {}
          f:features.operators.openshift.io/tls-profiles: {}
          f:features.operators.openshift.io/token-auth-aws: {}
          f:features.operators.openshift.io/token-auth-azure: {}
          f:features.operators.openshift.io/token-auth-gcp: {}
          f:olm.operatorGroup: {}
          f:olm.operatorNamespace: {}
          f:olm.skipRange: {}
          f:olm.targetNamespaces: {}
          f:olmcahash: {}
          f:operatorframework.io/cluster-monitoring: {}
          f:operatorframework.io/properties: {}
          f:operatorframework.io/suggested-namespace: {}
          f:operators.openshift.io/infrastructure-features: {}
          f:operators.openshift.io/valid-subscription: {}
          f:operators.operatorframework.io/builder: {}
          f:operators.operatorframework.io/project_layout: {}
          f:repository: {}
          f:support: {}
        f:generateName: {}
        f:labels:
          .: {}
          f:name: {}
          f:pod-template-hash: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"fd7eb3e2-b23d-48ef-9f2c-2e0b9d3ca7be"}: {}
      f:spec:
        f:containers:
          k:{"name":"jaeger-operator"}:
            .: {}
            f:args: {}
            f:env:
              .: {}
              k:{"name":"KAFKA-PROVISIONING-MINIMAL"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"LOG-LEVEL"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"OPERATOR_CONDITION_NAME"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"OPERATOR_NAME"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"POD_NAME"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef: {}
              k:{"name":"POD_NAMESPACE"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef: {}
              k:{"name":"RELATED_IMAGE_JAEGER_AGENT"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RELATED_IMAGE_JAEGER_ALL_IN_ONE"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RELATED_IMAGE_JAEGER_COLLECTOR"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RELATED_IMAGE_JAEGER_ES_INDEX_CLEANER"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RELATED_IMAGE_JAEGER_ES_ROLLOVER"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RELATED_IMAGE_JAEGER_INGESTER"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RELATED_IMAGE_JAEGER_QUERY"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RELATED_IMAGE_OPENSHIFT_OAUTH_PROXY"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"RELATED_IMAGE_OSE_KUBE_RBAC_PROXY"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"WATCH_NAMESPACE"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:livenessProbe:
              .: {}
              f:failureThreshold: {}
              f:httpGet:
                .: {}
                f:path: {}
                f:port: {}
                f:scheme: {}
              f:initialDelaySeconds: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":8383,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
              k:{"containerPort":9443,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
            f:readinessProbe:
              .: {}
              f:failureThreshold: {}
              f:httpGet:
                .: {}
                f:path: {}
                f:port: {}
                f:scheme: {}
              f:initialDelaySeconds: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:securityContext:
              .: {}
              f:allowPrivilegeEscalation: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/apiserver.local.config/certificates"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/tmp/k8s-webhook-server/serving-certs"}:
                .: {}
                f:mountPath: {}
                f:name: {}
          k:{"name":"kube-rbac-proxy"}:
            .: {}
            f:args: {}
            f:env:
              .: {}
              k:{"name":"OPERATOR_CONDITION_NAME"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":8443,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:name: {}
                f:protocol: {}
            f:resources:
              .: {}
              f:limits:
                .: {}
                f:cpu: {}
                f:memory: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/apiserver.local.config/certificates"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/tmp/k8s-webhook-server/serving-certs"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext:
          .: {}
          f:runAsNonRoot: {}
        f:serviceAccount: {}
        f:serviceAccountName: {}
        f:terminationGracePeriodSeconds: {}
        f:volumes:
          .: {}
          k:{"name":"apiservice-cert"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:items: {}
              f:secretName: {}
          k:{"name":"cert"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:secretName: {}
          k:{"name":"webhook-cert"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:items: {}
              f:secretName: {}
    manager: kube-controller-manager
    operation: Update
    time: "2025-01-09T14:45:05Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:k8s.v1.cni.cncf.io/network-status: {}
    manager: multus-daemon
    operation: Update
    subresource: status
    time: "2025-01-09T14:45:06Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"PodReadyToStartContainers"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:hostIPs: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"10.128.2.27"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    subresource: status
    time: "2025-01-09T14:45:20Z"
  name: jaeger-operator-574b9f9bd8-khzg6
  namespace: openshift-operators
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: jaeger-operator-574b9f9bd8
    uid: fd7eb3e2-b23d-48ef-9f2c-2e0b9d3ca7be
  resourceVersion: "41774"
  uid: 36fed241-2c73-4704-b2e3-cb3b4c4c640e
spec:
  containers:
  - args:
    - start
    - --health-probe-bind-address=:8081
    - --leader-elect
    - --platform=openshift
    - --openshift-oauth-proxy-imagestream-ns=openshift
    - --openshift-oauth-proxy-imagestream-name=oauth-proxy
    - --documentation-url=https://docs.redhat.com/en/documentation/openshift_container_platform/4.17/html/distributed_tracing/distributed-tracing-platform-jaeger
    env:
    - name: WATCH_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.annotations['olm.targetNamespaces']
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    - name: OPERATOR_NAME
      value: jaeger-operator
    - name: LOG-LEVEL
      value: DEBUG
    - name: KAFKA-PROVISIONING-MINIMAL
      value: "true"
    - name: RELATED_IMAGE_JAEGER_AGENT
      value: registry.redhat.io/rhosdt/jaeger-agent-rhel8@sha256:6c1da8adfa47bfc023133d9a91e9b48862f97d2d4fd0dc1799e52a8d8ed5fd5a
    - name: RELATED_IMAGE_JAEGER_QUERY
      value: registry.redhat.io/rhosdt/jaeger-query-rhel8@sha256:2d6aaa213f6f7153478d932cef03837fd1a62ba8ecf0049db5608f1f9cbc4e4a
    - name: RELATED_IMAGE_JAEGER_COLLECTOR
      value: registry.redhat.io/rhosdt/jaeger-collector-rhel8@sha256:0bc8e7dcaa9d837fe2416eb69de659dd2949a528e8395c9b2430e969784b618b
    - name: RELATED_IMAGE_JAEGER_INGESTER
      value: registry.redhat.io/rhosdt/jaeger-ingester-rhel8@sha256:50840f62efa5503badb00176b105fcbb202918ca6da2b66e06d1d44988699c8a
    - name: RELATED_IMAGE_JAEGER_ALL_IN_ONE
      value: registry.redhat.io/rhosdt/jaeger-all-in-one-rhel8@sha256:ae14102c3de2b41abdccde141c45af071ad8631f87547206cec893908cce80b5
    - name: RELATED_IMAGE_JAEGER_ES_INDEX_CLEANER
      value: registry.redhat.io/rhosdt/jaeger-es-index-cleaner-rhel8@sha256:943c6da86a1e71e0ff4b3af8acbd660ac8de3d7b1a4b8da6268dafeeaf8a840a
    - name: RELATED_IMAGE_JAEGER_ES_ROLLOVER
      value: registry.redhat.io/rhosdt/jaeger-es-rollover-rhel8@sha256:eb3ceeaa509e8db3c98176b05dbdb22d6e88f946437320c6b18900ff43a99551
    - name: RELATED_IMAGE_OPENSHIFT_OAUTH_PROXY
      value: registry.redhat.io/openshift4/ose-oauth-proxy@sha256:234af927030921ab8f7333f61f967b4b4dee37a1b3cf85689e9e63240dd62800
    - name: RELATED_IMAGE_OSE_KUBE_RBAC_PROXY
      value: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:7efeeb8b29872a6f0271f651d7ae02c91daea16d853c50e374c310f044d8c76c
    - name: POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: OPERATOR_CONDITION_NAME
      value: jaeger-operator.v1.62.0-1
    image: registry.redhat.io/rhosdt/jaeger-rhel8-operator@sha256:2116ed082118c44914fd1309ed1c8d0f4aaf006903ba6eb40b2637de2b66a74e
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz
        port: 8081
        scheme: HTTP
      initialDelaySeconds: 15
      periodSeconds: 20
      successThreshold: 1
      timeoutSeconds: 1
    name: jaeger-operator
    ports:
    - containerPort: 9443
      name: webhook-server
      protocol: TCP
    - containerPort: 8383
      name: http-metrics
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /readyz
        port: 8081
        scheme: HTTP
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsUser: 1000410000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /tmp/k8s-webhook-server/serving-certs
      name: webhook-cert
    - mountPath: /apiserver.local.config/certificates
      name: apiservice-cert
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-cqxw8
      readOnly: true
  - args:
    - --secure-listen-address=0.0.0.0:8443
    - --upstream=http://127.0.0.1:8383/
    - --logtostderr=true
    - --v=0
    env:
    - name: OPERATOR_CONDITION_NAME
      value: jaeger-operator.v1.62.0-1
    image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:7efeeb8b29872a6f0271f651d7ae02c91daea16d853c50e374c310f044d8c76c
    imagePullPolicy: IfNotPresent
    name: kube-rbac-proxy
    ports:
    - containerPort: 8443
      name: https
      protocol: TCP
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 5m
        memory: 64Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsUser: 1000410000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /apiserver.local.config/certificates
      name: apiservice-cert
    - mountPath: /tmp/k8s-webhook-server/serving-certs
      name: webhook-cert
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-cqxw8
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  imagePullSecrets:
  - name: jaeger-operator-dockercfg-6wtsh
  nodeName: ip-10-0-25-180.ec2.internal
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    fsGroup: 1000410000
    runAsNonRoot: true
    seLinuxOptions:
      level: s0:c20,c15
    seccompProfile:
      type: RuntimeDefault
  serviceAccount: jaeger-operator
  serviceAccountName: jaeger-operator
  terminationGracePeriodSeconds: 10
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  volumes:
  - name: cert
    secret:
      defaultMode: 420
      secretName: jaeger-operator-service-cert
  - name: apiservice-cert
    secret:
      defaultMode: 420
      items:
      - key: tls.crt
        path: apiserver.crt
      - key: tls.key
        path: apiserver.key
      secretName: jaeger-operator-service-cert
  - name: webhook-cert
    secret:
      defaultMode: 420
      items:
      - key: tls.crt
        path: tls.crt
      - key: tls.key
        path: tls.key
      secretName: jaeger-operator-service-cert
  - name: kube-api-access-cqxw8
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
      - configMap:
          items:
          - key: service-ca.crt
            path: service-ca.crt
          name: openshift-service-ca.crt
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2025-01-09T14:45:20Z"
    status: "True"
    type: PodReadyToStartContainers
  - lastProbeTime: null
    lastTransitionTime: "2025-01-09T14:45:05Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2025-01-09T14:45:20Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2025-01-09T14:45:20Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2025-01-09T14:45:05Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: cri-o://828fa5603d89da47e3a6b8e647605c1c9cd64a6ad1b4bdef45fc66193c808c97
    image: registry.redhat.io/rhosdt/jaeger-rhel8-operator@sha256:2116ed082118c44914fd1309ed1c8d0f4aaf006903ba6eb40b2637de2b66a74e
    imageID: registry.redhat.io/rhosdt/jaeger-rhel8-operator@sha256:2116ed082118c44914fd1309ed1c8d0f4aaf006903ba6eb40b2637de2b66a74e
    lastState: {}
    name: jaeger-operator
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2025-01-09T14:45:13Z"
  - containerID: cri-o://980c297a044963b62ae06ef278dcf557648637667242fbd25a3f2f88e2022cf2
    image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:7efeeb8b29872a6f0271f651d7ae02c91daea16d853c50e374c310f044d8c76c
    imageID: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1e6db80eadb416a9cd3e9a12aad3a0c90d8927f9e39c9e2319f2ea74cafdfee9
    lastState: {}
    name: kube-rbac-proxy
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2025-01-09T14:45:20Z"
  hostIP: 10.0.25.180
  hostIPs:
  - ip: 10.0.25.180
  phase: Running
  podIP: 10.128.2.27
  podIPs:
  - ip: 10.128.2.27
  qosClass: Burstable
  startTime: "2025-01-09T14:45:05Z"
