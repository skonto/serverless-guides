---
apiVersion: route.openshift.io/v1
items:
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"route.openshift.io/v1","kind":"Route","metadata":{"annotations":{"maistra.io/mesh-generation":"2.6.4-1-2"},"labels":{"app":"istio-ingressgateway","app.kubernetes.io/component":"istio-ingress","app.kubernetes.io/instance":"istio-system","app.kubernetes.io/managed-by":"maistra-istio-operator","app.kubernetes.io/name":"istio-ingress","app.kubernetes.io/part-of":"istio","app.kubernetes.io/version":"2.6.4-1-2","istio":"ingressgateway","knative":"ingressgateway","maistra-version":"2.4.13","maistra.io/owner":"istio-system","maistra.io/owner-name":"basic","release":"istio"},"name":"istio-ingressgateway","namespace":"istio-system","ownerReferences":[{"apiVersion":"maistra.io/v2","blockOwnerDeletion":true,"controller":true,"kind":"ServiceMeshControlPlane","name":"basic","uid":"21f282b4-77ab-422e-9775-4fe19054e00d"}]},"spec":{"port":{"targetPort":8080},"to":{"kind":"Service","name":"istio-ingressgateway"}}}
      maistra.io/mesh-generation: 2.6.4-1-2
      openshift.io/host.generated: "true"
    creationTimestamp: "2025-01-09T14:45:43Z"
    labels:
      app: istio-ingressgateway
      app.kubernetes.io/component: istio-ingress
      app.kubernetes.io/instance: istio-system
      app.kubernetes.io/managed-by: maistra-istio-operator
      app.kubernetes.io/name: istio-ingress
      app.kubernetes.io/part-of: istio
      app.kubernetes.io/version: 2.6.4-1-2
      istio: ingressgateway
      knative: ingressgateway
      maistra-version: 2.4.13
      maistra.io/owner: istio-system
      maistra.io/owner-name: basic
      release: istio
    managedFields:
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
            f:maistra.io/mesh-generation: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:istio: {}
            f:knative: {}
            f:maistra-version: {}
            f:maistra.io/owner: {}
            f:maistra.io/owner-name: {}
            f:release: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"21f282b4-77ab-422e-9775-4fe19054e00d"}: {}
        f:spec:
          f:port:
            .: {}
            f:targetPort: {}
          f:to:
            f:kind: {}
            f:name: {}
            f:weight: {}
          f:wildcardPolicy: {}
      manager: istio-operator
      operation: Update
      time: "2025-01-09T14:45:43Z"
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:ingress: {}
      manager: openshift-router
      operation: Update
      subresource: status
      time: "2025-01-09T14:45:43Z"
    name: istio-ingressgateway
    namespace: istio-system
    ownerReferences:
    - apiVersion: maistra.io/v2
      blockOwnerDeletion: true
      controller: true
      kind: ServiceMeshControlPlane
      name: basic
      uid: 21f282b4-77ab-422e-9775-4fe19054e00d
    resourceVersion: "42617"
    uid: 73377b71-98f0-47b8-8196-6117e0220df6
  spec:
    host: istio-ingressgateway-istio-system.apps.ci-ln-6bt60xt-76ef8.aws-2.ci.openshift.org
    port:
      targetPort: 8080
    to:
      kind: Service
      name: istio-ingressgateway
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: "2025-01-09T14:45:43Z"
        status: "True"
        type: Admitted
      host: istio-ingressgateway-istio-system.apps.ci-ln-6bt60xt-76ef8.aws-2.ci.openshift.org
      routerCanonicalHostname: router-default.apps.ci-ln-6bt60xt-76ef8.aws-2.ci.openshift.org
      routerName: default
      wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      haproxy.router.openshift.io/timeout: 600s
      networking.internal.knative.dev/rollout: '{"configurations":[{"configurationName":"helloworld-go","percent":100,"revisions":[{"revisionName":"helloworld-go-00001","percent":100}],"stepParams":{}}]}'
      networking.knative.dev/ingress.class: istio.ingress.networking.knative.dev
      serving.knative.dev/creator: system:admin
      serving.knative.dev/lastModifier: system:admin
      serving.knative.openshift.io/enablePassthrough: "true"
    creationTimestamp: "2025-01-09T14:59:46Z"
    labels:
      networking.internal.knative.dev/ingress: helloworld-go
      serving.knative.dev/route: helloworld-go
      serving.knative.dev/routeNamespace: serving-tests
      serving.knative.dev/service: helloworld-go
      serving.knative.openshift.io/ingressName: helloworld-go
      serving.knative.openshift.io/ingressNamespace: serving-tests
    managedFields:
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:haproxy.router.openshift.io/timeout: {}
            f:networking.internal.knative.dev/rollout: {}
            f:networking.knative.dev/ingress.class: {}
            f:serving.knative.dev/creator: {}
            f:serving.knative.dev/lastModifier: {}
            f:serving.knative.openshift.io/enablePassthrough: {}
          f:labels:
            .: {}
            f:networking.internal.knative.dev/ingress: {}
            f:serving.knative.dev/route: {}
            f:serving.knative.dev/routeNamespace: {}
            f:serving.knative.dev/service: {}
            f:serving.knative.openshift.io/ingressName: {}
            f:serving.knative.openshift.io/ingressNamespace: {}
        f:spec:
          f:host: {}
          f:port:
            .: {}
            f:targetPort: {}
          f:tls:
            .: {}
            f:insecureEdgeTerminationPolicy: {}
            f:termination: {}
          f:to:
            f:kind: {}
            f:name: {}
            f:weight: {}
          f:wildcardPolicy: {}
      manager: ingress
      operation: Update
      time: "2025-01-09T14:59:46Z"
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:ingress: {}
      manager: openshift-router
      operation: Update
      subresource: status
      time: "2025-01-09T14:59:46Z"
    name: route-25a9fdea-a9c3-4d27-8003-9730f995aeb1-633533653235
    namespace: istio-system
    resourceVersion: "53730"
    uid: 9ee970be-7cd7-41b1-a9e9-493093b8e4ae
  spec:
    host: helloworld-go-serving-tests.apps.ci-ln-6bt60xt-76ef8.aws-2.ci.openshift.org
    port:
      targetPort: https
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: passthrough
    to:
      kind: Service
      name: istio-ingressgateway
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: "2025-01-09T14:59:46Z"
        status: "True"
        type: Admitted
      host: helloworld-go-serving-tests.apps.ci-ln-6bt60xt-76ef8.aws-2.ci.openshift.org
      routerCanonicalHostname: router-default.apps.ci-ln-6bt60xt-76ef8.aws-2.ci.openshift.org
      routerName: default
      wildcardPolicy: None
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      haproxy.router.openshift.io/timeout: 600s
      networking.knative.dev/ingress.class: istio.ingress.networking.knative.dev
      serving.knative.dev/creator: system:admin
      serving.knative.dev/lastModifier: system:admin
    creationTimestamp: "2025-01-09T15:00:44Z"
    labels:
      networking.internal.knative.dev/ingress: stavros.com.apps.ci-ln-6bt60xt-76ef8.aws-2.ci.openshift.org
      serving.knative.dev/domainMappingNamespace: serving-tests
      serving.knative.dev/domainMappingUID: b0bebd24-7a79-46e2-b6b7-3554ac45c972
      serving.knative.openshift.io/ingressName: stavros.com.apps.ci-ln-6bt60xt-76ef8.aws-2.ci.openshift.org
      serving.knative.openshift.io/ingressNamespace: serving-tests
    managedFields:
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:haproxy.router.openshift.io/timeout: {}
            f:networking.knative.dev/ingress.class: {}
            f:serving.knative.dev/creator: {}
            f:serving.knative.dev/lastModifier: {}
          f:labels:
            .: {}
            f:networking.internal.knative.dev/ingress: {}
            f:serving.knative.dev/domainMappingNamespace: {}
            f:serving.knative.dev/domainMappingUID: {}
            f:serving.knative.openshift.io/ingressName: {}
            f:serving.knative.openshift.io/ingressNamespace: {}
        f:spec:
          f:host: {}
          f:port:
            .: {}
            f:targetPort: {}
          f:tls:
            .: {}
            f:insecureEdgeTerminationPolicy: {}
            f:termination: {}
          f:to:
            f:kind: {}
            f:name: {}
            f:weight: {}
          f:wildcardPolicy: {}
      manager: ingress
      operation: Update
      time: "2025-01-09T15:00:44Z"
    - apiVersion: route.openshift.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:ingress: {}
      manager: openshift-router
      operation: Update
      subresource: status
      time: "2025-01-09T15:00:44Z"
    name: route-e7650249-4d54-4d4e-8d66-d58bbcf64844-646332326631
    namespace: istio-system
    resourceVersion: "54319"
    uid: 910eee3e-25f0-4bcf-9e3b-124e60065242
  spec:
    host: stavros.com.apps.ci-ln-6bt60xt-76ef8.aws-2.ci.openshift.org
    port:
      targetPort: https
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: passthrough
    to:
      kind: Service
      name: istio-ingressgateway
      weight: 100
    wildcardPolicy: None
  status:
    ingress:
    - conditions:
      - lastTransitionTime: "2025-01-09T15:00:44Z"
        status: "True"
        type: Admitted
      host: stavros.com.apps.ci-ln-6bt60xt-76ef8.aws-2.ci.openshift.org
      routerCanonicalHostname: router-default.apps.ci-ln-6bt60xt-76ef8.aws-2.ci.openshift.org
      routerName: default
      wildcardPolicy: None
kind: RouteList
metadata:
  resourceVersion: "60432"
