---
apiVersion: v1
items:
- apiVersion: v1
  data:
    .dockercfg: NTY4MyBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      openshift.io/internal-registry-auth-token.binding: bound
      openshift.io/internal-registry-auth-token.service-account: builder
    creationTimestamp: "2025-01-09T14:46:08Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.binding: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_image-pull-secret-controller
      operation: Apply
      time: "2025-01-09T14:46:08Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.service-account: {}
          f:ownerReferences:
            k:{"uid":"40073843-1843-41fd-a4ee-26f2da69da89"}: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_service-account-controller
      operation: Apply
      time: "2025-01-09T14:46:08Z"
    name: builder-dockercfg-rv5t8
    namespace: serving-tests
    ownerReferences:
    - apiVersion: v1
      kind: ServiceAccount
      name: builder
      uid: 40073843-1843-41fd-a4ee-26f2da69da89
    resourceVersion: "43130"
    uid: 88ee5f7f-18d4-4b8b-a881-163697f9e5a6
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    .dockercfg: NTczMSBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      openshift.io/internal-registry-auth-token.binding: bound
      openshift.io/internal-registry-auth-token.service-account: controller
    creationTimestamp: "2025-01-09T14:58:16Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.binding: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_image-pull-secret-controller
      operation: Apply
      time: "2025-01-09T14:58:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.service-account: {}
          f:ownerReferences:
            k:{"uid":"3f8d39d3-461a-4a26-ac05-ecd13393de00"}: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_service-account-controller
      operation: Apply
      time: "2025-01-09T14:58:16Z"
    name: controller-dockercfg-vsnfj
    namespace: serving-tests
    ownerReferences:
    - apiVersion: v1
      kind: ServiceAccount
      name: controller
      uid: 3f8d39d3-461a-4a26-ac05-ecd13393de00
    resourceVersion: "51697"
    uid: cbc10d7d-d070-4603-a216-0c61489d9c2a
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    .dockercfg: NTY4MyBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      openshift.io/internal-registry-auth-token.binding: bound
      openshift.io/internal-registry-auth-token.service-account: default
    creationTimestamp: "2025-01-09T14:46:08Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.binding: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_image-pull-secret-controller
      operation: Apply
      time: "2025-01-09T14:46:08Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.service-account: {}
          f:ownerReferences:
            k:{"uid":"452048ef-a5f7-469e-a1db-7866b889ccc0"}: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_service-account-controller
      operation: Apply
      time: "2025-01-09T14:46:08Z"
    name: default-dockercfg-brf5m
    namespace: serving-tests
    ownerReferences:
    - apiVersion: v1
      kind: ServiceAccount
      name: default
      uid: 452048ef-a5f7-469e-a1db-7866b889ccc0
    resourceVersion: "43134"
    uid: a9b25ff2-5922-4bd8-8ce8-5151c84f0909
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    .dockercfg: NTcwNyBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      openshift.io/internal-registry-auth-token.binding: bound
      openshift.io/internal-registry-auth-token.service-account: deployer
    creationTimestamp: "2025-01-09T14:46:08Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.binding: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_image-pull-secret-controller
      operation: Apply
      time: "2025-01-09T14:46:08Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            f:openshift.io/internal-registry-auth-token.service-account: {}
          f:ownerReferences:
            k:{"uid":"4c02c243-cd1d-453d-b823-51b71f4a453d"}: {}
        f:type: {}
      manager: openshift.io/image-registry-pull-secrets_service-account-controller
      operation: Apply
      time: "2025-01-09T14:46:08Z"
    name: deployer-dockercfg-spkh5
    namespace: serving-tests
    ownerReferences:
    - apiVersion: v1
      kind: ServiceAccount
      name: deployer
      uid: 4c02c243-cd1d-453d-b823-51b71f4a453d
    resourceVersion: "43125"
    uid: 21c900b7-9f3c-4304-a7af-003db570d7ee
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXVENDQWtHZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFwTVJVd0V3WURWUVFLREF4RmVHRnQKY0d4bElFbHVZeTR4RURBT0JnTlZCQU1NQjBWNFlXMXdiR1V3SGhjTk1qVXdNVEE1TVRVd01ESTJXaGNOTWpZdwpNVEE1TVRVd01ESTJXakFwTVJVd0V3WURWUVFLREF4RmVHRnRjR3hsSUVsdVl5NHhFREFPQmdOVkJBTU1CMFY0CllXMXdiR1V3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzJlRXp2TnRiK3g1VmQKVlFJV29kTU1qcTNIVk9sSS9selEwK2ZaRkN3QXlTUVJNamtOM3VCTGhLSVRwZHE0WjhtTUFXTTdzNkxMbkhmZwp1SHFrNmFNUnVUd1FNODljSDUya0VYUGRMdmRkNTFlSWNKNkRpZmxMUFJiL0NEaWc3aVV4VEdnSDZYOG02bGYzCnFNQlFWL3FjWHlHbnhwU2hhVmNmckl2VS94WTZpMGI3UnU4eGl6bGhnMy93U3o2anpGNEFET0grWXp3ZmZnRnEKYjIvSmVJTStEeXQwaW1nd3J5ZWhYclRkL3o2THZMdnNEOGtaZXFaOHR4eDFFdWNFZ3RRUlFJdGNZVlRwcExPbQp4Mmp6UGdGamZuRDdiamtHZDJOaklCOHZ4dlNtVllGd24zVG5lQnc3SFJEOHB6UnlZaGI4ZVlQMG5CdWVPNzM3CnBNVC94RzhWQWdNQkFBR2pnWXN3Z1lnd1JnWURWUjBSQkQ4d1BZSTdjM1JoZG5KdmN5NWpiMjB1WVhCd2N5NWoKYVMxc2JpMDJZblEyTUhoMExUYzJaV1k0TG1GM2N5MHlMbU5wTG05d1pXNXphR2xtZEM1dmNtY3dIUVlEVlIwTwpCQllFRkJHR004SEpKQm1IcDVwaU51MG50NElOaE8rUE1COEdBMVVkSXdRWU1CYUFGTEJyTDhMU3l6VE4yYmR2CnFlR2RWaVVycnUyNk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQm5Wd3Q3UEdRSUU0b3NseTFHa0tJWkZIankKR3hmSjNMMGFBcDV0enM1RnZKcXVsWTZLM3d6Rm1SVHJsUWtKaEpZOURLRHZrZ1FDTXlFdHpmWmg2RUE0aVVJeApJc2REOFREZnBLT1Y3ak5sWGt3RjRNQVpibFlkN1AxdlA2R21zV1lZUXZJMFZrQjBJN2NGMzMxRzN6VHBEbjZ2CmJ4SG1uVWJRZXk3RWkzTlcrWnVSMHdjYkw3alFUVW1rWU9kRTJ2dWxoemEvcGNQaW9jZzNpWXErUDl5ZFpEQUoKYk5PRmd2bTZtYkdPNXlmQ2x1N2VzQ0ZlY0xickNMQzFuUXIvUGpOUmxZNTJTbDI5Yy9lV1JtTzhSTHNNN05QegorSE9QUlhIN1ZtMjJFRTJQZHVpcXVZVDQwVFFQcWZQVUJVSUpnV3hWR21PVEJFOUZJdHhjQzFGRE5ONEQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    tls.key: MTcwNCBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: ""
    creationTimestamp: "2025-01-09T15:00:29Z"
    labels:
      networking.internal.knative.dev/certificate-uid: hello
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:tls.crt: {}
          f:tls.key: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
        f:type: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2025-01-09T15:00:29Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:networking.internal.knative.dev/certificate-uid: {}
      manager: kubectl-label
      operation: Update
      time: "2025-01-09T15:00:36Z"
    name: hello
    namespace: serving-tests
    resourceVersion: "54220"
    uid: 009b21ba-ff39-47d6-b043-f98b7b19ef16
  type: kubernetes.io/tls
- apiVersion: v1
  kind: Secret
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: ""
    creationTimestamp: "2025-01-09T14:58:18Z"
    labels:
      samples.knative.dev/release: devel
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:samples.knative.dev/release: {}
        f:type: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2025-01-09T14:58:18Z"
    name: webhook-certs
    namespace: serving-tests
    resourceVersion: "51792"
    uid: b64917db-4d6f-4f34-a403-815a85969e54
  type: Opaque
kind: SecretList
metadata:
  resourceVersion: "60835"
