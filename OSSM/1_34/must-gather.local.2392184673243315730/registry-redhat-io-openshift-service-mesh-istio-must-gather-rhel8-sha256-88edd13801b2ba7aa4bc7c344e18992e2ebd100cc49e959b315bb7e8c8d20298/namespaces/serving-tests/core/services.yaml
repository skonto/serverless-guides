---
apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      serving.knative.dev/creator: system:admin
      serving.knative.dev/lastModifier: system:admin
      serving.knative.openshift.io/enablePassthrough: "true"
    creationTimestamp: "2025-01-09T14:59:45Z"
    labels:
      serving.knative.dev/route: helloworld-go
      serving.knative.dev/service: helloworld-go
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:serving.knative.dev/creator: {}
            f:serving.knative.dev/lastModifier: {}
            f:serving.knative.openshift.io/enablePassthrough: {}
          f:labels:
            .: {}
            f:serving.knative.dev/route: {}
            f:serving.knative.dev/service: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"df3f94ba-08f4-4e25-a0ce-a05da7e31e86"}: {}
        f:spec:
          f:externalName: {}
          f:ports:
            .: {}
            k:{"port":80,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: controller
      operation: Update
      time: "2025-01-09T14:59:46Z"
    name: helloworld-go
    namespace: serving-tests
    ownerReferences:
    - apiVersion: serving.knative.dev/v1
      blockOwnerDeletion: true
      controller: true
      kind: Route
      name: helloworld-go
      uid: df3f94ba-08f4-4e25-a0ce-a05da7e31e86
    resourceVersion: "53727"
    uid: 2b26fda7-cfeb-4933-af19-f2fb50089595
  spec:
    externalName: knative-local-gateway.istio-system.svc.cluster.local
    ports:
    - name: http2
      port: 80
      protocol: TCP
      targetPort: 80
    sessionAffinity: None
    type: ExternalName
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      autoscaling.knative.dev/class: kpa.autoscaling.knative.dev
      autoscaling.knative.dev/minScale: "1"
      autoscaling.knative.dev/target: "10"
      serving.knative.dev/creator: system:admin
      sidecar.istio.io/inject: "true"
      sidecar.istio.io/rewriteAppHTTPProbers: "true"
    creationTimestamp: "2025-01-09T14:59:40Z"
    labels:
      app: helloworld-go
      networking.internal.knative.dev/serverlessservice: helloworld-go-00001
      networking.internal.knative.dev/serviceType: Public
      serving.knative.dev/configuration: helloworld-go
      serving.knative.dev/configurationGeneration: "1"
      serving.knative.dev/configurationUID: d8b4cafc-e336-457b-abc6-86dba0837c51
      serving.knative.dev/revision: helloworld-go-00001
      serving.knative.dev/revisionUID: 772bf5ab-4091-44df-ba8a-1ee4d6ea97b9
      serving.knative.dev/service: helloworld-go
      serving.knative.dev/serviceUID: 79f8a230-4abb-4fe0-9275-ba946e239b2f
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:autoscaling.knative.dev/class: {}
            f:autoscaling.knative.dev/minScale: {}
            f:autoscaling.knative.dev/target: {}
            f:serving.knative.dev/creator: {}
            f:sidecar.istio.io/inject: {}
            f:sidecar.istio.io/rewriteAppHTTPProbers: {}
          f:labels:
            .: {}
            f:app: {}
            f:networking.internal.knative.dev/serverlessservice: {}
            f:networking.internal.knative.dev/serviceType: {}
            f:serving.knative.dev/configuration: {}
            f:serving.knative.dev/configurationGeneration: {}
            f:serving.knative.dev/configurationUID: {}
            f:serving.knative.dev/revision: {}
            f:serving.knative.dev/revisionUID: {}
            f:serving.knative.dev/service: {}
            f:serving.knative.dev/serviceUID: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4fc98e3c-d7e4-4396-a71b-7f64f46c28b2"}: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":80,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":443,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: controller
      operation: Update
      time: "2025-01-09T14:59:40Z"
    name: helloworld-go-00001
    namespace: serving-tests
    ownerReferences:
    - apiVersion: networking.internal.knative.dev/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: ServerlessService
      name: helloworld-go-00001
      uid: 4fc98e3c-d7e4-4396-a71b-7f64f46c28b2
    resourceVersion: "53612"
    uid: ea829b96-4ee1-49ec-aa96-677756255dd2
  spec:
    clusterIP: 172.30.153.70
    clusterIPs:
    - 172.30.153.70
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8012
    - name: https
      port: 443
      protocol: TCP
      targetPort: 8112
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      autoscaling.knative.dev/class: kpa.autoscaling.knative.dev
      autoscaling.knative.dev/minScale: "1"
      autoscaling.knative.dev/target: "10"
      serving.knative.dev/creator: system:admin
      sidecar.istio.io/inject: "true"
      sidecar.istio.io/rewriteAppHTTPProbers: "true"
    creationTimestamp: "2025-01-09T14:59:40Z"
    labels:
      app: helloworld-go
      networking.internal.knative.dev/serverlessservice: helloworld-go-00001
      networking.internal.knative.dev/serviceType: Private
      serving.knative.dev/configuration: helloworld-go
      serving.knative.dev/configurationGeneration: "1"
      serving.knative.dev/configurationUID: d8b4cafc-e336-457b-abc6-86dba0837c51
      serving.knative.dev/revision: helloworld-go-00001
      serving.knative.dev/revisionUID: 772bf5ab-4091-44df-ba8a-1ee4d6ea97b9
      serving.knative.dev/service: helloworld-go
      serving.knative.dev/serviceUID: 79f8a230-4abb-4fe0-9275-ba946e239b2f
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:autoscaling.knative.dev/class: {}
            f:autoscaling.knative.dev/minScale: {}
            f:autoscaling.knative.dev/target: {}
            f:serving.knative.dev/creator: {}
            f:sidecar.istio.io/inject: {}
            f:sidecar.istio.io/rewriteAppHTTPProbers: {}
          f:labels:
            .: {}
            f:app: {}
            f:networking.internal.knative.dev/serverlessservice: {}
            f:networking.internal.knative.dev/serviceType: {}
            f:serving.knative.dev/configuration: {}
            f:serving.knative.dev/configurationGeneration: {}
            f:serving.knative.dev/configurationUID: {}
            f:serving.knative.dev/revision: {}
            f:serving.knative.dev/revisionUID: {}
            f:serving.knative.dev/service: {}
            f:serving.knative.dev/serviceUID: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4fc98e3c-d7e4-4396-a71b-7f64f46c28b2"}: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":80,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":443,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":8012,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":8022,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":9090,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":9091,"protocol":"TCP"}:
              .: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: controller
      operation: Update
      time: "2025-01-09T14:59:40Z"
    name: helloworld-go-00001-private
    namespace: serving-tests
    ownerReferences:
    - apiVersion: networking.internal.knative.dev/v1alpha1
      blockOwnerDeletion: true
      controller: true
      kind: ServerlessService
      name: helloworld-go-00001
      uid: 4fc98e3c-d7e4-4396-a71b-7f64f46c28b2
    resourceVersion: "53608"
    uid: a94187c6-980f-4ce4-833a-0d37e4fde1f0
  spec:
    clusterIP: 172.30.210.174
    clusterIPs:
    - 172.30.210.174
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8012
    - name: https
      port: 443
      protocol: TCP
      targetPort: 8112
    - name: http-autometric
      port: 9090
      protocol: TCP
      targetPort: http-autometric
    - name: http-usermetric
      port: 9091
      protocol: TCP
      targetPort: http-usermetric
    - name: http-queueadm
      port: 8022
      protocol: TCP
      targetPort: 8022
    - name: http-istio
      port: 8012
      protocol: TCP
      targetPort: 8012
    selector:
      serving.knative.dev/revisionUID: 772bf5ab-4091-44df-ba8a-1ee4d6ea97b9
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"role":"webhook","samples.knative.dev/release":"devel"},"name":"webhook","namespace":"serving-tests"},"spec":{"ports":[{"port":443,"targetPort":8443}],"selector":{"role":"webhook"}}}
    creationTimestamp: "2025-01-09T14:58:17Z"
    labels:
      role: webhook
      samples.knative.dev/release: devel
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:role: {}
            f:samples.knative.dev/release: {}
        f:spec:
          f:internalTrafficPolicy: {}
          f:ports:
            .: {}
            k:{"port":443,"protocol":"TCP"}:
              .: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: "2025-01-09T14:58:17Z"
    name: webhook
    namespace: serving-tests
    resourceVersion: "51766"
    uid: cdef2594-5b2d-4fd1-8f37-acbdc3675caf
  spec:
    clusterIP: 172.30.129.130
    clusterIPs:
    - 172.30.129.130
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 443
      protocol: TCP
      targetPort: 8443
    selector:
      role: webhook
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
kind: ServiceList
metadata:
  resourceVersion: "60835"
