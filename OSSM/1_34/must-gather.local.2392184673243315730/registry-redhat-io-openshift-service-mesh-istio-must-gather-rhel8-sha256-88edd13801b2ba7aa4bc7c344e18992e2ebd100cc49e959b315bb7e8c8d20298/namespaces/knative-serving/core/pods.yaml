---
apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.2.17/23"],"mac_address":"0a:58:0a:81:02:11","gateway_ips":["10.129.2.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.2.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.2.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.2.1"}],"ip_address":"10.129.2.17/23","gateway_ip":"10.129.2.1","role":"primary"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.2.17"
            ],
            "mac": "0a:58:0a:81:02:11",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks: v2-4-istio-cni
      kubectl.kubernetes.io/default-container: activator
      kubectl.kubernetes.io/default-logs-container: activator
      openshift.io/scc: restricted-v2
      prometheus.io/path: /stats/prometheus
      prometheus.io/port: "15020"
      prometheus.io/scrape: "true"
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
      sidecar.istio.io/inject: "true"
      sidecar.istio.io/interceptionMode: REDIRECT
      sidecar.istio.io/rewriteAppHTTPProbers: "true"
      sidecar.istio.io/status: '{"initContainers":null,"containers":["istio-proxy"],"volumes":["workload-socket","credential-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istiod-ca-cert"],"imagePullSecrets":null,"revision":"basic"}'
      traffic.sidecar.istio.io/excludeInboundPorts: 15090,8444,8022,15021
      traffic.sidecar.istio.io/includeInboundPorts: '*'
      traffic.sidecar.istio.io/includeOutboundIPRanges: '*'
    creationTimestamp: "2025-01-09T14:58:22Z"
    generateName: activator-57c5775dc-
    labels:
      app: activator
      app.kubernetes.io/component: activator
      app.kubernetes.io/name: knative-serving
      app.kubernetes.io/version: release-v1.14
      failure-domain.beta.kubernetes.io/region: us-east-1
      failure-domain.beta.kubernetes.io/zone: us-east-1d
      maistra-version: 2.4.13
      pod-template-hash: 57c5775dc
      role: activator
      security.istio.io/tlsMode: istio
      service.istio.io/canonical-name: knative-serving
      service.istio.io/canonical-revision: release-v1.14
      topology.istio.io/subzone: ""
      topology.kubernetes.io/region: us-east-1
      topology.kubernetes.io/zone: us-east-1d
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-118-213
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            f:failure-domain.beta.kubernetes.io/region: {}
            f:failure-domain.beta.kubernetes.io/zone: {}
            f:topology.istio.io/subzone: {}
            f:topology.kubernetes.io/region: {}
            f:topology.kubernetes.io/zone: {}
      manager: istio-operator
      operation: Update
      time: "2025-01-09T14:58:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:sidecar.istio.io/inject: {}
            f:sidecar.istio.io/rewriteAppHTTPProbers: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
            f:role: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"384167c1-12ac-4ca7-ad22-494968a9e648"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"activator"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"CONFIG_LOGGING_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CONFIG_OBSERVABILITY_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GOGC"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_MIN_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"METRICS_DOMAIN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"METRICS_PROMETHEUS_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"SYSTEM_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8008,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":8012,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":8013,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9090,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"secret-activator-sm-service-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-01-09T14:58:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.2.17"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:41Z"
    name: activator-57c5775dc-7v8qc
    namespace: knative-serving
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: activator-57c5775dc
      uid: 384167c1-12ac-4ca7-ad22-494968a9e648
    resourceVersion: "52696"
    uid: f95cda82-b938-4d88-8497-01e28db3d2b7
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app: activator
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - env:
      - name: GOGC
        value: "500"
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: SYSTEM_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CONFIG_LOGGING_NAME
        value: config-logging
      - name: CONFIG_OBSERVABILITY_NAME
        value: config-observability
      - name: METRICS_DOMAIN
        value: knative.dev/internal/serving
      - name: KUBERNETES_MIN_VERSION
        value: v1.0.0
      - name: METRICS_PROMETHEUS_HOST
        value: 127.0.0.1
      image: registry.ci.openshift.org/openshift/knative-serving-activator:knative-v1.14
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 12
        httpGet:
          path: /app-health/activator/livez
          port: 15020
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: activator
      ports:
      - containerPort: 9090
        name: metrics
        protocol: TCP
      - containerPort: 8008
        name: profiling
        protocol: TCP
      - containerPort: 8012
        name: http1
        protocol: TCP
      - containerPort: 8013
        name: h2c
        protocol: TCP
      readinessProbe:
        failureThreshold: 5
        httpGet:
          path: /app-health/activator/readyz
          port: 15020
          scheme: HTTP
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 600Mi
        requests:
          cpu: 300m
          memory: 60Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000730000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-trbjf
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:8444
      - --upstream=http://127.0.0.1:9090/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --logtostderr=true
      - --http2-disable
      - --v=0
      image: registry.ci.openshift.org/origin/4.15:kube-rbac-proxy
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000730000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-activator-sm-service-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-trbjf
        readOnly: true
    - args:
      - proxy
      - sidecar
      - --domain
      - $(POD_NAMESPACE).svc.cluster.local
      - --proxyLogLevel=warning
      - --proxyComponentLogLevel=misc:error
      - --log_output_level=default:warn
      - --concurrency
      - "2"
      env:
      - name: JWT_POLICY
        value: first-party-jwt
      - name: PILOT_CERT_PROVIDER
        value: istiod
      - name: CA_ADDR
        value: istiod-basic.istio-system.svc:15012
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: INSTANCE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: SERVICE_ACCOUNT
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.serviceAccountName
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: PROXY_CONFIG
        value: |
          {"discoveryAddress":"istiod-basic.istio-system.svc:15012","proxyMetadata":{"ISTIO_META_DNS_AUTO_ALLOCATE":"true","ISTIO_META_DNS_CAPTURE":"true","PROXY_XDS_VIA_AGENT":"true"},"terminationDrainDuration":"35s"}
      - name: ISTIO_META_POD_PORTS
        value: |-
          [
              {"name":"metrics","containerPort":9090,"protocol":"TCP"}
              ,{"name":"profiling","containerPort":8008,"protocol":"TCP"}
              ,{"name":"http1","containerPort":8012,"protocol":"TCP"}
              ,{"name":"h2c","containerPort":8013,"protocol":"TCP"}
          ]
      - name: ISTIO_META_APP_CONTAINERS
        value: activator,kube-rbac-proxy
      - name: ISTIO_META_CLUSTER_ID
        value: Kubernetes
      - name: ISTIO_META_INTERCEPTION_MODE
        value: REDIRECT
      - name: ISTIO_META_WORKLOAD_NAME
        value: activator
      - name: ISTIO_META_OWNER
        value: kubernetes://apis/apps/v1/namespaces/knative-serving/deployments/activator
      - name: ISTIO_META_MESH_ID
        value: cluster.local
      - name: TRUST_DOMAIN
        value: cluster.local
      - name: ISTIO_META_DNS_AUTO_ALLOCATE
        value: "true"
      - name: ISTIO_META_DNS_CAPTURE
        value: "true"
      - name: PROXY_XDS_VIA_AGENT
        value: "true"
      - name: ISTIO_KUBE_APP_PROBERS
        value: '{"/app-health/activator/livez":{"httpGet":{"path":"/","port":8012,"scheme":"HTTP"},"timeoutSeconds":1},"/app-health/activator/readyz":{"httpGet":{"path":"/","port":8012,"scheme":"HTTP"},"timeoutSeconds":1}}'
      image: registry.redhat.io/openshift-service-mesh/proxyv2-rhel8@sha256:4580f9a5da2c0ff7c881703095ab946b896f1703b6140c79091301648304cc37
      imagePullPolicy: IfNotPresent
      name: istio-proxy
      ports:
      - containerPort: 15090
        name: http-envoy-prom
        protocol: TCP
      readinessProbe:
        failureThreshold: 30
        httpGet:
          path: /healthz/ready
          port: 15021
          scheme: HTTP
        initialDelaySeconds: 1
        periodSeconds: 2
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 10m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1000730001
        runAsNonRoot: true
        runAsUser: 1000730001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/workload-spiffe-uds
        name: workload-socket
      - mountPath: /var/run/secrets/credential-uds
        name: credential-socket
      - mountPath: /var/run/secrets/workload-spiffe-credentials
        name: workload-certs
      - mountPath: /var/run/secrets/istio
        name: istiod-ca-cert
      - mountPath: /var/lib/istio/data
        name: istio-data
      - mountPath: /etc/istio/proxy
        name: istio-envoy
      - mountPath: /etc/istio/pod
        name: istio-podinfo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-trbjf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: activator-dockercfg-f2dxq
    nodeName: ip-10-0-118-213.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000730000
      seLinuxOptions:
        level: s0:c27,c14
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: activator
    serviceAccountName: activator
    terminationGracePeriodSeconds: 600
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - emptyDir: {}
      name: workload-socket
    - emptyDir: {}
      name: credential-socket
    - emptyDir: {}
      name: workload-certs
    - emptyDir:
        medium: Memory
      name: istio-envoy
    - emptyDir: {}
      name: istio-data
    - downwardAPI:
        defaultMode: 420
        items:
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.labels
          path: labels
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations
          path: annotations
      name: istio-podinfo
    - configMap:
        defaultMode: 420
        name: istio-ca-root-cert
      name: istiod-ca-cert
    - name: secret-activator-sm-service-tls
      secret:
        defaultMode: 420
        secretName: activator-sm-service-tls
    - name: kube-api-access-trbjf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:39Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:22Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:22Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://5ad05be972bcd6da66def7794c9b0ea6ff160c9a74b5d2d3e482e9050f356604
      image: registry.ci.openshift.org/openshift/knative-serving-activator:knative-v1.14
      imageID: registry.ci.openshift.org/openshift/knative-serving-activator@sha256:b8f1d09f3ad4c66cc5670debf35f86cbd5ac63245316302e7bf49f0013b94590
      lastState: {}
      name: activator
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-09T14:58:33Z"
    - containerID: cri-o://e39e5d7871184720bb594e92b71137cc2495db7b37d7ef1137bd2a7ca2e4d13c
      image: registry.redhat.io/openshift-service-mesh/proxyv2-rhel8@sha256:4580f9a5da2c0ff7c881703095ab946b896f1703b6140c79091301648304cc37
      imageID: registry.redhat.io/openshift-service-mesh/proxyv2-rhel8@sha256:4580f9a5da2c0ff7c881703095ab946b896f1703b6140c79091301648304cc37
      lastState: {}
      name: istio-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-09T14:58:39Z"
    - containerID: cri-o://225dd10a9f278eafe0c7ba1ae6bdc705b7349ed3c4ae10e581d3ac22eac73e03
      image: registry.ci.openshift.org/origin/4.15:kube-rbac-proxy
      imageID: registry.ci.openshift.org/origin/4.15@sha256:e2def4213ec0657e72eb790ae8a115511d5b8f164a62d3568d2f1bff189917e8
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-09T14:58:39Z"
    hostIP: 10.0.118.213
    hostIPs:
    - ip: 10.0.118.213
    phase: Running
    podIP: 10.129.2.17
    podIPs:
    - ip: 10.129.2.17
    qosClass: Burstable
    startTime: "2025-01-09T14:58:22Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.131.0.26/23"],"mac_address":"0a:58:0a:83:00:1a","gateway_ips":["10.131.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.131.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.131.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.131.0.1"}],"ip_address":"10.131.0.26/23","gateway_ip":"10.131.0.1","role":"primary"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.131.0.26"
            ],
            "mac": "0a:58:0a:83:00:1a",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks: v2-4-istio-cni
      kubectl.kubernetes.io/default-container: activator
      kubectl.kubernetes.io/default-logs-container: activator
      openshift.io/scc: restricted-v2
      prometheus.io/path: /stats/prometheus
      prometheus.io/port: "15020"
      prometheus.io/scrape: "true"
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
      sidecar.istio.io/inject: "true"
      sidecar.istio.io/interceptionMode: REDIRECT
      sidecar.istio.io/rewriteAppHTTPProbers: "true"
      sidecar.istio.io/status: '{"initContainers":null,"containers":["istio-proxy"],"volumes":["workload-socket","credential-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istiod-ca-cert"],"imagePullSecrets":null,"revision":"basic"}'
      traffic.sidecar.istio.io/excludeInboundPorts: 15090,8444,8022,15021
      traffic.sidecar.istio.io/includeInboundPorts: '*'
      traffic.sidecar.istio.io/includeOutboundIPRanges: '*'
    creationTimestamp: "2025-01-09T14:58:36Z"
    generateName: activator-57c5775dc-
    labels:
      app: activator
      app.kubernetes.io/component: activator
      app.kubernetes.io/name: knative-serving
      app.kubernetes.io/version: release-v1.14
      failure-domain.beta.kubernetes.io/region: us-east-1
      failure-domain.beta.kubernetes.io/zone: us-east-1b
      maistra-version: 2.4.13
      pod-template-hash: 57c5775dc
      role: activator
      security.istio.io/tlsMode: istio
      service.istio.io/canonical-name: knative-serving
      service.istio.io/canonical-revision: release-v1.14
      topology.istio.io/subzone: ""
      topology.kubernetes.io/region: us-east-1
      topology.kubernetes.io/zone: us-east-1b
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            f:failure-domain.beta.kubernetes.io/region: {}
            f:failure-domain.beta.kubernetes.io/zone: {}
            f:topology.istio.io/subzone: {}
            f:topology.kubernetes.io/region: {}
            f:topology.kubernetes.io/zone: {}
      manager: istio-operator
      operation: Update
      time: "2025-01-09T14:58:36Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:sidecar.istio.io/inject: {}
            f:sidecar.istio.io/rewriteAppHTTPProbers: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
            f:role: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"384167c1-12ac-4ca7-ad22-494968a9e648"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"activator"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"CONFIG_LOGGING_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CONFIG_OBSERVABILITY_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"GOGC"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_MIN_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"METRICS_DOMAIN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"METRICS_PROMETHEUS_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"SYSTEM_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8008,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":8012,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":8013,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9090,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"secret-activator-sm-service-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-01-09T14:58:36Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-63-72
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:38Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.131.0.26"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:57Z"
    name: activator-57c5775dc-zxbg9
    namespace: knative-serving
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: activator-57c5775dc
      uid: 384167c1-12ac-4ca7-ad22-494968a9e648
    resourceVersion: "53076"
    uid: 4451f417-1bf7-4d73-a4c7-a66cac153e4e
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app: activator
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - env:
      - name: GOGC
        value: "500"
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: SYSTEM_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CONFIG_LOGGING_NAME
        value: config-logging
      - name: CONFIG_OBSERVABILITY_NAME
        value: config-observability
      - name: METRICS_DOMAIN
        value: knative.dev/internal/serving
      - name: KUBERNETES_MIN_VERSION
        value: v1.0.0
      - name: METRICS_PROMETHEUS_HOST
        value: 127.0.0.1
      image: registry.ci.openshift.org/openshift/knative-serving-activator:knative-v1.14
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 12
        httpGet:
          path: /app-health/activator/livez
          port: 15020
          scheme: HTTP
        initialDelaySeconds: 15
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: activator
      ports:
      - containerPort: 9090
        name: metrics
        protocol: TCP
      - containerPort: 8008
        name: profiling
        protocol: TCP
      - containerPort: 8012
        name: http1
        protocol: TCP
      - containerPort: 8013
        name: h2c
        protocol: TCP
      readinessProbe:
        failureThreshold: 5
        httpGet:
          path: /app-health/activator/readyz
          port: 15020
          scheme: HTTP
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 600Mi
        requests:
          cpu: 300m
          memory: 60Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000730000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zhdm6
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:8444
      - --upstream=http://127.0.0.1:9090/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --logtostderr=true
      - --http2-disable
      - --v=0
      image: registry.ci.openshift.org/origin/4.15:kube-rbac-proxy
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000730000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-activator-sm-service-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zhdm6
        readOnly: true
    - args:
      - proxy
      - sidecar
      - --domain
      - $(POD_NAMESPACE).svc.cluster.local
      - --proxyLogLevel=warning
      - --proxyComponentLogLevel=misc:error
      - --log_output_level=default:warn
      - --concurrency
      - "2"
      env:
      - name: JWT_POLICY
        value: first-party-jwt
      - name: PILOT_CERT_PROVIDER
        value: istiod
      - name: CA_ADDR
        value: istiod-basic.istio-system.svc:15012
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: INSTANCE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: SERVICE_ACCOUNT
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.serviceAccountName
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: PROXY_CONFIG
        value: |
          {"discoveryAddress":"istiod-basic.istio-system.svc:15012","proxyMetadata":{"ISTIO_META_DNS_AUTO_ALLOCATE":"true","ISTIO_META_DNS_CAPTURE":"true","PROXY_XDS_VIA_AGENT":"true"},"terminationDrainDuration":"35s"}
      - name: ISTIO_META_POD_PORTS
        value: |-
          [
              {"name":"metrics","containerPort":9090,"protocol":"TCP"}
              ,{"name":"profiling","containerPort":8008,"protocol":"TCP"}
              ,{"name":"http1","containerPort":8012,"protocol":"TCP"}
              ,{"name":"h2c","containerPort":8013,"protocol":"TCP"}
          ]
      - name: ISTIO_META_APP_CONTAINERS
        value: activator,kube-rbac-proxy
      - name: ISTIO_META_CLUSTER_ID
        value: Kubernetes
      - name: ISTIO_META_INTERCEPTION_MODE
        value: REDIRECT
      - name: ISTIO_META_WORKLOAD_NAME
        value: activator
      - name: ISTIO_META_OWNER
        value: kubernetes://apis/apps/v1/namespaces/knative-serving/deployments/activator
      - name: ISTIO_META_MESH_ID
        value: cluster.local
      - name: TRUST_DOMAIN
        value: cluster.local
      - name: ISTIO_META_DNS_AUTO_ALLOCATE
        value: "true"
      - name: ISTIO_META_DNS_CAPTURE
        value: "true"
      - name: PROXY_XDS_VIA_AGENT
        value: "true"
      - name: ISTIO_KUBE_APP_PROBERS
        value: '{"/app-health/activator/livez":{"httpGet":{"path":"/","port":8012,"scheme":"HTTP"},"timeoutSeconds":1},"/app-health/activator/readyz":{"httpGet":{"path":"/","port":8012,"scheme":"HTTP"},"timeoutSeconds":1}}'
      image: registry.redhat.io/openshift-service-mesh/proxyv2-rhel8@sha256:4580f9a5da2c0ff7c881703095ab946b896f1703b6140c79091301648304cc37
      imagePullPolicy: IfNotPresent
      name: istio-proxy
      ports:
      - containerPort: 15090
        name: http-envoy-prom
        protocol: TCP
      readinessProbe:
        failureThreshold: 30
        httpGet:
          path: /healthz/ready
          port: 15021
          scheme: HTTP
        initialDelaySeconds: 1
        periodSeconds: 2
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 10m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1000730001
        runAsNonRoot: true
        runAsUser: 1000730001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/workload-spiffe-uds
        name: workload-socket
      - mountPath: /var/run/secrets/credential-uds
        name: credential-socket
      - mountPath: /var/run/secrets/workload-spiffe-credentials
        name: workload-certs
      - mountPath: /var/run/secrets/istio
        name: istiod-ca-cert
      - mountPath: /var/lib/istio/data
        name: istio-data
      - mountPath: /etc/istio/proxy
        name: istio-envoy
      - mountPath: /etc/istio/pod
        name: istio-podinfo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zhdm6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: activator-dockercfg-f2dxq
    nodeName: ip-10-0-63-72.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000730000
      seLinuxOptions:
        level: s0:c27,c14
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: activator
    serviceAccountName: activator
    terminationGracePeriodSeconds: 600
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - emptyDir: {}
      name: workload-socket
    - emptyDir: {}
      name: credential-socket
    - emptyDir: {}
      name: workload-certs
    - emptyDir:
        medium: Memory
      name: istio-envoy
    - emptyDir: {}
      name: istio-data
    - downwardAPI:
        defaultMode: 420
        items:
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.labels
          path: labels
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations
          path: annotations
      name: istio-podinfo
    - configMap:
        defaultMode: 420
        name: istio-ca-root-cert
      name: istiod-ca-cert
    - name: secret-activator-sm-service-tls
      secret:
        defaultMode: 420
        secretName: activator-sm-service-tls
    - name: kube-api-access-zhdm6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:56Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://4eb61ed057a7458ece61e2ae06554df77fb8da82feb5a35c11e1ad08dc471477
      image: registry.ci.openshift.org/openshift/knative-serving-activator:knative-v1.14
      imageID: registry.ci.openshift.org/openshift/knative-serving-activator@sha256:b8f1d09f3ad4c66cc5670debf35f86cbd5ac63245316302e7bf49f0013b94590
      lastState: {}
      name: activator
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-09T14:58:43Z"
    - containerID: cri-o://064bcd705650ada88bf00481275c4f75dfdb04053c11548eb6e7e84fc0a5dd1f
      image: registry.redhat.io/openshift-service-mesh/proxyv2-rhel8@sha256:4580f9a5da2c0ff7c881703095ab946b896f1703b6140c79091301648304cc37
      imageID: registry.redhat.io/openshift-service-mesh/proxyv2-rhel8@sha256:4580f9a5da2c0ff7c881703095ab946b896f1703b6140c79091301648304cc37
      lastState: {}
      name: istio-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-09T14:58:55Z"
    - containerID: cri-o://48c9c7781e6e66a4b9868f46f5b3c05513b9b546d801b21c142372965e03fba3
      image: registry.ci.openshift.org/origin/4.15:kube-rbac-proxy
      imageID: registry.ci.openshift.org/origin/4.15@sha256:e2def4213ec0657e72eb790ae8a115511d5b8f164a62d3568d2f1bff189917e8
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-09T14:58:44Z"
    hostIP: 10.0.63.72
    hostIPs:
    - ip: 10.0.63.72
    phase: Running
    podIP: 10.131.0.26
    podIPs:
    - ip: 10.131.0.26
    qosClass: Burstable
    startTime: "2025-01-09T14:58:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.2.19/23"],"mac_address":"0a:58:0a:81:02:13","gateway_ips":["10.129.2.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.2.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.2.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.2.1"}],"ip_address":"10.129.2.19/23","gateway_ip":"10.129.2.1","role":"primary"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.2.19"
            ],
            "mac": "0a:58:0a:81:02:13",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks: v2-4-istio-cni
      kubectl.kubernetes.io/default-container: autoscaler
      kubectl.kubernetes.io/default-logs-container: autoscaler
      openshift.io/scc: restricted-v2
      prometheus.io/path: /stats/prometheus
      prometheus.io/port: "15020"
      prometheus.io/scrape: "true"
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
      sidecar.istio.io/inject: "true"
      sidecar.istio.io/interceptionMode: REDIRECT
      sidecar.istio.io/rewriteAppHTTPProbers: "true"
      sidecar.istio.io/status: '{"initContainers":null,"containers":["istio-proxy"],"volumes":["workload-socket","credential-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istiod-ca-cert"],"imagePullSecrets":null,"revision":"basic"}'
      traffic.sidecar.istio.io/excludeInboundPorts: 15090,8444,8022,15021
      traffic.sidecar.istio.io/includeInboundPorts: '*'
      traffic.sidecar.istio.io/includeOutboundIPRanges: '*'
    creationTimestamp: "2025-01-09T14:58:22Z"
    generateName: autoscaler-67654f944f-
    labels:
      app: autoscaler
      app.kubernetes.io/component: autoscaler
      app.kubernetes.io/name: knative-serving
      app.kubernetes.io/version: release-v1.14
      failure-domain.beta.kubernetes.io/region: us-east-1
      failure-domain.beta.kubernetes.io/zone: us-east-1d
      maistra-version: 2.4.13
      pod-template-hash: 67654f944f
      security.istio.io/tlsMode: istio
      service.istio.io/canonical-name: knative-serving
      service.istio.io/canonical-revision: release-v1.14
      topology.istio.io/subzone: ""
      topology.kubernetes.io/region: us-east-1
      topology.kubernetes.io/zone: us-east-1d
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-118-213
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            f:failure-domain.beta.kubernetes.io/region: {}
            f:failure-domain.beta.kubernetes.io/zone: {}
            f:topology.istio.io/subzone: {}
            f:topology.kubernetes.io/region: {}
            f:topology.kubernetes.io/zone: {}
      manager: istio-operator
      operation: Update
      time: "2025-01-09T14:58:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:sidecar.istio.io/inject: {}
            f:sidecar.istio.io/rewriteAppHTTPProbers: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c5d80ef8-7926-4fdf-96ff-c4d3f2eb2284"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"autoscaler"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"CONFIG_LOGGING_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CONFIG_OBSERVABILITY_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_MIN_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"METRICS_DOMAIN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"METRICS_PROMETHEUS_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"SYSTEM_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8008,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9090,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"secret-autoscaler-sm-service-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-01-09T14:58:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.2.19"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:40Z"
    name: autoscaler-67654f944f-nkv26
    namespace: knative-serving
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: autoscaler-67654f944f
      uid: c5d80ef8-7926-4fdf-96ff-c4d3f2eb2284
    resourceVersion: "52617"
    uid: acbd9c52-c1e0-41ae-a814-f556f0e33d87
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app: autoscaler
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: SYSTEM_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CONFIG_LOGGING_NAME
        value: config-logging
      - name: CONFIG_OBSERVABILITY_NAME
        value: config-observability
      - name: METRICS_DOMAIN
        value: knative.dev/serving
      - name: KUBERNETES_MIN_VERSION
        value: v1.0.0
      - name: METRICS_PROMETHEUS_HOST
        value: 127.0.0.1
      image: registry.ci.openshift.org/openshift/knative-serving-autoscaler:knative-v1.14
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /app-health/autoscaler/livez
          port: 15020
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: autoscaler
      ports:
      - containerPort: 9090
        name: metrics
        protocol: TCP
      - containerPort: 8008
        name: profiling
        protocol: TCP
      - containerPort: 8080
        name: websocket
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /app-health/autoscaler/readyz
          port: 15020
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1000Mi
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000730000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j54sx
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:8444
      - --upstream=http://127.0.0.1:9090/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --logtostderr=true
      - --http2-disable
      - --v=0
      image: registry.ci.openshift.org/origin/4.15:kube-rbac-proxy
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000730000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-autoscaler-sm-service-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j54sx
        readOnly: true
    - args:
      - proxy
      - sidecar
      - --domain
      - $(POD_NAMESPACE).svc.cluster.local
      - --proxyLogLevel=warning
      - --proxyComponentLogLevel=misc:error
      - --log_output_level=default:warn
      - --concurrency
      - "2"
      env:
      - name: JWT_POLICY
        value: first-party-jwt
      - name: PILOT_CERT_PROVIDER
        value: istiod
      - name: CA_ADDR
        value: istiod-basic.istio-system.svc:15012
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: INSTANCE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: SERVICE_ACCOUNT
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.serviceAccountName
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: PROXY_CONFIG
        value: |
          {"discoveryAddress":"istiod-basic.istio-system.svc:15012","proxyMetadata":{"ISTIO_META_DNS_AUTO_ALLOCATE":"true","ISTIO_META_DNS_CAPTURE":"true","PROXY_XDS_VIA_AGENT":"true"},"terminationDrainDuration":"35s"}
      - name: ISTIO_META_POD_PORTS
        value: |-
          [
              {"name":"metrics","containerPort":9090,"protocol":"TCP"}
              ,{"name":"profiling","containerPort":8008,"protocol":"TCP"}
              ,{"name":"websocket","containerPort":8080,"protocol":"TCP"}
          ]
      - name: ISTIO_META_APP_CONTAINERS
        value: autoscaler,kube-rbac-proxy
      - name: ISTIO_META_CLUSTER_ID
        value: Kubernetes
      - name: ISTIO_META_INTERCEPTION_MODE
        value: REDIRECT
      - name: ISTIO_META_WORKLOAD_NAME
        value: autoscaler
      - name: ISTIO_META_OWNER
        value: kubernetes://apis/apps/v1/namespaces/knative-serving/deployments/autoscaler
      - name: ISTIO_META_MESH_ID
        value: cluster.local
      - name: TRUST_DOMAIN
        value: cluster.local
      - name: ISTIO_META_DNS_AUTO_ALLOCATE
        value: "true"
      - name: ISTIO_META_DNS_CAPTURE
        value: "true"
      - name: PROXY_XDS_VIA_AGENT
        value: "true"
      - name: ISTIO_KUBE_APP_PROBERS
        value: '{"/app-health/autoscaler/livez":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"timeoutSeconds":1},"/app-health/autoscaler/readyz":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"timeoutSeconds":1}}'
      image: registry.redhat.io/openshift-service-mesh/proxyv2-rhel8@sha256:4580f9a5da2c0ff7c881703095ab946b896f1703b6140c79091301648304cc37
      imagePullPolicy: IfNotPresent
      name: istio-proxy
      ports:
      - containerPort: 15090
        name: http-envoy-prom
        protocol: TCP
      readinessProbe:
        failureThreshold: 30
        httpGet:
          path: /healthz/ready
          port: 15021
          scheme: HTTP
        initialDelaySeconds: 1
        periodSeconds: 2
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 10m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1000730001
        runAsNonRoot: true
        runAsUser: 1000730001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/workload-spiffe-uds
        name: workload-socket
      - mountPath: /var/run/secrets/credential-uds
        name: credential-socket
      - mountPath: /var/run/secrets/workload-spiffe-credentials
        name: workload-certs
      - mountPath: /var/run/secrets/istio
        name: istiod-ca-cert
      - mountPath: /var/lib/istio/data
        name: istio-data
      - mountPath: /etc/istio/proxy
        name: istio-envoy
      - mountPath: /etc/istio/pod
        name: istio-podinfo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j54sx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: controller-dockercfg-z7jv8
    nodeName: ip-10-0-118-213.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000730000
      seLinuxOptions:
        level: s0:c27,c14
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: controller
    serviceAccountName: controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - emptyDir: {}
      name: workload-socket
    - emptyDir: {}
      name: credential-socket
    - emptyDir: {}
      name: workload-certs
    - emptyDir:
        medium: Memory
      name: istio-envoy
    - emptyDir: {}
      name: istio-data
    - downwardAPI:
        defaultMode: 420
        items:
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.labels
          path: labels
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations
          path: annotations
      name: istio-podinfo
    - configMap:
        defaultMode: 420
        name: istio-ca-root-cert
      name: istiod-ca-cert
    - name: secret-autoscaler-sm-service-tls
      secret:
        defaultMode: 420
        secretName: autoscaler-sm-service-tls
    - name: kube-api-access-j54sx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:39Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:22Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:22Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://7337ff856d4f9f8b693d99ff1246c64a096b5c8335950bd025b01320104cbb0a
      image: registry.ci.openshift.org/openshift/knative-serving-autoscaler:knative-v1.14
      imageID: registry.ci.openshift.org/openshift/knative-serving-autoscaler@sha256:3273991f2f718b1d06b9937c71513569a8ca7b237aa16e9630b06cb0c06ef0e4
      lastState: {}
      name: autoscaler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-09T14:58:33Z"
    - containerID: cri-o://7fc0505c1b85be69d43120869a2a537ec90efa859dbf5ecd331521688ddca34d
      image: registry.redhat.io/openshift-service-mesh/proxyv2-rhel8@sha256:4580f9a5da2c0ff7c881703095ab946b896f1703b6140c79091301648304cc37
      imageID: registry.redhat.io/openshift-service-mesh/proxyv2-rhel8@sha256:4580f9a5da2c0ff7c881703095ab946b896f1703b6140c79091301648304cc37
      lastState: {}
      name: istio-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-09T14:58:39Z"
    - containerID: cri-o://0b8afc50d88c5cc2b032c42a17196e6d3c308bf7fd0b0f82c75909ee412e799b
      image: registry.ci.openshift.org/origin/4.15:kube-rbac-proxy
      imageID: registry.ci.openshift.org/origin/4.15@sha256:e2def4213ec0657e72eb790ae8a115511d5b8f164a62d3568d2f1bff189917e8
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-09T14:58:39Z"
    hostIP: 10.0.118.213
    hostIPs:
    - ip: 10.0.118.213
    phase: Running
    podIP: 10.129.2.19
    podIPs:
    - ip: 10.129.2.19
    qosClass: Burstable
    startTime: "2025-01-09T14:58:22Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.2.32/23"],"mac_address":"0a:58:0a:80:02:20","gateway_ips":["10.128.2.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.2.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.2.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.2.1"}],"ip_address":"10.128.2.32/23","gateway_ip":"10.128.2.1","role":"primary"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.2.32"
            ],
            "mac": "0a:58:0a:80:02:20",
            "default": true,
            "dns": {}
        }]
      k8s.v1.cni.cncf.io/networks: v2-4-istio-cni
      kubectl.kubernetes.io/default-container: autoscaler
      kubectl.kubernetes.io/default-logs-container: autoscaler
      openshift.io/scc: restricted-v2
      prometheus.io/path: /stats/prometheus
      prometheus.io/port: "15020"
      prometheus.io/scrape: "true"
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
      sidecar.istio.io/inject: "true"
      sidecar.istio.io/interceptionMode: REDIRECT
      sidecar.istio.io/rewriteAppHTTPProbers: "true"
      sidecar.istio.io/status: '{"initContainers":null,"containers":["istio-proxy"],"volumes":["workload-socket","credential-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istiod-ca-cert"],"imagePullSecrets":null,"revision":"basic"}'
      traffic.sidecar.istio.io/excludeInboundPorts: 15090,8444,8022,15021
      traffic.sidecar.istio.io/includeInboundPorts: '*'
      traffic.sidecar.istio.io/includeOutboundIPRanges: '*'
    creationTimestamp: "2025-01-09T14:58:22Z"
    generateName: autoscaler-67654f944f-
    labels:
      app: autoscaler
      app.kubernetes.io/component: autoscaler
      app.kubernetes.io/name: knative-serving
      app.kubernetes.io/version: release-v1.14
      failure-domain.beta.kubernetes.io/region: us-east-1
      failure-domain.beta.kubernetes.io/zone: us-east-1b
      maistra-version: 2.4.13
      pod-template-hash: 67654f944f
      security.istio.io/tlsMode: istio
      service.istio.io/canonical-name: knative-serving
      service.istio.io/canonical-revision: release-v1.14
      topology.istio.io/subzone: ""
      topology.kubernetes.io/region: us-east-1
      topology.kubernetes.io/zone: us-east-1b
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-25-180
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            f:failure-domain.beta.kubernetes.io/region: {}
            f:failure-domain.beta.kubernetes.io/zone: {}
            f:topology.istio.io/subzone: {}
            f:topology.kubernetes.io/region: {}
            f:topology.kubernetes.io/zone: {}
      manager: istio-operator
      operation: Update
      time: "2025-01-09T14:58:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:sidecar.istio.io/inject: {}
            f:sidecar.istio.io/rewriteAppHTTPProbers: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c5d80ef8-7926-4fdf-96ff-c4d3f2eb2284"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"autoscaler"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"CONFIG_LOGGING_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CONFIG_OBSERVABILITY_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_MIN_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"METRICS_DOMAIN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"METRICS_PROMETHEUS_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"SYSTEM_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8008,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9090,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"secret-autoscaler-sm-service-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-01-09T14:58:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.2.32"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:41Z"
    name: autoscaler-67654f944f-s7bhw
    namespace: knative-serving
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: autoscaler-67654f944f
      uid: c5d80ef8-7926-4fdf-96ff-c4d3f2eb2284
    resourceVersion: "52709"
    uid: 60792f44-3955-40fc-abfc-b66c6debd173
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app: autoscaler
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: SYSTEM_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CONFIG_LOGGING_NAME
        value: config-logging
      - name: CONFIG_OBSERVABILITY_NAME
        value: config-observability
      - name: METRICS_DOMAIN
        value: knative.dev/serving
      - name: KUBERNETES_MIN_VERSION
        value: v1.0.0
      - name: METRICS_PROMETHEUS_HOST
        value: 127.0.0.1
      image: registry.ci.openshift.org/openshift/knative-serving-autoscaler:knative-v1.14
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /app-health/autoscaler/livez
          port: 15020
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: autoscaler
      ports:
      - containerPort: 9090
        name: metrics
        protocol: TCP
      - containerPort: 8008
        name: profiling
        protocol: TCP
      - containerPort: 8080
        name: websocket
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /app-health/autoscaler/readyz
          port: 15020
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1000Mi
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000730000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n79n6
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:8444
      - --upstream=http://127.0.0.1:9090/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --logtostderr=true
      - --http2-disable
      - --v=0
      image: registry.ci.openshift.org/origin/4.15:kube-rbac-proxy
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000730000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-autoscaler-sm-service-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n79n6
        readOnly: true
    - args:
      - proxy
      - sidecar
      - --domain
      - $(POD_NAMESPACE).svc.cluster.local
      - --proxyLogLevel=warning
      - --proxyComponentLogLevel=misc:error
      - --log_output_level=default:warn
      - --concurrency
      - "2"
      env:
      - name: JWT_POLICY
        value: first-party-jwt
      - name: PILOT_CERT_PROVIDER
        value: istiod
      - name: CA_ADDR
        value: istiod-basic.istio-system.svc:15012
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: INSTANCE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: SERVICE_ACCOUNT
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.serviceAccountName
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: PROXY_CONFIG
        value: |
          {"discoveryAddress":"istiod-basic.istio-system.svc:15012","proxyMetadata":{"ISTIO_META_DNS_AUTO_ALLOCATE":"true","ISTIO_META_DNS_CAPTURE":"true","PROXY_XDS_VIA_AGENT":"true"},"terminationDrainDuration":"35s"}
      - name: ISTIO_META_POD_PORTS
        value: |-
          [
              {"name":"metrics","containerPort":9090,"protocol":"TCP"}
              ,{"name":"profiling","containerPort":8008,"protocol":"TCP"}
              ,{"name":"websocket","containerPort":8080,"protocol":"TCP"}
          ]
      - name: ISTIO_META_APP_CONTAINERS
        value: autoscaler,kube-rbac-proxy
      - name: ISTIO_META_CLUSTER_ID
        value: Kubernetes
      - name: ISTIO_META_INTERCEPTION_MODE
        value: REDIRECT
      - name: ISTIO_META_WORKLOAD_NAME
        value: autoscaler
      - name: ISTIO_META_OWNER
        value: kubernetes://apis/apps/v1/namespaces/knative-serving/deployments/autoscaler
      - name: ISTIO_META_MESH_ID
        value: cluster.local
      - name: TRUST_DOMAIN
        value: cluster.local
      - name: ISTIO_META_DNS_AUTO_ALLOCATE
        value: "true"
      - name: ISTIO_META_DNS_CAPTURE
        value: "true"
      - name: PROXY_XDS_VIA_AGENT
        value: "true"
      - name: ISTIO_KUBE_APP_PROBERS
        value: '{"/app-health/autoscaler/livez":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"timeoutSeconds":1},"/app-health/autoscaler/readyz":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"timeoutSeconds":1}}'
      image: registry.redhat.io/openshift-service-mesh/proxyv2-rhel8@sha256:4580f9a5da2c0ff7c881703095ab946b896f1703b6140c79091301648304cc37
      imagePullPolicy: IfNotPresent
      name: istio-proxy
      ports:
      - containerPort: 15090
        name: http-envoy-prom
        protocol: TCP
      readinessProbe:
        failureThreshold: 30
        httpGet:
          path: /healthz/ready
          port: 15021
          scheme: HTTP
        initialDelaySeconds: 1
        periodSeconds: 2
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        limits:
          cpu: "2"
          memory: 1Gi
        requests:
          cpu: 10m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1000730001
        runAsNonRoot: true
        runAsUser: 1000730001
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/workload-spiffe-uds
        name: workload-socket
      - mountPath: /var/run/secrets/credential-uds
        name: credential-socket
      - mountPath: /var/run/secrets/workload-spiffe-credentials
        name: workload-certs
      - mountPath: /var/run/secrets/istio
        name: istiod-ca-cert
      - mountPath: /var/lib/istio/data
        name: istio-data
      - mountPath: /etc/istio/proxy
        name: istio-envoy
      - mountPath: /etc/istio/pod
        name: istio-podinfo
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n79n6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: controller-dockercfg-z7jv8
    nodeName: ip-10-0-25-180.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000730000
      seLinuxOptions:
        level: s0:c27,c14
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: controller
    serviceAccountName: controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - emptyDir: {}
      name: workload-socket
    - emptyDir: {}
      name: credential-socket
    - emptyDir: {}
      name: workload-certs
    - emptyDir:
        medium: Memory
      name: istio-envoy
    - emptyDir: {}
      name: istio-data
    - downwardAPI:
        defaultMode: 420
        items:
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.labels
          path: labels
        - fieldRef:
            apiVersion: v1
            fieldPath: metadata.annotations
          path: annotations
      name: istio-podinfo
    - configMap:
        defaultMode: 420
        name: istio-ca-root-cert
      name: istiod-ca-cert
    - name: secret-autoscaler-sm-service-tls
      secret:
        defaultMode: 420
        secretName: autoscaler-sm-service-tls
    - name: kube-api-access-n79n6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:22Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:22Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://f331a352aeb9976e7061746c1f52c5906291582174a09816359e5bece23888b8
      image: registry.ci.openshift.org/openshift/knative-serving-autoscaler:knative-v1.14
      imageID: registry.ci.openshift.org/openshift/knative-serving-autoscaler@sha256:3273991f2f718b1d06b9937c71513569a8ca7b237aa16e9630b06cb0c06ef0e4
      lastState: {}
      name: autoscaler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-09T14:58:29Z"
    - containerID: cri-o://845294b386cf468a3c028ae5878f72bfbc228f222f146acee9a956e44c262ded
      image: registry.redhat.io/openshift-service-mesh/proxyv2-rhel8@sha256:4580f9a5da2c0ff7c881703095ab946b896f1703b6140c79091301648304cc37
      imageID: registry.redhat.io/openshift-service-mesh/proxyv2-rhel8@sha256:4580f9a5da2c0ff7c881703095ab946b896f1703b6140c79091301648304cc37
      lastState: {}
      name: istio-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-09T14:58:40Z"
    - containerID: cri-o://4fdda60aa08ff88759967f8cd180a94c80257efbef560cf19005e2858d8e303d
      image: registry.ci.openshift.org/origin/4.15:kube-rbac-proxy
      imageID: registry.ci.openshift.org/origin/4.15@sha256:e2def4213ec0657e72eb790ae8a115511d5b8f164a62d3568d2f1bff189917e8
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-09T14:58:40Z"
    hostIP: 10.0.25.180
    hostIPs:
    - ip: 10.0.25.180
    phase: Running
    podIP: 10.128.2.32
    podIPs:
    - ip: 10.128.2.32
    qosClass: Burstable
    startTime: "2025-01-09T14:58:22Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.2.33/23"],"mac_address":"0a:58:0a:80:02:21","gateway_ips":["10.128.2.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.2.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.2.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.2.1"}],"ip_address":"10.128.2.33/23","gateway_ip":"10.128.2.1","role":"primary"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.2.33"
            ],
            "mac": "0a:58:0a:80:02:21",
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-01-09T14:58:23Z"
    generateName: autoscaler-hpa-597557bd7b-
    labels:
      app: autoscaler-hpa
      app.kubernetes.io/component: autoscaler-hpa
      app.kubernetes.io/name: knative-serving
      app.kubernetes.io/version: release-v1.14
      pod-template-hash: 597557bd7b
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-25-180
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"483c8d87-da5e-43ff-ae8c-a40e343367eb"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"autoscaler-hpa"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"CONFIG_LOGGING_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CONFIG_OBSERVABILITY_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_MIN_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"METRICS_DOMAIN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"METRICS_PROMETHEUS_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SYSTEM_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8008,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9090,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"secret-autoscaler-hpa-sm-service-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-01-09T14:58:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:27Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.2.33"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:41Z"
    name: autoscaler-hpa-597557bd7b-6dsl9
    namespace: knative-serving
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: autoscaler-hpa-597557bd7b
      uid: 483c8d87-da5e-43ff-ae8c-a40e343367eb
    resourceVersion: "52697"
    uid: 040cace3-d331-4749-bc09-dca9f74952d8
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app: autoscaler-hpa
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - env:
      - name: SYSTEM_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CONFIG_LOGGING_NAME
        value: config-logging
      - name: CONFIG_OBSERVABILITY_NAME
        value: config-observability
      - name: METRICS_DOMAIN
        value: knative.dev/serving
      - name: KUBERNETES_MIN_VERSION
        value: v1.0.0
      - name: METRICS_PROMETHEUS_HOST
        value: 127.0.0.1
      image: registry.ci.openshift.org/openshift/knative-serving-autoscaler-hpa:knative-v1.14
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: probes
          scheme: HTTP
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      name: autoscaler-hpa
      ports:
      - containerPort: 9090
        name: metrics
        protocol: TCP
      - containerPort: 8008
        name: profiling
        protocol: TCP
      - containerPort: 8080
        name: probes
        protocol: TCP
      readinessProbe:
        failureThreshold: 5
        httpGet:
          path: /readiness
          port: probes
          scheme: HTTP
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 300m
          memory: 400Mi
        requests:
          cpu: 30m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000730000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wgl89
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:8444
      - --upstream=http://127.0.0.1:9090/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --logtostderr=true
      - --http2-disable
      - --v=0
      image: registry.ci.openshift.org/origin/4.15:kube-rbac-proxy
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000730000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-autoscaler-hpa-sm-service-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wgl89
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: controller-dockercfg-z7jv8
    nodeName: ip-10-0-25-180.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000730000
      seLinuxOptions:
        level: s0:c27,c14
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: controller
    serviceAccountName: controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: secret-autoscaler-hpa-sm-service-tls
      secret:
        defaultMode: 420
        secretName: autoscaler-hpa-sm-service-tls
    - name: kube-api-access-wgl89
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:23Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://055833edb01045b23b5e8882cde22870595a48bbe5101864e355f1671005a151
      image: registry.ci.openshift.org/openshift/knative-serving-autoscaler-hpa:knative-v1.14
      imageID: registry.ci.openshift.org/openshift/knative-serving-autoscaler-hpa@sha256:07097ae6d07142c5e4641c5fe72c9f675ee2d23680fafa164e0265e0ecde9e3d
      lastState: {}
      name: autoscaler-hpa
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-09T14:58:31Z"
    - containerID: cri-o://e5121b97e93c3f46b221b32015be382cbffcf215f37f59be121d01dcf36e89fc
      image: registry.ci.openshift.org/origin/4.15:kube-rbac-proxy
      imageID: registry.ci.openshift.org/origin/4.15@sha256:e2def4213ec0657e72eb790ae8a115511d5b8f164a62d3568d2f1bff189917e8
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-09T14:58:40Z"
    hostIP: 10.0.25.180
    hostIPs:
    - ip: 10.0.25.180
    phase: Running
    podIP: 10.128.2.33
    podIPs:
    - ip: 10.128.2.33
    qosClass: Burstable
    startTime: "2025-01-09T14:58:23Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.2.23/23"],"mac_address":"0a:58:0a:82:02:17","gateway_ips":["10.130.2.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.130.2.1"},{"dest":"172.30.0.0/16","nextHop":"10.130.2.1"},{"dest":"100.64.0.0/16","nextHop":"10.130.2.1"}],"ip_address":"10.130.2.23/23","gateway_ip":"10.130.2.1","role":"primary"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.2.23"
            ],
            "mac": "0a:58:0a:82:02:17",
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-01-09T14:58:23Z"
    generateName: autoscaler-hpa-597557bd7b-
    labels:
      app: autoscaler-hpa
      app.kubernetes.io/component: autoscaler-hpa
      app.kubernetes.io/name: knative-serving
      app.kubernetes.io/version: release-v1.14
      pod-template-hash: 597557bd7b
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-83-16
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"483c8d87-da5e-43ff-ae8c-a40e343367eb"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"autoscaler-hpa"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"CONFIG_LOGGING_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CONFIG_OBSERVABILITY_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_MIN_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"METRICS_DOMAIN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"METRICS_PROMETHEUS_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SYSTEM_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8008,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9090,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"secret-autoscaler-hpa-sm-service-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-01-09T14:58:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:27Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.130.2.23"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:39Z"
    name: autoscaler-hpa-597557bd7b-9j47x
    namespace: knative-serving
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: autoscaler-hpa-597557bd7b
      uid: 483c8d87-da5e-43ff-ae8c-a40e343367eb
    resourceVersion: "52584"
    uid: b0c1ef12-1625-466d-af02-ad041aee2331
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app: autoscaler-hpa
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - env:
      - name: SYSTEM_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CONFIG_LOGGING_NAME
        value: config-logging
      - name: CONFIG_OBSERVABILITY_NAME
        value: config-observability
      - name: METRICS_DOMAIN
        value: knative.dev/serving
      - name: KUBERNETES_MIN_VERSION
        value: v1.0.0
      - name: METRICS_PROMETHEUS_HOST
        value: 127.0.0.1
      image: registry.ci.openshift.org/openshift/knative-serving-autoscaler-hpa:knative-v1.14
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: probes
          scheme: HTTP
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      name: autoscaler-hpa
      ports:
      - containerPort: 9090
        name: metrics
        protocol: TCP
      - containerPort: 8008
        name: profiling
        protocol: TCP
      - containerPort: 8080
        name: probes
        protocol: TCP
      readinessProbe:
        failureThreshold: 5
        httpGet:
          path: /readiness
          port: probes
          scheme: HTTP
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 300m
          memory: 400Mi
        requests:
          cpu: 30m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000730000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2t7dt
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:8444
      - --upstream=http://127.0.0.1:9090/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --logtostderr=true
      - --http2-disable
      - --v=0
      image: registry.ci.openshift.org/origin/4.15:kube-rbac-proxy
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000730000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-autoscaler-hpa-sm-service-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2t7dt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: controller-dockercfg-z7jv8
    nodeName: ip-10-0-83-16.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000730000
      seLinuxOptions:
        level: s0:c27,c14
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: controller
    serviceAccountName: controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: secret-autoscaler-hpa-sm-service-tls
      secret:
        defaultMode: 420
        secretName: autoscaler-hpa-sm-service-tls
    - name: kube-api-access-2t7dt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:39Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:23Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://d94441692adfac955c3ed1a04c7d0ef0c0a3d686865ba6c4504b152e9ef7de8a
      image: registry.ci.openshift.org/openshift/knative-serving-autoscaler-hpa:knative-v1.14
      imageID: registry.ci.openshift.org/openshift/knative-serving-autoscaler-hpa@sha256:07097ae6d07142c5e4641c5fe72c9f675ee2d23680fafa164e0265e0ecde9e3d
      lastState: {}
      name: autoscaler-hpa
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-09T14:58:33Z"
    - containerID: cri-o://c288db0fad07edd1dd3ad9afdd61794bdbe7c2e0d689cc90ee2974c0f13b6f93
      image: registry.ci.openshift.org/origin/4.15:kube-rbac-proxy
      imageID: registry.ci.openshift.org/origin/4.15@sha256:e2def4213ec0657e72eb790ae8a115511d5b8f164a62d3568d2f1bff189917e8
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-09T14:58:38Z"
    hostIP: 10.0.83.16
    hostIPs:
    - ip: 10.0.83.16
    phase: Running
    podIP: 10.130.2.23
    podIPs:
    - ip: 10.130.2.23
    qosClass: Burstable
    startTime: "2025-01-09T14:58:23Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.2.35/23"],"mac_address":"0a:58:0a:80:02:23","gateway_ips":["10.128.2.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.2.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.2.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.2.1"}],"ip_address":"10.128.2.35/23","gateway_ip":"10.128.2.1","role":"primary"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.2.35"
            ],
            "mac": "0a:58:0a:80:02:23",
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
      serving.knative.openshift.io/mounted-cert-version: "51646"
    creationTimestamp: "2025-01-09T14:58:23Z"
    generateName: controller-84d56ccfc4-
    labels:
      app: controller
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: knative-serving
      app.kubernetes.io/version: release-v1.14
      pod-template-hash: 84d56ccfc4
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:serving.knative.openshift.io/mounted-cert-version: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"95f60c80-ec04-4ceb-b940-76abc7f89699"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"controller"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"CONFIG_LOGGING_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CONFIG_OBSERVABILITY_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HTTP_PROXY"}:
                  .: {}
                  f:name: {}
                k:{"name":"HTTPS_PROXY"}:
                  .: {}
                  f:name: {}
                k:{"name":"KUBERNETES_MIN_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"METRICS_DOMAIN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"METRICS_PROMETHEUS_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NO_PROXY"}:
                  .: {}
                  f:name: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"SSL_CERT_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SYSTEM_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8008,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9090,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/custom-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"custom-certs-config-service-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"secret-controller-sm-service-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-01-09T14:58:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-25-180
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.2.35"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:40Z"
    name: controller-84d56ccfc4-ffm5k
    namespace: knative-serving
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: controller-84d56ccfc4
      uid: 95f60c80-ec04-4ceb-b940-76abc7f89699
    resourceVersion: "52633"
    uid: c9e628d4-9b10-4996-b5b3-6cfb7b60faa0
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app: controller
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: SYSTEM_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CONFIG_LOGGING_NAME
        value: config-logging
      - name: CONFIG_OBSERVABILITY_NAME
        value: config-observability
      - name: METRICS_DOMAIN
        value: knative.dev/internal/serving
      - name: SSL_CERT_DIR
        value: /custom-certs
      - name: HTTP_PROXY
      - name: HTTPS_PROXY
      - name: NO_PROXY
      - name: KUBERNETES_MIN_VERSION
        value: v1.0.0
      - name: METRICS_PROMETHEUS_HOST
        value: 127.0.0.1
      image: registry.ci.openshift.org/openshift/knative-serving-controller:knative-v1.14
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /health
          port: probes
          scheme: HTTP
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      name: controller
      ports:
      - containerPort: 9090
        name: metrics
        protocol: TCP
      - containerPort: 8008
        name: profiling
        protocol: TCP
      - containerPort: 8080
        name: probes
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readiness
          port: probes
          scheme: HTTP
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1000Mi
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000730000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /custom-certs
        name: custom-certs-config-service-ca
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7dj9q
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:8444
      - --upstream=http://127.0.0.1:9090/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --logtostderr=true
      - --http2-disable
      - --v=0
      image: registry.ci.openshift.org/origin/4.15:kube-rbac-proxy
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000730000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-controller-sm-service-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7dj9q
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: controller-dockercfg-z7jv8
    nodeName: ip-10-0-25-180.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000730000
      seLinuxOptions:
        level: s0:c27,c14
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: controller
    serviceAccountName: controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: config-service-ca
      name: custom-certs-config-service-ca
    - name: secret-controller-sm-service-tls
      secret:
        defaultMode: 420
        secretName: controller-sm-service-tls
    - name: kube-api-access-7dj9q
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://05d01f8a2def8e47cc4c8780668b6af46d5e5a441571aacd5276d62bb36c663e
      image: registry.ci.openshift.org/openshift/knative-serving-controller:knative-v1.14
      imageID: registry.ci.openshift.org/openshift/knative-serving-controller@sha256:6f0962cf946de85579e435ab1d09b11df4031c9670f9210adc537ad9a044eccd
      lastState: {}
      name: controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-09T14:58:30Z"
    - containerID: cri-o://69904b93361da82467420a37559b508868a5dfd4d112367554459d7a8b3eee5a
      image: registry.ci.openshift.org/origin/4.15:kube-rbac-proxy
      imageID: registry.ci.openshift.org/origin/4.15@sha256:e2def4213ec0657e72eb790ae8a115511d5b8f164a62d3568d2f1bff189917e8
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-09T14:58:40Z"
    hostIP: 10.0.25.180
    hostIPs:
    - ip: 10.0.25.180
    phase: Running
    podIP: 10.128.2.35
    podIPs:
    - ip: 10.128.2.35
    qosClass: Burstable
    startTime: "2025-01-09T14:58:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.2.21/23"],"mac_address":"0a:58:0a:81:02:15","gateway_ips":["10.129.2.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.2.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.2.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.2.1"}],"ip_address":"10.129.2.21/23","gateway_ip":"10.129.2.1","role":"primary"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.2.21"
            ],
            "mac": "0a:58:0a:81:02:15",
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
      serving.knative.openshift.io/mounted-cert-version: "51646"
    creationTimestamp: "2025-01-09T14:58:40Z"
    generateName: controller-84d56ccfc4-
    labels:
      app: controller
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: knative-serving
      app.kubernetes.io/version: release-v1.14
      pod-template-hash: 84d56ccfc4
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-118-213
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:serving.knative.openshift.io/mounted-cert-version: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"95f60c80-ec04-4ceb-b940-76abc7f89699"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"controller"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"CONFIG_LOGGING_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CONFIG_OBSERVABILITY_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HTTP_PROXY"}:
                  .: {}
                  f:name: {}
                k:{"name":"HTTPS_PROXY"}:
                  .: {}
                  f:name: {}
                k:{"name":"KUBERNETES_MIN_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"METRICS_DOMAIN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"METRICS_PROMETHEUS_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NO_PROXY"}:
                  .: {}
                  f:name: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"SSL_CERT_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SYSTEM_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8008,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9090,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/custom-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"custom-certs-config-service-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"secret-controller-sm-service-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-01-09T14:58:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:41Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.2.21"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:44Z"
    name: controller-84d56ccfc4-q2kkb
    namespace: knative-serving
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: controller-84d56ccfc4
      uid: 95f60c80-ec04-4ceb-b940-76abc7f89699
    resourceVersion: "52813"
    uid: a4582568-aaac-48a0-938f-f5f3d22b895a
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app: controller
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: SYSTEM_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CONFIG_LOGGING_NAME
        value: config-logging
      - name: CONFIG_OBSERVABILITY_NAME
        value: config-observability
      - name: METRICS_DOMAIN
        value: knative.dev/internal/serving
      - name: SSL_CERT_DIR
        value: /custom-certs
      - name: HTTP_PROXY
      - name: HTTPS_PROXY
      - name: NO_PROXY
      - name: KUBERNETES_MIN_VERSION
        value: v1.0.0
      - name: METRICS_PROMETHEUS_HOST
        value: 127.0.0.1
      image: registry.ci.openshift.org/openshift/knative-serving-controller:knative-v1.14
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /health
          port: probes
          scheme: HTTP
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      name: controller
      ports:
      - containerPort: 9090
        name: metrics
        protocol: TCP
      - containerPort: 8008
        name: profiling
        protocol: TCP
      - containerPort: 8080
        name: probes
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readiness
          port: probes
          scheme: HTTP
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1000Mi
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000730000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /custom-certs
        name: custom-certs-config-service-ca
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j9wf5
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:8444
      - --upstream=http://127.0.0.1:9090/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --logtostderr=true
      - --http2-disable
      - --v=0
      image: registry.ci.openshift.org/origin/4.15:kube-rbac-proxy
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000730000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-controller-sm-service-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j9wf5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: controller-dockercfg-z7jv8
    nodeName: ip-10-0-118-213.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000730000
      seLinuxOptions:
        level: s0:c27,c14
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: controller
    serviceAccountName: controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: config-service-ca
      name: custom-certs-config-service-ca
    - name: secret-controller-sm-service-tls
      secret:
        defaultMode: 420
        secretName: controller-sm-service-tls
    - name: kube-api-access-j9wf5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:43Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://5c63339bdabfad7387179e9a5599de0ecaeed68be60a8954b116a0ccf1e735da
      image: registry.ci.openshift.org/openshift/knative-serving-controller:knative-v1.14
      imageID: registry.ci.openshift.org/openshift/knative-serving-controller@sha256:6f0962cf946de85579e435ab1d09b11df4031c9670f9210adc537ad9a044eccd
      lastState: {}
      name: controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-09T14:58:43Z"
    - containerID: cri-o://a7384bf366797605f200961e17b82bb87c1086f6efc05db1ef06811e747bfcdc
      image: registry.ci.openshift.org/origin/4.15:kube-rbac-proxy
      imageID: registry.ci.openshift.org/origin/4.15@sha256:e2def4213ec0657e72eb790ae8a115511d5b8f164a62d3568d2f1bff189917e8
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-09T14:58:43Z"
    hostIP: 10.0.118.213
    hostIPs:
    - ip: 10.0.118.213
    phase: Running
    podIP: 10.129.2.21
    podIPs:
    - ip: 10.129.2.21
    qosClass: Burstable
    startTime: "2025-01-09T14:58:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.131.0.23/23"],"mac_address":"0a:58:0a:83:00:17","gateway_ips":["10.131.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.131.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.131.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.131.0.1"}],"ip_address":"10.131.0.23/23","gateway_ip":"10.131.0.1","role":"primary"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.131.0.23"
            ],
            "mac": "0a:58:0a:83:00:17",
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
      sidecar.istio.io/inject: "false"
    creationTimestamp: "2025-01-09T14:58:24Z"
    generateName: net-istio-controller-7f99bfd446-
    labels:
      app: net-istio-controller
      app.kubernetes.io/component: net-istio
      app.kubernetes.io/name: knative-serving
      app.kubernetes.io/version: release-v1.14
      pod-template-hash: 7f99bfd446
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-63-72
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:sidecar.istio.io/inject: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"9d1e7410-28ed-4afe-bb08-b2b4c6d909ef"}: {}
        f:spec:
          f:containers:
            k:{"name":"controller"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"CONFIG_LOGGING_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CONFIG_OBSERVABILITY_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ENABLE_SECRET_INFORMER_FILTERING_BY_CERT_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_MIN_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"METRICS_DOMAIN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SYSTEM_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8008,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9090,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-01-09T14:58:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.131.0.23"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:37Z"
    name: net-istio-controller-7f99bfd446-76xqm
    namespace: knative-serving
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: net-istio-controller-7f99bfd446
      uid: 9d1e7410-28ed-4afe-bb08-b2b4c6d909ef
    resourceVersion: "52500"
    uid: 055a8b9b-8bc0-492d-8eb5-35ad0d6e69f6
  spec:
    containers:
    - env:
      - name: SYSTEM_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CONFIG_LOGGING_NAME
        value: config-logging
      - name: CONFIG_OBSERVABILITY_NAME
        value: config-observability
      - name: ENABLE_SECRET_INFORMER_FILTERING_BY_CERT_UID
        value: "true"
      - name: METRICS_DOMAIN
        value: knative.dev/net-istio
      - name: KUBERNETES_MIN_VERSION
        value: v1.0.0
      image: registry.ci.openshift.org/openshift/net-istio-controller:knative-v1.14
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /health
          port: probes
          scheme: HTTP
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      name: controller
      ports:
      - containerPort: 9090
        name: metrics
        protocol: TCP
      - containerPort: 8008
        name: profiling
        protocol: TCP
      - containerPort: 8080
        name: probes
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readiness
          port: probes
          scheme: HTTP
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 300m
          memory: 400Mi
        requests:
          cpu: 30m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000730000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s9pxn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: controller-dockercfg-z7jv8
    nodeName: ip-10-0-63-72.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000730000
      seLinuxOptions:
        level: s0:c27,c14
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: controller
    serviceAccountName: controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-s9pxn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:36Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://71ae03b3d9e4a2ebde1dbbcc608c603b01d5dfe55ae55450de655d5033f3e6b7
      image: registry.ci.openshift.org/openshift/net-istio-controller:knative-v1.14
      imageID: registry.ci.openshift.org/openshift/net-istio-controller@sha256:27699d77005e34845c7bf90c2344b912c13cad5f99527bea77c0c4f1db5a17d3
      lastState: {}
      name: controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-09T14:58:35Z"
    hostIP: 10.0.63.72
    hostIPs:
    - ip: 10.0.63.72
    phase: Running
    podIP: 10.131.0.23
    podIPs:
    - ip: 10.131.0.23
    qosClass: Burstable
    startTime: "2025-01-09T14:58:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.2.24/23"],"mac_address":"0a:58:0a:82:02:18","gateway_ips":["10.130.2.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.130.2.1"},{"dest":"172.30.0.0/16","nextHop":"10.130.2.1"},{"dest":"100.64.0.0/16","nextHop":"10.130.2.1"}],"ip_address":"10.130.2.24/23","gateway_ip":"10.130.2.1","role":"primary"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.2.24"
            ],
            "mac": "0a:58:0a:82:02:18",
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
      sidecar.istio.io/inject: "false"
    creationTimestamp: "2025-01-09T14:58:24Z"
    generateName: net-istio-controller-7f99bfd446-
    labels:
      app: net-istio-controller
      app.kubernetes.io/component: net-istio
      app.kubernetes.io/name: knative-serving
      app.kubernetes.io/version: release-v1.14
      pod-template-hash: 7f99bfd446
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-83-16
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:sidecar.istio.io/inject: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"9d1e7410-28ed-4afe-bb08-b2b4c6d909ef"}: {}
        f:spec:
          f:containers:
            k:{"name":"controller"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"CONFIG_LOGGING_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CONFIG_OBSERVABILITY_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"ENABLE_SECRET_INFORMER_FILTERING_BY_CERT_UID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_MIN_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"METRICS_DOMAIN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SYSTEM_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8008,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9090,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-01-09T14:58:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.130.2.24"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:34Z"
    name: net-istio-controller-7f99bfd446-qnvk9
    namespace: knative-serving
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: net-istio-controller-7f99bfd446
      uid: 9d1e7410-28ed-4afe-bb08-b2b4c6d909ef
    resourceVersion: "52409"
    uid: 23f28cec-5915-413c-b369-ab34e2bbe04f
  spec:
    containers:
    - env:
      - name: SYSTEM_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CONFIG_LOGGING_NAME
        value: config-logging
      - name: CONFIG_OBSERVABILITY_NAME
        value: config-observability
      - name: ENABLE_SECRET_INFORMER_FILTERING_BY_CERT_UID
        value: "true"
      - name: METRICS_DOMAIN
        value: knative.dev/net-istio
      - name: KUBERNETES_MIN_VERSION
        value: v1.0.0
      image: registry.ci.openshift.org/openshift/net-istio-controller:knative-v1.14
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /health
          port: probes
          scheme: HTTP
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      name: controller
      ports:
      - containerPort: 9090
        name: metrics
        protocol: TCP
      - containerPort: 8008
        name: profiling
        protocol: TCP
      - containerPort: 8080
        name: probes
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readiness
          port: probes
          scheme: HTTP
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 300m
          memory: 400Mi
        requests:
          cpu: 30m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000730000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2pnv9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: controller-dockercfg-z7jv8
    nodeName: ip-10-0-83-16.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000730000
      seLinuxOptions:
        level: s0:c27,c14
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: controller
    serviceAccountName: controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-2pnv9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:33Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:34Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:34Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://f128c8b8d20df4c8c1f94f0a03331f3b182e2d3bc12559d6da37bcf282af77a5
      image: registry.ci.openshift.org/openshift/net-istio-controller:knative-v1.14
      imageID: registry.ci.openshift.org/openshift/net-istio-controller@sha256:27699d77005e34845c7bf90c2344b912c13cad5f99527bea77c0c4f1db5a17d3
      lastState: {}
      name: controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-09T14:58:33Z"
    hostIP: 10.0.83.16
    hostIPs:
    - ip: 10.0.83.16
    phase: Running
    podIP: 10.130.2.24
    podIPs:
    - ip: 10.130.2.24
    qosClass: Burstable
    startTime: "2025-01-09T14:58:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.131.0.24/23"],"mac_address":"0a:58:0a:83:00:18","gateway_ips":["10.131.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.131.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.131.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.131.0.1"}],"ip_address":"10.131.0.24/23","gateway_ip":"10.131.0.1","role":"primary"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.131.0.24"
            ],
            "mac": "0a:58:0a:83:00:18",
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-01-09T14:58:24Z"
    generateName: net-istio-webhook-5fbccdd7d5-
    labels:
      app: net-istio-webhook
      app.kubernetes.io/component: net-istio
      app.kubernetes.io/name: knative-serving
      app.kubernetes.io/version: release-v1.14
      pod-template-hash: 5fbccdd7d5
      role: net-istio-webhook
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-63-72
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
            f:role: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b6180cb8-c555-4e53-bc12-eff72229c80f"}: {}
        f:spec:
          f:containers:
            k:{"name":"webhook"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"CONFIG_LOGGING_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CONFIG_OBSERVABILITY_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_MIN_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"METRICS_DOMAIN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SYSTEM_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"WEBHOOK_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WEBHOOK_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8008,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9090,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-01-09T14:58:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:25Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.131.0.24"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:36Z"
    name: net-istio-webhook-5fbccdd7d5-6n9c9
    namespace: knative-serving
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: net-istio-webhook-5fbccdd7d5
      uid: b6180cb8-c555-4e53-bc12-eff72229c80f
    resourceVersion: "52466"
    uid: 015d5af4-2016-4565-9b6b-6c5fee8a5edb
  spec:
    containers:
    - env:
      - name: SYSTEM_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CONFIG_LOGGING_NAME
        value: config-logging
      - name: CONFIG_OBSERVABILITY_NAME
        value: config-observability
      - name: METRICS_DOMAIN
        value: knative.dev/net-istio
      - name: WEBHOOK_NAME
        value: net-istio-webhook
      - name: WEBHOOK_PORT
        value: "8443"
      - name: KUBERNETES_MIN_VERSION
        value: v1.0.0
      image: registry.ci.openshift.org/openshift/net-istio-webhook:knative-v1.14
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 20
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 1
      name: webhook
      ports:
      - containerPort: 9090
        name: metrics
        protocol: TCP
      - containerPort: 8008
        name: profiling
        protocol: TCP
      - containerPort: 8443
        name: https-webhook
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8443
          scheme: HTTPS
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 200m
          memory: 1Gi
        requests:
          cpu: 20m
          memory: 20Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000730000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j8bg8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: controller-dockercfg-z7jv8
    nodeName: ip-10-0-63-72.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000730000
      seLinuxOptions:
        level: s0:c27,c14
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: controller
    serviceAccountName: controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-j8bg8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:36Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:36Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:36Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://2097912a4573f4bbcdc821cfc591e284746ea67d4af785e9a87244054e9d4183
      image: registry.ci.openshift.org/openshift/net-istio-webhook:knative-v1.14
      imageID: registry.ci.openshift.org/openshift/net-istio-webhook@sha256:3a72f0904d1d4ec643a6fe979bb5a96213c7684b367d08c512450ee12f3bfd80
      lastState: {}
      name: webhook
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-09T14:58:35Z"
    hostIP: 10.0.63.72
    hostIPs:
    - ip: 10.0.63.72
    phase: Running
    podIP: 10.131.0.24
    podIPs:
    - ip: 10.131.0.24
    qosClass: Burstable
    startTime: "2025-01-09T14:58:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.2.20/23"],"mac_address":"0a:58:0a:81:02:14","gateway_ips":["10.129.2.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.2.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.2.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.2.1"}],"ip_address":"10.129.2.20/23","gateway_ip":"10.129.2.1","role":"primary"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.2.20"
            ],
            "mac": "0a:58:0a:81:02:14",
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-01-09T14:58:24Z"
    generateName: net-istio-webhook-5fbccdd7d5-
    labels:
      app: net-istio-webhook
      app.kubernetes.io/component: net-istio
      app.kubernetes.io/name: knative-serving
      app.kubernetes.io/version: release-v1.14
      pod-template-hash: 5fbccdd7d5
      role: net-istio-webhook
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-118-213
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
            f:role: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b6180cb8-c555-4e53-bc12-eff72229c80f"}: {}
        f:spec:
          f:containers:
            k:{"name":"webhook"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"CONFIG_LOGGING_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CONFIG_OBSERVABILITY_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_MIN_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"METRICS_DOMAIN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SYSTEM_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"WEBHOOK_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WEBHOOK_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8008,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9090,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-01-09T14:58:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.2.20"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:34Z"
    name: net-istio-webhook-5fbccdd7d5-6wpfd
    namespace: knative-serving
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: net-istio-webhook-5fbccdd7d5
      uid: b6180cb8-c555-4e53-bc12-eff72229c80f
    resourceVersion: "52415"
    uid: 6bdcf05a-17e3-4935-93e5-992d69a8e448
  spec:
    containers:
    - env:
      - name: SYSTEM_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CONFIG_LOGGING_NAME
        value: config-logging
      - name: CONFIG_OBSERVABILITY_NAME
        value: config-observability
      - name: METRICS_DOMAIN
        value: knative.dev/net-istio
      - name: WEBHOOK_NAME
        value: net-istio-webhook
      - name: WEBHOOK_PORT
        value: "8443"
      - name: KUBERNETES_MIN_VERSION
        value: v1.0.0
      image: registry.ci.openshift.org/openshift/net-istio-webhook:knative-v1.14
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 20
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 1
      name: webhook
      ports:
      - containerPort: 9090
        name: metrics
        protocol: TCP
      - containerPort: 8008
        name: profiling
        protocol: TCP
      - containerPort: 8443
        name: https-webhook
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8443
          scheme: HTTPS
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 200m
          memory: 1Gi
        requests:
          cpu: 20m
          memory: 20Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000730000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wx4z4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: controller-dockercfg-z7jv8
    nodeName: ip-10-0-118-213.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000730000
      seLinuxOptions:
        level: s0:c27,c14
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: controller
    serviceAccountName: controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-wx4z4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:33Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:34Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:34Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://05186bc6b5013cf23c019fb86e7584f1380efdd8b261f6f98946f63ea7205e57
      image: registry.ci.openshift.org/openshift/net-istio-webhook:knative-v1.14
      imageID: registry.ci.openshift.org/openshift/net-istio-webhook@sha256:3a72f0904d1d4ec643a6fe979bb5a96213c7684b367d08c512450ee12f3bfd80
      lastState: {}
      name: webhook
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-09T14:58:33Z"
    hostIP: 10.0.118.213
    hostIPs:
    - ip: 10.0.118.213
    phase: Running
    podIP: 10.129.2.20
    podIPs:
    - ip: 10.129.2.20
    qosClass: Burstable
    startTime: "2025-01-09T14:58:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.2.25/23"],"mac_address":"0a:58:0a:82:02:19","gateway_ips":["10.130.2.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.130.2.1"},{"dest":"172.30.0.0/16","nextHop":"10.130.2.1"},{"dest":"100.64.0.0/16","nextHop":"10.130.2.1"}],"ip_address":"10.130.2.25/23","gateway_ip":"10.130.2.1","role":"primary"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.2.25"
            ],
            "mac": "0a:58:0a:82:02:19",
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-01-09T14:58:37Z"
    generateName: webhook-7bccb96f5b-
    labels:
      app: webhook
      app.kubernetes.io/component: webhook
      app.kubernetes.io/name: knative-serving
      app.kubernetes.io/version: release-v1.14
      pod-template-hash: 7bccb96f5b
      role: webhook
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-83-16
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
            f:role: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"50b28db3-7552-4321-9a73-03eab4a66f52"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"webhook"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"CONFIG_LOGGING_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CONFIG_OBSERVABILITY_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_MIN_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"METRICS_DOMAIN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"METRICS_PROMETHEUS_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"SYSTEM_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"WEBHOOK_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WEBHOOK_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8008,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9090,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"secret-webhook-sm-service-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-01-09T14:58:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:39Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.130.2.25"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:41Z"
    name: webhook-7bccb96f5b-p5w68
    namespace: knative-serving
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: webhook-7bccb96f5b
      uid: 50b28db3-7552-4321-9a73-03eab4a66f52
    resourceVersion: "52725"
    uid: 9a5a313e-f2b9-4745-8bc8-f32f24aa6cf1
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app: webhook
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: SYSTEM_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CONFIG_LOGGING_NAME
        value: config-logging
      - name: CONFIG_OBSERVABILITY_NAME
        value: config-observability
      - name: WEBHOOK_NAME
        value: webhook
      - name: WEBHOOK_PORT
        value: "8443"
      - name: METRICS_DOMAIN
        value: knative.dev/internal/serving
      - name: KUBERNETES_MIN_VERSION
        value: v1.0.0
      - name: METRICS_PROMETHEUS_HOST
        value: 127.0.0.1
      image: registry.ci.openshift.org/openshift/knative-serving-webhook:knative-v1.14
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: webhook
      ports:
      - containerPort: 9090
        name: metrics
        protocol: TCP
      - containerPort: 8008
        name: profiling
        protocol: TCP
      - containerPort: 8443
        name: https-webhook
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8443
          scheme: HTTPS
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000730000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-scz55
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:8444
      - --upstream=http://127.0.0.1:9090/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --logtostderr=true
      - --http2-disable
      - --v=0
      image: registry.ci.openshift.org/origin/4.15:kube-rbac-proxy
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000730000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-webhook-sm-service-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-scz55
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: controller-dockercfg-z7jv8
    nodeName: ip-10-0-83-16.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000730000
      seLinuxOptions:
        level: s0:c27,c14
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: controller
    serviceAccountName: controller
    terminationGracePeriodSeconds: 300
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: secret-webhook-sm-service-tls
      secret:
        defaultMode: 420
        secretName: webhook-sm-service-tls
    - name: kube-api-access-scz55
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:41Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://7a389b2d851734ebeae2adc6f6b5882605313e8620cbea5417377bc52ce8565e
      image: registry.ci.openshift.org/origin/4.15:kube-rbac-proxy
      imageID: registry.ci.openshift.org/origin/4.15@sha256:e2def4213ec0657e72eb790ae8a115511d5b8f164a62d3568d2f1bff189917e8
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-09T14:58:41Z"
    - containerID: cri-o://5d5d9b231c77b687b70c25be3d098264ba47b145b7d6b8d5a465351359c06668
      image: registry.ci.openshift.org/openshift/knative-serving-webhook:knative-v1.14
      imageID: registry.ci.openshift.org/openshift/knative-serving-webhook@sha256:82e1f5ede24e5ccb1f34c97cfcc1c34abb31c907c0aaea3925167df4742941cf
      lastState: {}
      name: webhook
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-09T14:58:41Z"
    hostIP: 10.0.83.16
    hostIPs:
    - ip: 10.0.83.16
    phase: Running
    podIP: 10.130.2.25
    podIPs:
    - ip: 10.130.2.25
    qosClass: Burstable
    startTime: "2025-01-09T14:58:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.131.0.22/23"],"mac_address":"0a:58:0a:83:00:16","gateway_ips":["10.131.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.131.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.131.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.131.0.1"}],"ip_address":"10.131.0.22/23","gateway_ip":"10.131.0.1","role":"primary"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.131.0.22"
            ],
            "mac": "0a:58:0a:83:00:16",
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-01-09T14:58:23Z"
    generateName: webhook-7bccb96f5b-
    labels:
      app: webhook
      app.kubernetes.io/component: webhook
      app.kubernetes.io/name: knative-serving
      app.kubernetes.io/version: release-v1.14
      pod-template-hash: 7bccb96f5b
      role: webhook
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-63-72
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
            f:role: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"50b28db3-7552-4321-9a73-03eab4a66f52"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"webhook"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"CONFIG_LOGGING_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CONFIG_OBSERVABILITY_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_MIN_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"METRICS_DOMAIN"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"METRICS_PROMETHEUS_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"SYSTEM_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"WEBHOOK_NAME"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WEBHOOK_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8008,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9090,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"secret-webhook-sm-service-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-01-09T14:58:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:27Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodReadyToStartContainers"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:hostIPs: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.131.0.22"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-01-09T14:58:44Z"
    name: webhook-7bccb96f5b-tksl4
    namespace: knative-serving
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: webhook-7bccb96f5b
      uid: 50b28db3-7552-4321-9a73-03eab4a66f52
    resourceVersion: "52801"
    uid: 56a1c212-d872-49bd-a90c-89af2d99c2d2
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app: webhook
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: SYSTEM_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: CONFIG_LOGGING_NAME
        value: config-logging
      - name: CONFIG_OBSERVABILITY_NAME
        value: config-observability
      - name: WEBHOOK_NAME
        value: webhook
      - name: WEBHOOK_PORT
        value: "8443"
      - name: METRICS_DOMAIN
        value: knative.dev/internal/serving
      - name: KUBERNETES_MIN_VERSION
        value: v1.0.0
      - name: METRICS_PROMETHEUS_HOST
        value: 127.0.0.1
      image: registry.ci.openshift.org/openshift/knative-serving-webhook:knative-v1.14
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: webhook
      ports:
      - containerPort: 9090
        name: metrics
        protocol: TCP
      - containerPort: 8008
        name: profiling
        protocol: TCP
      - containerPort: 8443
        name: https-webhook
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /
          port: 8443
          scheme: HTTPS
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000730000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8tsbj
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:8444
      - --upstream=http://127.0.0.1:9090/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --logtostderr=true
      - --http2-disable
      - --v=0
      image: registry.ci.openshift.org/origin/4.15:kube-rbac-proxy
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000730000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-webhook-sm-service-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8tsbj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: controller-dockercfg-z7jv8
    nodeName: ip-10-0-63-72.ec2.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000730000
      seLinuxOptions:
        level: s0:c27,c14
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: controller
    serviceAccountName: controller
    terminationGracePeriodSeconds: 300
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: secret-webhook-sm-service-tls
      secret:
        defaultMode: 420
        secretName: webhook-sm-service-tls
    - name: kube-api-access-8tsbj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:44Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:23Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-01-09T14:58:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://414efce19742e583c269d41ac44cb3c6292b493a941b1a9b781d62b6aadd8d43
      image: registry.ci.openshift.org/origin/4.15:kube-rbac-proxy
      imageID: registry.ci.openshift.org/origin/4.15@sha256:e2def4213ec0657e72eb790ae8a115511d5b8f164a62d3568d2f1bff189917e8
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-09T14:58:43Z"
    - containerID: cri-o://88bbd41d5032e229c5b1fa5922ad84d419e1abf47fc25c6c94cfc55373a2f3f3
      image: registry.ci.openshift.org/openshift/knative-serving-webhook:knative-v1.14
      imageID: registry.ci.openshift.org/openshift/knative-serving-webhook@sha256:82e1f5ede24e5ccb1f34c97cfcc1c34abb31c907c0aaea3925167df4742941cf
      lastState: {}
      name: webhook
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-01-09T14:58:35Z"
    hostIP: 10.0.63.72
    hostIPs:
    - ip: 10.0.63.72
    phase: Running
    podIP: 10.131.0.22
    podIPs:
    - ip: 10.131.0.22
    qosClass: Burstable
    startTime: "2025-01-09T14:58:23Z"
kind: PodList
metadata:
  resourceVersion: "60707"
